def recommendMapReduce2Configurations(self, configurations, clusterData, services, hosts):
    self.recommendYARNConfigurations(configurations, clusterData, services, hosts)
    putMapredProperty = self.putProperty(configurations, 'mapred-site', services)
    putMapredProperty('yarn.app.mapreduce.am.resource.mb', int(clusterData['amMemory']))
    putMapredProperty('yarn.app.mapreduce.am.command-opts', ((('-Xmx' + str(int(round((0.8 * clusterData['amMemory']))))) + 'm') + ' -Dhdp.version=${hdp.version}'))
    putMapredProperty('mapreduce.map.memory.mb', configurations['yarn-site']['properties']['yarn.scheduler.minimum-allocation-mb'])
    putMapredProperty('mapreduce.reduce.memory.mb', int(clusterData['reduceMemory']))
    putMapredProperty('mapreduce.map.java.opts', (('-Xmx' + str(int(round((0.8 * clusterData['mapMemory']))))) + 'm'))
    putMapredProperty('mapreduce.reduce.java.opts', (('-Xmx' + str(int(round((0.8 * clusterData['reduceMemory']))))) + 'm'))
    putMapredProperty('mapreduce.task.io.sort.mb', min(int(round((0.4 * clusterData['mapMemory']))), 1024))
    putMapredPropertyAttribute = self.putPropertyAttribute(configurations, 'mapred-site')
    yarnMinAllocationSize = int(clusterData['ramPerContainer'])
    yarnMaxAllocationSize = max((30 * int(clusterData['ramPerContainer'])), configurations['yarn-site']['properties']['yarn.scheduler.maximum-allocation-mb'])
    putMapredPropertyAttribute('mapreduce.map.memory.mb', 'max', yarnMaxAllocationSize)
    putMapredPropertyAttribute('mapreduce.map.memory.mb', 'min', yarnMinAllocationSize)
    putMapredPropertyAttribute('mapreduce.reduce.memory.mb', 'max', yarnMaxAllocationSize)
    putMapredPropertyAttribute('mapreduce.reduce.memory.mb', 'min', yarnMinAllocationSize)
    putMapredPropertyAttribute('yarn.app.mapreduce.am.resource.mb', 'max', yarnMaxAllocationSize)
    putMapredPropertyAttribute('yarn.app.mapreduce.am.resource.mb', 'min', yarnMinAllocationSize)
