def recommendSparkConfigurations(self, configurations, clusterData, services, hosts):
    '\n    :type configurations dict\n    :type clusterData dict\n    :type services dict\n    :type hosts dict\n    '
    putSparkProperty = self.putProperty(configurations, 'spark-defaults', services)
    spark_queue = self.recommendYarnQueue(services, 'spark-defaults', 'spark.yarn.queue')
    if (spark_queue is not None):
        putSparkProperty('spark.yarn.queue', spark_queue)
    if (('configurations' in services) and ('spark-thrift-sparkconf' in services['configurations'])):
        putSparkThriftSparkConf = self.putProperty(configurations, 'spark-thrift-sparkconf', services)
        recommended_spark_queue = self.recommendYarnQueue(services, 'spark-thrift-sparkconf', 'spark.yarn.queue')
        if (recommended_spark_queue is not None):
            putSparkThriftSparkConf('spark.yarn.queue', recommended_spark_queue)
