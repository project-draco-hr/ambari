def recommendHIVEConfigurations(self, configurations, clusterData, services, hosts):
    super(HDP22StackAdvisor, self).recommendHiveConfigurations(configurations, clusterData, services, hosts)
    servicesList = [service['StackServices']['service_name'] for service in services['services']]
    if (('ranger-hive-plugin-properties' in services['configurations']) and ('ranger-hive-plugin-enabled' in services['configurations']['ranger-hive-plugin-properties']['properties'])):
        rangerPluginEnabled = services['configurations']['ranger-hive-plugin-properties']['properties']['ranger-hive-plugin-enabled']
        if ('RANGER' in servicesList):
            if (rangerPluginEnabled.lower() == 'Yes'.lower()):
                putHiveProperty = self.putProperty(configurations, 'hiveserver2-site')
                putHiveProperty('hive.security.authorization.manager', 'com.xasecure.authorization.hive.authorizer.XaSecureHiveAuthorizerFactory')
                putHiveProperty('hive.security.authenticator.manager', 'org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator')
            elif (rangerPluginEnabled.lower() == 'No'.lower()):
                putHiveProperty = self.putProperty(configurations, 'hiveserver2-site')
                putHiveProperty('hive.security.authorization.manager', 'org.apache.hadoop.hive.ql.security.authorization.DefaultHiveAuthorizationProvider')
                putHiveProperty('hive.security.authenticator.manager', 'org.apache.hadoop.hive.ql.security.HadoopDefaultAuthenticator')
