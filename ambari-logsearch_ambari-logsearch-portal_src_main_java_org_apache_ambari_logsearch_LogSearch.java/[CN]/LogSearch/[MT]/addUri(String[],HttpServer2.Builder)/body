{
  boolean portSpecified=argv.length > 0;
  String port=portSpecified ? argv[0] : HTTP_PORT;
  String protocol=HTTP_PROTOCOL;
  String protcolProperty=PropertiesUtil.getProperty(LOGSEARCH_PROTOCOL_PROP);
  if (HTTPS_PROTOCOL.equals(protcolProperty)) {
    String keystoreLocation=System.getProperty(KEYSTORE_LOCATION_ARG);
    String keystorePassword=System.getProperty(KEYSTORE_PASSWORD_ARG);
    String keystoreType=System.getProperty(KEYSTORE_TYPE_ARG,DEFAULT_KEYSTORE_TYPE);
    String trustoreLocation=System.getProperty(TRUSTSTORE_LOCATION_ARG);
    String trustorePassword=System.getProperty(TRUSTSTORE_PASSWORD_ARG);
    String truststoreType=System.getProperty(TRUSTSTORE_TYPE_ARG,DEFAULT_TRUSTSTORE_TYPE);
    if (!StringUtils.isEmpty(keystoreLocation) && !StringUtils.isEmpty(keystorePassword)) {
      builder.keyPassword(keystorePassword);
      builder.keyStore(keystoreLocation,keystorePassword,keystoreType);
      if (!StringUtils.isEmpty(trustoreLocation) && !StringUtils.isEmpty(trustorePassword)) {
        builder.trustStore(trustoreLocation,trustorePassword,truststoreType);
      }
      protocol=HTTPS_PROTOCOL;
      if (!portSpecified) {
        port=HTTPS_PORT;
      }
    }
 else {
      logger.warn("starting logsearch in with http protocol as keystore location or password was not present");
    }
  }
  URI logsearchURI=URI.create(String.format("%s://0.0.0.0:%s",protocol,port));
  builder.addEndpoint(logsearchURI);
  return logsearchURI;
}
