{
  VersionDefinitionXml xml=new VersionDefinitionXml();
  xml.m_stackDefault=true;
  xml.release=new Release();
  xml.repositoryInfo=new RepositoryXml();
  xml.xsdLocation=SCHEMA_LOCATION;
  StackId stackId=new StackId(stackInfo.getName(),stackInfo.getVersion());
  xml.release.repositoryType=RepositoryType.STANDARD;
  xml.release.stackId=stackId.toString();
  xml.release.version=stackInfo.getVersion();
  xml.release.releaseNotes="NONE";
  xml.release.display=stackId.toString();
  for (  ServiceInfo si : stackInfo.getServices()) {
    ManifestService ms=new ManifestService();
    ms.serviceName=si.getName();
    ms.version=StringUtils.trimToEmpty(si.getVersion());
    ms.serviceId=ms.serviceName + "-" + ms.version.replace(".","");
    xml.manifestServices.add(ms);
  }
  if (null != stackInfo.getRepositoryXml()) {
    xml.repositoryInfo.getOses().addAll(stackInfo.getRepositoryXml().getOses());
  }
  try {
    xml.toXml();
  }
 catch (  Exception e) {
    throw new IllegalArgumentException(e);
  }
  return xml;
}
