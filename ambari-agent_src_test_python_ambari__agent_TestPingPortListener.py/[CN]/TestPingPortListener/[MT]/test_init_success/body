@patch('subprocess.Popen')
@patch('socket.socket')
def test_init_success(self, socketMock, popen_mock):
    procObj = MagicMock()
    procObj.communicate = MagicMock()
    procObj.communicate.return_value = {'': 0, 'log': 'log', }
    popen_mock.return_value = procObj
    PingPortListener.logger.reset_mock()
    popen_mock.reset_mock()
    allive_daemon = PingPortListener.PingPortListener(self.config)
    self.assertTrue(popen_mock.called)
    self.assertFalse(PingPortListener.logger.warn.called)
    self.assertTrue((socketMock.call_args_list[0][0][0] == socket.AF_INET))
    self.assertTrue((socketMock.call_args_list[0][0][1] == socket.SOCK_STREAM))
    self.assertTrue((allive_daemon.socket.bind.call_args_list[0][0][0] == ('0.0.0.0', 55000)))
    self.assertTrue((allive_daemon.socket.listen.call_args_list[0][0][0] == 1))
    self.assertTrue((allive_daemon.config.set.call_args_list[0][0][0] == 'agent'))
    self.assertTrue((allive_daemon.config.set.call_args_list[0][0][1] == 'current_ping_port'))
