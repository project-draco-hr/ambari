{
  final HttpServletResponse response=EasyMock.createNiceMock(HttpServletResponse.class);
  final FailsafeServletResponse responseWrapper=new FailsafeServletResponse(response);
  final IAnswer<Void> answer=new IAnswer<Void>(){
    @Override public Void answer() throws Throwable {
      Assert.fail("Original response should not commit errors");
      return null;
    }
  }
;
  response.sendError(0);
  EasyMock.expectLastCall().andAnswer(answer).anyTimes();
  response.sendError(0,"");
  EasyMock.expectLastCall().andAnswer(answer).anyTimes();
  EasyMock.replay(response);
  responseWrapper.sendError(0);
  responseWrapper.sendError(0,"");
  Assert.assertTrue(responseWrapper.isRequestFailed());
  EasyMock.verify(response);
}
