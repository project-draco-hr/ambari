{
  Set<Map<String,Object>> propertyMaps=getPropertyMaps(predicate);
  for (  Map<String,Object> propertyMap : propertyMaps) {
    try {
      String clusterName=(String)propertyMap.get(ALERT_HISTORY_CLUSTER_NAME);
      Long clusterId=(StringUtils.isEmpty(clusterName)) ? null : getClusterId(clusterName);
      String definitionName=(String)propertyMap.get(ALERT_HISTORY_DEFINITION_NAME);
      String definitionId=(String)propertyMap.get(ALERT_HISTORY_DEFINITION_ID);
      if (clusterId == null) {
        AlertResourceProviderUtils.verifyViewAuthorization("",-1L);
      }
 else       if (!StringUtils.isEmpty(definitionName)) {
        AlertDefinitionEntity alertDefinition=alertDefinitionDAO.findByName(clusterId,definitionName);
        AlertResourceProviderUtils.verifyViewAuthorization(alertDefinition);
      }
 else       if (StringUtils.isNumeric(definitionId)) {
        AlertDefinitionEntity alertDefinition=alertDefinitionDAO.findById(Long.valueOf(definitionId));
        AlertResourceProviderUtils.verifyViewAuthorization(alertDefinition);
      }
 else {
        AlertResourceProviderUtils.verifyViewAuthorization("",getClusterResourceId(clusterName));
      }
    }
 catch (    AmbariException e) {
      throw new SystemException(e.getMessage(),e);
    }
  }
  Set<Resource> results=new LinkedHashSet<Resource>();
  Set<String> requestPropertyIds=getRequestPropertyIds(request,predicate);
  AlertHistoryRequest historyRequest=new AlertHistoryRequest();
  historyRequest.Predicate=predicate;
  historyRequest.Pagination=request.getPageRequest();
  historyRequest.Sort=request.getSortRequest();
  List<AlertHistoryEntity> entities=s_dao.findAll(historyRequest);
  for (  AlertHistoryEntity entity : entities) {
    results.add(toResource(entity,requestPropertyIds));
  }
  return results;
}
