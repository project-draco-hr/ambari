def assert_configure_default(self):
    self.assertResourceCalled('HdfsDirectory', '/apps/tez/', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', mode=493, owner='tez', bin_dir='/usr/bin', action=['create_delayed'])
    self.assertResourceCalled('HdfsDirectory', '/apps/tez/lib/', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', mode=493, owner='tez', bin_dir='/usr/bin', action=['create_delayed'])
    self.assertResourceCalled('HdfsDirectory', None, security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', action=['create'], bin_dir='/usr/bin')
    self.assertResourceCalled('CopyFromLocal', '/usr/lib/tez/tez*.jar', hadoop_bin_dir='/usr/bin', hdfs_user='hdfs', owner='tez', dest_file=None, kinnit_if_needed='', dest_dir='/apps/tez/', hadoop_conf_dir='/etc/hadoop/conf', mode=493)
    self.assertResourceCalled('CopyFromLocal', '/usr/lib/tez/lib/*.jar', hadoop_conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', owner='tez', kinnit_if_needed='', dest_dir='/apps/tez/lib/', hadoop_bin_dir='/usr/bin', mode=493)
    self.assertResourceCalled('HdfsDirectory', '/apps/hive/warehouse', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', mode=511, owner='hive', bin_dir='/usr/bin', action=['create_delayed'])
    self.assertResourceCalled('HdfsDirectory', '/user/hive', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', mode=448, owner='hive', bin_dir='/usr/bin', action=['create_delayed'])
    self.assertResourceCalled('HdfsDirectory', None, security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', action=['create'], bin_dir='/usr/bin')
    self.assertResourceCalled('Directory', '/etc/hive', mode=493)
    self.assertResourceCalled('Directory', '/etc/hive/conf', owner='hive', group='hadoop', recursive=True)
    self.assertResourceCalled('XmlConfig', 'mapred-site.xml', group='hadoop', conf_dir='/etc/hive/conf', mode=420, configuration_attributes={u'final': {u'mapred.healthChecker.script.path': u'true', u'mapreduce.jobtracker.staging.root.dir': u'true', }, }, owner='hive', configurations=self.getConfig()['configurations']['mapred-site'])
    self.assertResourceCalled('File', '/etc/hive/conf/hive-default.xml.template', owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-env.sh.template', owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-exec-log4j.properties', content='log4jproperties\nline2', owner='hive', group='hadoop', mode=420)
    self.assertResourceCalled('File', '/etc/hive/conf/hive-log4j.properties', content='log4jproperties\nline2', owner='hive', group='hadoop', mode=420)
    self.assertResourceCalled('XmlConfig', 'hive-site.xml', group='hadoop', conf_dir='/etc/hive/conf.server', mode=420, configuration_attributes={u'final': {u'hive.optimize.bucketmapjoin.sortedmerge': u'true', u'javax.jdo.option.ConnectionDriverName': u'true', u'javax.jdo.option.ConnectionPassword': u'true', }, }, owner='hive', configurations=self.getConfig()['configurations']['hive-site'])
    self.assertResourceCalled('File', '/etc/hive/conf.server/hive-env.sh', content=InlineTemplate(self.getConfig()['configurations']['hive-env']['content']), owner='hive', group='hadoop')
    self.assertResourceCalled('Execute', ('cp', '--remove-destination', '/usr/share/java/mysql-connector-java.jar', '/usr/lib/hive/lib//mysql-connector-java.jar'), path=['/bin', '/usr/bin/'], sudo=True)
    self.assertResourceCalled('File', '/usr/lib/ambari-agent/DBConnectionVerification.jar', content=DownloadSource('http://c6401.ambari.apache.org:8080/resources/DBConnectionVerification.jar'))
    self.assertResourceCalled('File', '/tmp/start_hiveserver2_script', content=Template('startHiveserver2.sh.j2'), mode=493)
    self.assertResourceCalled('Directory', '/var/run/hive', owner='hive', group='hadoop', mode=493, recursive=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/log/hive', owner='hive', group='hadoop', mode=493, recursive=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/lib/hive', owner='hive', group='hadoop', mode=493, recursive=True, cd_access='a')
