def assert_configure_default(self):
    self.assertResourceCalled('HdfsDirectory', '/apps/hive/warehouse', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', mode=511, owner='hive', action=['create_delayed'])
    self.assertResourceCalled('HdfsDirectory', '/user/hive', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', mode=448, owner='hive', action=['create_delayed'])
    self.assertResourceCalled('HdfsDirectory', None, security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', action=['create'])
    self.assertResourceCalled('Directory', '/etc/hive/conf.server', owner='hive', group='hadoop', recursive=True)
    self.assertResourceCalled('XmlConfig', 'mapred-site.xml', group='hadoop', conf_dir='/etc/hive/conf.server', mode=420, configuration_attributes=self.getConfig()['configuration_attributes']['mapred-site'], owner='hive', configurations=self.getConfig()['configurations']['mapred-site'])
    self.assertResourceCalled('XmlConfig', 'hive-site.xml', group='hadoop', conf_dir='/etc/hive/conf.server', mode=420, configuration_attributes=self.getConfig()['configuration_attributes']['hive-site'], owner='hive', configurations=self.getConfig()['configurations']['hive-site'])
    self.assertResourceCalled('File', '/etc/hive/conf.server/hive-env.sh', content=InlineTemplate(self.getConfig()['configurations']['hive-env']['content']), owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf.server/hive-default.xml.template', owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf.server/hive-env.sh.template', owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf.server/hive-exec-log4j.properties', content='log4jproperties\nline2', owner='hive', group='hadoop', mode=420)
    self.assertResourceCalled('File', '/etc/hive/conf.server/hive-log4j.properties', content='log4jproperties\nline2', owner='hive', group='hadoop', mode=420)
    self.assertResourceCalled('Directory', '/etc/hive/conf', owner='hive', group='hadoop', recursive=True)
    self.assertResourceCalled('XmlConfig', 'mapred-site.xml', group='hadoop', conf_dir='/etc/hive/conf', mode=420, configuration_attributes=self.getConfig()['configuration_attributes']['mapred-site'], owner='hive', configurations=self.getConfig()['configurations']['mapred-site'])
    self.assertResourceCalled('XmlConfig', 'hive-site.xml', group='hadoop', conf_dir='/etc/hive/conf', mode=420, configuration_attributes=self.getConfig()['configuration_attributes']['hive-site'], owner='hive', configurations=self.getConfig()['configurations']['hive-site'])
    self.assertResourceCalled('File', '/etc/hive/conf/hive-env.sh', content=InlineTemplate(self.getConfig()['configurations']['hive-env']['content']), owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-default.xml.template', owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-env.sh.template', owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-exec-log4j.properties', content='log4jproperties\nline2', owner='hive', group='hadoop', mode=420)
    self.assertResourceCalled('File', '/etc/hive/conf/hive-log4j.properties', content='log4jproperties\nline2', owner='hive', group='hadoop', mode=420)
    self.assertResourceCalled('Execute', 'hive mkdir -p /tmp/AMBARI-artifacts/ ; cp /usr/share/java/mysql-connector-java.jar /usr/lib/hive/lib//mysql-connector-java.jar', creates='/usr/lib/hive/lib//mysql-connector-java.jar', path=['/bin', '/usr/bin/'], not_if='test -f /usr/lib/hive/lib//mysql-connector-java.jar')
    self.assertResourceCalled('Execute', '/bin/sh -c \'cd /usr/lib/ambari-agent/ && curl -kf -x "" --retry 5 http://c6401.ambari.apache.org:8080/resources/DBConnectionVerification.jar -o DBConnectionVerification.jar\'', environment={'no_proxy': 'c6401.ambari.apache.org', }, not_if='[ -f DBConnectionVerification.jar]')
    self.assertResourceCalled('File', '/tmp/start_hiveserver2_script', content=Template('startHiveserver2.sh.j2'), mode=493)
    self.assertResourceCalled('Directory', '/var/run/hive', owner='hive', group='hadoop', mode=493, recursive=True)
    self.assertResourceCalled('Directory', '/var/log/hive', owner='hive', group='hadoop', mode=493, recursive=True)
    self.assertResourceCalled('Directory', '/var/lib/hive', owner='hive', group='hadoop', mode=493, recursive=True)
