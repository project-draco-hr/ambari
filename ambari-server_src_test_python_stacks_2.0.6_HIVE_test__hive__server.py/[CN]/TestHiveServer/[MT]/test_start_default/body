@patch.object(subprocess, 'Popen')
@patch('socket.socket')
def test_start_default(self, socket_mock, popen_mock):
    s = socket_mock.return_value
    self.executeScript('2.0.6/services/HIVE/package/scripts/hive_server.py', classname='HiveServer', command='start', config_file='default.json')
    self.assert_configure_default()
    self.assertResourceCalled('Execute', 'env JAVA_HOME=/usr/jdk64/jdk1.7.0_45 /tmp/start_hiveserver2_script /var/log/hive/hive-server2.out /var/log/hive/hive-server2.log /var/run/hive/hive-server.pid /etc/hive/conf.server /var/log/hive', not_if='ls /var/run/hive/hive-server.pid >/dev/null 2>&1 && ps `cat /var/run/hive/hive-server.pid` >/dev/null 2>&1', environment={'HADOOP_HOME': '/usr', }, path=[((((os.environ['PATH'] + os.pathsep) + '/usr/lib/hive/bin') + os.pathsep) + '/usr/bin')], user='hive')
    self.assertResourceCalled('Execute', '/usr/jdk64/jdk1.7.0_45/bin/java -cp /usr/lib/ambari-agent/DBConnectionVerification.jar:/usr/share/java/mysql-connector-java.jar org.apache.ambari.server.DBConnectionVerification \'jdbc:mysql://c6402.ambari.apache.org/hive?createDatabaseIfNotExist=true\' hive \'!`"\'"\'"\' 1\' com.mysql.jdbc.Driver', path=['/usr/sbin:/sbin:/usr/local/bin:/bin:/usr/bin'], tries=5, try_sleep=10)
    self.assertNoMoreResources()
    self.assertTrue(popen_mock.called)
    popen_mock.assert_called_with(['su', '-s', '/bin/bash', '-', u'hive', '-c', "metatool -listFSRoot 2>/dev/null | grep hdfs:// | grep -v '.db$'"], shell=False, preexec_fn=None, stderr=(-2), stdout=(-1), env=None, cwd=None)
    self.assertTrue(socket_mock.called)
    self.assertTrue(s.close.called)
