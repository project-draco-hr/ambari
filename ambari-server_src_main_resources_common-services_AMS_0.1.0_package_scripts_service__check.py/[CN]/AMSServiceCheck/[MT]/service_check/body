@OsFamilyFuncImpl(os_family=OSConst.WINSRV_FAMILY)
def service_check(self, env):
    from resource_management.libraries.functions.windows_service_utils import check_windows_service_exists
    from service_mapping import collector_win_service_name, monitor_win_service_name
    import params
    env.set_params(params)
    Logger.info('AMS Monitor service check was started.')
    if (not check_windows_service_exists(monitor_win_service_name)):
        raise Fail('AMS Monitor service was not properly installed. Check the logs and retry the installation.')
    if (params.ams_collector_home_dir and os.path.isdir(params.ams_collector_home_dir)):
        Logger.info('AMS Collector service check was started.')
        if (not check_windows_service_exists(collector_win_service_name)):
            raise Fail('AMS Collector service was not properly installed. Check the logs and retry the installation.')
