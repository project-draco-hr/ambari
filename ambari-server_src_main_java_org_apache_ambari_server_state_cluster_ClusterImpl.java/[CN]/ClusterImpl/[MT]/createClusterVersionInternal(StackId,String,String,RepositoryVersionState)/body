{
  if (!ALLOWED_REPOSITORY_STATES.contains(state)) {
    throw new AmbariException("The allowed state for a new cluster version must be within " + ALLOWED_REPOSITORY_STATES);
  }
  ClusterVersionEntity existing=clusterVersionDAO.findByClusterAndStackAndVersion(getClusterName(),stackId,version);
  if (existing != null) {
    throw new DuplicateResourceException("Duplicate item, a cluster version with stack=" + stackId + ", version="+ version+ " for cluster "+ getClusterName()+ " already exists");
  }
  RepositoryVersionEntity repositoryVersionEntity=repositoryVersionDAO.findByStackAndVersion(stackId,version);
  if (repositoryVersionEntity == null) {
    LOG.warn("Could not find repository version for stack=" + stackId + ", version="+ version);
    return;
  }
  ClusterEntity clusterEntity=getClusterEntity();
  ClusterVersionEntity clusterVersionEntity=new ClusterVersionEntity(clusterEntity,repositoryVersionEntity,state,System.currentTimeMillis(),System.currentTimeMillis(),userName);
  clusterVersionDAO.create(clusterVersionEntity);
  clusterEntity.getClusterVersionEntities().add(clusterVersionEntity);
  clusterEntity=clusterDAO.merge(clusterEntity);
}
