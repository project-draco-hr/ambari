{
  clusterGlobalLock.writeLock().lock();
  try {
    ClusterEntity clusterEntity=getClusterEntity();
    Collection<ClusterConfigMappingEntity> configMappingEntities=clusterEntity.getConfigMappingEntities();
    for (    ClusterConfigMappingEntity e : configMappingEntities) {
      LOG.debug("{} with tag {} is unselected",e.getType(),e.getTag());
      e.setSelected(0);
    }
    List<ClusterConfigMappingEntity> clusterConfigMappingsForStack=clusterDAO.getClusterConfigMappingsByStack(clusterEntity.getClusterId(),stackId);
    Collection<ClusterConfigMappingEntity> latestConfigMappingByStack=getLatestConfigMapping(clusterConfigMappingsForStack);
    for (    ClusterConfigMappingEntity e : configMappingEntities) {
      String type=e.getType();
      String tag=e.getTag();
      for (      ClusterConfigMappingEntity latest : latestConfigMappingByStack) {
        String t=latest.getType();
        String tagLatest=latest.getTag();
        if (type.equals(t) && tag.equals(tagLatest)) {
          LOG.info("{} with version tag {} is selected for stack {}",type,tag,stackId.toString());
          e.setSelected(1);
        }
      }
    }
    clusterEntity.setConfigMappingEntities(configMappingEntities);
    clusterEntity=clusterDAO.merge(clusterEntity);
    clusterDAO.mergeConfigMappings(configMappingEntities);
    refresh();
    cacheConfigurations();
  }
  finally {
    clusterGlobalLock.writeLock().unlock();
  }
}
