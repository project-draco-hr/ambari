{
  clusterGlobalLock.readLock().lock();
  try {
    Map<String,DesiredConfig> map=new HashMap<String,DesiredConfig>();
    Collection<String> types=new HashSet<String>();
    for (    ClusterConfigMappingEntity e : clusterEntity.getConfigMappingEntities()) {
      if (e.isSelected() > 0) {
        DesiredConfig c=new DesiredConfig();
        c.setServiceName(null);
        c.setTag(e.getTag());
        c.setUser(e.getUser());
        c.setVersion(allConfigs.get(e.getType()).get(e.getTag()).getVersion());
        map.put(e.getType(),c);
        types.add(e.getType());
      }
    }
    if (!map.isEmpty()) {
      Map<String,List<HostConfigMapping>> hostMappingsByType=hostConfigMappingDAO.findSelectedHostsByTypes(clusterEntity.getClusterId(),types);
      for (      Entry<String,DesiredConfig> entry : map.entrySet()) {
        List<DesiredConfig.HostOverride> hostOverrides=new ArrayList<DesiredConfig.HostOverride>();
        for (        HostConfigMapping mappingEntity : hostMappingsByType.get(entry.getKey())) {
          hostOverrides.add(new DesiredConfig.HostOverride(mappingEntity.getHostName(),mappingEntity.getVersion()));
        }
        entry.getValue().setHostOverrides(hostOverrides);
      }
    }
    return map;
  }
  finally {
    clusterGlobalLock.readLock().unlock();
  }
}
