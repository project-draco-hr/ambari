{
  clusterGlobalLock.readLock().lock();
  try {
    readWriteLock.readLock().lock();
    try {
      List<ServiceConfigVersionResponse> serviceConfigVersionResponses=new ArrayList<ServiceConfigVersionResponse>();
      for (      ServiceConfigEntity serviceConfigEntity : serviceConfigDAO.getServiceConfigs(getClusterId())) {
        ServiceConfigVersionResponse serviceConfigVersionResponse=new ServiceConfigVersionResponse();
        serviceConfigVersionResponse.setClusterName(getClusterName());
        serviceConfigVersionResponse.setServiceName(serviceConfigEntity.getServiceName());
        serviceConfigVersionResponse.setVersion(serviceConfigEntity.getVersion());
        serviceConfigVersionResponse.setCreateTime(serviceConfigEntity.getCreateTimestamp());
        serviceConfigVersionResponse.setUserName(serviceConfigEntity.getUser());
        serviceConfigVersionResponse.setNote(serviceConfigEntity.getNote());
        serviceConfigVersionResponse.setHosts(serviceConfigEntity.getHostNames());
        serviceConfigVersionResponse.setConfigurations(new ArrayList<ConfigurationResponse>());
        List<ClusterConfigEntity> clusterConfigEntities=serviceConfigEntity.getClusterConfigEntities();
        for (        ClusterConfigEntity clusterConfigEntity : clusterConfigEntities) {
          Config config=allConfigs.get(clusterConfigEntity.getType()).get(clusterConfigEntity.getTag());
          serviceConfigVersionResponse.getConfigurations().add(new ConfigurationResponse(getClusterName(),config.getType(),config.getTag(),config.getVersion(),config.getProperties(),config.getPropertiesAttributes()));
        }
        Long groupId=serviceConfigEntity.getGroupId();
        if (groupId != null) {
          serviceConfigVersionResponse.setGroupId(groupId);
          ConfigGroup configGroup=clusterConfigGroups.get(groupId);
          if (configGroup != null) {
            serviceConfigVersionResponse.setGroupName(configGroup.getName());
          }
 else {
          }
        }
        serviceConfigVersionResponses.add(serviceConfigVersionResponse);
      }
      return serviceConfigVersionResponses;
    }
  finally {
      readWriteLock.readLock().unlock();
    }
  }
  finally {
    clusterGlobalLock.readLock().unlock();
  }
}
