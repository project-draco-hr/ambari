{
  UpgradeEntity upgradeEntity=getUpgradeInProgress();
  if (upgradeEntity == null) {
    return getCurrentClusterVersion();
  }
  String effectiveVersion=null;
switch (upgradeEntity.getUpgradeType()) {
case NON_ROLLING:
    if (upgradeEntity.getDirection() == Direction.UPGRADE) {
      boolean pastChangingStack=isNonRollingUpgradePastUpgradingStack(upgradeEntity);
      effectiveVersion=pastChangingStack ? upgradeEntity.getToVersion() : upgradeEntity.getFromVersion();
    }
 else {
      effectiveVersion=upgradeEntity.getToVersion();
    }
  break;
case ROLLING:
default :
effectiveVersion=upgradeEntity.getToVersion();
break;
}
if (effectiveVersion == null) {
throw new AmbariException("Unable to determine which version to use during Stack Upgrade, effectiveVersion is null.");
}
Collection<ClusterVersionEntity> clusterVersionEntities=getClusterEntity().getClusterVersionEntities();
for (ClusterVersionEntity clusterVersionEntity : clusterVersionEntities) {
if (clusterVersionEntity.getRepositoryVersion().getVersion().equals(effectiveVersion)) {
return clusterVersionEntity;
}
}
return null;
}
