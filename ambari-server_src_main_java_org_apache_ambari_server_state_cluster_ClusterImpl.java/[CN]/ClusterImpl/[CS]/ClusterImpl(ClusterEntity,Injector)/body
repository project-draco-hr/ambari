{
  injector.injectMembers(this);
  this.clusterEntity=clusterEntity;
  serviceComponentHosts=new HashMap<String,Map<String,Map<String,ServiceComponentHost>>>();
  serviceComponentHostsByHost=new HashMap<String,List<ServiceComponentHost>>();
  desiredStackVersion=new StackId(clusterEntity.getDesiredStack());
  allConfigs=new HashMap<String,Map<String,Config>>();
  if (!clusterEntity.getClusterConfigEntities().isEmpty()) {
    for (    ClusterConfigEntity entity : clusterEntity.getClusterConfigEntities()) {
      if (!allConfigs.containsKey(entity.getType())) {
        allConfigs.put(entity.getType(),new HashMap<String,Config>());
      }
      Config config=configFactory.createExisting(this,entity);
      allConfigs.get(entity.getType()).put(entity.getTag(),config);
    }
  }
  if (desiredStackVersion != null && !StringUtils.isEmpty(desiredStackVersion.getStackName()) && !StringUtils.isEmpty(desiredStackVersion.getStackVersion())) {
    loadServiceConfigTypes();
  }
}
