{
  validateConditionIsNotEmpty(condition);
  String metricsAggregateTable;
  String queryStmt;
  if (condition.getPrecision() == null) {
    long endTime=condition.getEndTime() == null ? System.currentTimeMillis() : condition.getEndTime();
    long startTime=condition.getStartTime() == null ? 0 : condition.getStartTime();
    Long timeRange=endTime - startTime;
    if (timeRange > 5 * DAY) {
      metricsAggregateTable=METRICS_CLUSTER_AGGREGATE_HOURLY_TABLE_NAME;
      queryStmt=GET_CLUSTER_AGGREGATE_HOURLY_SQL;
      condition.setPrecision(Precision.HOURS);
    }
 else {
      metricsAggregateTable=METRICS_CLUSTER_AGGREGATE_TABLE_NAME;
      queryStmt=GET_CLUSTER_AGGREGATE_SQL;
      condition.setPrecision(Precision.SECONDS);
    }
  }
 else {
switch (condition.getPrecision()) {
case HOURS:
      metricsAggregateTable=METRICS_CLUSTER_AGGREGATE_HOURLY_TABLE_NAME;
    queryStmt=GET_CLUSTER_AGGREGATE_HOURLY_SQL;
  break;
default :
metricsAggregateTable=METRICS_CLUSTER_AGGREGATE_TABLE_NAME;
queryStmt=GET_CLUSTER_AGGREGATE_SQL;
}
}
StringBuilder sb=new StringBuilder(queryStmt);
sb.append(" WHERE ");
sb.append(condition.getConditionClause());
sb.append(" ORDER BY METRIC_NAME, SERVER_TIME");
if (condition.getLimit() != null) {
sb.append(" LIMIT ").append(condition.getLimit());
}
String query=String.format(sb.toString(),PhoenixTransactSQL.getNaiveTimeRangeHint(condition.getStartTime(),NATIVE_TIME_RANGE_DELTA),metricsAggregateTable);
if (LOG.isDebugEnabled()) {
LOG.debug("SQL => " + query + ", condition => "+ condition);
}
PreparedStatement stmt=connection.prepareStatement(query);
int pos=1;
if (condition.getMetricNames() != null) {
for (; pos <= condition.getMetricNames().size(); pos++) {
stmt.setString(pos,condition.getMetricNames().get(pos - 1));
}
}
if (condition.getAppId() != null) {
stmt.setString(pos++,condition.getAppId());
}
if (condition.getInstanceId() != null) {
stmt.setString(pos++,condition.getInstanceId());
}
if (condition.getStartTime() != null) {
stmt.setLong(pos++,condition.getStartTime());
}
if (condition.getEndTime() != null) {
stmt.setLong(pos,condition.getEndTime());
}
return stmt;
}
