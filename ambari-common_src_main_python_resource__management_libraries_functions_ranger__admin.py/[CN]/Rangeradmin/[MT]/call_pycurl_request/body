def call_pycurl_request(self, url, data, method, usernamepassword):
    buffer = BytesIO()
    header = BytesIO()
    url = str(url)
    c = pycurl.Curl()
    c.setopt(pycurl.URL, url)
    c.setopt(pycurl.HTTPHEADER, ['Content-Type: application/json', 'Accept: application/json'])
    c.setopt(pycurl.USERPWD, usernamepassword)
    c.setopt(pycurl.VERBOSE, 0)
    c.setopt(pycurl.WRITEFUNCTION, buffer.write)
    c.setopt(pycurl.HEADERFUNCTION, header.write)
    c.setopt(pycurl.CONNECTTIMEOUT, 60)
    if (method == 'get'):
        c.setopt(pycurl.HTTPGET, 1)
    elif (method == 'post'):
        c.setopt(pycurl.POST, 1)
        c.setopt(pycurl.POSTFIELDS, data)
    elif (method == 'put'):
        c.setopt(pycurl.CUSTOMREQUEST, 'PUT')
        c.setopt(pycurl.POSTFIELDS, str(data))
    elif (method == 'delete'):
        c.setopt(pycurl.CUSTOMREQUEST, 'DELETE')
        c.setopt(pycurl.POSTFIELDS, str(data))
    else:
        Logger.error('Invalid option given for curl request')
    try:
        c.perform()
        responseCode = c.getinfo(pycurl.HTTP_CODE)
        response = buffer.getvalue()
        headerResponse = header.getvalue()
        c.close()
        buffer.close()
        header.close()
        return (responseCode, response)
    except Exception as e:
        Logger.error(str(e))
        if (c is not None):
            c.close()
    return (None, None)
