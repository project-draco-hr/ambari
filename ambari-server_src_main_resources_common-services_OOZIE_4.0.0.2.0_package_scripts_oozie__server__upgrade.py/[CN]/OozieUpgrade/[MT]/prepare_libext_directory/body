@staticmethod
def prepare_libext_directory():
    '\n    Performs the following actions on libext:\n      - creates /usr/hdp/current/oozie/libext and recursively\n      - set 777 permissions on it and its parents.\n      - downloads JDBC driver JAR if needed\n      - copies Falcon JAR for the Oozie WAR if needed\n    '
    import params
    target_version_needs_compression_libraries = (compare_versions(format_stack_version(params.version), '2.2.1.0') >= 0)
    Directory(params.oozie_libext_dir, mode=511)
    if (params.lzo_enabled and ((params.upgrade_direction == Direction.UPGRADE) or target_version_needs_compression_libraries)):
        hadoop_lzo_pattern = 'hadoop-lzo*.jar'
        hadoop_client_new_lib_dir = format('/usr/hdp/{version}/hadoop/lib')
        files = glob.iglob(os.path.join(hadoop_client_new_lib_dir, hadoop_lzo_pattern))
        if (not files):
            raise Fail('There are no files at {0} matching {1}'.format(hadoop_client_new_lib_dir, hadoop_lzo_pattern))
        files_copied = False
        for file in files:
            if os.path.isfile(file):
                Logger.info('Copying {0} to {1}'.format(str(file), params.oozie_libext_dir))
                shutil.copy2(file, params.oozie_libext_dir)
                files_copied = True
        if (not files_copied):
            raise Fail('There are no files at {0} matching {1}'.format(hadoop_client_new_lib_dir, hadoop_lzo_pattern))
    oozie_ext_zip_file = '/usr/share/HDP-oozie/ext-2.2.zip'
    oozie_ext_zip_target_path = os.path.join(params.oozie_libext_dir, 'ext-2.2.zip')
    if (not os.path.isfile(oozie_ext_zip_file)):
        raise Fail('Unable to copy {0} because it does not exist'.format(oozie_ext_zip_file))
    Logger.info('Copying {0} to {1}'.format(oozie_ext_zip_file, params.oozie_libext_dir))
    Execute(('cp', oozie_ext_zip_file, params.oozie_libext_dir), sudo=True)
    Execute(('chown', format('{oozie_user}:{user_group}'), oozie_ext_zip_target_path), sudo=True)
    File(oozie_ext_zip_target_path, mode=420)
    oozie.download_database_library_if_needed()
    upgrade_stack = stack_select._get_upgrade_stack()
    if ((upgrade_stack is None) or (len(upgrade_stack) < 2) or (upgrade_stack[1] is None)):
        raise Fail('Unable to determine the stack that is being upgraded to or downgraded to.')
    stack_version = upgrade_stack[1]
    if params.has_falcon_host:
        versioned_falcon_jar_directory = '/usr/hdp/{0}/falcon/oozie/ext/falcon-oozie-el-extension-*.jar'.format(stack_version)
        Logger.info('Copying {0} to {1}'.format(versioned_falcon_jar_directory, params.oozie_libext_dir))
        Execute(format('{sudo} cp {versioned_falcon_jar_directory} {oozie_libext_dir}'))
        Execute(format('{sudo} chown {oozie_user}:{user_group} {oozie_libext_dir}/falcon-oozie-el-extension-*.jar'))
