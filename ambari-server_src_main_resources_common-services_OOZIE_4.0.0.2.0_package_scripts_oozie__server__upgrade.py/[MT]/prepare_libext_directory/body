def prepare_libext_directory():
    '\n  Creates /usr/hdp/current/oozie/libext-customer and recursively sets\n  777 permissions on it and its parents.\n  :return:\n  '
    import params
    target_version_needs_compression_libraries = (compare_versions(format_hdp_stack_version(params.version), '2.2.1.0') >= 0)
    if (not os.path.isdir(params.oozie_libext_customer_dir)):
        os.makedirs(params.oozie_libext_customer_dir, 511)
    os.chmod(params.oozie_libext_customer_dir, 511)
    if ((params.upgrade_direction == Direction.UPGRADE) or target_version_needs_compression_libraries):
        hadoop_lzo_pattern = 'hadoop-lzo*.jar'
        hadoop_client_new_lib_dir = format('/usr/hdp/{version}/hadoop/lib')
        files = glob.iglob(os.path.join(hadoop_client_new_lib_dir, hadoop_lzo_pattern))
        if (not files):
            raise Fail('There are no files at {0} matching {1}'.format(hadoop_client_new_lib_dir, hadoop_lzo_pattern))
        files_copied = False
        for file in files:
            if os.path.isfile(file):
                files_copied = True
                Logger.info('Copying {0} to {1}'.format(str(file), params.oozie_libext_customer_dir))
                shutil.copy(file, params.oozie_libext_customer_dir)
        if (not files_copied):
            raise Fail('There are no files at {0} matching {1}'.format(hadoop_client_new_lib_dir, hadoop_lzo_pattern))
    oozie_ext_zip_file = '/usr/share/HDP-oozie/ext-2.2.zip'
    if (not os.path.isfile(oozie_ext_zip_file)):
        raise Fail('Unable to copy {0} because it does not exist'.format(oozie_ext_zip_file))
    Logger.info('Copying {0} to {1}'.format(oozie_ext_zip_file, params.oozie_libext_customer_dir))
    shutil.copy(oozie_ext_zip_file, params.oozie_libext_customer_dir)
