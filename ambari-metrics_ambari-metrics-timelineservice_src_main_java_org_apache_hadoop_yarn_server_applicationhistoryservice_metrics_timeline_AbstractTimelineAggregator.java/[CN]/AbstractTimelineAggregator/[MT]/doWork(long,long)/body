{
  LOG.info("Start aggregation cycle @ " + new Date() + ", "+ "startTime = "+ new Date(startTime)+ ", endTime = "+ new Date(endTime));
  boolean success=true;
  PhoenixTransactSQL.Condition condition=prepareMetricQueryCondition(startTime,endTime);
  Connection conn=null;
  PreparedStatement stmt=null;
  ResultSet rs=null;
  try {
    conn=hBaseAccessor.getConnection();
    stmt=PhoenixTransactSQL.prepareGetMetricsSqlStmt(conn,condition);
    LOG.debug("Query issued @: " + new Date());
    rs=stmt.executeQuery();
    LOG.debug("Query returned @: " + new Date());
    aggregate(rs,startTime,endTime);
    LOG.info("End aggregation cycle @ " + new Date());
  }
 catch (  SQLException e) {
    LOG.error("Exception during aggregating metrics.",e);
    success=false;
  }
catch (  IOException e) {
    LOG.error("Exception during aggregating metrics.",e);
    success=false;
  }
 finally {
    if (rs != null) {
      try {
        rs.close();
      }
 catch (      SQLException e) {
      }
    }
    if (stmt != null) {
      try {
        stmt.close();
      }
 catch (      SQLException e) {
      }
    }
    if (conn != null) {
      try {
        conn.close();
      }
 catch (      SQLException sql) {
      }
    }
  }
  LOG.info("End aggregation cycle @ " + new Date());
  return success;
}
