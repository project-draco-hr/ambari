@patch('time.time')
@patch.object(socket.socket, 'connect')
def test_port_alert(self, socket_connect_mock, time_mock):
    definition_json = self._get_port_alert_definition()
    configuration = {'hdfs-site': {'my-key': 'value1', }, }
    collector = AlertCollector()
    cluster_configuration = self.__get_cluster_configuration()
    self.__update_cluster_configuration(cluster_configuration, configuration)
    time_mock.side_effect = [0, 900, 336283000000, 0, 2000, 336283100000, socket.timeout, 336283200000]
    alert = PortAlert(definition_json, definition_json['source'])
    alert.set_helpers(collector, cluster_configuration)
    alert.set_cluster('c1', 'c6401.ambari.apache.org')
    self.assertEquals(6, alert.interval())
    alert.collect()
    alerts = collector.alerts()
    self.assertEquals(0, len(collector.alerts()))
    self.assertEquals('OK', alerts[0]['state'])
    alert.collect()
    alerts = collector.alerts()
    self.assertEquals(0, len(collector.alerts()))
    self.assertEquals('WARNING', alerts[0]['state'])
    alert.collect()
    alerts = collector.alerts()
    self.assertEquals(0, len(collector.alerts()))
    self.assertEquals('CRITICAL', alerts[0]['state'])
