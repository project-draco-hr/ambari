@patch.object(socket.socket, 'connect')
def test_alert_definition_too_many_positional_arguments(self, socket_connect_mock):
    '\n    Tests that an alert definition with too many arguments produces an alert to collect after the\n    exceptioin is raised.\n    :param socket_connect_mock:\n    :return:\n    '
    definition_json = self._get_alert_definition_with_too_many_positional_arguments()
    configuration = {'hdfs-site': {'my-key': 'c6401.ambari.apache.org:2181', }, }
    collector = AlertCollector()
    cluster_configuration = self.__get_cluster_configuration()
    self.__update_cluster_configuration(cluster_configuration, configuration)
    alert = PortAlert(definition_json, definition_json['source'], self.config)
    alert.set_helpers(collector, cluster_configuration)
    alert.set_cluster('c1', 'c6402.ambari.apache.org')
    alert.set_helpers(collector, cluster_configuration)
    alert.set_cluster('c1', 'c6401.ambari.apache.org')
    self.assertEquals(6, alert.interval())
    alert.collect()
    alerts = collector.alerts()
    self.assertEquals(0, len(collector.alerts()))
    self.assertEquals('UNKNOWN', alerts[0]['state'])
    self.assertTrue(('There is a problem with the alert definition' in alerts[0]['text']))
