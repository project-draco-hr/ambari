@patch.object(WebAlert, '_make_web_request')
def test_web_alert(self, wa_make_web_request_mock):
    definition_json = self._get_web_alert_definition()
    WebResponse = namedtuple('WebResponse', 'status_code time_millis error_msg')
    wa_make_web_request_mock.return_value = WebResponse(200, 1.234, None)
    configuration = {'hdfs-site': {'dfs.datanode.http.address': 'c6401.ambari.apache.org:80', }, }
    collector = AlertCollector()
    cluster_configuration = self.__get_cluster_configuration()
    self.__update_cluster_configuration(cluster_configuration, configuration)
    alert = WebAlert(definition_json, definition_json['source'], None)
    alert.set_helpers(collector, cluster_configuration)
    alert.set_cluster('c1', 'c6401.ambari.apache.org')
    alert.collect()
    alerts = collector.alerts()
    self.assertEquals(0, len(collector.alerts()))
    self.assertEquals('(Unit Tests) ok: 200', alerts[0]['text'])
    self.assertEquals('OK', alerts[0]['state'])
    wa_make_web_request_mock.return_value = WebResponse(500, 1.234, None)
    collector = AlertCollector()
    alert = WebAlert(definition_json, definition_json['source'], None)
    alert.set_helpers(collector, cluster_configuration)
    alert.set_cluster('c1', 'c6401.ambari.apache.org')
    alert.collect()
    alerts = collector.alerts()
    self.assertEquals(0, len(collector.alerts()))
    self.assertEquals('WARNING', alerts[0]['state'])
    self.assertEquals('(Unit Tests) warning: 500', alerts[0]['text'])
    wa_make_web_request_mock.return_value = WebResponse(0, 0, 'error message')
    collector = AlertCollector()
    alert = WebAlert(definition_json, definition_json['source'], None)
    alert.set_helpers(collector, cluster_configuration)
    alert.set_cluster('c1', 'c6401.ambari.apache.org')
    alert.collect()
    alerts = collector.alerts()
    self.assertEquals(0, len(collector.alerts()))
    self.assertEquals('CRITICAL', alerts[0]['state'])
    self.assertEquals('(Unit Tests) critical: http://c6401.ambari.apache.org:80. error message', alerts[0]['text'])
    configuration = {'hdfs-site': {'dfs.http.policy': 'HTTPS_ONLY', 'dfs.datanode.http.address': 'c6401.ambari.apache.org:80', 'dfs.datanode.https.address': 'c6401.ambari.apache.org:443', }, }
    self.__update_cluster_configuration(cluster_configuration, configuration)
    collector = AlertCollector()
    alert = WebAlert(definition_json, definition_json['source'], None)
    alert.set_helpers(collector, cluster_configuration)
    alert.set_cluster('c1', 'c6401.ambari.apache.org')
    alert.collect()
    alerts = collector.alerts()
    self.assertEquals(0, len(collector.alerts()))
    self.assertEquals('CRITICAL', alerts[0]['state'])
    self.assertEquals('(Unit Tests) critical: https://c6401.ambari.apache.org:443. error message', alerts[0]['text'])
