def test_get_configuration_values(self):
    '\n    Tests that we are able to extract parameters correctly from the cached\n    configuration.\n    :return:\n    '
    configuration = {'foo-site': {'foo-key1': 'value1', 'foo-key2': 'value2', 'special-character-*': 'asterisk', 'special-character-$': 'dollar sign', 'special-character-%': 'percent', 'special-character-#': 'hash', 'special-character-!': 'bang', 'special-character-&': 'ampersand', }, }
    collector = AlertCollector()
    cluster_configuration = self.__get_cluster_configuration()
    self.__update_cluster_configuration(cluster_configuration, configuration)
    alert = MockAlert()
    alert.set_helpers(collector, cluster_configuration)
    alert.set_cluster('c1', 'c6401.ambari.apache.org')
    self.assertEquals('constant', alert._get_configuration_value('constant'))
    self.assertEquals('value1', alert._get_configuration_value('{{foo-site/foo-key1}}'))
    self.assertEquals('value2', alert._get_configuration_value('{{foo-site/foo-key2}}'))
    self.assertEquals('asterisk', alert._get_configuration_value('{{foo-site/special-character-*}}'))
    self.assertEquals('dollar sign', alert._get_configuration_value('{{foo-site/special-character-$}}'))
    self.assertEquals('hash', alert._get_configuration_value('{{foo-site/special-character-#}}'))
    self.assertEquals('bang', alert._get_configuration_value('{{foo-site/special-character-!}}'))
    self.assertEquals('ampersand', alert._get_configuration_value('{{foo-site/special-character-&}}'))
    self.assertEquals('http://value1/servlet', alert._get_configuration_value('http://{{foo-site/foo-key1}}/servlet'))
    self.assertEquals('http://value1/servlet/value2', alert._get_configuration_value('http://{{foo-site/foo-key1}}/servlet/{{foo-site/foo-key2}}'))
    self.assertEquals(configuration['foo-site'], alert._get_configuration_value('{{foo-site}}'))
