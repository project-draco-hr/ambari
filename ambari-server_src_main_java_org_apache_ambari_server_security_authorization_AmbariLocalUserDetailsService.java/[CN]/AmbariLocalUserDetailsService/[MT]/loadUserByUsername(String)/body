{
  log.info("Loading user by name: " + username);
  UserEntity user=userDAO.findLocalUserByName(username);
  if (user == null) {
    log.info("user not found ");
    throw new UsernameNotFoundException("Username " + username + " not found");
  }
 else   if (user.getRoleEntities().isEmpty()) {
    log.info("No authorities for user");
    throw new UsernameNotFoundException("Username " + username + " has no roles");
  }
  List<PrincipalEntity> principalEntities=new LinkedList<PrincipalEntity>();
  principalEntities.add(user.getPrincipal());
  List<MemberEntity> memberEntities=memberDAO.findAllMembersByUser(user);
  for (  MemberEntity memberEntity : memberEntities) {
    principalEntities.add(memberEntity.getGroup().getPrincipal());
  }
  List<PrivilegeEntity> privilegeEntities=privilegeDAO.findAllByPrincipal(principalEntities);
  return new User(user.getUserName(),user.getUserPassword(),authorizationHelper.convertPrivilegesToAuthorities(privilegeEntities));
}
