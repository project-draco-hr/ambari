def test_read_and_write_repo_version_history(self):
    (f, filename) = tempfile.mkstemp()
    try:
        repo_version_history.REPO_VERSION_HISTORY_FILE = filename
        repo_version_history.Logger = logging.getLogger()
        result = repo_version_history.read_actual_version_from_history_file('2.3.2.0')
        self.assertEquals(result, None)
        repo_version_history.write_actual_version_to_history_file('2.3.2.0', '2.3.2.0-210')
        result = repo_version_history.read_actual_version_from_history_file('2.3.2.0')
        self.assertEquals(result, '2.3.2.0-210')
        repo_version_history.write_actual_version_to_history_file('2.3.2.0', '2.3.2.0-2716')
        result = repo_version_history.read_actual_version_from_history_file('2.3.2.0')
        self.assertEquals(result, '2.3.2.0-2716')
        repo_version_history.write_actual_version_to_history_file('2.3.2.0', '2.3.2.0-2758')
        result = repo_version_history.read_actual_version_from_history_file('2.3.2.0')
        self.assertEquals(result, '2.3.2.0-2758')
        repo_version_history.write_actual_version_to_history_file('2.3.1.0', '2.3.1.0-27')
        result = repo_version_history.read_actual_version_from_history_file('2.3.1.0')
        self.assertEquals(result, '2.3.1.0-27')
        result = repo_version_history.read_actual_version_from_history_file('2.3.2.0')
        self.assertEquals(result, '2.3.2.0-2758')
        result = repo_version_history.read_actual_version_from_history_file('2.3.0.0')
        self.assertEquals(result, None)
    finally:
        os.unlink(filename)
