{
  StringBuilder columns=new StringBuilder();
  Set<String> tableSet=new HashSet<String>();
  for (  PropertyId propertyId : propertyIds) {
    if (columns.length() > 0) {
      columns.append(", ");
    }
    columns.append(propertyId.getCategory()).append(".").append(propertyId.getName());
    tableSet.add(propertyId.getCategory());
  }
  boolean haveWhereClause=false;
  StringBuilder whereClause=new StringBuilder();
  if (predicate != null && propertyIds.containsAll(PredicateHelper.getPropertyIds(predicate)) && predicate instanceof PredicateVisitorAcceptor) {
    SQLPredicateVisitor visitor=new SQLPredicateVisitor();
    ((PredicateVisitorAcceptor)predicate).accept(visitor);
    whereClause.append(visitor.getSQL());
    haveWhereClause=true;
  }
  StringBuilder joinClause=new StringBuilder();
  if (f_keys != null) {
    for (    PropertyId[] f_key : f_keys) {
      if (haveWhereClause || joinClause.length() > 0) {
        joinClause.append(" and ");
      }
      String category1=f_key[0].getCategory();
      joinClause.append(category1).append(".").append(f_key[0].getName());
      joinClause.append("=");
      String category2=f_key[1].getCategory();
      joinClause.append(category2).append(".").append(f_key[1].getName());
      tableSet.add(category1);
      tableSet.add(category2);
    }
    haveWhereClause=true;
  }
  StringBuilder tables=new StringBuilder();
  for (  String table : tableSet) {
    if (tables.length() > 0) {
      tables.append(", ");
    }
    tables.append(table);
  }
  String sql="select " + columns + " from "+ tables;
  if (haveWhereClause) {
    sql=sql + " where " + (whereClause == null ? "" : whereClause)+ (joinClause == null ? "" : joinClause);
  }
  System.out.println(sql);
  return sql;
}
