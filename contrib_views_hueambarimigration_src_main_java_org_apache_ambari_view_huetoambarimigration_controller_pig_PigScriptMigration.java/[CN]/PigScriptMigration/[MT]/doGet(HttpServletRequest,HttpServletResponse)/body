{
  HttpSession session=req.getSession(true);
  final Logger logger=Logger.getLogger(PigScriptMigration.class);
  Connection connectionHuedb=null;
  Connection connectionAmbaridb=null;
  logger.info("-------------------------------------");
  logger.info("Pig saved script Migration started");
  logger.info("-------------------------------------");
  userName=req.getParameter("username");
  startDate=req.getParameter("startdate");
  endDate=req.getParameter("enddate");
  instance=req.getParameter("instance");
  int i=0;
  logger.info("start date: " + startDate);
  logger.info("enddate date: " + endDate);
  logger.info("instance is: " + userName);
  logger.info("hue username is : " + instance);
  PigScriptImpl pigsavedscriptmigration=new PigScriptImpl();
  int maxcountforsavequery=0, maxcountforpigsavedscript;
  String time=null, timetobeInorder=null;
  Long epochTime=null;
  String dirNameForPigScript, completeDirandFilePath, pigscriptFilename="";
  int pigInstanceTableName;
  ArrayList<PojoPig> dbpojoPigSavedscript=new ArrayList<PojoPig>();
  try {
    connectionHuedb=DataSourceHueDatabase.getInstance(view.getProperties().get("huedrivername"),view.getProperties().get("huejdbcurl"),view.getProperties().get("huedbusername"),view.getProperties().get("huedbpassword")).getConnection();
    dbpojoPigSavedscript=pigsavedscriptmigration.fetchFromHueDatabase(userName,startDate,endDate,connectionHuedb,view.getProperties().get("huedrivername"));
    if (dbpojoPigSavedscript.size() == 0) {
      logger.info("no Pig script has been selected from hue according to your criteria of searching");
      resp.setContentType("text/html");
      PrintWriter out=resp.getWriter();
      out.println("<br>");
      out.println("<h4>No Pig Script selected according to your criteria</h4>");
    }
 else {
      connectionAmbaridb=DataSourceAmbariDatabase.getInstance(view.getProperties().get("ambaridrivername"),view.getProperties().get("ambarijdbcurl"),view.getProperties().get("ambaridbusername"),view.getProperties().get("ambaridbpassword")).getConnection();
      connectionAmbaridb.setAutoCommit(false);
      logger.info("loop will continue for " + dbpojoPigSavedscript.size() + "times");
      for (i=0; i < dbpojoPigSavedscript.size(); i++) {
        float calc=((float)(i + 1)) / dbpojoPigSavedscript.size() * 100;
        int progressPercentage=Math.round(calc);
        session.setAttribute(ProgressBarStatus.TASK_PROGRESS_VARIABLE,progressPercentage);
        logger.info("Loop No." + (i + 1));
        logger.info("________________");
        logger.info("the title of script:  " + dbpojoPigSavedscript.get(i).getTitle());
        pigInstanceTableName=pigsavedscriptmigration.fetchInstanceTablenamePigScript(view.getProperties().get("ambaridrivername"),connectionAmbaridb,instance);
        maxcountforpigsavedscript=(pigsavedscriptmigration.fetchmaxIdforPigSavedScript(view.getProperties().get("ambaridrivername"),connectionAmbaridb,pigInstanceTableName) + 1);
        time=pigsavedscriptmigration.getTime();
        timetobeInorder=pigsavedscriptmigration.getTimeInorder();
        epochTime=pigsavedscriptmigration.getEpochTime();
        dirNameForPigScript="/user/admin/pig/scripts/";
        pigscriptFilename=dbpojoPigSavedscript.get(i).getTitle() + "-" + time+ ".pig";
        completeDirandFilePath=dirNameForPigScript + pigscriptFilename;
        pigsavedscriptmigration.writetPigScripttoLocalFile(dbpojoPigSavedscript.get(i).getScript(),dbpojoPigSavedscript.get(i).getTitle(),dbpojoPigSavedscript.get(i).getDt(),ConfFileReader.getHomeDir(),pigscriptFilename);
        pigsavedscriptmigration.insertRowForPigScript(view.getProperties().get("ambaridrivername"),completeDirandFilePath,maxcountforsavequery,maxcountforpigsavedscript,time,timetobeInorder,epochTime,dbpojoPigSavedscript.get(i).getTitle(),connectionAmbaridb,pigInstanceTableName,instance,i);
        if (view.getProperties().get("KerberoseEnabled").equals("y")) {
          pigsavedscriptmigration.putFileinHdfsSecured(ConfFileReader.getHomeDir() + pigscriptFilename,dirNameForPigScript,view.getProperties().get("namenode_URI_Ambari"));
        }
 else {
          pigsavedscriptmigration.putFileinHdfs(ConfFileReader.getHomeDir() + pigscriptFilename,dirNameForPigScript,view.getProperties().get("namenode_URI_Ambari"));
        }
        logger.info(dbpojoPigSavedscript.get(i).getTitle() + "Migrated to Ambari");
        pigsavedscriptmigration.deletePigScriptLocalFile(ConfFileReader.getHomeDir(),pigscriptFilename);
      }
      connectionAmbaridb.commit();
    }
  }
 catch (  SQLException e) {
    logger.error("Sql exception in ambari database",e);
    try {
      connectionAmbaridb.rollback();
      logger.info("rollback done");
    }
 catch (    SQLException e1) {
      logger.error("Sql exception while doing roll back",e);
    }
  }
catch (  ClassNotFoundException e2) {
    logger.error("class not found exception",e2);
  }
catch (  ParseException e) {
    logger.error("ParseException: ",e);
  }
catch (  PropertyVetoException e) {
    logger.error("PropertyVetoException: ",e);
  }
 finally {
    if (null != connectionAmbaridb)     try {
      connectionAmbaridb.close();
    }
 catch (    SQLException e) {
      logger.error("connection close exception: ",e);
    }
  }
  session.setAttribute(ProgressBarStatus.TASK_PROGRESS_VARIABLE,0);
  resp.setContentType("text/html");
  PrintWriter out=resp.getWriter();
  out.println("<br>");
  out.println("<h4>" + i + " Pig Script has been migrated to "+ instance+ "</h4>");
  logger.info("----------------------------------");
  logger.info("Pig saved script Migration ends");
  logger.info("----------------------------------");
}
