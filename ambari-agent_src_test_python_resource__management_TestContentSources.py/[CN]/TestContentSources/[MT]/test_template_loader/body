@patch('__builtin__.open')
@patch.object(os.path, 'getmtime')
@patch.object(os.path, 'exists')
def test_template_loader(self, exists_mock, getmtime_mock, open_mock):
    '\n    Testing template loader on existent file\n    '
    exists_mock.return_value = True
    getmtime_mock.return_value = 10
    file_mock = MagicMock(name='file_mock')
    file_mock.__enter__.return_value = file_mock
    file_mock.read.return_value = 'template content'
    open_mock.return_value = file_mock
    with Environment('/base') as env:
        template = Template('test.j2')
    self.assertEqual(open_mock.call_count, 1)
    open_mock.assert_called_with('/base/templates/test.j2', 'rb')
    self.assertEqual(getmtime_mock.call_count, 1)
    getmtime_mock.assert_called_with('/base/templates/test.j2')
