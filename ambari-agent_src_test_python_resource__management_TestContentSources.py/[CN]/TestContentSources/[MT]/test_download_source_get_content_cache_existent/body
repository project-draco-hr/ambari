@patch('__builtin__.open')
@patch.object(os, 'makedirs')
@patch.object(os.path, 'exists')
def test_download_source_get_content_cache_existent(self, exists_mock, makedirs_mock, open_mock):
    '\n    Testing DownloadSource.get_content with cache on cached resource\n    '
    exists_mock.side_effect = [True, True, False]
    file_mock = MagicMock(name='file_mock')
    file_mock.__enter__.return_value = file_mock
    file_mock.read.return_value = 'cached_content'
    open_mock.return_value = file_mock
    with Environment('/base') as env:
        download_source = DownloadSource('http://download/source', cache=True)
    content = download_source.get_content()
    self.assertEqual('cached_content', content)
    self.assertEqual(open_mock.call_count, 1)
    open_mock.assert_called_with('/var/tmp/downloads/source')
    self.assertEqual(file_mock.read.call_count, 1)
