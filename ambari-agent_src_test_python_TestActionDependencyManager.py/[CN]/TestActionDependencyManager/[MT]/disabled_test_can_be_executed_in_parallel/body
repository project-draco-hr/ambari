def disabled_test_can_be_executed_in_parallel(self):
    adm = ActionDependencyManager(self.config)
    group = []
    install_command = {'role': 'DATANODE', 'roleCommand': 'INSTALL', 'commandType': ActionQueue.EXECUTION_COMMAND, }
    upgrade_command = {'role': 'DATANODE', 'roleCommand': 'UPGRADE', 'commandType': ActionQueue.EXECUTION_COMMAND, }
    start_command = {'role': 'DATANODE', 'roleCommand': 'START', 'commandType': ActionQueue.EXECUTION_COMMAND, }
    stop_command = {'role': 'DATANODE', 'roleCommand': 'STOP', 'commandType': ActionQueue.EXECUTION_COMMAND, }
    status_command = {'commandType': ActionQueue.STATUS_COMMAND, }
    rm_start_command = {'role': 'RESOURCEMANAGER', 'roleCommand': 'START', 'commandType': ActionQueue.EXECUTION_COMMAND, }
    hm_start_command = {'role': 'HBASE_MASTER', 'roleCommand': 'START', 'commandType': ActionQueue.EXECUTION_COMMAND, }
    self.assertTrue(adm.can_be_executed_in_parallel(install_command, group))
    self.assertTrue(adm.can_be_executed_in_parallel(status_command, group))
    group = []
    for i in range(0, 3):
        group.append(status_command)
    self.assertTrue(adm.can_be_executed_in_parallel(status_command, group))
    self.assertFalse(adm.can_be_executed_in_parallel(install_command, group))
    group = [install_command]
    self.assertFalse(adm.can_be_executed_in_parallel(status_command, group))
    group = [install_command]
    self.assertFalse(adm.can_be_executed_in_parallel(install_command, group))
    self.assertFalse(adm.can_be_executed_in_parallel(upgrade_command, group))
    self.assertFalse(adm.can_be_executed_in_parallel(status_command, group))
    self.assertFalse(adm.can_be_executed_in_parallel(start_command, group))
    group = [upgrade_command]
    self.assertFalse(adm.can_be_executed_in_parallel(install_command, group))
    self.assertFalse(adm.can_be_executed_in_parallel(upgrade_command, group))
    self.assertFalse(adm.can_be_executed_in_parallel(status_command, group))
    self.assertFalse(adm.can_be_executed_in_parallel(start_command, group))
    group = [start_command]
    self.assertFalse(adm.can_be_executed_in_parallel(install_command, group))
    self.assertFalse(adm.can_be_executed_in_parallel(upgrade_command, group))
    self.assertFalse(adm.can_be_executed_in_parallel(status_command, group))
    self.assertTrue(adm.can_be_executed_in_parallel(hm_start_command, group))
    group = [start_command]
    self.assertFalse(adm.can_be_executed_in_parallel(rm_start_command, group))
    group = [start_command]
    self.assertTrue(adm.can_be_executed_in_parallel(hm_start_command, group))
    group = [start_command]
    self.assertFalse(adm.can_be_executed_in_parallel(stop_command, group))
    group = [stop_command]
    self.assertFalse(adm.can_be_executed_in_parallel(start_command, group))
