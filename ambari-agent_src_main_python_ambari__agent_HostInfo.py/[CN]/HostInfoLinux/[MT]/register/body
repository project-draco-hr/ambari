def register(self, dict, componentsMapped=True, commandsInProgress=True):
    ' Return various details about the host\n    componentsMapped: indicates if any components are mapped to this host\n    commandsInProgress: indicates if any commands are in progress\n    '
    dict['hostHealth'] = {}
    java = []
    self.javaProcs(java)
    dict['hostHealth']['activeJavaProcs'] = java
    liveSvcs = []
    self.checkLiveServices(self.DEFAULT_LIVE_SERVICES, liveSvcs)
    dict['hostHealth']['liveServices'] = liveSvcs
    dict['umask'] = str(self.getUMask())
    dict['transparentHugePage'] = self.getTransparentHugePage()
    dict['firewallRunning'] = self.checkFirewall()
    dict['firewallName'] = self.getFirewallName()
    dict['reverseLookup'] = self.checkReverseLookup()
    if (componentsMapped or commandsInProgress):
        dict['alternatives'] = []
        dict['stackFoldersAndFiles'] = []
        dict['existingUsers'] = []
    else:
        etcs = []
        self.etcAlternativesConf(self.DEFAULT_PROJECT_NAMES, etcs)
        dict['alternatives'] = etcs
        existingUsers = []
        self.checkUsers(self.DEFAULT_USERS, existingUsers)
        dict['existingUsers'] = existingUsers
        dirs = []
        self.checkFolders(self.DEFAULT_BASEDIRS, self.DEFAULT_PROJECT_NAMES, self.EXACT_DIRECTORIES, existingUsers, dirs)
        dict['stackFoldersAndFiles'] = dirs
        self.reportFileHandler.writeHostCheckFile(dict)
        pass
    dict['hostHealth']['agentTimeStampAtReporting'] = int((time.time() * 1000))
    pass
