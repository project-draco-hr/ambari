def cancel(self, commands):
    for command in commands:
        logger.info('Canceling command {tid}'.format(tid=str(command['target_task_id'])))
        logger.debug(pprint.pformat(command))
        task_id = command['target_task_id']
        reason = command['reason']
        queue = self.commandQueue
        self.commandQueue = Queue.Queue()
        while (not queue.empty()):
            queued_command = queue.get(False)
            if (queued_command['taskId'] != task_id):
                self.commandQueue.put(queued_command)
            else:
                logger.info(((((((('Canceling ' + queued_command['commandType']) + ' for service ') + queued_command['serviceName']) + ' and role ') + queued_command['role']) + ' with taskId ') + str(queued_command['taskId'])))
        self.customServiceOrchestrator.cancel_command(task_id, reason)
