def executeCommand(self, command):
    logger.info(('Executing command \n' + pprint.pformat(command)))
    clusterName = command['clusterName']
    commandId = command['commandId']
    hostname = command['hostname']
    params = command['hostLevelParams']
    clusterHostInfo = command['clusterHostInfo']
    roleCommand = command['roleCommand']
    serviceName = command['serviceName']
    configurations = command['configurations']
    result = []
    taskId = command['taskId']
    self.commandInProgress = {'role': command['role'], 'actionId': commandId, 'taskId': taskId, 'clusterName': clusterName, 'serviceName': serviceName, 'tmpout': ((((self.tmpdir + os.sep) + 'output-') + str(taskId)) + '.txt'), 'tmperr': ((((self.tmpdir + os.sep) + 'errors-') + str(taskId)) + '.txt'), }
    if (command['commandType'] == ActionQueue.EXECUTION_COMMAND):
        if (command['roleCommand'] == ActionQueue.UPGRADE_STATUS):
            commandresult = self.upgradeExecutor.perform_stack_upgrade(command, self.commandInProgress['tmpout'], self.commandInProgress['tmperr'])
        else:
            commandresult = self.puppetExecutor.runCommand(command, self.commandInProgress['tmpout'], self.commandInProgress['tmperr'])
    self.commandInProgress = None
    status = 'COMPLETED'
    if (commandresult['exitcode'] != 0):
        status = 'FAILED'
    roleResult = {'role': command['role'], 'actionId': commandId, 'taskId': command['taskId'], 'stdout': commandresult['stdout'], 'clusterName': clusterName, 'stderr': commandresult['stderr'], 'exitCode': commandresult['exitcode'], 'serviceName': serviceName, 'status': status, }
    if (roleResult['stdout'] == ''):
        roleResult['stdout'] = 'None'
    if (roleResult['stderr'] == ''):
        roleResult['stderr'] = 'None'
    result.append(roleResult)
    return result
