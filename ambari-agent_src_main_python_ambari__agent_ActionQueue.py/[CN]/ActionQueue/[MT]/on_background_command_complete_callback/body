def on_background_command_complete_callback(self, process_condenced_result, handle):
    logger.debug(('Start callback: %s' % process_condenced_result))
    logger.debug(('The handle is: %s' % handle))
    status = (self.COMPLETED_STATUS if (handle.exitCode == 0) else self.FAILED_STATUS)
    roleResult = self.commandStatuses.generate_report_template(handle.command)
    roleResult.update({'stdout': process_condenced_result['stdout'], 'stderr': process_condenced_result['stderr'], 'exitCode': process_condenced_result['exitcode'], 'structuredOut': (str(json.dumps(process_condenced_result['structuredOut'])) if ('structuredOut' in process_condenced_result) else ''), 'status': status, })
    self.commandStatuses.put_command_status(handle.command, roleResult)
