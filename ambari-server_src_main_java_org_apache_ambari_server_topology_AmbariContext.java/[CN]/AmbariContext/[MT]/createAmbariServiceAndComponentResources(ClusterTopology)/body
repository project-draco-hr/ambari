{
  String clusterName=topology.getClusterName();
  Collection<String> services=topology.getBlueprint().getServices();
  try {
    Cluster cluster=getController().getClusters().getCluster(clusterName);
    services.removeAll(cluster.getServices().keySet());
  }
 catch (  AmbariException e) {
    e.printStackTrace();
    throw new RuntimeException("Failed to persist service and component resources: " + e,e);
  }
  Set<ServiceRequest> serviceRequests=new HashSet<ServiceRequest>();
  Set<ServiceComponentRequest> componentRequests=new HashSet<ServiceComponentRequest>();
  for (  String service : services) {
    serviceRequests.add(new ServiceRequest(clusterName,service,null));
    for (    String component : topology.getBlueprint().getComponents(service)) {
      componentRequests.add(new ServiceComponentRequest(clusterName,service,component,null));
    }
  }
  try {
    getServiceResourceProvider().createServices(serviceRequests);
    getComponentResourceProvider().createComponents(componentRequests);
  }
 catch (  AmbariException e) {
    e.printStackTrace();
    throw new RuntimeException("Failed to persist service and component resources: " + e,e);
  }
}
