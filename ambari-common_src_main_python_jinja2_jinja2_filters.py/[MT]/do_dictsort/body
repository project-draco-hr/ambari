def do_dictsort(value, case_sensitive=False, by='key'):
    "Sort a dict and yield (key, value) pairs. Because python dicts are\n    unsorted you may want to use this function to order them by either\n    key or value:\n\n    .. sourcecode:: jinja\n\n        {% for item in mydict|dictsort %}\n            sort the dict by key, case insensitive\n\n        {% for item in mydict|dicsort(true) %}\n            sort the dict by key, case sensitive\n\n        {% for item in mydict|dictsort(false, 'value') %}\n            sort the dict by key, case insensitive, sorted\n            normally and ordered by value.\n    "
    if (by == 'key'):
        pos = 0
    elif (by == 'value'):
        pos = 1
    else:
        raise FilterArgumentError('You can only sort by either "key" or "value"')

    def sort_func(item):
        value = item[pos]
        if (isinstance(value, basestring) and (not case_sensitive)):
            value = value.lower()
        return value
    return sorted(value.items(), key=sort_func)
