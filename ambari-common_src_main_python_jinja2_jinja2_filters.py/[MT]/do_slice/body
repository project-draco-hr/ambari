def do_slice(value, slices, fill_with=None):
    'Slice an iterator and return a list of lists containing\n    those items. Useful if you want to create a div containing\n    three ul tags that represent columns:\n\n    .. sourcecode:: html+jinja\n\n        <div class="columwrapper">\n          {%- for column in items|slice(3) %}\n            <ul class="column-{{ loop.index }}">\n            {%- for item in column %}\n              <li>{{ item }}</li>\n            {%- endfor %}\n            </ul>\n          {%- endfor %}\n        </div>\n\n    If you pass it a second argument it\'s used to fill missing\n    values on the last iteration.\n    '
    seq = list(value)
    length = len(seq)
    items_per_slice = (length // slices)
    slices_with_extra = (length % slices)
    offset = 0
    for slice_number in xrange(slices):
        start = (offset + (slice_number * items_per_slice))
        if (slice_number < slices_with_extra):
            offset += 1
        end = (offset + ((slice_number + 1) * items_per_slice))
        tmp = seq[start:end]
        if ((fill_with is not None) and (slice_number >= slices_with_extra)):
            tmp.append(fill_with)
        yield tmp
