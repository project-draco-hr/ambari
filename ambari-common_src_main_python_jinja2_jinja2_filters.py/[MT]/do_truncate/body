def do_truncate(s, length=255, killwords=False, end='...'):
    'Return a truncated copy of the string. The length is specified\n    with the first parameter which defaults to ``255``. If the second\n    parameter is ``true`` the filter will cut the text at length. Otherwise\n    it will try to save the last word. If the text was in fact\n    truncated it will append an ellipsis sign (``"..."``). If you want a\n    different ellipsis sign than ``"..."`` you can specify it using the\n    third parameter.\n\n    .. sourcecode jinja::\n\n        {{ mytext|truncate(300, false, \'&raquo;\') }}\n            truncate mytext to 300 chars, don\'t split up words, use a\n            right pointing double arrow as ellipsis sign.\n    '
    if (len(s) <= length):
        return s
    elif killwords:
        return (s[:length] + end)
    words = s.split(' ')
    result = []
    m = 0
    for word in words:
        m += (len(word) + 1)
        if (m > length):
            break
        result.append(word)
    result.append(end)
    return u' '.join(result)
