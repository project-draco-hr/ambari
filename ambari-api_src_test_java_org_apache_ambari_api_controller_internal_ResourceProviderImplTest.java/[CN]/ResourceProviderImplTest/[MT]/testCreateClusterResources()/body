{
  Resource.Type type=Resource.Type.Cluster;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  TrackActionResponse response=createNiceMock(TrackActionResponse.class);
  expect(managementController.createCluster(Matchers.clusterRequest(null,"Cluster100","4.02",null))).andReturn(response).once();
  expect(managementController.createCluster(Matchers.clusterRequest(99L,null,"4.03",null))).andReturn(response).once();
  replay(managementController,response);
  ResourceProvider provider=ResourceProviderImpl.getResourceProvider(type,new LinkedList<PropertyProvider>(),PropertyHelper.getPropertyIds(type,"DB"),PropertyHelper.getKeyPropertyIds(type),managementController);
  Set<Map<PropertyId,String>> propertySet=new LinkedHashSet<Map<PropertyId,String>>();
  Map<PropertyId,String> properties=new LinkedHashMap<PropertyId,String>();
  properties.put(ResourceProviderImpl.CLUSTER_NAME_PROPERTY_ID,"Cluster100");
  properties.put(ResourceProviderImpl.CLUSTER_VERSION_PROPERTY_ID,"4.02");
  propertySet.add(properties);
  properties=new LinkedHashMap<PropertyId,String>();
  properties.put(ResourceProviderImpl.CLUSTER_ID_PROPERTY_ID,"99");
  properties.put(ResourceProviderImpl.CLUSTER_VERSION_PROPERTY_ID,"4.03");
  propertySet.add(properties);
  Request request=PropertyHelper.getCreateRequest(propertySet);
  provider.createResources(request);
  verify(managementController,response);
}
