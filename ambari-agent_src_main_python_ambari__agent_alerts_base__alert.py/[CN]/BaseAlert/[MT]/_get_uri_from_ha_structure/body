def _get_uri_from_ha_structure(self, alert_uri_lookup_keys):
    '\n    Attempts to parse the HA URI structure in order to build a dynamic key\n    that represents the correct host URI to check.\n    :param alert_uri_lookup_keys:\n    :return: the AlertUri named tuple if there is a valid HA URL, otherwise None\n    '
    if (alert_uri_lookup_keys is None):
        return None
    logger.debug('[Alert][{0}] HA URI structure detected in definition, attempting to lookup dynamic HA properties'.format(self.get_name()))
    ha_nameservice = self._get_configuration_value(alert_uri_lookup_keys.ha_nameservice)
    ha_alias_key = alert_uri_lookup_keys.ha_alias_key
    ha_http_pattern = alert_uri_lookup_keys.ha_http_pattern
    ha_https_pattern = alert_uri_lookup_keys.ha_https_pattern
    if ((ha_nameservice is None) and (ha_alias_key is None)):
        return None
    if (ha_nameservice is not None):
        ha_alias_key = ha_alias_key.replace(self.HA_NAMESERVICE_PARAM, ha_nameservice)
    ha_nameservice_alias = self._get_configuration_value(ha_alias_key)
    if (ha_nameservice_alias is None):
        logger.warning('[Alert][{0}] HA nameservice value is present but there are no aliases for {1}'.format(self.get_name(), ha_alias_key))
        return None
    ha_pattern = ha_http_pattern
    is_ssl_enabled = self._check_uri_ssl_property(alert_uri_lookup_keys)
    if is_ssl_enabled:
        ha_pattern = ha_https_pattern
    if (ha_pattern is None):
        logger.warning('[Alert][{0}] There is no matching http(s) pattern for the HA URI'.format(self.get_name()))
        return None
    if ((self.HA_NAMESERVICE_PARAM in ha_pattern) and (ha_nameservice is None)):
        logger.warning('[Alert][{0}] An HA URI pattern of {1} was detected, but there is no nameservice key'.format(self.get_name(), ha_pattern))
        return None
    if (ha_nameservice is not None):
        ha_pattern = ha_pattern.replace(self.HA_NAMESERVICE_PARAM, ha_nameservice)
    for alias in ha_nameservice_alias.split(','):
        key = ha_pattern.replace(self.HA_ALIAS_PARAM, alias.strip())
        value = self._get_configuration_value(key)
        if ((value is not None) and (self.host_name in value)):
            return AlertUri(uri=value, is_ssl_enabled=is_ssl_enabled)
    return None
