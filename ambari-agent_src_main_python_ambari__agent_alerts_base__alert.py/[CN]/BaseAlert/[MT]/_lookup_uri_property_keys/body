def _lookup_uri_property_keys(self, uri_structure):
    '\n    Loads the configuration lookup keys that the URI structure needs. This\n    will return a named tuple that contains the keys needed to lookup\n    parameterized URI values from the cached configuration.\n    The URI structure looks something like:\n    \n    "uri":{ \n      "http": foo,\n      "https": bar,\n      ...\n    }\n    '
    if (uri_structure is None):
        return None
    http_key = None
    https_key = None
    https_property_key = None
    https_property_value_key = None
    default_port = None
    kerberos_keytab = None
    kerberos_principal = None
    if ('http' in uri_structure):
        http_key = uri_structure['http']
    if ('https' in uri_structure):
        https_key = uri_structure['https']
    if ('https_property' in uri_structure):
        https_property_key = uri_structure['https_property']
    if ('https_property_value' in uri_structure):
        https_property_value_key = uri_structure['https_property_value']
    if ('default_port' in uri_structure):
        default_port = uri_structure['default_port']
    if ('kerberos_keytab' in uri_structure):
        kerberos_keytab = uri_structure['kerberos_keytab']
    if ('kerberos_principal' in uri_structure):
        kerberos_principal = uri_structure['kerberos_principal']
    AlertUriLookupKeys = namedtuple('AlertUriLookupKeys', 'http https https_property https_property_value default_port kerberos_keytab kerberos_principal')
    alert_uri_lookup_keys = AlertUriLookupKeys(http=http_key, https=https_key, https_property=https_property_key, https_property_value=https_property_value_key, default_port=default_port, kerberos_keytab=kerberos_keytab, kerberos_principal=kerberos_principal)
    return alert_uri_lookup_keys
