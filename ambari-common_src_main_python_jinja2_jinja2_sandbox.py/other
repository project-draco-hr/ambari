'\n    jinja2.sandbox\n    ~~~~~~~~~~~~~~\n\n    Adds a sandbox layer to Jinja as it was the default behavior in the old\n    Jinja 1 releases.  This sandbox is slightly different from Jinja 1 as the\n    default behavior is easier to use.\n\n    The behavior can be changed by subclassing the environment.\n\n    :copyright: (c) 2010 by the Jinja Team.\n    :license: BSD.\n'
import operator
from jinja2.runtime import Undefined
from jinja2.environment import Environment
from jinja2.exceptions import SecurityError
from jinja2.utils import FunctionType, MethodType, TracebackType, CodeType, FrameType, GeneratorType
MAX_RANGE = 100000
UNSAFE_FUNCTION_ATTRIBUTES = set(['func_closure', 'func_code', 'func_dict', 'func_defaults', 'func_globals'])
UNSAFE_METHOD_ATTRIBUTES = set(['im_class', 'im_func', 'im_self'])
import warnings
warnings.filterwarnings('ignore', 'the sets module', DeprecationWarning, module='jinja2.sandbox')
from collections import deque
_mutable_set_types = (set,)
_mutable_mapping_types = (dict,)
_mutable_sequence_types = (list,)
try:
    from UserDict import UserDict, DictMixin
    from UserList import UserList
    _mutable_mapping_types += (UserDict, DictMixin)
    _mutable_set_types += (UserList,)
except ImportError:
    pass
try:
    from sets import Set
    _mutable_set_types += (Set,)
except ImportError:
    pass
try:
    from collections import MutableSet, MutableMapping, MutableSequence
    _mutable_set_types += (MutableSet,)
    _mutable_mapping_types += (MutableMapping,)
    _mutable_sequence_types += (MutableSequence,)
except ImportError:
    pass
_mutable_spec = ((_mutable_set_types, frozenset(['add', 'clear', 'difference_update', 'discard', 'pop', 'remove', 'symmetric_difference_update', 'update'])), (_mutable_mapping_types, frozenset(['clear', 'pop', 'popitem', 'setdefault', 'update'])), (_mutable_sequence_types, frozenset(['append', 'reverse', 'insert', 'sort', 'extend', 'remove'])), (deque, frozenset(['append', 'appendleft', 'clear', 'extend', 'extendleft', 'pop', 'popleft', 'remove', 'rotate'])))
