@retry(times=30, sleep_time=30, err_class=Fail)
def _check_datanode_startup(hdfs_binary):
    '\n  Checks that a DataNode process is running and DataNode is reported as being alive via the\n  "hdfs dfsadmin -fs {namenode_address} -report -live" command. Once the DataNode is found to be\n  alive this method will return, otherwise it will raise a Fail(...) and retry\n  automatically.\n  :param hdfs_binary: name/path of the HDFS binary to use\n  :return:\n  '
    if (not is_datanode_process_running()):
        Logger.info('DataNode process is not running')
        raise Fail('DataNode process is not running')
    import params
    import socket
    try:
        dfsadmin_base_command = get_dfsadmin_base_command(hdfs_binary)
        command = (dfsadmin_base_command + ' -report -live')
        (return_code, hdfs_output) = shell.call(command, user=params.hdfs_user)
    except:
        raise Fail('Unable to determine if the DataNode has started after upgrade.')
    if (return_code == 0):
        hostname = params.hostname.lower()
        hostname_ip = socket.gethostbyname(params.hostname.lower())
        if ((hostname in hdfs_output.lower()) or (hostname_ip in hdfs_output.lower())):
            Logger.info('DataNode {0} reports that it has rejoined the cluster.'.format(params.hostname))
            return
        else:
            raise Fail('DataNode {0} was not found in the list of live DataNodes'.format(params.hostname))
    raise Fail('Unable to determine if the DataNode has started after upgrade (result code {0})'.format(str(return_code)))
