{
  if ((principal == null) || principal.isEmpty()) {
    throw new AmbariException("Failed to create new principal - no principal specified");
  }
 else {
    StringBuilder queryBuilder=new StringBuilder();
    queryBuilder.append("add_principal");
    if ((password == null) || password.isEmpty()) {
      queryBuilder.append(" -randkey");
    }
 else {
      queryBuilder.append(" -pw ");
      queryBuilder.append(password);
    }
    queryBuilder.append(" ");
    queryBuilder.append(principal);
    try {
      ShellCommandUtil.Result result=invokeKAdmin(queryBuilder.toString());
      if (result != null) {
        if (result.isSuccessful()) {
          String stdOut=result.getStdout();
          return (stdOut != null) && stdOut.contains(String.format("Principal \"%s\" created",principal));
        }
 else {
          LOG.warn("Failed to create service principal for {}:\n\tExitCode: {}\n\tSTDOUT: {}\n\tSTDERR: {}",principal,result.getExitCode(),result.getStdout(),result.getStderr());
          throw new AmbariException(String.format("Failed to create service principal for %s",principal));
        }
      }
 else {
        String message=String.format("Failed to create service principal for %s - Unknown reason",principal);
        LOG.warn(message);
        throw new AmbariException(message);
      }
    }
 catch (    AmbariException e) {
      LOG.error(String.format("Failed to create new principal for %s",principal),e);
      throw e;
    }
  }
}
