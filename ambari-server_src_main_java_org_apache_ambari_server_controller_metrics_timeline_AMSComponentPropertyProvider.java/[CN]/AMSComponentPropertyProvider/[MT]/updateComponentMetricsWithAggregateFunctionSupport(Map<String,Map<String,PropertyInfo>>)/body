{
  if (componentMetrics == null || componentMetrics.isEmpty()) {
    return componentMetrics;
  }
  for (  Map<String,PropertyInfo> componentMetricInfo : componentMetrics.values()) {
    Map<String,PropertyInfo> aggregateMetrics=new HashMap<String,PropertyInfo>();
    for (    Map.Entry<String,PropertyInfo> metricEntry : componentMetricInfo.entrySet()) {
      for (      String identifierToAdd : aggregateFunctionIdentifierMap.values()) {
        String metricInfoKey=metricEntry.getKey() + identifierToAdd;
        if (componentMetricInfo.containsKey(metricInfoKey)) {
          continue;
        }
        PropertyInfo propertyInfo=metricEntry.getValue();
        PropertyInfo metricInfoValue=new PropertyInfo(propertyInfo.getPropertyId() + identifierToAdd,propertyInfo.isTemporal(),propertyInfo.isPointInTime());
        metricInfoValue.setAmsHostMetric(propertyInfo.isAmsHostMetric());
        metricInfoValue.setAmsId(propertyInfo.getAmsId());
        metricInfoValue.setUnit(propertyInfo.getUnit());
        aggregateMetrics.put(metricInfoKey,metricInfoValue);
      }
    }
    componentMetricInfo.putAll(aggregateMetrics);
  }
  return componentMetrics;
}
