{
  Map<String,DesiredConfig> clusterDesired=cluster.getDesiredConfigs();
  Map<String,Map<String,String>> resolved=new TreeMap<String,Map<String,String>>();
  for (  Entry<String,DesiredConfig> clusterEntry : clusterDesired.entrySet()) {
    String type=clusterEntry.getKey();
    String tag=clusterEntry.getValue().getVersion();
    Config config=cluster.getConfig(type,tag);
    if (null == config) {
      continue;
    }
    Map<String,String> tags=new LinkedHashMap<String,String>();
    tags.put("tag",config.getVersionTag());
    if (null != serviceName) {
      Service service=cluster.getService(serviceName);
      Config svcConfig=service.getDesiredConfigs().get(type);
      if (null != svcConfig && !svcConfig.getVersionTag().equals(tag)) {
        tags.put("service_override_tag",svcConfig.getVersionTag());
      }
    }
    if (null != hostDesired) {
      DesiredConfig dc=hostDesired.get(type);
      if (null != dc) {
        Config hostConfig=cluster.getConfig(type,dc.getVersion());
        if (null != hostConfig) {
          tags.put("host_override_tag",hostConfig.getVersionTag());
        }
      }
    }
    resolved.put(type,tags);
  }
  return resolved;
}
