{
  bindConstant().annotatedWith(Jpa.class).to(jpaUnit);
  if (null != properties) {
    bind(Properties.class).annotatedWith(Jpa.class).toInstance(properties);
  }
 else {
    bind(Properties.class).annotatedWith(Jpa.class).toProvider(Providers.<Properties>of(null));
  }
  bind(AmbariJpaPersistService.class).in(Singleton.class);
  bind(PersistService.class).to(AmbariJpaPersistService.class);
  bind(UnitOfWork.class).to(AmbariJpaPersistService.class);
  bind(EntityManager.class).toProvider(AmbariJpaPersistService.class);
  bind(EntityManagerFactory.class).toProvider(JpaPersistService.EntityManagerFactoryProvider.class);
  transactionInterceptor=new AmbariJpaLocalTxnInterceptor();
  requestInjection(transactionInterceptor);
  sessionInterceptor=new AmbariLocalSessionInterceptor();
  requestInjection(sessionInterceptor);
  for (  Class<?> finder : dynamicFinders) {
    bindFinder(finder);
  }
  bindInterceptor(annotatedWith(RequiresSession.class),any(),sessionInterceptor);
  bindInterceptor(any(),annotatedWith(RequiresSession.class),sessionInterceptor);
}
