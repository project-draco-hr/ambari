{
  try {
    Map<String,Cluster> clusterMap=m_clustersProvider.get().getClusters();
    for (    Cluster cluster : clusterMap.values()) {
      AlertDefinitionEntity entity=m_dao.findByName(cluster.getClusterId(),ALERT_DEFINITION_NAME);
      if (null == entity || !entity.getEnabled()) {
        continue;
      }
      try {
        cluster.getService(s_serviceName);
      }
 catch (      ServiceNotFoundException e) {
        continue;
      }
      Date current=new Date(System.currentTimeMillis());
      HDFSFinalizationState upgradeFinalized=getUpgradeFinalizedProperty(cluster);
      AlertState alertState;
      String alertDescription;
      if (upgradeFinalized == HDFSFinalizationState.UNKNOWN) {
        alertState=AlertState.UNKNOWN;
        alertDescription=s_alertUnknownText;
      }
 else       if (upgradeFinalized == HDFSFinalizationState.FINALIZED) {
        alertState=AlertState.OK;
        alertDescription=s_alertText;
      }
 else {
        alertState=AlertState.CRITICAL;
        alertDescription=s_alertCriticalText;
      }
      Alert alert=new Alert(entity.getDefinitionName(),null,entity.getServiceName(),entity.getComponentName(),null,alertState);
      alert.setLabel(entity.getLabel());
      alert.setText(alertDescription);
      alert.setTimestamp(current.getTime());
      alert.setCluster(cluster.getClusterName());
      AlertReceivedEvent event=new AlertReceivedEvent(cluster.getClusterId(),alert);
      m_alertEventPublisher.publish(event);
    }
  }
 catch (  Exception e) {
    LOG.error("Unable to run the {} alert",ALERT_DEFINITION_NAME,e);
  }
}
