@evalcontextfilter
def do_xmlattr(_eval_ctx, d, autospace=True):
    'Create an SGML/XML attribute string based on the items in a dict.\n    All values that are neither `none` nor `undefined` are automatically\n    escaped:\n\n    .. sourcecode:: html+jinja\n\n        <ul{{ {\'class\': \'my_list\', \'missing\': none,\n                \'id\': \'list-%d\'|format(variable)}|xmlattr }}>\n        ...\n        </ul>\n\n    Results in something like this:\n\n    .. sourcecode:: html\n\n        <ul class="my_list" id="list-42">\n        ...\n        </ul>\n\n    As you can see it automatically prepends a space in front of the item\n    if the filter returned something unless the second parameter is false.\n    '
    rv = u' '.join(((u'%s="%s"' % (escape(key), escape(value))) for (key, value) in d.iteritems() if ((value is not None) and (not isinstance(value, Undefined)))))
    if (autospace and rv):
        rv = (u' ' + rv)
    if _eval_ctx.autoescape:
        rv = Markup(rv)
    return rv
