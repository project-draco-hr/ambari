def do_round(value, precision=0, method='common'):
    "Round the number to a given precision. The first\n    parameter specifies the precision (default is ``0``), the\n    second the rounding method:\n\n    - ``'common'`` rounds either up or down\n    - ``'ceil'`` always rounds up\n    - ``'floor'`` always rounds down\n\n    If you don't specify a method ``'common'`` is used.\n\n    .. sourcecode:: jinja\n\n        {{ 42.55|round }}\n            -> 43.0\n        {{ 42.55|round(1, 'floor') }}\n            -> 42.5\n\n    Note that even if rounded to 0 precision, a float is returned.  If\n    you need a real integer, pipe it through `int`:\n\n    .. sourcecode:: jinja\n\n        {{ 42.55|round|int }}\n            -> 43\n    "
    if (not (method in ('common', 'ceil', 'floor'))):
        raise FilterArgumentError('method must be common, ceil or floor')
    if (method == 'common'):
        return round(value, precision)
    func = getattr(math, method)
    return (func((value * (10 ** precision))) / (10 ** precision))
