def get_property_value(dictionary, property_name, default_value=None, trim_string=False, empty_value=''):
    '\n  Get a property value from a dictionary, applying applying rules as necessary.\n\n  If dictionary does not contain a value for property_name or the value for property_name is None,\n  null_value is used as the value to return.  Then, if trim_string is True and the value is None\n  or the value is an empty string, empty_value will be return else the (current) value is returned.\n\n  Note: the property value will most likely be a string or a unicode string, however in the event\n  it is not (for example a number), this method will behave properly and return the value as is.\n\n  :param dictionary: a dictionary of values\n  :param property_name: the name of a dictionary item to retrieve\n  :param default_value: the value to use if the item is not in the dictionary or the value of the item is None\n  :param trim_string: a Boolean value indicating whether to strip whitespace from the value (True) or not (False)\n  :param empty_value: the value to use if the (current) value is None or an empty string, if trim_string is True\n  :return: the requested property value with rules applied\n  '
    if (property_name in dictionary):
        value = dictionary[property_name]
        if (value is None):
            value = default_value
    else:
        value = default_value
    if trim_string:
        if (value is None):
            value = empty_value
        elif ((type(value) == str) or (type(value) == unicode)):
            value = value.strip()
            if (len(value) == 0):
                value = empty_value
    return value
