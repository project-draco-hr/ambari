def __call__(self, cls):
    if self.base_cls:
        base_cls = self.base_cls
    else:
        base_cls = cls.__bases__[0]
    if (not hasattr(base_cls, '_impls')):
        base_cls._impls = {}
    base_cls._impls[self.os_const] = cls

    def new(cls, *args, **kwargs):
        if (OSCheck.get_os_family() in cls._impls):
            os_impl_cls = cls._impls[OSCheck.get_os_family()]
        else:
            os_impl_cls = cls._impls[OsFamilyImpl.DEFAULT]
        return object.__new__(os_impl_cls)
    base_cls.__new__ = types.MethodType(new, base_cls)
    return cls
