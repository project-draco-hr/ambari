{
  AlertDefinition aggregateDefinition=m_aggregateMapping.getAggregateDefinition(clusterId,alertName);
  if (null == aggregateDefinition || null == m_alertsDao) {
    return;
  }
  AggregateSource aggregateSource=(AggregateSource)aggregateDefinition.getSource();
  AlertSummaryDTO summary=m_alertsDao.findAggregateCounts(clusterId,aggregateSource.getAlertName());
  int okCount=summary.getOkCount() + summary.getMaintenanceCount();
  int warningCount=summary.getWarningCount();
  int criticalCount=summary.getCriticalCount();
  int unknownCount=summary.getUnknownCount();
  int totalCount=okCount + warningCount + criticalCount+ unknownCount;
  Alert aggregateAlert=new Alert(aggregateDefinition.getName(),null,aggregateDefinition.getServiceName(),null,null,AlertState.UNKNOWN);
  aggregateAlert.setLabel(aggregateDefinition.getLabel());
  aggregateAlert.setTimestamp(System.currentTimeMillis());
  try {
    aggregateAlert.setCluster(m_clusters.get().getClusterById(clusterId).getClusterName());
  }
 catch (  AmbariException exception) {
    LOG.error("Unable to lookup cluster with ID {}",clusterId,exception);
  }
  if (0 == totalCount) {
    aggregateAlert.setText("There are no instances of the aggregated alert.");
  }
 else   if (summary.getUnknownCount() > 0) {
    aggregateAlert.setText("There are alerts with a state of UNKNOWN.");
  }
 else {
    Reporting reporting=aggregateSource.getReporting();
    int numerator=summary.getCriticalCount() + summary.getWarningCount();
    int denominator=totalCount;
    double value=(double)(numerator) / denominator;
    if (value >= reporting.getCritical().getValue()) {
      aggregateAlert.setState(AlertState.CRITICAL);
      aggregateAlert.setText(MessageFormat.format(reporting.getCritical().getText(),denominator,numerator));
    }
 else     if (value >= reporting.getWarning().getValue()) {
      aggregateAlert.setState(AlertState.WARNING);
      aggregateAlert.setText(MessageFormat.format(reporting.getWarning().getText(),denominator,numerator));
    }
 else {
      aggregateAlert.setState(AlertState.OK);
      aggregateAlert.setText(MessageFormat.format(reporting.getOk().getText(),denominator,numerator));
    }
  }
  boolean sendAlertEvent=true;
  Alert cachedAlert=m_alertCache.get(aggregateAlert.getName());
  if (null != cachedAlert) {
    AlertState cachedState=cachedAlert.getState();
    AlertState alertState=aggregateAlert.getState();
    String cachedText=cachedAlert.getText();
    String alertText=aggregateAlert.getText();
    if (cachedState == alertState && StringUtils.equals(cachedText,alertText)) {
      sendAlertEvent=false;
    }
  }
  m_alertCache.put(aggregateAlert.getName(),aggregateAlert);
  if (sendAlertEvent) {
    AlertReceivedEvent aggEvent=new AlertReceivedEvent(clusterId,aggregateAlert);
    m_publisher.publish(aggEvent);
  }
}
