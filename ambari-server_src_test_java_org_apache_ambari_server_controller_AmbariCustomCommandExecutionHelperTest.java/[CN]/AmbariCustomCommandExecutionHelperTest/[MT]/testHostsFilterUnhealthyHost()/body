{
  try {
    createClusterFixture();
    clusters.getHost("c6402").setState(HostState.HEARTBEAT_LOST);
    Map<String,String> requestProperties=new HashMap<String,String>(){
{
        put("context","Restart all components for GANGLIA");
        put("operation_level/level","SERVICE");
        put("operation_level/service_name","GANGLIA");
        put("operation_level/cluster_name","c1");
      }
    }
;
    ExecuteActionRequest actionRequest=new ExecuteActionRequest("c1","RESTART",null,Arrays.asList(new RequestResourceFilter("GANGLIA","GANGLIA_SERVER",Collections.singletonList("c6401")),new RequestResourceFilter("GANGLIA","GANGLIA_MONITOR",Collections.singletonList("c6401")),new RequestResourceFilter("GANGLIA","GANGLIA_MONITOR",Collections.singletonList("c6402"))),new RequestOperationLevel(Resource.Type.Service,"c1","GANGLIA",null,null),new HashMap<String,String>(){
{
      }
    }
,false);
    controller.createAction(actionRequest,requestProperties);
    Mockito.verify(am,Mockito.times(1)).sendActions(stagesCaptor.capture(),any(ExecuteActionRequest.class));
    List<Stage> stages=stagesCaptor.getValue();
    Assert.assertEquals(1,stages.size());
    Stage stage=stages.get(0);
    Assert.assertEquals(1,stage.getHostRoleCommands().size());
  }
 catch (  Exception e) {
    Assert.fail(e.getMessage());
  }
}
