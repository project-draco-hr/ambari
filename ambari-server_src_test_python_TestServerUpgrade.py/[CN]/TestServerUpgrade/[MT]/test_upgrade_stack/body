@patch('ambari_server.serverUpgrade.run_os_command')
@patch('ambari_server.serverUpgrade.get_java_exe_path')
@patch('ambari_server.serverConfiguration.get_ambari_properties')
@patch('ambari_server.serverUpgrade.get_ambari_properties')
@patch('ambari_server.serverUpgrade.check_database_name_property')
@patch('ambari_server.serverUpgrade.is_root')
def test_upgrade_stack(self, is_root_mock, c_d_n_p_mock, up_g_a_p_mock, server_g_a_p_mock, java_path_mock, run_os_mock):
    run_os_mock.return_value = (0, '', '')
    java_path_mock.return_value = ''
    is_root_mock.return_value = True

    def do_nothing():
        pass
    c_d_n_p_mock.side_effect = do_nothing
    p = ambari_server.properties.Properties()
    p._props = {ambari_server.serverConfiguration.JDBC_DATABASE_PROPERTY: 'mysql', ambari_server.serverConfiguration.JDBC_DATABASE_NAME_PROPERTY: 'ambari', }
    up_g_a_p_mock.side_effect = [p, p]
    server_g_a_p_mock.side_effect = [p]
    args = ['upgrade_stack', 'HDP-2.3']
    upgrade_stack(args)
    self.assertTrue(run_os_mock.called)
    command = run_os_mock.call_args_list[0][0][0]
    self.assertTrue((('StackUpgradeHelper' in command) and ('HDP' in command) and ('2.3' in command)))
