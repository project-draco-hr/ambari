def update_zeppelin_interpreter(self):
    import params
    import json
    interpreter_config = (params.conf_dir + '/interpreter.json')
    interpreter_config_file = open(interpreter_config, 'r')
    config_data = json.load(interpreter_config_file)
    interpreter_config_file.close()
    interpreter_settings = config_data['interpreterSettings']
    for notebooks in interpreter_settings:
        notebook = interpreter_settings[notebooks]
        if ((notebook['group'] == 'jdbc') and params.hive_server_host):
            notebook['properties']['default.url'] = ((('jdbc:hive2://' + params.hive_server_host) + ':') + params.hive_server_port)
            notebook['properties']['default.driver'] = 'org.apache.hive.jdbc.HiveDriver'
            notebook['dependencies'] = []
            notebook['dependencies'].append({'groupArtifactVersion': 'org.apache.hive:hive-jdbc:2.0.1', 'local': 'false', })
            notebook['dependencies'].append({'groupArtifactVersion': 'org.apache.hadoop:hadoop-common:2.7.2', 'local': 'false', })
        elif ((notebook['group'] == 'phoenix') and params.zookeeper_znode_parent and params.hbase_zookeeper_quorum):
            notebook['properties']['phoenix.jdbc.url'] = ((('jdbc:phoenix:' + params.hbase_zookeeper_quorum) + ':') + params.zookeeper_znode_parent)
        elif ((notebook['group'] == 'livy') and params.livy_livyserver_host):
            notebook['properties']['livy.spark.master'] = 'yarn-cluster'
            notebook['properties']['zeppelin.livy.principal'] = params.zeppelin_kerberos_principal
            notebook['properties']['zeppelin.livy.keytab'] = params.zeppelin_kerberos_keytab
            notebook['properties']['zeppelin.livy.url'] = ((('http://' + params.livy_livyserver_host) + ':') + params.livy_livyserver_port)
        elif (notebook['group'] == 'spark'):
            notebook['properties']['master'] = 'yarn-cluster'
            notebook['properties']['spark.yarn.principal'] = params.zeppelin_kerberos_principal
            notebook['properties']['spark.yarn.keytab'] = params.zeppelin_kerberos_keytab
    interpreter_config_file = open(interpreter_config, 'w+')
    interpreter_config_file.write(json.dumps(config_data, indent=2))
    interpreter_config_file.close()
