def start(self, env):
    import params
    import status_params
    self.configure(env)
    if (glob.glob((params.zeppelin_dir + '/interpreter/spark/dep/zeppelin-spark-dependencies-*.jar')) and os.path.exists(glob.glob((params.zeppelin_dir + '/interpreter/spark/dep/zeppelin-spark-dependencies-*.jar'))[0])):
        self.create_zeppelin_dir(params)
    Execute(((params.zeppelin_dir + '/bin/zeppelin-daemon.sh start >> ') + params.zeppelin_log_file), user=params.zeppelin_user)
    pidfile = glob.glob((((status_params.zeppelin_pid_dir + '/zeppelin-') + params.zeppelin_user) + '*.pid'))[0]
    Execute(('echo pid file is: ' + pidfile), user=params.zeppelin_user)
    contents = open(pidfile).read()
    Execute(('echo pid is ' + contents), user=params.zeppelin_user)
    import time
    time.sleep(20)
    self.update_zeppelin_interpreter()
