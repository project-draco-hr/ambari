def start(self, env, upgrade_type=None):
    import params
    import status_params
    import time
    self.configure(env)
    Execute(('chown', '-R', ((format('{zeppelin_user}') + ':') + format('{zeppelin_group}')), '/etc/zeppelin'), sudo=True)
    Execute(('chown', '-R', ((format('{zeppelin_user}') + ':') + format('{zeppelin_group}')), os.path.join(params.zeppelin_dir, 'notebook')), sudo=True)
    if params.security_enabled:
        zeppelin_kinit_cmd = format('{kinit_path_local} -kt {zeppelin_kerberos_keytab} {zeppelin_kerberos_principal}; ')
        Execute(zeppelin_kinit_cmd, user=params.zeppelin_user)
    if (glob.glob((params.zeppelin_dir + '/interpreter/spark/dep/zeppelin-spark-dependencies-*.jar')) and os.path.exists(glob.glob((params.zeppelin_dir + '/interpreter/spark/dep/zeppelin-spark-dependencies-*.jar'))[0])):
        self.create_zeppelin_dir(params)
    if ((not glob.glob((params.conf_dir + '/interpreter.json'))) and (not os.path.exists((params.conf_dir + '/interpreter.json')))):
        Execute(((params.zeppelin_dir + '/bin/zeppelin-daemon.sh start >> ') + params.zeppelin_log_file), user=params.zeppelin_user)
        time.sleep(20)
        self.update_zeppelin_interpreter()
    self.update_kerberos_properties()
    Execute(((params.zeppelin_dir + '/bin/zeppelin-daemon.sh restart >> ') + params.zeppelin_log_file), user=params.zeppelin_user)
    pidfile = glob.glob(os.path.join(status_params.zeppelin_pid_dir, (('zeppelin-' + params.zeppelin_user) + '*.pid')))[0]
    Logger.info(format('Pid file is: {pidfile}'))
