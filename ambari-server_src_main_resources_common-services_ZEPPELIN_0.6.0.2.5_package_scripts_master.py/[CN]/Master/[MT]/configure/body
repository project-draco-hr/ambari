def configure(self, env):
    import params
    import status_params
    env.set_params(params)
    env.set_params(status_params)
    self.create_zeppelin_log_dir(env)
    XmlConfig('zeppelin-site.xml', conf_dir=params.conf_dir, configurations=params.config['configurations']['zeppelin-config'], owner=params.zeppelin_user, group=params.zeppelin_group)
    env_content = InlineTemplate(params.zeppelin_env_content)
    File(format('{params.conf_dir}/zeppelin-env.sh'), content=env_content, owner=params.zeppelin_user, group=params.zeppelin_group)
    shiro_ini_content = InlineTemplate(params.shiro_ini_content)
    File(format('{params.conf_dir}/shiro.ini'), content=shiro_ini_content, owner=params.zeppelin_user, group=params.zeppelin_group)
    File(format('{params.conf_dir}/log4j.properties'), content=params.log4j_properties_content, owner=params.zeppelin_user, group=params.zeppelin_group)
    hive_site_xml_content = open('/etc/spark/conf/hive-site.xml').read()
    File(format('{params.conf_dir}/hive-site.xml'), content=hive_site_xml_content, owner=params.zeppelin_user, group=params.zeppelin_group)
    if (len(params.hbase_master_hosts) > 0):
        hbase_site_xml_content = open('/etc/hbase/conf/hbase-site.xml').read()
        File(format('{params.conf_dir}/hbase-site.xml'), content=hbase_site_xml_content, owner=params.zeppelin_user, group=params.zeppelin_group)
