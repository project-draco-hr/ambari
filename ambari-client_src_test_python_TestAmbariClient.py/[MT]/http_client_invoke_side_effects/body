def http_client_invoke_side_effects(*args, **kwargs):
    print locals()
    mocked_code = '200'
    mocked_content = 'text/plain'
    if (args[1] == '//clusters/test1'):
        mocked_response = open('json/get_cluster.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
    elif (args[1] == '//hosts'):
        mocked_response = open('json/get_all_hosts.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
    elif (args[1] == '//clusters/test6/hosts/r01wn01'):
        mocked_response = open('json/get_cluster_host.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
    elif (args[1] == '//clusters/test6/hosts?fields=*'):
        mocked_response = open('json/get_cluster_hosts.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
    elif (args[1] == '//clusters/test6/services/GANGLIA'):
        mocked_response = open('json/get_cluster_service.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
    elif (args[1] == '//clusters/test1/services?fields=*'):
        mocked_response = open('json/get_cluster_services.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
    elif (args[1] == '//clusters/test6/hosts/r01wn01/host_components/NAMENODE'):
        mocked_response = open('json/get_host_component.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
    elif (args[1] == '//clusters/test6/hosts/r01wn01/host_components?ServiceComponentInfo'):
        mocked_response = open('json/get_host_components.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
    elif (args[1] == '//clusters/test6/services/GANGLIA/components/GANGLIA_MONITOR'):
        mocked_response = open('json/get_service_component.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
    elif (args[1] == '//clusters/test6/services/GANGLIA/components?fields=*'):
        mocked_response = open('json/get_service_components.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
    elif (args[1] == '//clusters/test1/services/GANGLIA'):
        mocked_response = open('json/get_service.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
    elif (args[1] == '//clusters/test1/hosts/deleted_nonexistant_cluster'):
        mocked_response = open('json/error_adding_host.json', 'r').read()
        return (mocked_response, mocked_code, mocked_content)
