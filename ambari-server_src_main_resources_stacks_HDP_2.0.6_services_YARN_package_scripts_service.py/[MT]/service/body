def service(componentName, action='start', serviceName='yarn'):
    import params
    if ((serviceName == 'mapreduce') and (componentName == 'historyserver')):
        daemon = format('{mapred_bin}/mr-jobhistory-daemon.sh')
        pid_file = format('{mapred_pid_dir}/mapred-{mapred_user}-{componentName}.pid')
        usr = params.mapred_user
    else:
        daemon = format('{yarn_bin}/yarn-daemon.sh')
        pid_file = format('{yarn_pid_dir}/yarn-{yarn_user}-{componentName}.pid')
        usr = params.yarn_user
    cmd = format('export HADOOP_LIBEXEC_DIR={hadoop_libexec_dir} && {daemon} --config {hadoop_conf_dir}')
    if (action == 'start'):
        daemon_cmd = format('{ulimit_cmd} {cmd} start {componentName}')
        check_process = format('ls {pid_file} >/dev/null 2>&1 && ps `cat {pid_file}` >/dev/null 2>&1')
        File(pid_file, action='delete', not_if=check_process)
        Execute(daemon_cmd, user=usr, not_if=check_process)
        Execute(check_process, user=usr, not_if=check_process, initial_wait=5)
    elif (action == 'stop'):
        daemon_cmd = format('{cmd} stop {componentName}')
        Execute(daemon_cmd, user=usr)
        File(pid_file, action='delete')
    elif (action == 'refreshQueues'):
        refresh_cmd = format('export HADOOP_LIBEXEC_DIR={hadoop_libexec_dir} && {yarn_container_bin}/yarn rmadmin -refreshQueues')
        Execute(refresh_cmd, user=usr)
