{
  PrivilegeEntity entity=new PrivilegeEntity();
  String permissionName=(String)properties.get(PERMISSION_NAME_PROPERTY_ID);
  ResourceEntity resourceEntity=resourceDAO.findById(resourceId);
  PermissionEntity permission=getPermission(permissionName,resourceEntity);
  if (permission == null) {
    throw new AmbariException("Can't find a permission named " + permissionName + " for the resource.");
  }
  entity.setPermission(permission);
  entity.setResource(resourceEntity);
  String principalName=(String)properties.get(PRINCIPAL_NAME_PROPERTY_ID);
  String principalType=(String)properties.get(PRINCIPAL_TYPE_PROPERTY_ID);
  if (PrincipalTypeEntity.GROUP_PRINCIPAL_TYPE_NAME.equalsIgnoreCase(principalType)) {
    GroupEntity groupEntity=groupDAO.findGroupByName(principalName);
    if (groupEntity != null) {
      entity.setPrincipal(principalDAO.findById(groupEntity.getPrincipal().getId()));
    }
  }
 else   if (PrincipalTypeEntity.USER_PRINCIPAL_TYPE_NAME.equalsIgnoreCase(principalType)) {
    UserEntity userEntity=userDAO.findUserByName(principalName);
    if (userEntity != null) {
      entity.setPrincipal(principalDAO.findById(userEntity.getPrincipal().getId()));
    }
  }
 else {
    throw new AmbariException("Unknown principal type " + principalType);
  }
  if (entity.getPrincipal() == null) {
    throw new AmbariException("Could not find " + principalType + " named "+ principalName);
  }
  return entity;
}
