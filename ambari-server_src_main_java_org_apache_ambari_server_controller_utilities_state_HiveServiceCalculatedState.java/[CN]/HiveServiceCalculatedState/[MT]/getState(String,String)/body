{
  try {
    Cluster cluster=getCluster(clusterName);
    if (cluster != null && managementControllerProvider != null) {
      AmbariMetaInfo ambariMetaInfo=managementControllerProvider.get().getAmbariMetaInfo();
      StackId stackId=cluster.getDesiredStackVersion();
      ServiceComponentHostRequest request=new ServiceComponentHostRequest(clusterName,serviceName,null,null,null);
      Set<ServiceComponentHostResponse> hostComponentResponses=managementControllerProvider.get().getHostComponents(Collections.singleton(request));
      int activeHiveMetastoreComponentCount=0;
      State nonStartedState=null;
      boolean embeddedMysqlComponentExists=false;
      boolean hiveServerComponentStarted=false;
      boolean webHcatComponentStarted=false;
      boolean mysqlComponentStarted=false;
      for (      ServiceComponentHostResponse hostComponentResponse : hostComponentResponses) {
        try {
          ComponentInfo componentInfo=ambariMetaInfo.getComponent(stackId.getStackName(),stackId.getStackVersion(),hostComponentResponse.getServiceName(),hostComponentResponse.getComponentName());
          if (componentInfo.isMaster()) {
            State state=getHostComponentState(hostComponentResponse);
            String componentName=hostComponentResponse.getComponentName();
            if (componentName.equals("MYSQL_SERVER")) {
              embeddedMysqlComponentExists=true;
            }
switch (state) {
case STARTED:
case DISABLED:
              if (componentName.equals("HIVE_METASTORE")) {
                ++activeHiveMetastoreComponentCount;
              }
 else               if (componentName.equals("HIVE_SERVER")) {
                hiveServerComponentStarted=true;
              }
 else               if (componentName.equals("MYSQL_SERVER")) {
                mysqlComponentStarted=true;
              }
 else               if (componentName.equals("WEBHCAT_SERVER")) {
                webHcatComponentStarted=true;
              }
            break;
default :
          nonStartedState=state;
      }
    }
  }
 catch (  ObjectNotFoundException e) {
  }
}
if (nonStartedState == null || (hiveServerComponentStarted && webHcatComponentStarted && activeHiveMetastoreComponentCount > 0 && (embeddedMysqlComponentExists ? mysqlComponentStarted : true))) {
  return State.STARTED;
}
return nonStartedState == null ? State.INSTALLED : nonStartedState;
}
}
 catch (AmbariException e) {
LOG.error("Can't determine service state.",e);
}
return State.UNKNOWN;
}
