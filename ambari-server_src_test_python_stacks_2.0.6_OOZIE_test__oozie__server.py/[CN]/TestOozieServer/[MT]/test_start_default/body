@patch('os.path.isfile')
def test_start_default(self, isfile_mock):
    isfile_mock.return_value = True
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/oozie_server.py'), classname='OozieServer', command='start', config_file='default.json', hdp_stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    self.assert_configure_default()
    self.assertResourceCalled('Execute', 'cd /var/tmp/oozie && /usr/lib/oozie/bin/ooziedb.sh create -sqlfile oozie.sql -run', not_if='ls /var/run/oozie/oozie.pid >/dev/null 2>&1 && ps -p `cat /var/run/oozie/oozie.pid` >/dev/null 2>&1', ignore_failures=True, user='oozie')
    self.assertResourceCalled('Execute', 'hadoop --config /etc/hadoop/conf dfs -put /usr/lib/oozie/share /user/oozie', path=['/usr/bin:/usr/bin'], user='oozie')
    self.assertResourceCalled('HdfsResource', '/user/oozie/share', security_enabled=False, hadoop_bin_dir='/usr/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', user='hdfs', hdfs_site=self.getConfig()['configurations']['hdfs-site'], kinit_path_local='/usr/bin/kinit', principal_name=UnknownConfigurationMock(), recursive_chmod=True, action=['create_on_execute'], hadoop_conf_dir='/etc/hadoop/conf', type='directory', mode=493)
    self.assertResourceCalled('HdfsResource', None, security_enabled=False, hadoop_bin_dir='/usr/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', hdfs_site=self.getConfig()['configurations']['hdfs-site'], kinit_path_local='/usr/bin/kinit', principal_name=UnknownConfigurationMock(), user='hdfs', action=['execute'], hadoop_conf_dir='/etc/hadoop/conf')
    self.assertResourceCalled('Execute', 'cd /var/tmp/oozie && /usr/lib/oozie/bin/oozie-start.sh', environment={'OOZIE_CONFIG': '/etc/oozie/conf', }, not_if='ls /var/run/oozie/oozie.pid >/dev/null 2>&1 && ps -p `cat /var/run/oozie/oozie.pid` >/dev/null 2>&1', user='oozie')
    self.assertNoMoreResources()
