{
  Set<Map<String,Object>> propertyMaps=getPropertyMaps(predicate);
  for (  Map<String,Object> propertyMap : propertyMaps) {
    try {
      String clusterName=(String)propertyMap.get(ALERT_NOTICE_CLUSTER_NAME);
      Long clusterResourceId=(StringUtils.isEmpty(clusterName)) ? null : getClusterResourceId(clusterName);
      String serviceName=(String)propertyMap.get(ALERT_NOTICE_SERVICE_NAME);
      if (clusterResourceId == null) {
        clusterResourceId=-1L;
      }
      AlertResourceProviderUtils.verifyViewAuthorization(serviceName,clusterResourceId);
    }
 catch (    AmbariException e) {
      throw new SystemException(e.getMessage(),e);
    }
  }
  Set<String> requestPropertyIds=getRequestPropertyIds(request,predicate);
  Set<Resource> results=new LinkedHashSet<Resource>();
  AlertNoticeRequest noticeRequest=new AlertNoticeRequest();
  noticeRequest.Predicate=predicate;
  noticeRequest.Pagination=request.getPageRequest();
  noticeRequest.Sort=request.getSortRequest();
  List<AlertNoticeEntity> entities=s_dao.findAllNotices(noticeRequest);
  for (  AlertNoticeEntity entity : entities) {
    results.add(toResource(entity,requestPropertyIds));
  }
  return results;
}
