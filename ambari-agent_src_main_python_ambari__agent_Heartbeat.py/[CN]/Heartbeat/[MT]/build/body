def build(self, id='-1', state_interval=(-1), componentsMapped=False):
    global clusterId, clusterDefinitionRevision, firstContact
    timestamp = int((time.time() * 1000))
    queueResult = self.actionQueue.result()
    nodeStatus = {'status': 'HEALTHY', 'cause': 'NONE', }
    heartbeat = {'responseId': int(id), 'timestamp': timestamp, 'hostname': hostname.hostname(), 'nodeStatus': nodeStatus, }
    commandsInProgress = False
    if (not self.actionQueue.commandQueue.empty()):
        commandsInProgress = True
    if (len(queueResult) != 0):
        heartbeat['reports'] = queueResult['reports']
        heartbeat['componentStatus'] = queueResult['componentStatus']
        if (len(heartbeat['reports']) > 0):
            commandsInProgress = True
        pass
    if (int(id) == 0):
        componentsMapped = False
    logger.info(((((((('Sending heartbeat with response id: ' + str(id)) + ' and timestamp: ') + str(timestamp)) + '. Command(s) in progress: ') + repr(commandsInProgress)) + '. Components mapped: ') + repr(componentsMapped)))
    logger.debug(('Heartbeat : ' + pformat(heartbeat)))
    if ((int(id) >= 0) and (state_interval > 0) and ((int(id) % state_interval) == 0)):
        hostInfo = HostInfo(self.config)
        nodeInfo = {}
        hostInfo.register(nodeInfo, componentsMapped, commandsInProgress)
        heartbeat['agentEnv'] = nodeInfo
        logger.debug(('agentEnv : ' + str(nodeInfo)))
        mounts = Hardware.osdisks()
        heartbeat['mounts'] = mounts
        logger.debug(('mounts : ' + str(mounts)))
    return heartbeat
