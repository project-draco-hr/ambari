{
  HostEventCreator creator=new HostEventCreator();
  Map<String,Object> properties=new HashMap<>();
  Set<Map<String,String>> set=new HashSet<>();
  Map<String,String> map=new HashMap<>();
  map.put(HostComponentResourceProvider.HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID,"MYCOMPONENT");
  set.add(map);
  properties.put("host_components",set);
  Request request=AuditEventCreatorTestHelper.createRequest(Request.Type.QUERY_POST,Resource.Type.Host,properties,null,HostResourceProvider.HOST_NAME_PROPERTY_ID + "=ambari1.example.com");
  Result result=AuditEventCreatorTestHelper.createResult(new ResultStatus(ResultStatus.STATUS.OK));
  AuditEvent event=AuditEventCreatorTestHelper.getEvent(creator,request,result);
  String actual=event.getAuditMessage();
  String expected="User(" + userName + "), RemoteIp(1.2.3.4), Operation(Component addition to host), RequestType(QUERY_POST), url(http://example.com:8080/api/v1/testHosts/host_name=ambari1.example.com), ResultStatus(200 OK), Hostname(ambari1.example.com), Component(MYCOMPONENT)";
  Assert.assertTrue("Class mismatch",event instanceof AddComponentToHostRequestAuditEvent);
  Assert.assertEquals(expected,actual);
  Assert.assertTrue(actual.contains(userName));
}
