{
  tmpFolder.create();
  final File masterKeyFile=tmpFolder.newFile(Configuration.MASTER_KEY_FILENAME_DEFAULT);
  Assert.assertTrue(MasterKeyServiceImpl.initializeMasterKeyFile(masterKeyFile,"secret"));
  Injector injector=Guice.createInjector(new AbstractModule(){
    @Override protected void configure(){
      Properties properties=new Properties();
      properties.setProperty(Configuration.MASTER_KEY_LOCATION.getKey(),tmpFolder.getRoot().getAbsolutePath());
      properties.setProperty(Configuration.MASTER_KEYSTORE_LOCATION.getKey(),tmpFolder.getRoot().getAbsolutePath());
      bind(OsFamily.class).toInstance(createNiceMock(OsFamily.class));
      bind(SecurePasswordHelper.class).toInstance(new SecurePasswordHelper());
      bind(Configuration.class).toInstance(new Configuration(properties));
    }
  }
);
  MasterKeyService masterKeyService=new MasterKeyServiceImpl(masterKeyFile);
  Assert.assertTrue(masterKeyService.isMasterKeyInitialized());
  credentialStoreService=injector.getInstance(CredentialStoreServiceImpl.class);
}
