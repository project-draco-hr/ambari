{
  if (jsonString != null) {
    JsonElement requestContent=new JsonParser().parse(jsonString);
    if (requestContent != null && appId != null) {
      JsonObject requestJson=requestContent.getAsJsonObject();
      if (requestJson.has("state")) {
        String newState=requestJson.get("state").getAsString();
        if ("FROZEN".equals(newState)) {
          sliderAppsViewController.freezeApp(appId);
          return Response.ok().build();
        }
 else         if ("RUNNING".equals(newState)) {
          sliderAppsViewController.thawApp(appId);
          return Response.ok().build();
        }
      }
 else       if (requestJson.has("components")) {
        Map<String,Integer> componentsMap=new HashMap<String,Integer>();
        JsonObject componentsJson=requestJson.get("components").getAsJsonObject();
        for (        Entry<String,JsonElement> e : componentsJson.entrySet()) {
          String componentName=e.getKey();
          int instanceCount=e.getValue().getAsJsonObject().get("instanceCount").getAsInt();
          componentsMap.put(componentName,instanceCount);
        }
        sliderAppsViewController.flexApp(appId,componentsMap);
        return Response.ok().build();
      }
    }
    String sliderApp=sliderAppsViewController.createSliderApp(requestContent.getAsJsonObject());
    if (sliderApp != null)     return Response.created(new URI(uri.getAbsolutePath() + sliderApp)).build();
  }
  logger.warn("No request content sent to create app");
  return Response.status(Response.Status.BAD_REQUEST).build();
}
