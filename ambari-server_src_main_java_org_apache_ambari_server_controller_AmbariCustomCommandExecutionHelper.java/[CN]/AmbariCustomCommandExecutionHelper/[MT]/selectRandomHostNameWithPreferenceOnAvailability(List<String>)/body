{
  if (null == candidateHostNames || candidateHostNames.isEmpty()) {
    return null;
  }
  if (candidateHostNames.size() == 1) {
    return candidateHostNames.get(0);
  }
  List<String> hostsWithZeroCommands=new ArrayList<>();
  List<String> hostsWithInProgressCommands=new ArrayList<>();
  Map<Long,Integer> hostIdToCount=hostRoleCommandDAO.getHostIdToCountOfCommandsWithStatus(HostRoleStatus.IN_PROGRESS_STATUSES);
  for (  String hostName : candidateHostNames) {
    Host host=clusters.getHost(hostName);
    if (hostIdToCount.containsKey(host.getHostId()) && hostIdToCount.get(host.getHostId()) > 0) {
      hostsWithInProgressCommands.add(hostName);
    }
 else {
      hostsWithZeroCommands.add(hostName);
    }
  }
  List<String> preferredList=!hostsWithZeroCommands.isEmpty() ? hostsWithZeroCommands : hostsWithInProgressCommands;
  if (!preferredList.isEmpty()) {
    int randomIndex=new Random().nextInt(preferredList.size());
    return preferredList.get(randomIndex);
  }
  return null;
}
