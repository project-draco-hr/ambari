{
  List<RequestResourceFilter> resourceFilters=actionExecutionContext.getResourceFilters();
  for (  RequestResourceFilter resourceFilter : resourceFilters) {
    LOG.debug("Received a command execution request" + ", clusterName=" + actionExecutionContext.getClusterName() + ", serviceName="+ resourceFilter.getServiceName()+ ", request="+ actionExecutionContext.toString());
    if (actionExecutionContext.getActionName().contains(SERVICE_CHECK_COMMAND_NAME)) {
      findHostAndAddServiceCheckAction(actionExecutionContext,resourceFilter,stage,hostLevelParams);
    }
 else     if (actionExecutionContext.getActionName().equals(DECOMMISSION_COMMAND_NAME)) {
      addDecommissionAction(actionExecutionContext,resourceFilter,stage,hostLevelParams);
    }
 else     if (isValidCustomCommand(actionExecutionContext,resourceFilter)) {
      String commandDetail=getReadableCustomCommandDetail(actionExecutionContext,resourceFilter);
      Map<String,String> extraParams=null;
      String componentName=(null == resourceFilter.getComponentName()) ? null : resourceFilter.getComponentName().toLowerCase();
      if (null != componentName && requestParams.containsKey(componentName)) {
        extraParams=new HashMap<String,String>();
        extraParams.put(componentName,requestParams.get(componentName));
      }
      addCustomCommandAction(actionExecutionContext,resourceFilter,stage,hostLevelParams,extraParams,commandDetail);
    }
 else {
      throw new AmbariException("Unsupported action " + actionExecutionContext.getActionName());
    }
  }
}
