{
  StackId stackId=cluster.getDesiredStackVersion();
  TreeMap<String,String> hostLevelParams=new TreeMap<String,String>();
  hostLevelParams.put(JDK_LOCATION,managementController.getJdkResourceUrl());
  hostLevelParams.put(JAVA_HOME,managementController.getJavaHome());
  hostLevelParams.put(JAVA_VERSION,String.valueOf(configs.getJavaVersion()));
  hostLevelParams.put(JDK_NAME,managementController.getJDKName());
  hostLevelParams.put(JCE_NAME,managementController.getJCEName());
  hostLevelParams.put(STACK_NAME,stackId.getStackName());
  hostLevelParams.put(STACK_VERSION,stackId.getStackVersion());
  hostLevelParams.put(DB_NAME,managementController.getServerDB());
  hostLevelParams.put(MYSQL_JDBC_URL,managementController.getMysqljdbcUrl());
  hostLevelParams.put(ORACLE_JDBC_URL,managementController.getOjdbcUrl());
  hostLevelParams.put(DB_DRIVER_FILENAME,configs.getMySQLJarName());
  hostLevelParams.putAll(managementController.getRcaParameters());
  hostLevelParams.put(HOST_SYS_PREPPED,configs.areHostsSysPrepped());
  ClusterVersionEntity clusterVersionEntity=clusterVersionDAO.findByClusterAndStateCurrent(cluster.getClusterName());
  if (clusterVersionEntity == null) {
    List<ClusterVersionEntity> clusterVersionEntityList=clusterVersionDAO.findByClusterAndState(cluster.getClusterName(),RepositoryVersionState.UPGRADING);
    if (!clusterVersionEntityList.isEmpty()) {
      clusterVersionEntity=clusterVersionEntityList.iterator().next();
    }
  }
  if (clusterVersionEntity != null) {
    hostLevelParams.put("current_version",clusterVersionEntity.getRepositoryVersion().getVersion());
  }
  return hostLevelParams;
}
