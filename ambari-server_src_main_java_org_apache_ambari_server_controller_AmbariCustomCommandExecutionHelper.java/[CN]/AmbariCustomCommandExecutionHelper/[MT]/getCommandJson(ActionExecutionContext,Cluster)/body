{
  Map<String,String> commandParamsStage=StageUtils.getCommandParamsStage(actionExecContext);
  Map<String,String> hostParamsStage=new HashMap<String,String>();
  Map<String,Set<String>> clusterHostInfo;
  String clusterHostInfoJson="{}";
  if (null != cluster) {
    clusterHostInfo=StageUtils.getClusterHostInfo(cluster);
    hostParamsStage=createDefaultHostParams(cluster);
    StackId stackId=cluster.getDesiredStackVersion();
    String componentName=null;
    String serviceName=null;
    if (actionExecContext.getOperationLevel() != null) {
      componentName=actionExecContext.getOperationLevel().getHostComponentName();
      serviceName=actionExecContext.getOperationLevel().getServiceName();
    }
    if (serviceName != null && componentName != null) {
      ComponentInfo componentInfo=ambariMetaInfo.getComponent(stackId.getStackName(),stackId.getStackVersion(),serviceName,componentName);
      List<String> clientsToUpdateConfigsList=componentInfo.getClientsToUpdateConfigs();
      if (clientsToUpdateConfigsList == null) {
        clientsToUpdateConfigsList=new ArrayList<String>();
        clientsToUpdateConfigsList.add("*");
      }
      String clientsToUpdateConfigs=gson.toJson(clientsToUpdateConfigsList);
      hostParamsStage.put(CLIENTS_TO_UPDATE_CONFIGS,clientsToUpdateConfigs);
    }
    clusterHostInfoJson=StageUtils.getGson().toJson(clusterHostInfo);
  }
  String hostParamsStageJson=StageUtils.getGson().toJson(hostParamsStage);
  String commandParamsStageJson=StageUtils.getGson().toJson(commandParamsStage);
  return new ExecuteCommandJson(clusterHostInfoJson,commandParamsStageJson,hostParamsStageJson);
}
