{
  Resource.Type type=Resource.Type.Configuration;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  Set<ConfigurationResponse> allResponse=new HashSet<ConfigurationResponse>();
  allResponse.add(new ConfigurationResponse("Cluster100","type","tag1",null));
  allResponse.add(new ConfigurationResponse("Cluster100","type","tag2",null));
  allResponse.add(new ConfigurationResponse("Cluster100","type","tag3",null));
  expect(managementController.getConfigurations(AbstractResourceProviderTest.Matcher.getConfigurationRequestSet("Cluster100",null,null,Collections.<String,String>emptyMap()))).andReturn(allResponse).once();
  replay(managementController);
  ResourceProvider provider=AbstractResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  Set<String> propertyIds=new HashSet<String>();
  propertyIds.add(ConfigurationResourceProvider.CONFIGURATION_CLUSTER_NAME_PROPERTY_ID);
  propertyIds.add(ConfigurationResourceProvider.CONFIGURATION_CONFIG_TAG_PROPERTY_ID);
  Predicate predicate=new PredicateBuilder().property(ConfigurationResourceProvider.CONFIGURATION_CLUSTER_NAME_PROPERTY_ID).equals("Cluster100").toPredicate();
  Request request=PropertyHelper.getReadRequest(propertyIds);
  Set<Resource> resources=provider.getResources(request,predicate);
  Assert.assertEquals(3,resources.size());
  Set<String> tags=new HashSet<String>();
  for (  Resource resource : resources) {
    String clusterName=(String)resource.getPropertyValue(ConfigurationResourceProvider.CONFIGURATION_CLUSTER_NAME_PROPERTY_ID);
    Assert.assertEquals("Cluster100",clusterName);
    tags.add((String)resource.getPropertyValue(ConfigurationResourceProvider.CONFIGURATION_CONFIG_TAG_PROPERTY_ID));
  }
  for (  ConfigurationResponse response : allResponse) {
    Assert.assertTrue(tags.contains(response.getVersionTag()));
  }
  verify(managementController);
}
