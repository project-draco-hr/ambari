{
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  RequestStatusResponse response=createNiceMock(RequestStatusResponse.class);
  managementController.createConfiguration(AbstractResourceProviderTest.Matcher.getConfigurationRequest("Cluster100","type","tag",new HashMap<String,String>(){
{
      put("a","b");
    }
  }
,new HashMap<String,Map<String,String>>(){
{
      put("final",new HashMap<String,String>(){
{
          put("a","true");
        }
      }
);
    }
  }
));
  expectLastCall().andReturn(null);
  replay(managementController,response);
  ConfigurationResourceProvider provider=new ConfigurationResourceProvider(PropertyHelper.getPropertyIds(Resource.Type.Configuration),PropertyHelper.getKeyPropertyIds(Resource.Type.Configuration),managementController);
  Set<Map<String,Object>> propertySet=new LinkedHashSet<Map<String,Object>>();
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put(ConfigurationResourceProvider.CONFIGURATION_CLUSTER_NAME_PROPERTY_ID,"Cluster100");
  properties.put(ConfigurationResourceProvider.CONFIGURATION_CONFIG_TAG_PROPERTY_ID,"tag");
  properties.put(ConfigurationResourceProvider.CONFIGURATION_CONFIG_TYPE_PROPERTY_ID,"type");
  properties.put("properties/a","b");
  properties.put("properties_attributes/final/a","true");
  propertySet.add(properties);
  Request request=PropertyHelper.getCreateRequest(propertySet,null);
  provider.createResources(request);
  verify(managementController,response);
}
