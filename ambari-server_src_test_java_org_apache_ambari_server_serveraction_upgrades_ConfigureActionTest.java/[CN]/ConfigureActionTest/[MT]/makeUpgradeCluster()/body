{
  String clusterName="c1";
  String hostName="h1";
  Clusters clusters=m_injector.getInstance(Clusters.class);
  clusters.addCluster(clusterName,HDP_220_STACK);
  StackDAO stackDAO=m_injector.getInstance(StackDAO.class);
  StackEntity stackEntity=stackDAO.find(HDP_220_STACK.getStackName(),HDP_220_STACK.getStackVersion());
  assertNotNull(stackEntity);
  Cluster c=clusters.getCluster(clusterName);
  c.setDesiredStackVersion(HDP_220_STACK);
  installService(c,"ZOOKEEPER");
  ConfigFactory cf=m_injector.getInstance(ConfigFactory.class);
  Config config=cf.createNew(c,"zoo.cfg",new HashMap<String,String>(){
{
      put("initLimit","10");
    }
  }
,new HashMap<String,Map<String,String>>());
  config.setTag("version1");
  config.persist();
  c.addConfig(config);
  c.addDesiredConfig("user",Collections.singleton(config));
  clusters.addHost(hostName);
  Host host=clusters.getHost(hostName);
  Map<String,String> hostAttributes=new HashMap<String,String>();
  hostAttributes.put("os_family","redhat");
  hostAttributes.put("os_release_version","6");
  host.setHostAttributes(hostAttributes);
  host.persist();
  m_helper.getOrCreateRepositoryVersion(HDP_220_STACK,HDP_2_2_0_0);
  c.createClusterVersion(HDP_220_STACK,HDP_2_2_0_0,"admin",RepositoryVersionState.UPGRADING);
  c.transitionClusterVersion(HDP_220_STACK,HDP_2_2_0_0,RepositoryVersionState.CURRENT);
  String urlInfo="[{'repositories':[" + "{'Repositories/base_url':'http://foo1','Repositories/repo_name':'HDP','Repositories/repo_id':'HDP-2.2.0'}" + "], 'OperatingSystems/os_type':'redhat6'}]";
  repoVersionDAO.create(stackEntity,HDP_2_2_0_1,String.valueOf(System.currentTimeMillis()),urlInfo);
  c.createClusterVersion(HDP_220_STACK,HDP_2_2_0_1,"admin",RepositoryVersionState.INSTALLING);
  c.transitionClusterVersion(HDP_220_STACK,HDP_2_2_0_1,RepositoryVersionState.INSTALLED);
  c.transitionClusterVersion(HDP_220_STACK,HDP_2_2_0_1,RepositoryVersionState.UPGRADING);
  c.transitionClusterVersion(HDP_220_STACK,HDP_2_2_0_1,RepositoryVersionState.UPGRADED);
  c.setCurrentStackVersion(HDP_220_STACK);
  c.mapHostVersions(Collections.singleton(hostName),c.getCurrentClusterVersion(),RepositoryVersionState.CURRENT);
  HostDAO hostDAO=m_injector.getInstance(HostDAO.class);
  HostVersionEntity entity=new HostVersionEntity();
  entity.setHostEntity(hostDAO.findByName(hostName));
  entity.setRepositoryVersion(repoVersionDAO.findByStackAndVersion(HDP_220_STACK,HDP_2_2_0_1));
  entity.setState(RepositoryVersionState.UPGRADED);
  hostVersionDAO.create(entity);
  String tickTime=m_configHelper.getPropertyValueFromStackDefinitions(c,"zoo.cfg","tickTime");
  assertNotNull(tickTime);
}
