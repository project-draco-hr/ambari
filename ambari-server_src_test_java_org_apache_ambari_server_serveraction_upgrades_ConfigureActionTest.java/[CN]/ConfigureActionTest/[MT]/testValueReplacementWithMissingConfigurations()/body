{
  makeUpgradeCluster();
  Cluster c=clusters.getCluster("c1");
  assertEquals(1,c.getConfigsByType("zoo.cfg").size());
  c.setDesiredStackVersion(HDP_220_STACK);
  Config config=cf.createNew(c,"zoo.cfg",new HashMap<String,String>(){
{
      put("existing","This exists!");
      put("missing",null);
    }
  }
,new HashMap<String,Map<String,String>>());
  config.setTag("version2");
  config.persist();
  c.addConfig(config);
  c.addDesiredConfig("user",Collections.singleton(config));
  assertEquals(2,c.getConfigsByType("zoo.cfg").size());
  Map<String,String> commandParams=new HashMap<String,String>();
  commandParams.put("upgrade_direction","upgrade");
  commandParams.put("version",HDP_2_2_0_1);
  commandParams.put("clusterName","c1");
  commandParams.put(ConfigureTask.PARAMETER_CONFIG_TYPE,"zoo.cfg");
  List<Replace> replacements=new ArrayList<Replace>();
  Replace replace=new Replace();
  replace.key="missing";
  replace.find="foo";
  replace.replaceWith="bar";
  replacements.add(replace);
  commandParams.put(ConfigureTask.PARAMETER_REPLACEMENTS,new Gson().toJson(replacements));
  ExecutionCommand executionCommand=new ExecutionCommand();
  executionCommand.setCommandParams(commandParams);
  executionCommand.setClusterName("c1");
  executionCommand.setRoleParams(new HashMap<String,String>());
  executionCommand.getRoleParams().put(ServerAction.ACTION_USER_NAME,"username");
  HostRoleCommand hostRoleCommand=hostRoleCommandFactory.create(null,null,null,null);
  hostRoleCommand.setExecutionCommandWrapper(new ExecutionCommandWrapper(executionCommand));
  action.setExecutionCommand(executionCommand);
  action.setHostRoleCommand(hostRoleCommand);
  CommandReport report=action.execute(null);
  assertNotNull(report);
  assertEquals(3,c.getConfigsByType("zoo.cfg").size());
  config=c.getDesiredConfigByType("zoo.cfg");
  assertEquals(null,config.getProperties().get("missing"));
}
