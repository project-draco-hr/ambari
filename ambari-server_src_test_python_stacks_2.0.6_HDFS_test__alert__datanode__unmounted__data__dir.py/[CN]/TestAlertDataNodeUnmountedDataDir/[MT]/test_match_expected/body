@patch('resource_management.libraries.functions.mounted_dirs_helper.get_dir_to_mount_from_file')
@patch('resource_management.libraries.functions.file_system.get_mount_point_for_dir')
@patch('os.path.exists')
@patch('os.path.isdir')
def test_match_expected(self, is_dir_mock, exists_mock, get_mount_mock, get_data_dir_to_mount_from_file_mock):
    '\n    Test that the status is OK when the mount points match the expected values.\n    '
    configs = {'{{hdfs-site/dfs.datanode.data.dir}}': '/grid/0/data,/grid/1/data,/grid/2/data', }
    exists_mock.return_value = True
    is_dir_mock.return_value = True
    get_mount_mock.side_effect = ['/device1', '/device2', '/']
    get_data_dir_to_mount_from_file_mock.return_value = {'/grid/0/data': '/device1', '/grid/1/data': '/device2', '/grid/2/data': '/', }
    [status, messages] = alert.execute(configurations=configs)
    self.assertEqual(status, RESULT_STATE_OK)
    self.assertTrue(((messages is not None) and (len(messages) == 1)))
    self.assertTrue(('The following data dir(s) are valid' in messages[0]))
