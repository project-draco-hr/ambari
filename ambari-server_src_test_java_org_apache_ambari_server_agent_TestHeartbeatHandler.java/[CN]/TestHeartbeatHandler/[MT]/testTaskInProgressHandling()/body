{
  Cluster cluster=heartbeatTestHelper.getDummyCluster();
  Service hdfs=cluster.addService(HDFS);
  hdfs.addServiceComponent(DATANODE);
  hdfs.getServiceComponent(DATANODE).addServiceComponentHost(DummyHostname1).persist();
  hdfs.addServiceComponent(NAMENODE);
  hdfs.getServiceComponent(NAMENODE).addServiceComponentHost(DummyHostname1).persist();
  hdfs.addServiceComponent(SECONDARY_NAMENODE);
  hdfs.getServiceComponent(SECONDARY_NAMENODE).addServiceComponentHost(DummyHostname1).persist();
  ActionQueue aq=new ActionQueue();
  ServiceComponentHost serviceComponentHost1=clusters.getCluster(DummyCluster).getService(HDFS).getServiceComponent(DATANODE).getServiceComponentHost(DummyHostname1);
  serviceComponentHost1.setState(State.INSTALLING);
  HeartBeat hb=new HeartBeat();
  hb.setTimestamp(System.currentTimeMillis());
  hb.setResponseId(0);
  hb.setHostname(DummyHostname1);
  hb.setNodeStatus(new HostStatus(Status.HEALTHY,DummyHostStatus));
  List<CommandReport> reports=new ArrayList<CommandReport>();
  CommandReport cr=new CommandReport();
  cr.setActionId(StageUtils.getActionId(requestId,stageId));
  cr.setTaskId(1);
  cr.setClusterName(DummyCluster);
  cr.setServiceName(HDFS);
  cr.setRole(DATANODE);
  cr.setRoleCommand("INSTALL");
  cr.setStatus("IN_PROGRESS");
  cr.setStdErr("none");
  cr.setStdOut("dummy output");
  cr.setExitCode(777);
  reports.add(cr);
  hb.setReports(reports);
  hb.setComponentStatus(new ArrayList<ComponentStatus>());
  final HostRoleCommand command=hostRoleCommandFactory.create(DummyHostname1,Role.DATANODE,null,RoleCommand.INSTALL);
  ActionManager am=actionManagerTestHelper.getMockActionManager();
  expect(am.getTasks(anyObject(List.class))).andReturn(new ArrayList<HostRoleCommand>(){
{
      add(command);
    }
  }
);
  replay(am);
  HeartBeatHandler handler=heartbeatTestHelper.getHeartBeatHandler(am,aq);
  handler.handleHeartBeat(hb);
  handler.getHeartbeatProcessor().processHeartbeat(hb);
  State componentState1=serviceComponentHost1.getState();
  assertEquals("Host state should still be installing",State.INSTALLING,componentState1);
}
