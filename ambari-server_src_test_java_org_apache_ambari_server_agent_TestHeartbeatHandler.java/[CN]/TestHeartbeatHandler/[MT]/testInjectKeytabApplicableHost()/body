{
  List<Map<String,String>> kcp;
  Map<String,String> properties;
  kcp=testInjectKeytabSetKeytab("c6403.ambari.apache.org");
  Assert.assertNotNull(kcp);
  Assert.assertEquals(1,kcp.size());
  properties=kcp.get(0);
  Assert.assertNotNull(properties);
  Assert.assertEquals("c6403.ambari.apache.org",properties.get(KerberosIdentityDataFileWriter.HOSTNAME));
  Assert.assertEquals("HDFS",properties.get(KerberosIdentityDataFileWriter.SERVICE));
  Assert.assertEquals("DATANODE",properties.get(KerberosIdentityDataFileWriter.COMPONENT));
  Assert.assertEquals("dn/_HOST@_REALM",properties.get(KerberosIdentityDataFileWriter.PRINCIPAL));
  Assert.assertEquals("/etc/security/keytabs/dn.service.keytab",properties.get(KerberosIdentityDataFileWriter.KEYTAB_FILE_PATH));
  Assert.assertEquals("hdfs",properties.get(KerberosIdentityDataFileWriter.KEYTAB_FILE_OWNER_NAME));
  Assert.assertEquals("r",properties.get(KerberosIdentityDataFileWriter.KEYTAB_FILE_OWNER_ACCESS));
  Assert.assertEquals("hadoop",properties.get(KerberosIdentityDataFileWriter.KEYTAB_FILE_GROUP_NAME));
  Assert.assertEquals("",properties.get(KerberosIdentityDataFileWriter.KEYTAB_FILE_GROUP_ACCESS));
  Assert.assertEquals(Base64.encodeBase64String("hello".getBytes()),kcp.get(0).get(KerberosServerAction.KEYTAB_CONTENT_BASE64));
  kcp=testInjectKeytabRemoveKeytab("c6403.ambari.apache.org");
  Assert.assertNotNull(kcp);
  Assert.assertEquals(1,kcp.size());
  properties=kcp.get(0);
  Assert.assertNotNull(properties);
  Assert.assertEquals("c6403.ambari.apache.org",properties.get(KerberosIdentityDataFileWriter.HOSTNAME));
  Assert.assertEquals("HDFS",properties.get(KerberosIdentityDataFileWriter.SERVICE));
  Assert.assertEquals("DATANODE",properties.get(KerberosIdentityDataFileWriter.COMPONENT));
  Assert.assertEquals("dn/_HOST@_REALM",properties.get(KerberosIdentityDataFileWriter.PRINCIPAL));
  Assert.assertEquals("/etc/security/keytabs/dn.service.keytab",properties.get(KerberosIdentityDataFileWriter.KEYTAB_FILE_PATH));
  Assert.assertFalse(properties.containsKey(KerberosIdentityDataFileWriter.KEYTAB_FILE_OWNER_NAME));
  Assert.assertFalse(properties.containsKey(KerberosIdentityDataFileWriter.KEYTAB_FILE_OWNER_ACCESS));
  Assert.assertFalse(properties.containsKey(KerberosIdentityDataFileWriter.KEYTAB_FILE_GROUP_NAME));
  Assert.assertFalse(properties.containsKey(KerberosIdentityDataFileWriter.KEYTAB_FILE_GROUP_ACCESS));
  Assert.assertFalse(properties.containsKey(KerberosServerAction.KEYTAB_CONTENT_BASE64));
}
