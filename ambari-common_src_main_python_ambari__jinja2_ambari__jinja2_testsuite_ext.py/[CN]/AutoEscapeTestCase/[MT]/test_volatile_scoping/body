def test_volatile_scoping(self):
    env = Environment(extensions=['ambari_jinja2.ext.autoescape'])
    tmplsource = "\n        {% autoescape val %}\n            {% macro foo(x) %}\n                [{{ x }}]\n            {% endmacro %}\n            {{ foo().__class__.__name__ }}\n        {% endautoescape %}\n        {{ '<testing>' }}\n        "
    tmpl = env.from_string(tmplsource)
    assert (tmpl.render(val=True).split()[0] == 'Markup')
    assert (tmpl.render(val=False).split()[0] == unicode.__name__)
    env = Environment(extensions=['ambari_jinja2.ext.autoescape'])
    pysource = env.compile(tmplsource, raw=True)
    assert ('<testing>\\n' in pysource)
    env = Environment(extensions=['ambari_jinja2.ext.autoescape'], autoescape=True)
    pysource = env.compile(tmplsource, raw=True)
    assert ('&lt;testing&gt;\\n' in pysource)
