def configs_for_ha(atlas_hosts, metadata_port, is_atlas_ha_enabled):
    '\n  Return a dictionary of additional configs to merge if Atlas HA is enabled.\n  :param atlas_hosts: List of hostnames that contain Atlas\n  :param metadata_port: Port number\n  :param is_atlas_ha_enabled: None, True, or False\n  :return: Dictionary with additional configs to merge to application-properties if HA is enabled.\n  '
    additional_props = {}
    if ((atlas_hosts is None) or (len(atlas_hosts) == 0) or (metadata_port is None)):
        return additional_props
    atlas_hosts = sorted(atlas_hosts)
    _server_id_list = [('id' + str(i)) for i in range(1, (len(atlas_hosts) + 1))]
    atlas_server_ids = ','.join(_server_id_list)
    additional_props['atlas.server.ids'] = atlas_server_ids
    i = 0
    for curr_hostname in atlas_hosts:
        id = _server_id_list[i]
        prop_name = ('atlas.server.address.' + id)
        prop_value = ((curr_hostname + ':') + metadata_port)
        additional_props[prop_name] = prop_value
        i += 1
    if ((i == 1) or ((i > 1) and (is_atlas_ha_enabled is False))):
        additional_props['atlas.server.ha.enabled'] = 'false'
    elif (i > 1):
        additional_props['atlas.server.ha.enabled'] = 'true'
    return additional_props
