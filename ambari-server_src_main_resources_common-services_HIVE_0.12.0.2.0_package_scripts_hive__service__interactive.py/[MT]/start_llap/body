def start_llap(self):
    import params
    abs_dir_path = ''
    try:
        try:
            cmd = ['/usr/hdp/current/hive-server2-hive2/bin/hive', '--service', 'llap', '--instances', '1', '-slider-am-container-mb', '341', '--loglevel', 'INFO']
            (code, output, error) = shell.checked_call(cmd, user=params.hive_user, stderr=subprocess.PIPE)
            if (output is not None):
                Logger.info('LLAP package creation output : {0}'.format(output))
                splits = output.split()
                if (len(splits) > 2):
                    if ('llap-slider-' in splits[1]):
                        (llap_dir, llap_run_file) = splits[1].split('/')
                        abs_dir_path = os.path.join(params.hive_user_home_dir, llap_dir)
                        run_file_abs_path = os.path.join(abs_dir_path, llap_run_file)
                        file_exists = os.path.isfile(run_file_abs_path)
                        if file_exists:
                            Execute(run_file_abs_path, user=params.hive_user)
                            time.sleep(30)
                            Logger.info('LLAP app deployed successfully.')
                            return True
                        else:
                            Logger.error('LLAP slider package : {0} , not present in path : {1}. Exiting ... '.format(llap_dir, params.hive_user_home_dir))
                            return False
                else:
                    Logger.error("Couldn't parse the message {0} for LLAP slider package. Exiting ... ".format(output))
                    return False
            else:
                Logger.error('Error while creating the LLAP slider package. \n Error Code : {0} \n Output : {1}'.format(error, output))
                return False
        except:
            Logger.error('Error: {0}'.format(sys.exc_info()))
            return False
    finally:
        dir_exists = os.path.isdir(abs_dir_path)
        if dir_exists:
            shutil.rmtree(abs_dir_path)
