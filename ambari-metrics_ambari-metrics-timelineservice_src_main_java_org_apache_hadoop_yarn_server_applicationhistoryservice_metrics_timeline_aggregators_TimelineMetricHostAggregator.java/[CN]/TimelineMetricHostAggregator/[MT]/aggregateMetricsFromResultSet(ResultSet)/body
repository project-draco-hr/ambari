{
  TimelineMetric existingMetric=null;
  MetricHostAggregate hostAggregate=null;
  Map<TimelineMetric,MetricHostAggregate> hostAggregateMap=new HashMap<TimelineMetric,MetricHostAggregate>();
  while (rs.next()) {
    TimelineMetric currentMetric=readHelper.getTimelineMetricKeyFromResultSet(rs);
    MetricHostAggregate currentHostAggregate=readHelper.getMetricHostAggregateFromResultSet(rs);
    if (existingMetric == null) {
      existingMetric=currentMetric;
      hostAggregate=new MetricHostAggregate();
      hostAggregateMap.put(currentMetric,hostAggregate);
    }
    if (existingMetric.equalsExceptTime(currentMetric)) {
      hostAggregate.updateAggregates(currentHostAggregate);
    }
 else {
      hostAggregate=new MetricHostAggregate();
      hostAggregate.updateAggregates(currentHostAggregate);
      hostAggregateMap.put(currentMetric,hostAggregate);
      existingMetric=currentMetric;
    }
  }
  return hostAggregateMap;
}
