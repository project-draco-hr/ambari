{
  Map<String,String> configParameters=new HashMap<>();
  if (id == null || id.isEmpty()) {
    LOG.warn("Config task id is not defined, skipping config change");
    return configParameters;
  }
  if (configUpgradePack == null) {
    LOG.warn("Config upgrade pack is not defined, skipping config change");
    return configParameters;
  }
  ConfigUpgradeChangeDefinition definition=configUpgradePack.enumerateConfigChangesByID().get(id);
  if (definition == null) {
    LOG.warn(String.format("Can not resolve config change definition by id %s, " + "skipping config change",id));
    return configParameters;
  }
  if (null != definition.getConfigType()) {
    configParameters.put(PARAMETER_CONFIG_TYPE,definition.getConfigType());
  }
  if (null != definition.getKeyValuePairs() && !definition.getKeyValuePairs().isEmpty()) {
    List<ConfigurationKeyValue> allowedSets=getValidSets(cluster,definition.getConfigType(),definition.getKeyValuePairs());
    configParameters.put(ConfigureTask.PARAMETER_KEY_VALUE_PAIRS,m_gson.toJson(allowedSets));
  }
  List<Transfer> transfers=definition.getTransfers();
  if (null != transfers && !transfers.isEmpty()) {
    List<Transfer> allowedTransfers=getValidTransfers(cluster,definition.getConfigType(),definition.getTransfers());
    configParameters.put(ConfigureTask.PARAMETER_TRANSFERS,m_gson.toJson(allowedTransfers));
  }
  List<Replace> replacements=definition.getReplacements();
  if (null != replacements && !replacements.isEmpty()) {
    List<Replace> allowedReplacements=getValidReplacements(cluster,definition.getConfigType(),replacements);
    configParameters.put(ConfigureTask.PARAMETER_REPLACEMENTS,m_gson.toJson(allowedReplacements));
  }
  return configParameters;
}
