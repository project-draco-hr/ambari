{
  try {
    Cluster cluster=getCluster(clusterName);
    if (cluster != null && managementControllerProvider != null) {
      AmbariMetaInfo ambariMetaInfo=managementControllerProvider.get().getAmbariMetaInfo();
      StackId stackId=cluster.getDesiredStackVersion();
      ServiceComponentHostRequest request=new ServiceComponentHostRequest(clusterName,serviceName,null,null,null);
      Set<ServiceComponentHostResponse> hostComponentResponses=managementControllerProvider.get().getHostComponents(Collections.singleton(request));
      State masterState=null;
      State clientState=null;
      State otherState=null;
      State maxMMState=null;
      boolean hasDisabled=false;
      boolean hasMaster=false;
      boolean hasOther=false;
      boolean hasClient=false;
      boolean hasMM=false;
      for (      ServiceComponentHostResponse hostComponentResponse : hostComponentResponses) {
        try {
          ComponentInfo componentInfo=ambariMetaInfo.getComponent(stackId.getStackName(),stackId.getStackVersion(),hostComponentResponse.getServiceName(),hostComponentResponse.getComponentName());
          State state=getHostComponentState(hostComponentResponse);
          boolean isInMaintenance=!MaintenanceState.OFF.toString().equals(hostComponentResponse.getMaintenanceState());
          if (state.equals(State.DISABLED)) {
            hasDisabled=true;
          }
          if (isInMaintenance & !componentInfo.isClient()) {
            hasMM=true;
            if (maxMMState == null || state.ordinal() > maxMMState.ordinal()) {
              maxMMState=state;
            }
          }
          if (componentInfo.isMaster()) {
            if (state.equals(State.STARTED) || !isInMaintenance) {
              hasMaster=true;
            }
            if (!state.equals(State.STARTED) && !isInMaintenance && (masterState == null || state.ordinal() > masterState.ordinal())) {
              masterState=state;
            }
          }
 else           if (componentInfo.isClient()) {
            hasClient=true;
            if (!state.equals(State.INSTALLED) && (clientState == null || state.ordinal() > clientState.ordinal())) {
              clientState=state;
            }
          }
 else {
            if (state.equals(State.STARTED) || !isInMaintenance) {
              hasOther=true;
            }
            if (!state.equals(State.STARTED) && !isInMaintenance && (otherState == null || state.ordinal() > otherState.ordinal())) {
              otherState=state;
            }
          }
        }
 catch (        ObjectNotFoundException e) {
        }
      }
      return hasMaster ? masterState == null ? State.STARTED : masterState : hasOther ? otherState == null ? State.STARTED : otherState : hasClient ? clientState == null ? State.INSTALLED : clientState : hasDisabled ? State.DISABLED : hasMM ? maxMMState : State.UNKNOWN;
    }
  }
 catch (  AmbariException e) {
    LOG.error("Can't determine service state.",e);
  }
  return State.UNKNOWN;
}
