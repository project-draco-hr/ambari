def find_provider(env, resource, class_path=None):
    if (not class_path):
        try:
            class_path = PROVIDERS[env.system.platform][resource]
        except KeyError:
            class_path = PROVIDERS['default'][resource]
    if class_path.startswith('*'):
        (cookbook, classname) = class_path[1:].split('.')
        return getattr(env.cookbooks[cookbook], classname)
    try:
        (mod_path, class_name) = class_path.rsplit('.', 1)
    except ValueError:
        raise Fail(('Unable to find provider for %s as %s' % (resource, class_path)))
    mod = __import__(mod_path, {}, {}, [class_name])
    return getattr(mod, class_name)
