{
  final String clusterName=request.getClusterName();
  final Cluster cluster=clustersProvider.get().getCluster(clusterName);
  Set<String> failedServiceNames=new HashSet<String>();
  StackId stackId=cluster.getCurrentStackVersion();
  Set<String> installFailedHostComponents=new HashSet<String>();
  for (  Map.Entry<String,Service> serviceEntry : cluster.getServices().entrySet()) {
    final Service service=serviceEntry.getValue();
    if (service.getMaintenanceState() != MaintenanceState.ON) {
      Map<String,ServiceComponent> serviceComponents=service.getServiceComponents();
      for (      Map.Entry<String,ServiceComponent> component : serviceComponents.entrySet()) {
        ServiceComponent serviceComponent=component.getValue();
        if (serviceComponent.isVersionAdvertised()) {
          List<HostComponentSummary> hostComponentSummaries=HostComponentSummary.getHostComponentSummaries(service.getName(),serviceComponent.getName());
          for (          HostComponentSummary hcs : hostComponentSummaries) {
            Host host=clustersProvider.get().getHost(hcs.getHostName());
            if (host.getMaintenanceState(cluster.getClusterId()) != MaintenanceState.ON) {
              if (hcs.getCurrentState() == State.INSTALL_FAILED) {
                failedServiceNames.add(service.getName());
                installFailedHostComponents.add(MessageFormat.format("[{0}:{1} on {2}]",service.getName(),serviceComponent.getName(),hcs.getHostName()));
              }
            }
          }
        }
      }
    }
  }
  if (!installFailedHostComponents.isEmpty()) {
    String message=MessageFormat.format("Service components in INSTALL_FAILED state: {0}.",StringUtils.join(installFailedHostComponents,", "));
    prerequisiteCheck.setFailedOn(new LinkedHashSet<String>(failedServiceNames));
    prerequisiteCheck.setStatus(PrereqCheckStatus.FAIL);
    prerequisiteCheck.setFailReason("Found service components in INSTALL_FAILED state. Please re-install these components. " + message);
  }
}
