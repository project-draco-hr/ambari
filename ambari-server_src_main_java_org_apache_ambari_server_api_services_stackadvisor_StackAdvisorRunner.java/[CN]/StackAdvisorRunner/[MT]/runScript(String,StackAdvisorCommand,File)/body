{
  LOG.info(String.format("Script=%s, actionDirectory=%s, command=%s",script,actionDirectory,saCommand));
  String outputFile=actionDirectory + File.separator + "stackadvisor.out";
  String errorFile=actionDirectory + File.separator + "stackadvisor.err";
  String shellCommand[]=prepareShellCommand(script,saCommand,actionDirectory,outputFile,errorFile);
  String[] env=new String[]{};
  try {
    Process process=Runtime.getRuntime().exec(shellCommand,env);
    try {
      LOG.info(String.format("Stack-advisor output=%s, error=%s",outputFile,errorFile));
      int exitCode=process.waitFor();
      try {
        String outMessage=FileUtils.readFileToString(new File(outputFile));
        String errMessage=FileUtils.readFileToString(new File(errorFile));
        LOG.info("Script log message: " + outMessage + "\n\n"+ errMessage);
      }
 catch (      IOException io) {
        LOG.info("Error in reading script log files",io);
      }
      return exitCode == 0;
    }
  finally {
      process.destroy();
    }
  }
 catch (  Exception io) {
    LOG.info("Error executing stack advisor " + io.getMessage());
    return false;
  }
}
