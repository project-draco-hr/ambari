{
  Set<Resource> results=new HashSet<Resource>();
  Set<String> requestPropertyIds=getRequestPropertyIds(request,predicate);
  for (  Map<String,Object> propertyMap : getPropertyMaps(predicate)) {
    String clusterName=(String)propertyMap.get(UPGRADE_CLUSTER_NAME);
    String requestIdStr=(String)propertyMap.get(UPGRADE_REQUEST_ID);
    String groupIdStr=(String)propertyMap.get(UPGRADE_GROUP_ID);
    String stageIdStr=(String)propertyMap.get(UPGRADE_ITEM_STAGE_ID);
    if (null == requestIdStr || requestIdStr.isEmpty()) {
      throw new IllegalArgumentException("The upgrade id is required when querying for upgrades");
    }
    if (null == groupIdStr || groupIdStr.isEmpty()) {
      throw new IllegalArgumentException("The upgrade group id is required when querying for upgrades");
    }
    Long requestId=Long.valueOf(requestIdStr);
    Long groupId=Long.valueOf(groupIdStr);
    Long stageId=null;
    if (null != stageIdStr) {
      stageId=Long.valueOf(stageIdStr);
    }
    List<UpgradeItemEntity> entities=new ArrayList<UpgradeItemEntity>();
    if (null == stageId) {
      UpgradeGroupEntity group=m_dao.findUpgradeGroup(groupId);
      if (null == group || null == group.getItems()) {
        throw new NoSuchResourceException(String.format("Cannot load upgrade for %s",requestIdStr));
      }
      entities=group.getItems();
    }
 else {
      UpgradeItemEntity entity=m_dao.findUpgradeItemByRequestAndStage(requestId,stageId);
      if (null != entity) {
        entities.add(entity);
      }
    }
    Map<Long,Resource> resultMap=new HashMap<Long,Resource>();
    for (    UpgradeItemEntity entity : entities) {
      Resource r=toResource(entity,requestPropertyIds);
      resultMap.put(entity.getStageId(),r);
    }
    if (!resultMap.isEmpty()) {
      if (null != clusterName) {
        Set<Resource> stages=s_upgradeHelper.getStageResources(clusterName,requestId,new ArrayList<Long>(resultMap.keySet()));
        for (        Resource stage : stages) {
          Long l=(Long)stage.getPropertyValue(StageResourceProvider.STAGE_STAGE_ID);
          Resource r=resultMap.get(l);
          if (null != r) {
            for (            String propertyId : StageResourceProvider.PROPERTY_IDS) {
              setResourceProperty(r,STAGE_MAPPED_IDS.get(propertyId),stage.getPropertyValue(propertyId),requestPropertyIds);
            }
          }
        }
      }
      results.addAll(resultMap.values());
    }
  }
  return results;
}
