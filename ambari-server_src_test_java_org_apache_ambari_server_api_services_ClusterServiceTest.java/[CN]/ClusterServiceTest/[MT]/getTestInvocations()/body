{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  ClusterService clusterService=new TestClusterService("clusterName");
  Method m=clusterService.getClass().getMethod("getCluster",HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{getHttpHeaders(),getUriInfo(),"clusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,clusterService,m,args,null));
  clusterService=new TestClusterService(null);
  m=clusterService.getClass().getMethod("getClusters",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,clusterService,m,args,null));
  clusterService=new TestClusterService("clusterName");
  m=clusterService.getClass().getMethod("createCluster",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"clusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,clusterService,m,args,"body"));
  clusterService=new TestClusterService("clusterName");
  m=clusterService.getClass().getMethod("updateCluster",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"clusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,clusterService,m,args,"body"));
  clusterService=new TestClusterService("clusterName");
  m=clusterService.getClass().getMethod("deleteCluster",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"clusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,clusterService,m,args,null));
  return listInvocations;
}
