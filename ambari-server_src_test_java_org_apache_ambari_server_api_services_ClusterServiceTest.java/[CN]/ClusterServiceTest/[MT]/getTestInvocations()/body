{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  Clusters clusters=new TestClusters();
  ClusterService clusterService;
  Method m;
  Object[] args;
  clusterService=new TestClusterService(clusters,"clusterName");
  m=clusterService.getClass().getMethod("getCluster",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo(),"clusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,clusterService,m,args,null));
  clusterService=new TestClusterService(clusters,null);
  m=clusterService.getClass().getMethod("getClusters",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,clusterService,m,args,null));
  clusterService=new TestClusterService(clusters,"clusterName");
  m=clusterService.getClass().getMethod("createCluster",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"clusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,clusterService,m,args,"body"));
  clusterService=new TestClusterService(clusters,"clusterName");
  m=clusterService.getClass().getMethod("updateCluster",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"clusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,clusterService,m,args,"body"));
  clusterService=new TestClusterService(clusters,"clusterName");
  m=clusterService.getClass().getMethod("deleteCluster",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"clusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,clusterService,m,args,null));
  clusterService=new TestClusterService(clusters,"clusterName");
  m=clusterService.getClass().getMethod("createArtifact",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"clusterName","artifactName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,clusterService,m,args,"body"));
  clusterService=new TestClusterService(clusters,"clusterName");
  m=clusterService.getClass().getMethod("getArtifact",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"clusterName","artifact_name"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,clusterService,m,args,"body"));
  clusterService=new TestClusterService(clusters,"clusterName");
  m=clusterService.getClass().getMethod("getArtifacts",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"clusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,clusterService,m,args,"body"));
  clusterService=new TestClusterService(clusters,"clusterName");
  m=clusterService.getClass().getMethod("updateArtifact",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"clusterName","artifactName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,clusterService,m,args,"body"));
  clusterService=new TestClusterService(clusters,"clusterName");
  m=clusterService.getClass().getMethod("updateArtifacts",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"clusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,clusterService,m,args,"body"));
  clusterService=new TestClusterService(clusters,"clusterName");
  m=clusterService.getClass().getMethod("deleteArtifact",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"clusterName","artifactName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,clusterService,m,args,"body"));
  clusterService=new TestClusterService(clusters,"clusterName");
  m=clusterService.getClass().getMethod("deleteArtifacts",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"clusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,clusterService,m,args,"body"));
  return listInvocations;
}
