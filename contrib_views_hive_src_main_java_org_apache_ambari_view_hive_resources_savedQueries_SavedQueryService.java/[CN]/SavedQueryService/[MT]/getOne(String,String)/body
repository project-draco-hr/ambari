{
  try {
    final SavedQuery savedQuery=getResourceManager().read(queryId);
    if (operation.equals("download")) {
      StreamingOutput stream=new StreamingOutput(){
        @Override public void write(        OutputStream os) throws IOException, WebApplicationException {
          Writer writer=new BufferedWriter(new OutputStreamWriter(os));
          try {
            BufferedReader br=new BufferedReader(new InputStreamReader(getSharedObjectsFactory().getHdfsApi().open(savedQuery.getQueryFile())));
            String line;
            line=br.readLine();
            while (line != null) {
              writer.write(line + "\n");
              line=br.readLine();
            }
            writer.flush();
          }
 catch (          InterruptedException e) {
            e.printStackTrace();
          }
 finally {
            writer.close();
          }
        }
      }
;
      return Response.ok(stream).type(MediaType.TEXT_PLAIN).build();
    }
 else {
      JSONObject object=new JSONObject();
      object.put("savedQuery",savedQuery);
      return Response.ok(object).build();
    }
  }
 catch (  WebApplicationException ex) {
    throw ex;
  }
catch (  ItemNotFound itemNotFound) {
    throw new NotFoundFormattedException(itemNotFound.getMessage(),itemNotFound);
  }
catch (  Exception ex) {
    throw new ServiceFormattedException(ex.getMessage(),ex);
  }
}
