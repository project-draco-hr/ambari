{
  if (kerberosCredential == null) {
    return null;
  }
 else {
    try {
      SecretKeySpec secretKey=new SecretKeySpec(Arrays.copyOf(key,16),"AES");
      Cipher cipher=Cipher.getInstance("AES/ECB/PKCS5Padding");
      cipher.init(Cipher.ENCRYPT_MODE,secretKey);
      String plaintext=new Gson().toJson(kerberosCredential);
      return Base64.encodeBase64String(cipher.doFinal(plaintext.getBytes()));
    }
 catch (    NoSuchAlgorithmException e) {
      throw new AmbariException("Failed to encrypt plaintext due to invalid encryption algorithm",e);
    }
catch (    NoSuchPaddingException e) {
      throw new AmbariException("Failed to encrypt plaintext due to invalid padding scheme algorithm",e);
    }
catch (    IllegalBlockSizeException e) {
      throw new AmbariException("The encryption algorithm is unable to process the input data provided.",e);
    }
catch (    BadPaddingException e) {
      throw new AmbariException("Failed to encrypt plaintext due to unexpected reasons",e);
    }
catch (    InvalidKeyException e) {
      throw new AmbariException("Failed to encrypt plaintext due to invalid key",e);
    }
  }
}
