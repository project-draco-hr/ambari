{
  if (cipherText == null) {
    return null;
  }
 else {
    try {
      SecretKeySpec secretKey=new SecretKeySpec(Arrays.copyOf(key,16),"AES");
      Cipher cipher=Cipher.getInstance("AES/ECB/PKCS5Padding");
      cipher.init(Cipher.DECRYPT_MODE,secretKey);
      byte[] plaintext=cipher.doFinal(Base64.decodeBase64(cipherText));
      return new Gson().fromJson(new String(plaintext),KerberosCredential.class);
    }
 catch (    NoSuchAlgorithmException e) {
      throw new AmbariException("Failed to decrypt cipher text due to invalid encryption algorithm",e);
    }
catch (    NoSuchPaddingException e) {
      throw new AmbariException("Failed to decrypt cipher text due to invalid padding scheme algorithm",e);
    }
catch (    IllegalBlockSizeException e) {
      throw new AmbariException("Failed to decrypt cipher text due to invalid block size",e);
    }
catch (    BadPaddingException e) {
      throw new AmbariException("Failed to decrypt cipher text due to invalid padding",e);
    }
catch (    InvalidKeyException e) {
      throw new AmbariException("Failed to decrypt cipher text due to invalid key",e);
    }
catch (    JsonSyntaxException e) {
      throw new AmbariException("Failed to decrypt cipher, cannot parse data into a KerberosCredential",e);
    }
  }
}
