def recommendYARNConfigurations(self, configurations, clusterData, services, hosts):
    super(HDP24StackAdvisor, self).recommendYARNConfigurations(configurations, clusterData, services, hosts)
    yarn_site_config = 'yarn-site'
    properties = (services['configurations'] if (yarn_site_config in services['configurations']) else [])
    yarn_site_properties = (properties[yarn_site_config]['properties'] if ((yarn_site_config in properties) and ('properties' in properties[yarn_site_config])) else [])
    put_yarn_site_property = self.putProperty(configurations, yarn_site_config, services)
    put_yarn_site_property_attributes = self.putPropertyAttribute(configurations, yarn_site_config)
    services_list = [service['StackServices']['service_name'] for service in services['services']]
    if ('SPARK' in services_list):
        if ('yarn.nodemanager.aux-services' in yarn_site_properties):
            aux_services = yarn_site_properties['yarn.nodemanager.aux-services'].split(',')
            aux_services.append('spark_shuffle')
            put_yarn_site_property('yarn.nodemanager.aux-services', ','.join(aux_services))
        else:
            put_yarn_site_property('yarn.nodemanager.aux-services', 'spark_shuffle')
        put_yarn_site_property('yarn.nodemanager.aux-services.spark_shuffle.class', 'org.apache.spark.network.yarn.YarnShuffleService')
    else:
        put_yarn_site_property_attributes('yarn.nodemanager.aux-services.spark_shuffle.class', 'delete', 'true')
