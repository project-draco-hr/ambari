def cached_kinit_executor(kinit_path, exec_user, keytab_file, principal, hostname, temp_dir, expiration_time=5):
    '\n  Main cached kinit executor - Uses a temporary file on the FS to cache executions. Each command\n  will have its own file and only one entry (last successful execution) will be stored\n  '
    key = str(hash(('%s|%s' % (principal, keytab_file))))
    filename = (key + '_tmp.txt')
    file_path = ((temp_dir + os.sep) + 'kinit_executor_cache')
    output = None
    if (not os.path.exists(file_path)):
        os.makedirs(file_path)
    file_path += (os.sep + filename)
    if (not os.path.isfile(file_path)):
        with open(file_path, 'w+') as new_file:
            new_file.write('{}')
    try:
        with open(file_path, 'r') as cache_file:
            output = json.load(cache_file)
    except:
        with open(file_path, 'w+') as cache_file:
            cache_file.write('{}')
    if ((not output) or (key not in output) or ('last_successful_execution' not in output[key])):
        new_cached_exec(key, file_path, kinit_path, exec_user, keytab_file, principal, hostname)
    else:
        last_run_time = output[key]['last_successful_execution']
        now = datetime.now()
        if ((now - datetime.strptime(last_run_time, '%Y-%m-%d %H:%M:%S.%f')) > timedelta(minutes=expiration_time)):
            new_cached_exec(key, file_path, kinit_path, exec_user, keytab_file, principal, hostname)
