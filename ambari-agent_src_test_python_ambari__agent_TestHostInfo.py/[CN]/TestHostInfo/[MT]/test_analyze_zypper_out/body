@only_for_platform(PLATFORM_LINUX)
@patch.object(OSCheck, 'get_os_family')
@patch.object(PackagesAnalyzer, 'subprocessWithTimeout')
def test_analyze_zypper_out(self, spwt_mock, get_os_family_mock):
    get_os_family_mock.return_value = 'suse'
    packageAnalyzer = PackagesAnalyzer()
    stringToRead = "Refreshing service 'susecloud'.\n           Loading repository data...\n           Reading installed packages...\n\n           S | Name                              | Type    | Version                | Arch   | Repository\n           --+-----------------------------------+---------+------------------------+--------+----------------------\n           i | ConsoleKit                        | package | 0.2.10-64.65.1         | x86_64 | SLES11-SP1-Updates\n           i | gweb                              | package | 2.2.0-99               | noarch | Hortonworks Data Platform Utils Version - HDP-UTILS-1.1.0.15\n           i | hadoop                            | package | 1.2.0.1.3.0.0-107      | x86_64 | HDP\n           i | hadoop-libhdfs                    | package | 1.2.0.1.3.0.0-107      | x86_64 | HDP\n           i | ambari-server                     | package | 1.2.4.9-1              | noarch | Ambari 1.x\n           i | hdp_mon_ganglia_addons            | package | 1.2.4.9-1              | noarch | Ambari 1.x\n           i | Minimal                           | pattern | 11-38.13.9             | x86_64 | SLES11-SP1"
    result = {}
    result['out'] = stringToRead
    result['err'] = ''
    result['retCode'] = 0
    spwt_mock.return_value = result
    installedPackages = []
    packageAnalyzer.allInstalledPackages(installedPackages)
    self.assertEqual(7, len(installedPackages))
    self.assertTrue(installedPackages[1][0], 'gweb')
    self.assertTrue(installedPackages[3][2], 'HDP')
    self.assertTrue(installedPackages[6][1], '11-38.13.9')
