{
  List<String> columnsList=new ArrayList<String>(Arrays.asList(columnName));
  DatabaseMetaData metaData=getDatabaseMetaData();
  CustomStringUtils.toUpperCase(columnsList);
  Set<String> columnsListToCheckCopies=new HashSet<>(columnsList);
  List<String> duplicatedColumns=new ArrayList<>();
  ResultSet rs=metaData.getColumns(null,dbSchema,convertObjectName(tableName),null);
  if (rs != null) {
    try {
      while (rs.next()) {
        String actualColumnName=rs.getString("COLUMN_NAME");
        if (actualColumnName != null) {
          boolean removingResult=columnsList.remove(actualColumnName.toUpperCase());
          if (!removingResult && columnsListToCheckCopies.contains(actualColumnName.toUpperCase())) {
            duplicatedColumns.add(actualColumnName.toUpperCase());
          }
        }
      }
    }
  finally {
      rs.close();
    }
  }
  if (!duplicatedColumns.isEmpty()) {
    throw new IllegalStateException(String.format("Request for columns [%s] existing in table [%s] returned too many results [%s] for columns [%s]",columnName,tableName,duplicatedColumns.size(),duplicatedColumns.toString()));
  }
  return columnsList.size() == 0;
}
