@OsFamilyFuncImpl(os_family=OSConst.WINSRV_FAMILY)
def ams(name=None):
    import params
    if (name == 'collector'):
        if (not check_windows_service_exists(collector_win_service_name)):
            Execute(format('cmd /C cd {ams_collector_home_dir} & ambari-metrics-collector.cmd setup'))
        Directory(params.ams_collector_conf_dir, owner=params.ams_user, recursive=True)
        Directory(params.ams_checkpoint_dir, owner=params.ams_user, recursive=True)
        XmlConfig('ams-site.xml', conf_dir=params.ams_collector_conf_dir, configurations=params.config['configurations']['ams-site'], configuration_attributes=params.config['configuration_attributes']['ams-site'], owner=params.ams_user)
        XmlConfig('hbase-site.xml', conf_dir=params.ams_collector_conf_dir, configurations=params.config['configurations']['ams-hbase-site'], configuration_attributes=params.config['configuration_attributes']['ams-hbase-site'], owner=params.ams_user)
        if (params.log4j_props != None):
            File(os.path.join(params.ams_collector_conf_dir, 'log4j.properties'), owner=params.ams_user, content=params.log4j_props)
        File(os.path.join(params.ams_collector_conf_dir, 'ams-env.cmd'), owner=params.ams_user, content=InlineTemplate(params.ams_env_sh_template))
        pass
    elif (name == 'monitor'):
        if (not check_windows_service_exists(monitor_win_service_name)):
            Execute(format('cmd /C cd {ams_monitor_home_dir} & ambari-metrics-monitor.cmd setup'))
        links_pairs = [('%HADOOP_HOME%\\share\\hadoop\\common\\lib\\ambari-metrics-hadoop-sink-with-common.jar', '%SINK_HOME%\\hadoop-sink\\ambari-metrics-hadoop-sink-with-common-*.jar'), ('%HBASE_HOME%\\lib\\ambari-metrics-hadoop-sink-with-common.jar', '%SINK_HOME%\\hadoop-sink\\ambari-metrics-hadoop-sink-with-common-*.jar')]
        for link_pair in links_pairs:
            (link, target) = link_pair
            target = glob.glob(os.path.expandvars(target))[0].replace('\\\\', '\\')
            Execute('cmd /c mklink "{0}" "{1}"'.format(link, target))
        Directory(params.ams_monitor_conf_dir, owner=params.ams_user, recursive=True)
        TemplateConfig(os.path.join(params.ams_monitor_conf_dir, 'metric_monitor.ini'), owner=params.ams_user, template_tag=None)
        TemplateConfig(os.path.join(params.ams_monitor_conf_dir, 'metric_groups.conf'), owner=params.ams_user, template_tag=None)
