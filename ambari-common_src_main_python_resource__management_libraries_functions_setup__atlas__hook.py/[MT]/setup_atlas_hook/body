def setup_atlas_hook(service_name, service_props, atlas_hook_filepath, owner, group):
    '\n  Generate the atlas-application.properties.xml file by merging the service_props with the Atlas application-properties.\n  :param service_name: Service Name to identify if it is a client-only service, which will generate slightly different configs.\n  :param service_props: Atlas configs specific to this service that must be merged.\n  :param atlas_hook_filepath: Config file to write, e.g., /etc/falcon/conf/atlas-application.properties.xml\n  :param owner: File owner\n  :param group: File group\n  '
    import params
    atlas_props = default('/configurations/application-properties', {})
    if has_atlas_in_cluster():
        merged_props = {}
        shared_props = SHARED_ATLAS_HOOK_CONFIGS.copy()
        if (service_name in NON_CLIENT_SERVICES):
            shared_props = shared_props.union(SHARED_ATLAS_HOOK_SECURITY_CONFIGS_FOR_NON_CLIENT_SERVICE)
        for prop in shared_props:
            if (prop in atlas_props):
                merged_props[prop] = atlas_props[prop]
        merged_props.update(service_props)
        Logger.info(format('Generating Atlas Hook config file {atlas_hook_filepath}'))
        PropertiesFile(atlas_hook_filepath, properties=merged_props, owner=owner, group=group, mode=420)
