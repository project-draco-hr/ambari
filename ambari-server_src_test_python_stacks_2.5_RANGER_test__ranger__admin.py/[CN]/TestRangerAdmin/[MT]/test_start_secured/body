@patch('os.path.isfile')
def test_start_secured(self, isfile_mock):
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/ranger_admin.py'), classname='RangerAdmin', command='start', config_file='ranger-admin-secured.json', stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    self.assert_configure_secured()
    self.assertResourceCalled('Directory', '/var/log/ambari-logsearch-solr-client', owner='logsearch-solr', group='hadoop', create_parents=True, mode=493, cd_access='a')
    self.assertResourceCalled('Directory', '/usr/lib/ambari-logsearch-solr-client', group='hadoop', cd_access='a', create_parents=True, mode=493, owner='logsearch-solr', recursive_ownership=True)
    self.assertResourceCalled('File', '/usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh', content=StaticFile('/usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh'), owner='logsearch-solr', group='hadoop', mode=493)
    self.assertResourceCalled('File', '/usr/lib/ambari-logsearch-solr-client/log4j.properties', owner='logsearch-solr', content=InlineTemplate(self.getConfig()['configurations']['logsearch-solr-client-log4j']['content']), group='hadoop', mode=420)
    self.assertResourceCalled('File', '/var/log/ambari-logsearch-solr-client/solr-client.log', content='', owner='logsearch-solr', group='hadoop', mode=436)
    self.assertResourceCalled('File', '/usr/hdp/current/ranger-admin/conf/ranger_solr_jaas.conf', content=Template('ranger_solr_jaas_conf.j2'), owner='ranger')
    self.assertResourceCalledRegexp('^Execute$', '^export JAVA_HOME=/usr/jdk64/jdk1.7.0_45 ; /usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh --zookeeper-connect-string c6401.ambari.apache.org:2181 --znode /ambari-solr --check-znode --retry 5 --interval 10')
    self.assertResourceCalledRegexp('^Execute$', '^export JAVA_HOME=/usr/jdk64/jdk1.7.0_45 ; /usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh --zookeeper-connect-string c6401.ambari.apache.org:2181/ambari-solr --download-config --config-dir /tmp/solr_config_ranger_audits_0.[0-9]* --config-set ranger_audits --retry 30 --interval 5')
    self.assertResourceCalledRegexp('^Execute$', '^export JAVA_HOME=/usr/jdk64/jdk1.7.0_45 ; /usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh --zookeeper-connect-string c6401.ambari.apache.org:2181/ambari-solr --upload-config --config-dir /usr/hdp/current/ranger-admin/contrib/solr_for_audit_setup/conf --config-set ranger_audits --retry 30 --interval 5')
    self.assertResourceCalledRegexp('^Directory$', '^/tmp/solr_config_ranger_audits_0.[0-9]*', action=['delete'], owner='ranger', create_parents=True)
    self.assertResourceCalledRegexp('^Execute$', '^export JAVA_HOME=/usr/jdk64/jdk1.7.0_45 ; /usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh --zookeeper-connect-string c6401.ambari.apache.org:2181/ambari-solr --create-collection --collection ranger_audits --config-set ranger_audits --shards 1 --replication 1 --max-shards 1 --retry 5 --interval 10')
    self.assertResourceCalled('Execute', '/usr/bin/ranger-admin-start', environment={'JAVA_HOME': u'/usr/jdk64/jdk1.7.0_45', }, not_if='ps -ef | grep proc_rangeradmin | grep -v grep', user='ranger')
    self.assertTrue(isfile_mock.called)
    self.assertNoMoreResources()
