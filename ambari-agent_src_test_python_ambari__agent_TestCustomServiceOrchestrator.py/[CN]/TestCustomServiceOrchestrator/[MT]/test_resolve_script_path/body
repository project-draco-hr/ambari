@patch('os.path.exists')
@patch.object(FileCache, '__init__')
def test_resolve_script_path(self, FileCache_mock, exists_mock):
    FileCache_mock.return_value = None
    dummy_controller = MagicMock()
    config = AmbariConfig().getConfig()
    orchestrator = CustomServiceOrchestrator(config, dummy_controller)
    exists_mock.return_value = True
    path = orchestrator.resolve_script_path('/HBASE/package', 'scripts/hbase_master.py', 'PYTHON')
    self.assertEqual('/HBASE/package/scripts/hbase_master.py', path)
    exists_mock.return_value = False
    try:
        orchestrator.resolve_script_path('/HBASE', 'scripts/hbase_master.py', 'PYTHON')
        self.fail('ExpectedException not thrown')
    except AgentException:
        pass
