@patch.object(CustomServiceOrchestrator, 'dump_command_to_json')
@patch.object(PythonExecutor, 'run_file')
def test_runCommand_custom_action(self, run_file_mock, dump_command_to_json_mock):
    (_, script) = tempfile.mkstemp()
    command = {'role': 'any', 'commandParams': {'script_type': 'PYTHON', 'script': 'some_custom_action.py', 'command_timeout': '600', }, 'taskId': '3', 'roleCommand': 'ACTIONEXECUTE', }
    orchestrator = CustomServiceOrchestrator(self.config)
    run_file_mock.return_value = {'stdout': 'sss', 'stderr': 'eee', 'exitcode': 0, }
    ret = orchestrator.runCommand(command, 'out.txt', 'err.txt')
    self.assertEqual(ret['exitcode'], 0)
    self.assertTrue(run_file_mock.called)
    self.assertEqual(run_file_mock.call_count, 1)
