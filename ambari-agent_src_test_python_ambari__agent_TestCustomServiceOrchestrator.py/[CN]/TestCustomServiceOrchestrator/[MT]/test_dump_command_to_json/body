@patch('hostname.public_hostname')
def test_dump_command_to_json(self, hostname_mock):
    hostname_mock.return_value = 'test.hst'
    command = {'commandType': 'EXECUTION_COMMAND', 'role': u'DATANODE', 'roleCommand': u'INSTALL', 'commandId': '1-1', 'taskId': 3, 'clusterName': u'cc', 'serviceName': u'HDFS', 'configurations': {'global': {}, }, 'configurationTags': {'global': {'tag': 'v1', }, }, }
    config = AmbariConfig().getConfig()
    tempdir = tempfile.gettempdir()
    config.set('agent', 'prefix', tempdir)
    orchestrator = CustomServiceOrchestrator(config)
    file = orchestrator.dump_command_to_json(command)
    self.assertTrue(os.path.exists(file))
    self.assertTrue((os.path.getsize(file) > 0))
    self.assertEqual(oct((os.stat(file).st_mode & 511)), '0600')
    os.unlink(file)
    self.assertEquals(command['public_hostname'], 'test.hst')
