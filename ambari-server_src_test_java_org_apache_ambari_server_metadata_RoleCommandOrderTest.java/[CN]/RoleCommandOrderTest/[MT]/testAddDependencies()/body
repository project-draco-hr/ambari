{
  RoleCommandOrder rco=injector.getInstance(RoleCommandOrder.class);
  InputStream testJsonIS=getClass().getClassLoader().getResourceAsStream(TEST_RCO_DATA_FILE);
  ObjectMapper mapper=new ObjectMapper();
  Map<String,Object> testData=mapper.readValue(testJsonIS,Map.class);
  rco.addDependencies(testData);
  mapper.setVisibility(JsonMethod.ALL,JsonAutoDetect.Visibility.ANY);
  String dump=mapper.writeValueAsString(rco.getDependencies());
  String expected="{\"RoleCommandPair{role=SECONDARY_NAMENODE, " + "cmd=UPGRADE}\":[{\"role\":\"NAMENODE\",\"cmd\":\"UPGRADE\"}]," + "\"RoleCommandPair{role=SECONDARY_NAMENODE, cmd=START}\":"+ "[{\"role\":\"NAMENODE\",\"cmd\":\"START\"}],"+ "\"RoleCommandPair{role=DATANODE, cmd=STOP}\":"+ "[{\"role\":\"HBASE_MASTER\",\"cmd\":\"STOP\"},"+ "{\"role\":\"RESOURCEMANAGER\",\"cmd\":\"STOP\"},"+ "{\"role\":\"TASKTRACKER\",\"cmd\":\"STOP\"},{\"role\":"+ "\"NODEMANAGER\",\"cmd\":\"STOP\"},{\"role\":\"HISTORYSERVER\","+ "\"cmd\":\"STOP\"},{\"role\":\"JOBTRACKER\",\"cmd\":\"STOP\"}]}";
  assertEquals(expected,dump);
}
