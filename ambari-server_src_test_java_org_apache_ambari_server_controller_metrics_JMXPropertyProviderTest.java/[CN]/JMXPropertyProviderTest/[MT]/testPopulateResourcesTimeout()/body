{
  TestStreamProvider streamProvider=new TestStreamProvider(100L);
  TestJMXHostProvider hostProvider=new TestJMXHostProvider(true);
  TestMetricsHostProvider metricsHostProvider=new TestMetricsHostProvider();
  Set<Resource> resources=new HashSet<Resource>();
  JMXPropertyProvider propertyProvider=new JMXPropertyProvider(PropertyHelper.getJMXPropertyIds(Resource.Type.HostComponent),streamProvider,hostProvider,metricsHostProvider,"HostRoles/cluster_name","HostRoles/host_name","HostRoles/component_name","HostRoles/state");
  propertyProvider.setPopulateTimeout(50L);
  Resource resource=new ResourceImpl(Resource.Type.HostComponent);
  resource.setProperty(HOST_COMPONENT_HOST_NAME_PROPERTY_ID,"domu-12-31-39-14-ee-b3.compute-1.internal");
  resource.setProperty(HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID,"DATANODE");
  resources.add(resource);
  Request request=PropertyHelper.getReadRequest(Collections.<String>emptySet());
  Set<Resource> resourceSet=propertyProvider.populateResources(resources,request,null);
  Thread.sleep(150L);
  Assert.assertEquals(0,resourceSet.size());
  Assert.assertNull(resource.getPropertyValue("metrics/rpc/ReceivedBytes"));
  Assert.assertNull(resource.getPropertyValue("metrics/jvm/HeapMemoryMax"));
  Assert.assertNull(resource.getPropertyValue("metrics/jvm/HeapMemoryUsed"));
  Assert.assertNull(resource.getPropertyValue("metrics/jvm/NonHeapMemoryMax"));
  Assert.assertNull(resource.getPropertyValue("metrics/jvm/NonHeapMemoryUsed"));
}
