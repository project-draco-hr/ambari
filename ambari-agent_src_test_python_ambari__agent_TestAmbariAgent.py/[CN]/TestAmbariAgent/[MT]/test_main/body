@patch.object(subprocess, 'Popen')
@patch('os.path.isfile')
@patch('os.remove')
def test_main(self, os_remove_mock, os_path_isfile_mock, subprocess_popen_mock):
    facter1 = MagicMock()
    facter2 = MagicMock()
    subprocess_popen_mock.side_effect = [facter1, facter2]
    facter1.returncode = 77
    facter2.returncode = 55
    os_path_isfile_mock.return_value = True
    if (not os.environ.has_key('PYTHON')):
        os.environ['PYTHON'] = 'test/python/path'
    sys.argv[0] = 'test data'
    AmbariAgent.main()
    self.assertTrue(subprocess_popen_mock.called)
    self.assertTrue((subprocess_popen_mock.call_count == 2))
    self.assertTrue(facter1.communicate.called)
    self.assertTrue(facter2.communicate.called)
    self.assertTrue(os_path_isfile_mock.called)
    self.assertTrue((os_path_isfile_mock.call_count == 2))
    self.assertTrue(os_remove_mock.called)
