def setup_hadoop():
    '\n  Setup hadoop files and directories\n  '
    import params
    Execute('/bin/echo 0 > /selinux/enforce', only_if='test -f /selinux/enforce')
    install_snappy()
    Directory(params.hadoop_conf_empty_dir, recursive=True, owner='root', group='root')
    Link(params.hadoop_conf_dir, to=params.hadoop_conf_empty_dir)
    Directory(params.hdfs_log_dir_prefix, recursive=True, owner='root', group='root')
    Directory(params.hadoop_pid_dir_prefix, recursive=True, owner='root', group='root')
    Directory(os.path.dirname(params.hadoop_tmp_dir), recursive=True, owner=params.hdfs_user)
    if params.security_enabled:
        tc_owner = 'root'
    else:
        tc_owner = params.hdfs_user
    for file in ['hadoop-env.sh', 'commons-logging.properties']:
        File(os.path.join(params.hadoop_conf_dir, file), owner=tc_owner, content=Template((file + '.j2')))
    health_check_template = 'health_check-v2'
    File(os.path.join(params.hadoop_conf_dir, 'health_check'), owner=tc_owner, content=Template((health_check_template + '.j2')))
    log4j_filename = os.path.join(params.hadoop_conf_dir, 'log4j.properties')
    if (params.log4j_props != None):
        File(log4j_filename, mode=420, group=params.user_group, owner=params.hdfs_user, content=params.log4j_props)
    elif os.path.exists(format('{params.hadoop_conf_dir}/log4j.properties')):
        File(log4j_filename, mode=420, group=params.user_group, owner=params.hdfs_user)
    File(os.path.join(params.hadoop_conf_dir, 'hadoop-metrics2.properties'), owner=params.hdfs_user, content=Template('hadoop-metrics2.properties.j2'))
