{
  List<AgentCommand> cmds=actionQueue.dequeueAll(hostname);
  if (cmds != null && !cmds.isEmpty()) {
    for (    AgentCommand ac : cmds) {
      try {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Sending command string = " + StageUtils.jaxbToString(ac));
        }
      }
 catch (      Exception e) {
        throw new AmbariException("Could not get jaxb string for command",e);
      }
switch (ac.getCommandType()) {
case BACKGROUND_EXECUTION_COMMAND:
case EXECUTION_COMMAND:
{
          ExecutionCommand ec=(ExecutionCommand)ac;
          Map<String,String> hlp=ec.getHostLevelParams();
          if ((hlp != null) && "SET_KEYTAB".equals(hlp.get("custom_command"))) {
            LOG.info("SET_KEYTAB called");
            try {
              injectKeytab(ec,hostname);
            }
 catch (            IOException e) {
              throw new AmbariException("Could not inject keytab into command",e);
            }
          }
          response.addExecutionCommand((ExecutionCommand)ac);
          break;
        }
case STATUS_COMMAND:
{
        response.addStatusCommand((StatusCommand)ac);
        break;
      }
case CANCEL_COMMAND:
{
      response.addCancelCommand((CancelCommand)ac);
      break;
    }
case ALERT_DEFINITION_COMMAND:
{
    response.addAlertDefinitionCommand((AlertDefinitionCommand)ac);
    break;
  }
case ALERT_EXECUTION_COMMAND:
{
  response.addAlertExecutionCommand((AlertExecutionCommand)ac);
  break;
}
default :
LOG.error("There is no action for agent command =" + ac.getCommandType().name());
}
}
}
}
