{
  List<CommandReport> reports=heartbeat.getReports();
  for (  CommandReport report : reports) {
    LOG.debug("Received command report: " + report);
    if (RoleCommand.ACTIONEXECUTE.toString().equals(report.getRoleCommand()) || (RoleCommand.CUSTOM_COMMAND.toString().equals(report.getRoleCommand()) && !("RESTART".equals(report.getCustomCommand()) || "START".equals(report.getCustomCommand()) || "STOP".equals(report.getCustomCommand())))) {
      continue;
    }
    Cluster cl=clusterFsm.getCluster(report.getClusterName());
    String service=report.getServiceName();
    if (service == null || service.isEmpty()) {
      throw new AmbariException("Invalid command report, service: " + service);
    }
    if (actionMetadata.getActions(service.toLowerCase()).contains(report.getRole())) {
      LOG.debug(report.getRole() + " is an action - skip component lookup");
    }
 else {
      try {
        Service svc=cl.getService(service);
        ServiceComponent svcComp=svc.getServiceComponent(report.getRole());
        ServiceComponentHost scHost=svcComp.getServiceComponentHost(hostname);
        String schName=scHost.getServiceComponentName();
        if (report.getStatus().equals("COMPLETED")) {
          if (scHost.getState().equals(State.UPGRADING)) {
            scHost.setStackVersion(scHost.getDesiredStackVersion());
          }
 else           if ((report.getRoleCommand().equals(RoleCommand.START.toString()) || (report.getRoleCommand().equals(RoleCommand.CUSTOM_COMMAND.toString()) && ("START".equals(report.getCustomCommand()) || "RESTART".equals(report.getCustomCommand())))) && null != report.getConfigurationTags() && !report.getConfigurationTags().isEmpty()) {
            LOG.info("Updating applied config on service " + scHost.getServiceName() + ", component "+ scHost.getServiceComponentName()+ ", host "+ scHost.getHostName());
            scHost.updateActualConfigs(report.getConfigurationTags());
            scHost.setRestartRequired(false);
          }
          if (RoleCommand.CUSTOM_COMMAND.toString().equals(report.getRoleCommand()) && !("START".equals(report.getCustomCommand()) || "STOP".equals(report.getCustomCommand()))) {
            continue;
          }
          if (RoleCommand.START.toString().equals(report.getRoleCommand()) || (RoleCommand.CUSTOM_COMMAND.toString().equals(report.getRoleCommand()) && "START".equals(report.getCustomCommand()))) {
            scHost.handleEvent(new ServiceComponentHostStartedEvent(schName,hostname,now));
            scHost.setRestartRequired(false);
          }
 else           if (RoleCommand.STOP.toString().equals(report.getRoleCommand()) || (RoleCommand.CUSTOM_COMMAND.toString().equals(report.getRoleCommand()) && "STOP".equals(report.getCustomCommand()))) {
            scHost.handleEvent(new ServiceComponentHostStoppedEvent(schName,hostname,now));
          }
 else {
            scHost.handleEvent(new ServiceComponentHostOpSucceededEvent(schName,hostname,now));
          }
        }
 else         if (report.getStatus().equals("FAILED")) {
          LOG.warn("Operation failed - may be retried. Service component host: " + schName + ", host: "+ hostname+ " Action id"+ report.getActionId());
          if (actionManager.isInProgressCommand(report)) {
            scHost.handleEvent(new ServiceComponentHostOpFailedEvent(schName,hostname,now));
          }
 else {
            LOG.info("Received report for a command that is no longer active. " + report);
          }
        }
 else         if (report.getStatus().equals("IN_PROGRESS")) {
          scHost.handleEvent(new ServiceComponentHostOpInProgressEvent(schName,hostname,now));
        }
      }
 catch (      ServiceComponentNotFoundException scnex) {
        LOG.warn("Service component not found ",scnex);
      }
catch (      InvalidStateTransitionException ex) {
        if (LOG.isDebugEnabled()) {
          LOG.warn("State machine exception.",ex);
        }
 else {
          LOG.warn("State machine exception. " + ex.getMessage());
        }
      }
    }
  }
  actionManager.processTaskResponse(hostname,reports);
}
