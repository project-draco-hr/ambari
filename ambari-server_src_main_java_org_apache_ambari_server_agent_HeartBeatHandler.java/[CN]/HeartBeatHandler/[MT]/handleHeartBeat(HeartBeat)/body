{
  HeartBeatResponse response=new HeartBeatResponse();
  response.setResponseId(0L);
  String hostname=heartbeat.getHostname();
  Host hostObject=clusterFsm.getHost(hostname);
  try {
    hostObject.handleEvent(new HostEvent(hostname,HostEventType.HOST_HEARTBEAT_HEALTHY));
  }
 catch (  InvalidStateTransitonException ex) {
    hostObject.setState(HostState.INIT);
    RegistrationCommand regCmd=new RegistrationCommand();
    List<AgentCommand> cmds=new ArrayList<AgentCommand>();
    cmds.add(regCmd);
    response.setAgentCommands(cmds);
    return response;
  }
  List<CommandReport> reports=heartbeat.getCommandReports();
  actionManager.actionResponse(hostname,reports);
  List<Cluster> clusters=clusterFsm.getClustersForHost(hostname);
  for (  Cluster cl : clusters) {
    for (    ComponentStatus status : heartbeat.componentStatus) {
      if (status.getClusterName() == cl.getClusterName()) {
        ServiceComponentHost scHost=cl.getServiceComponentHost(status.getServiceName(),status.getComponentName(),hostname);
        ServiceComponentHostState currentState=scHost.getState();
        ServiceComponentHostLiveState liveState=ServiceComponentHostLiveState.valueOf(ServiceComponentHostLiveState.class,status.getStatus());
        scHost.setState(new ServiceComponentHostState(currentState.getConfigVersion(),currentState.getStackVersion(),liveState));
      }
    }
  }
  if (hostObject.getState().equals(HostState.HEALTHY)) {
    List<AgentCommand> cmds=actionQueue.dequeueAll(heartbeat.getHostname());
    response.setAgentCommands(cmds);
  }
  return response;
}
