{
  String hostname=register.getHostname();
  long now=System.currentTimeMillis();
  String agentVersion=register.getAgentVersion();
  String serverVersion=ambariMetaInfo.getServerVersion();
  if (!VersionUtils.areVersionsEqual(serverVersion,agentVersion,true)) {
    LOG.warn("Received registration request from host with non compatible" + " agent version" + ", hostname=" + hostname + ", agentVersion="+ agentVersion+ ", serverVersion="+ serverVersion);
    throw new AmbariException("Cannot register host with non compatible" + " agent version" + ", hostname=" + hostname + ", agentVersion="+ agentVersion+ ", serverVersion="+ serverVersion);
  }
  String agentOsType=getOsType(register.getHardwareProfile().getOS(),register.getHardwareProfile().getOSRelease());
  if (!ambariMetaInfo.isOsSupported(agentOsType)) {
    LOG.warn("Received registration request from host with not supported" + " os type" + ", hostname=" + hostname + ", serverOsType="+ config.getServerOsType()+ ", agentOstype="+ agentOsType);
    throw new AmbariException("Cannot register host with not supported" + " os type" + ", hostname=" + hostname + ", serverOsType="+ config.getServerOsType()+ ", agentOstype="+ agentOsType);
  }
  Host hostObject;
  try {
    hostObject=clusterFsm.getHost(hostname);
  }
 catch (  HostNotFoundException ex) {
    clusterFsm.addHost(hostname);
    hostObject=clusterFsm.getHost(hostname);
  }
  hostObject.setState(HostState.INIT);
  List<StatusCommand> cmds=heartbeatMonitor.generateStatusCommands(hostname);
  hostObject.handleEvent(new HostRegistrationRequestEvent(hostname,null != register.getPublicHostname() ? register.getPublicHostname() : hostname,new AgentVersion(register.getAgentVersion()),now,register.getHardwareProfile(),register.getAgentEnv()));
  RegistrationResponse response=new RegistrationResponse();
  if (cmds.isEmpty()) {
    hostObject.handleEvent(new HostStatusUpdatesReceivedEvent(hostname,now));
  }
  response.setStatusCommands(cmds);
  response.setResponseStatus(RegistrationStatus.OK);
  Long requestId=0L;
  hostResponseIds.put(hostname,requestId);
  response.setResponseId(requestId);
  return response;
}
