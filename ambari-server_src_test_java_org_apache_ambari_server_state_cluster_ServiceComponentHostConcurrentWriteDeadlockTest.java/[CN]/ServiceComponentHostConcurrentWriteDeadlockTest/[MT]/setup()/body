{
  injector=Guice.createInjector(Modules.override(new InMemoryDefaultTestModule()).with(new MockModule()));
  injector.getInstance(GuiceJpaInitializer.class);
  injector.injectMembers(this);
  clusters.addCluster("c1",stackId);
  cluster=clusters.getCluster("c1");
  helper.getOrCreateRepositoryVersion(stackId,stackId.getStackVersion());
  cluster.createClusterVersion(stackId,stackId.getStackVersion(),"admin",RepositoryVersionState.INSTALLING);
  Config config1=configFactory.createNew(cluster,"test-type1",new HashMap<String,String>(),new HashMap<String,Map<String,String>>());
  Config config2=configFactory.createNew(cluster,"test-type2",new HashMap<String,String>(),new HashMap<String,Map<String,String>>());
  config1.persist();
  config2.persist();
  cluster.addConfig(config1);
  cluster.addConfig(config2);
  cluster.addDesiredConfig("test user",new HashSet<Config>(Arrays.asList(config1,config2)));
  String hostName="c6401";
  clusters.addHost(hostName);
  setOsFamily(clusters.getHost(hostName),"redhat","6.4");
  clusters.mapHostToCluster(hostName,"c1");
  Service service=installService("HDFS");
  addServiceComponent(service,"NAMENODE");
}
