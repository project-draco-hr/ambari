{
  String stackRoot=ClassLoader.getSystemClassLoader().getResource("stacks").getPath().replace("test-classes","classes");
  String commonServices=ClassLoader.getSystemClassLoader().getResource("common-services").getPath().replace("test-classes","classes");
  MetainfoDAO metaInfoDao=createNiceMock(MetainfoDAO.class);
  StackDAO stackDao=createNiceMock(StackDAO.class);
  ActionMetadata actionMetadata=createNiceMock(ActionMetadata.class);
  Configuration config=createNiceMock(Configuration.class);
  expect(config.getSharedResourcesDirPath()).andReturn(ClassLoader.getSystemClassLoader().getResource("").getPath()).anyTimes();
  replay(config,metaInfoDao,stackDao,actionMetadata);
  OsFamily osFamily=new OsFamily(config);
  StackManager stackManager=new StackManager(new File(stackRoot),new File(commonServices),osFamily,metaInfoDao,actionMetadata,stackDao);
  String rangerUserSyncRoleCommand=Role.RANGER_USERSYNC + "-" + RoleCommand.START;
  String rangerAdminRoleCommand=Role.RANGER_ADMIN + "-" + RoleCommand.START;
  StackInfo hdp=stackManager.getStack("HDP","2.3");
  Map<String,Object> rco=hdp.getRoleCommandOrder().getContent();
  Map<String,Object> generalDeps=(Map<String,Object>)rco.get("general_deps");
  String nameNodeRoleCommand=Role.NAMENODE + "-" + RoleCommand.START;
  ArrayList<String> nameNodeBlockers=(ArrayList<String>)generalDeps.get(nameNodeRoleCommand);
  assertTrue(nameNodeRoleCommand + " should be dependent of " + rangerUserSyncRoleCommand,nameNodeBlockers.contains(rangerUserSyncRoleCommand));
  String dataNodeRoleCommand=Role.DATANODE + "-" + RoleCommand.START;
  ArrayList<String> dataNodeBlockers=(ArrayList<String>)generalDeps.get(dataNodeRoleCommand);
  assertTrue(dataNodeRoleCommand + " should be dependent of " + rangerUserSyncRoleCommand,dataNodeBlockers.contains(rangerUserSyncRoleCommand));
  String resourceManagerCommandRoleCommand=Role.RESOURCEMANAGER + "-" + RoleCommand.START;
  ArrayList<String> resourceManagerBlockers=(ArrayList<String>)generalDeps.get(resourceManagerCommandRoleCommand);
  assertTrue(resourceManagerCommandRoleCommand + " should be dependent of " + rangerUserSyncRoleCommand,resourceManagerBlockers.contains(rangerUserSyncRoleCommand));
  String hbaseRoleCommand=Role.HBASE_MASTER + "-" + RoleCommand.START;
  ArrayList<String> hbaseBlockers=(ArrayList<String>)generalDeps.get(hbaseRoleCommand);
  assertTrue(hbaseRoleCommand + " should be dependent of " + rangerUserSyncRoleCommand,hbaseBlockers.contains(rangerUserSyncRoleCommand));
  String knoxRoleCommand=Role.KNOX_GATEWAY + "-" + RoleCommand.START;
  ArrayList<String> knoxBlockers=(ArrayList<String>)generalDeps.get(knoxRoleCommand);
  assertTrue(knoxRoleCommand + " should be dependent of " + rangerUserSyncRoleCommand,knoxBlockers.contains(rangerUserSyncRoleCommand));
  String kafkaRoleCommand=Role.KAFKA_BROKER + "-" + RoleCommand.START;
  ArrayList<String> kafkaBlockers=(ArrayList<String>)generalDeps.get(kafkaRoleCommand);
  assertTrue(Role.KAFKA_BROKER + "-" + RoleCommand.START+ " should be dependent of "+ rangerUserSyncRoleCommand,kafkaBlockers.contains(rangerUserSyncRoleCommand));
  String hiveRoleCommand=Role.HIVE_SERVER + "-" + RoleCommand.START;
  ArrayList<String> hiveBlockers=(ArrayList<String>)generalDeps.get(hiveRoleCommand);
  assertTrue(hiveRoleCommand + " should be dependent of " + rangerUserSyncRoleCommand,hiveBlockers.contains(rangerUserSyncRoleCommand));
  String stormRoleCommand=Role.NIMBUS + "-" + RoleCommand.START;
  ArrayList<String> stormBlockers=(ArrayList<String>)generalDeps.get(stormRoleCommand);
  assertTrue(stormRoleCommand + " should be dependent of " + rangerUserSyncRoleCommand,stormBlockers.contains(rangerUserSyncRoleCommand));
  String kmsRoleCommand=Role.RANGER_KMS_SERVER + "-" + RoleCommand.START;
  ArrayList<String> rangerKmsBlockers=(ArrayList<String>)generalDeps.get(kmsRoleCommand);
  assertTrue(kmsRoleCommand + " should be dependent of " + rangerAdminRoleCommand,rangerKmsBlockers.contains(rangerAdminRoleCommand));
  ArrayList<String> rangerUserSyncBlockers=(ArrayList<String>)generalDeps.get(rangerUserSyncRoleCommand);
  assertTrue(rangerUserSyncRoleCommand + " should be dependent of " + rangerAdminRoleCommand,rangerUserSyncBlockers.contains(rangerAdminRoleCommand));
  assertTrue(rangerUserSyncRoleCommand + " should be dependent of " + kmsRoleCommand,rangerUserSyncBlockers.contains(kmsRoleCommand));
  String zookeeperServerRoleCommand=Role.ZOOKEEPER_SERVER + "-" + RoleCommand.START;
  ArrayList<String> zookeeperBlockers=(ArrayList<String>)generalDeps.get(zookeeperServerRoleCommand);
  assertTrue(zookeeperServerRoleCommand + " should be dependent of " + rangerUserSyncRoleCommand,zookeeperBlockers.contains(rangerUserSyncRoleCommand));
}
