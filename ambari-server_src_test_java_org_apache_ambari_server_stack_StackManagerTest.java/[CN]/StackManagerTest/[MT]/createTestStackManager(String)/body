{
  metaInfoDao=createNiceMock(MetainfoDAO.class);
  stackDao=createNiceMock(StackDAO.class);
  extensionDao=createNiceMock(ExtensionDAO.class);
  linkDao=createNiceMock(ExtensionLinkDAO.class);
  actionMetadata=createNiceMock(ActionMetadata.class);
  Configuration config=createNiceMock(Configuration.class);
  ExtensionEntity extensionEntity=createNiceMock(ExtensionEntity.class);
  expect(config.getSharedResourcesDirPath()).andReturn(ClassLoader.getSystemClassLoader().getResource("").getPath()).anyTimes();
  expect(extensionDao.find(EasyMock.anyObject(String.class),EasyMock.anyObject(String.class))).andReturn(extensionEntity).atLeastOnce();
  List<ExtensionLinkEntity> list=Collections.emptyList();
  expect(linkDao.findByStack(EasyMock.anyObject(String.class),EasyMock.anyObject(String.class))).andReturn(list).atLeastOnce();
  replay(config,metaInfoDao,stackDao,extensionDao,linkDao,actionMetadata);
  osFamily=new OsFamily(config);
  StackManager stackManager=new StackManager(new File(stackRoot),null,null,osFamily,false,metaInfoDao,actionMetadata,stackDao,extensionDao,linkDao);
  verify(config,metaInfoDao,stackDao,actionMetadata);
  return stackManager;
}
