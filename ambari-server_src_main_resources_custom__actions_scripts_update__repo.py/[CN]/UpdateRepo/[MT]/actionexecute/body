def actionexecute(self, env):
    config = Script.get_config()
    structured_output = {}
    try:
        repo_info_json = config['hostLevelParams']['repo_info']
        repo_info_dict = json.loads(repo_info_json)
        for item in repo_info_dict['repositories']:
            base_url = item['base_url']
            repo_name = item['repo_name']
            repo_id = item['repo_id']
            repo_rhel_suse = config['configurations']['cluster-env']['repo_suse_rhel_template']
            repo_ubuntu = config['configurations']['cluster-env']['repo_ubuntu_template']
            template = (repo_rhel_suse if (OSCheck.is_suse_family() or OSCheck.is_redhat_family()) else repo_ubuntu)
            ubuntu_components = ([repo_name] + self.UBUNTU_REPO_COMPONENTS_POSTFIX)
            Repository(repo_id, action='create', base_url=base_url, mirror_list=None, repo_file_name=repo_name, repo_template=template, components=ubuntu_components)
            structured_output['repo_update'] = {'exit_code': 0, 'message': format('Repository files successfully updated!'), }
    except Exception as exception:
        Logger.logger.exception('ERROR: There was an unexpected error while updating repositories')
        raise Fail('Failed to update repo files!')
    self.put_structured_out(structured_output)
