{
  LOG.info("Preparing Storm Metrics Reporter");
  try {
    try {
      hostname=InetAddress.getLocalHost().getHostName();
      if ((hostname == null) || (!hostname.contains("."))) {
        hostname=InetAddress.getLocalHost().getCanonicalHostName();
      }
    }
 catch (    UnknownHostException e) {
      LOG.error("Could not identify hostname.");
      throw new RuntimeException("Could not identify hostname.",e);
    }
    Validate.notNull(conf.get(METRICS_COLLECTOR_CATEGORY),METRICS_COLLECTOR_CATEGORY + " can not be null");
    Map cf=(Map)conf.get(METRICS_COLLECTOR_CATEGORY);
    Map stormConf=Utils.readStormConfig();
    this.nimbusClient=NimbusClient.getConfiguredClient(stormConf);
    String collector=cf.get(COLLECTOR_PROPERTY).toString();
    timeoutSeconds=cf.get(METRICS_POST_TIMEOUT_SECONDS) != null ? Integer.parseInt(cf.get(METRICS_POST_TIMEOUT_SECONDS).toString()) : DEFAULT_POST_TIMEOUT_SECONDS;
    applicationId=cf.get(APP_ID).toString();
    collectorUri=collector + WS_V1_TIMELINE_METRICS;
    if (collectorUri.toLowerCase().startsWith("https://")) {
      String trustStorePath=cf.get(SSL_KEYSTORE_PATH_PROPERTY).toString().trim();
      String trustStoreType=cf.get(SSL_KEYSTORE_TYPE_PROPERTY).toString().trim();
      String trustStorePwd=cf.get(SSL_KEYSTORE_PASSWORD_PROPERTY).toString().trim();
      loadTruststore(trustStorePath,trustStoreType,trustStorePwd);
    }
  }
 catch (  Exception e) {
    LOG.warn("Could not initialize metrics collector, please specify " + "protocol, host, port under $STORM_HOME/conf/config.yaml ",e);
  }
}
