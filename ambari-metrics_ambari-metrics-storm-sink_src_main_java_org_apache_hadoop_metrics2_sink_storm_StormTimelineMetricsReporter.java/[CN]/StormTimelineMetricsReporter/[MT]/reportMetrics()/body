{
  List<TimelineMetric> totalMetrics=new ArrayList<TimelineMetric>(7);
  ClusterSummary cs=this.nimbusClient.getClient().getClusterInfo();
  long currentTimeMillis=System.currentTimeMillis();
  totalMetrics.add(createTimelineMetric(currentTimeMillis,APP_ID,"Supervisors",String.valueOf(cs.get_supervisors_size())));
  totalMetrics.add(createTimelineMetric(currentTimeMillis,APP_ID,"Topologies",String.valueOf(cs.get_topologies_size())));
  List<SupervisorSummary> sups=cs.get_supervisors();
  int totalSlots=0;
  int usedSlots=0;
  for (  SupervisorSummary ssum : sups) {
    totalSlots+=ssum.get_num_workers();
    usedSlots+=ssum.get_num_used_workers();
  }
  int freeSlots=totalSlots - usedSlots;
  totalMetrics.add(createTimelineMetric(currentTimeMillis,APP_ID,"Total Slots",String.valueOf(totalSlots)));
  totalMetrics.add(createTimelineMetric(currentTimeMillis,APP_ID,"Used Slots",String.valueOf(usedSlots)));
  totalMetrics.add(createTimelineMetric(currentTimeMillis,APP_ID,"Free Slots",String.valueOf(freeSlots)));
  List<TopologySummary> topos=cs.get_topologies();
  int totalExecutors=0;
  int totalTasks=0;
  for (  TopologySummary topo : topos) {
    totalExecutors+=topo.get_num_executors();
    totalTasks+=topo.get_num_tasks();
  }
  totalMetrics.add(createTimelineMetric(currentTimeMillis,APP_ID,"Total Executors",String.valueOf(totalExecutors)));
  totalMetrics.add(createTimelineMetric(currentTimeMillis,APP_ID,"Total Tasks",String.valueOf(totalTasks)));
  TimelineMetrics timelineMetrics=new TimelineMetrics();
  timelineMetrics.setMetrics(totalMetrics);
  emitMetrics(timelineMetrics);
}
