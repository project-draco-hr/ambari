@patch.object(configs, 'output_to_file')
@patch('urllib2.urlopen')
def test_update_specific_config_with_attributes(self, urlopen_method, to_file_method):

    def update_check(request_body):
        self.assertEquals(request_body['Clusters']['desired_configs']['properties'], {'config1': 'value4', 'config2': 'value2', 'config3': 'value3', })
        self.assertEquals(request_body['Clusters']['desired_configs']['properties_attributes'], {'final': {'config1': 'true', 'config3': 'true', }, })
    response_mapping = {'GET': {'body': {'https://localhost:8081/api/v1/clusters/cluster2?fields=Clusters/desired_configs': '{"Clusters":{"desired_configs":{"hdfs-site":{"tag":"version12"}}}}', 'https://localhost:8081/api/v1/clusters/cluster2/configurations?type=hdfs-site&tag=version12': '{"items":[{"properties":{"config1": "value1", "config2": "value2", "config3": "value3"}, "properties_attributes":{"final":{"config1": "true", "config3": "true"}}}]}', }, }, 'PUT': {'request_assertion': {'https://localhost:8081/api/v1/clusters/cluster2': update_check, }, }, }
    urlopen_method.side_effect = self.get_url_open_side_effect(response_mapping)
    sys.argv = ['configs.py', 'user', 'password', '8081', 'https', 'set', 'localhost', 'cluster2', 'hdfs-site', 'config1', 'value4']
    configs.main()
