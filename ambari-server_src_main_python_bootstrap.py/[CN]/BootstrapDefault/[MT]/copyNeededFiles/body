def copyNeededFiles(self):
    params = self.shared_state
    fileToCopy = self.getRepoFile()
    target = self.getRemoteName(self.AMBARI_REPO_FILENAME)
    if os.path.exists(fileToCopy):
        self.host_log.write('==========================\n')
        self.host_log.write("Copying repo file to 'tmp' folder...")
        scp = SCP(params.user, params.sshPort, params.sshkey_file, self.host, fileToCopy, target, params.bootdir, self.host_log)
        retcode1 = scp.run()
        self.host_log.write('\n')
        self.host_log.write('==========================\n')
        self.host_log.write('Moving file to repo dir...')
        targetDir = self.getRepoDir()
        command = self.getMoveRepoFileCommand(targetDir)
        ssh = SSH(params.user, params.sshPort, params.sshkey_file, self.host, command, params.bootdir, self.host_log)
        retcode2 = ssh.run()
        self.host_log.write('\n')
        self.host_log.write('==========================\n')
        self.host_log.write('Changing permissions for ambari.repo...')
        command = self.getRepoFileChmodCommand()
        ssh = SSH(params.user, params.sshPort, params.sshkey_file, self.host, command, params.bootdir, self.host_log)
        retcode4 = ssh.run()
        self.host_log.write('\n')
        if OSCheck.is_ubuntu_family():
            self.host_log.write('==========================\n')
            self.host_log.write('Update apt cache of repository...')
            command = self.getAptUpdateCommand()
            ssh = SSH(params.user, params.sshPort, params.sshkey_file, self.host, command, params.bootdir, self.host_log)
            retcode2 = ssh.run()
            self.host_log.write('\n')
        retcode = max(retcode1['exitstatus'], retcode2['exitstatus'], retcode4['exitstatus'])
    else:
        self.host_log.write('==========================\n')
        self.host_log.write('Copying required files...')
        self.host_log.write('Ambari repo file not found: {0}'.format(self.getRepoFile()))
        retcode = (-1)
        pass
    self.host_log.write('==========================\n')
    self.host_log.write('Copying setup script file...')
    fileToCopy = params.setup_agent_file
    target = self.getRemoteName(self.SETUP_SCRIPT_FILENAME)
    scp = SCP(params.user, params.sshPort, params.sshkey_file, self.host, fileToCopy, target, params.bootdir, self.host_log)
    retcode3 = scp.run()
    self.host_log.write('\n')
    return max(retcode, retcode3['exitstatus'])
