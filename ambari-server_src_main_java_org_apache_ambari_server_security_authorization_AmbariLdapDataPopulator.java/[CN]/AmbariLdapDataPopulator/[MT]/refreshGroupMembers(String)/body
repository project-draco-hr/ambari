{
  final Set<String> externalMembers=getExternalLdapGroupMembers(groupName);
  final Map<String,User> internalUsers=getInternalUsers();
  final Map<String,User> internalMembers=getInternalMembers(groupName);
  for (  String externalMember : externalMembers) {
    if (internalUsers.containsKey(externalMember)) {
      final User user=internalUsers.get(externalMember);
      if (!user.isLdapUser()) {
        users.setUserLdap(externalMember);
      }
      if (!internalMembers.containsKey(externalMember)) {
        users.addMemberToGroup(groupName,externalMember);
      }
      internalMembers.remove(externalMember);
      internalUsers.remove(externalMember);
    }
 else {
      users.createUser(externalMember,"",true,false);
      users.setUserLdap(externalMember);
    }
  }
  for (  Entry<String,User> userToBeUnsynced : internalMembers.entrySet()) {
    final User user=userToBeUnsynced.getValue();
    users.removeMemberFromGroup(groupName,user.getUserName());
  }
}
