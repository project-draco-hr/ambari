{
  this.configuration=configuration;
  String instancePort;
  try {
    instanceHostname=configuration.getInstanceHostnameFromEnv();
    instancePort=configuration.getInstancePort();
  }
 catch (  Exception e) {
    LOG.error("Error reading configs from classpath, will resort to defaults.",e);
    throw new MetricsSystemInitializationException(e.getMessage());
  }
  try {
    String zkClientPort=configuration.getZKClientPort();
    String zkQuorum=configuration.getZKQuorum();
    if (StringUtils.isEmpty(zkClientPort) || StringUtils.isEmpty(zkQuorum)) {
      throw new Exception("Unable to parse zookeeper quorum. clientPort = " + zkClientPort + ", quorum = "+ zkQuorum);
    }
    zkConnectUrl=getZkConnectionUrl(zkClientPort,zkQuorum);
  }
 catch (  Exception e) {
    LOG.error("Unable to load hbase-site from classpath.",e);
    throw new MetricsSystemInitializationException(e.getMessage());
  }
  instanceConfig=new InstanceConfig(instanceHostname + INSTANCE_NAME_DELIMITER + instancePort);
  instanceConfig.setHostName(instanceHostname);
  instanceConfig.setPort(instancePort);
  instanceConfig.setInstanceEnabled(true);
  aggregationTaskRunner=new AggregationTaskRunner(instanceConfig.getInstanceName(),zkConnectUrl,getClusterName());
}
