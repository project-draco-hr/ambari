{
  for (  Input input : inputList) {
    try {
      input.setDrain(true);
    }
 catch (    Throwable t) {
      LOG.error("Error while draining. input=" + input.getShortDescription(),t);
    }
  }
  isDrain=true;
  int iterations=30;
  int waitTimeMS=1000;
  for (int i=0; i < iterations; i++) {
    boolean allClosed=true;
    for (    Input input : inputList) {
      if (!input.isClosed()) {
        try {
          allClosed=false;
          LOG.warn("Waiting for input to close. " + input.getShortDescription() + ", "+ (iterations - i)+ " more seconds");
          Thread.sleep(waitTimeMS);
        }
 catch (        Throwable t) {
        }
      }
    }
    if (allClosed) {
      LOG.info("All inputs are closed. Iterations=" + i);
      return;
    }
  }
  LOG.warn("Some inputs were not closed after " + iterations + " iterations");
  for (  Input input : inputList) {
    if (!input.isClosed()) {
      LOG.warn("Input not closed. Will ignore it." + input.getShortDescription());
    }
  }
}
