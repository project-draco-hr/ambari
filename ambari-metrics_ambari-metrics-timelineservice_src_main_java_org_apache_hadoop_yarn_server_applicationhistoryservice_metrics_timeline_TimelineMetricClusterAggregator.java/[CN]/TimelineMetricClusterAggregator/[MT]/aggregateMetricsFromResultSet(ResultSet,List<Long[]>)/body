{
  Map<TimelineClusterMetric,MetricClusterAggregate> aggregateClusterMetrics=new HashMap<TimelineClusterMetric,MetricClusterAggregate>();
  while (rs.next()) {
    TimelineMetric metric=timelineMetricReader.getTimelineMetricFromResultSet(rs);
    Map<TimelineClusterMetric,Double> clusterMetrics=sliceFromTimelineMetric(metric,timeSlices);
    if (clusterMetrics != null && !clusterMetrics.isEmpty()) {
      for (      Map.Entry<TimelineClusterMetric,Double> clusterMetricEntry : clusterMetrics.entrySet()) {
        TimelineClusterMetric clusterMetric=clusterMetricEntry.getKey();
        MetricClusterAggregate aggregate=aggregateClusterMetrics.get(clusterMetric);
        Double avgValue=clusterMetricEntry.getValue();
        if (aggregate == null) {
          aggregate=new MetricClusterAggregate(avgValue,1,null,avgValue,avgValue);
          aggregateClusterMetrics.put(clusterMetric,aggregate);
        }
 else {
          aggregate.updateSum(avgValue);
          aggregate.updateNumberOfHosts(1);
          aggregate.updateMax(avgValue);
          aggregate.updateMin(avgValue);
        }
      }
    }
  }
  return aggregateClusterMetrics;
}
