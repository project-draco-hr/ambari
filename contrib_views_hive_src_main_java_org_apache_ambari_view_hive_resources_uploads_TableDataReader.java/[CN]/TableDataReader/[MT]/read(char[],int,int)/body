{
  int totalLen=len;
  int count=0;
  do {
    int n=stringReader.read(cbuf,off,len);
    if (n != -1) {
      len=len - n;
      off=off + n;
      count+=n;
    }
    if (count == totalLen)     return count;
    if (iterator.hasNext()) {
      StringWriter stringWriter=new StringWriter(CAPACITY);
      CSVWriter csvPrinter=new CSVWriter(stringWriter,CSV_DELIMITER);
      Row row=iterator.next();
      Object[] columnValues=row.getRow();
      String[] columns=new String[columnValues.length];
      for (int i=0; i < columnValues.length; i++) {
        String type=header.get(i).getType();
        if (this.encode && (ColumnDescription.DataTypes.STRING.toString().equals(type) || ColumnDescription.DataTypes.VARCHAR.toString().equals(type) || ColumnDescription.DataTypes.CHAR.toString().equals(type))) {
          columns[i]=Hex.encodeHexString(((String)columnValues[i]).getBytes());
        }
 else {
          columns[i]=(String)columnValues[i];
        }
      }
      csvPrinter.writeNext(columns,false);
      stringReader.close();
      stringReader=new StringReader(stringWriter.getBuffer().toString());
      csvPrinter.close();
      stringWriter.close();
    }
 else {
      return count == 0 ? -1 : count;
    }
  }
 while (count < totalLen);
  return count;
}
