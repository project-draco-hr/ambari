{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  ViewInstanceEntity viewInstanceEntity=ViewInstanceEntityTest.getViewInstanceEntity();
  Resource.Type type=new Resource.Type("subResource");
  ViewSubResourceService service=new TestViewSubResourceService(type,viewInstanceEntity);
  Method m=service.getClass().getMethod("getSubResource1",HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{getHttpHeaders(),getUriInfo(),"id"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestViewSubResourceService(type,viewInstanceEntity);
  m=service.getClass().getMethod("getSubResource2",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"id"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestViewSubResourceService(type,viewInstanceEntity);
  m=service.getClass().getMethod("postSubResource",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"id"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,service,m,args,null));
  service=new TestViewSubResourceService(type,viewInstanceEntity);
  m=service.getClass().getMethod("putSubResource",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"id"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,service,m,args,null));
  service=new TestViewSubResourceService(type,viewInstanceEntity);
  m=service.getClass().getMethod("deleteSubResource",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"id"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,service,m,args,null));
  return listInvocations;
}
