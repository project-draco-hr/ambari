def hbase(name=None):
    import params
    Directory(params.hbase_conf_dir, owner=params.hbase_user, group=params.user_group, recursive=True)
    Directory(params.tmp_dir, owner=params.hbase_user, recursive=True)
    XmlConfig('hbase-site.xml', conf_dir=params.hbase_conf_dir, configurations=params.config['configurations']['hbase-site'], configuration_attributes=params.config['configuration_attributes']['hbase-site'], owner=params.hbase_user, group=params.user_group)
    XmlConfig('hdfs-site.xml', conf_dir=params.hbase_conf_dir, configurations=params.config['configurations']['hdfs-site'], configuration_attributes=params.config['configuration_attributes']['hdfs-site'], owner=params.hbase_user, group=params.user_group)
    XmlConfig('hdfs-site.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['hdfs-site'], configuration_attributes=params.config['configuration_attributes']['hdfs-site'], owner=params.hdfs_user, group=params.user_group)
    if ('hbase-policy' in params.config['configurations']):
        XmlConfig('hbase-policy.xml', conf_dir=params.hbase_conf_dir, configurations=params.config['configurations']['hbase-policy'], configuration_attributes=params.config['configuration_attributes']['hbase-policy'], owner=params.hbase_user, group=params.user_group)
    else:
        File(format('{hbase_conf_dir}/hbase-policy.xml'), owner=params.hbase_user, group=params.user_group)
    File(format('{hbase_conf_dir}/hbase-env.sh'), owner=params.hbase_user, content=InlineTemplate(params.hbase_env_sh_template))
    hbase_TemplateConfig(params.metric_prop_file_name, tag=('GANGLIA-MASTER' if (name == 'master') else 'GANGLIA-RS'))
    hbase_TemplateConfig('regionservers')
    if params.security_enabled:
        hbase_TemplateConfig(format('hbase_{name}_jaas.conf'))
    if (name != 'client'):
        Directory(params.pid_dir, owner=params.hbase_user, recursive=True)
        Directory(params.log_dir, owner=params.hbase_user, recursive=True)
    if (params.log4j_props != None):
        File(format('{params.hbase_conf_dir}/log4j.properties'), mode=420, group=params.user_group, owner=params.hbase_user, content=params.log4j_props)
    elif os.path.exists(format('{params.hbase_conf_dir}/log4j.properties')):
        File(format('{params.hbase_conf_dir}/log4j.properties'), mode=420, group=params.user_group, owner=params.hbase_user)
    if (name in ['regionserver', 'master']):
        params.HdfsDirectory(params.hbase_hdfs_root_dir, action='create_delayed', owner=params.hbase_user)
        params.HdfsDirectory(params.hbase_staging_dir, action='create_delayed', owner=params.hbase_user, mode=457)
        params.HdfsDirectory(None, action='create')
