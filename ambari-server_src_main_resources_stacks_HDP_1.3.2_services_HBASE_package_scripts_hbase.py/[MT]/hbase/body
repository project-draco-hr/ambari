def hbase(type=None):
    import params
    Directory(params.conf_dir, owner=params.hbase_user, group=params.user_group, recursive=True)
    Directory(params.tmp_dir, owner=params.hbase_user, recursive=True)
    XmlConfig('hbase-site.xml', conf_dir=params.conf_dir, configurations=params.config['configurations']['hbase-site'], owner=params.hbase_user, group=params.user_group)
    XmlConfig('hdfs-site.xml', conf_dir=params.conf_dir, configurations=params.config['configurations']['hdfs-site'], owner=params.hbase_user, group=params.user_group)
    if ('hbase-policy' in params.config['configurations']):
        XmlConfig('hbase-policy.xml', configurations=params.config['configurations']['hbase-policy'], owner=params.hbase_user, group=params.user_group)
    else:
        File(format('{conf_dir}/hbase-policy.xml'), owner=params.hbase_user, group=params.user_group)
    hbase_TemplateConfig('hbase-env.sh')
    hbase_TemplateConfig(params.metric_prop_file_name, tag=('GANGLIA-MASTER' if (type == 'master') else 'GANGLIA-RS'))
    hbase_TemplateConfig('regionservers')
    if params.security_enabled:
        hbase_TemplateConfig(format('hbase_{type}_jaas.conf'))
    if (type != 'client'):
        Directory(params.pid_dir, owner=params.hbase_user, recursive=True)
        Directory(params.log_dir, owner=params.hbase_user, recursive=True)
    if (params.log4j_props != None):
        PropertiesFile('log4j.properties', dir=params.conf_dir, properties=params.log4j_props, mode=436, owner=params.hbase_user, group=params.user_group)
    elif os.path.exists(format('{params.conf_dir}/log4j.properties')):
        File(format('{params.conf_dir}/log4j.properties'), mode=420, group=params.user_group, owner=params.hbase_user)
