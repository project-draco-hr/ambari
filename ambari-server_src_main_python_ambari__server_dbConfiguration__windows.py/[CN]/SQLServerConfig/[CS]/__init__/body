def __init__(self, options, properties):
    super(SQLServerConfig, self).__init__(options, properties)
    '\n    #Just load the defaults. The derived classes will be able to modify them later\n    '
    self.dbms = DATABASE_DBMS
    self.driver_name = DATABASE_DRIVER_NAME
    self.database_host = (options.database_host if ((options.database_host is not None) and (options.database_host is not '')) else properties.get_property(self.dbPropKeys.server_key))
    try:
        if ((self.database_host is None) or (self.database_host is '')):
            self.database_host = options.default_database_host
        else:
            self.database_host = compress_backslashes(self.database_host)
    except:
        self.database_host = 'localhost\\SQLEXPRESS'
        pass
    self.database_port = (options.database_port if ((options.database_port is not None) and (options.database_port is not '')) else properties.get_property(self.dbPropKeys.port_key))
    self.database_name = (options.database_name if ((options.database_name is not None) and (options.database_name is not '')) else properties.get_property(self.dbPropKeys.db_name_key))
    self.use_windows_authentication = (options.database_windows_auth if (options.database_windows_auth is True) else properties.get_property(self.dbAuthKeys.integrated_auth_key))
    self.database_username = (options.database_username if ((options.database_username is not None) and (options.database_username is not '')) else properties.get_property(self.dbAuthKeys.user_name_key))
    self.database_password = (options.database_password if ((options.database_password is not None) and (options.database_password is not '')) else '')
    self.password_file = properties[self.dbAuthKeys.password_key]
    self.database_url = self._build_sql_server_connection_string()
    self.persistence_property = None
    self.db_title = ''
    self.env_var_db_name = ''
    self.env_var_db_log_name = ''
    self.env_var_db_owner = ''
    self.init_script_file = ''
    self.drop_tables_script_file = ''
