@patch('platform.linux_distribution')
def test_os_type_check(self, mock_linux_distribution):
    mock_linux_distribution.return_value = ('aaa', '11', 'bb')
    base_args = ['os_check_type.py', 'aaa11']
    sys.argv = list(base_args)
    try:
        os_check_type.main()
    except SystemExit as e:
        self.assertEquals('0', str(e))
    mock_linux_distribution.return_value = ('ddd', '33', 'bb')
    base_args = ['os_check_type.py', 'zzz_x77']
    sys.argv = list(base_args)
    try:
        os_check_type.main()
        self.fail("Must fail because os's not compatible.")
    except Exception as e:
        self.assertEquals('Local OS is not compatible with cluster primary OS. Please perform manual bootstrap on this host.', str(e))
        pass
