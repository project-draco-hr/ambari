{
  String username=((User)SecurityContextHolder.getContext().getAuthentication().getPrincipal()).getUsername();
switch (request.getRequestType()) {
case POST:
    return AddRepositoryVersionRequestAuditEvent.builder().withTimestamp(System.currentTimeMillis()).withRequestType(request.getRequestType()).withResultStatus(result.getStatus()).withUrl(request.getURI()).withRemoteIp(request.getRemoteAddress()).withUserName(username).withStackName(getProperty(request,PropertyHelper.getPropertyId("RepositoryVersions","stack_name"))).withStackVersion(getProperty(request,PropertyHelper.getPropertyId("RepositoryVersions","stack_version"))).withDisplayName(getProperty(request,PropertyHelper.getPropertyId("RepositoryVersions","display_name"))).withRepoVersion(getProperty(request,PropertyHelper.getPropertyId("RepositoryVersions","repository_version"))).withRepos(getRepos(request)).build();
case PUT:
  return ChangeRepositoryVersionRequestAuditEvent.builder().withTimestamp(System.currentTimeMillis()).withRequestType(request.getRequestType()).withResultStatus(result.getStatus()).withUrl(request.getURI()).withRemoteIp(request.getRemoteAddress()).withUserName(username).withStackName(getProperty(request,PropertyHelper.getPropertyId("RepositoryVersions","stack_name"))).withStackVersion(getProperty(request,PropertyHelper.getPropertyId("RepositoryVersions","stack_version"))).withDisplayName(getProperty(request,PropertyHelper.getPropertyId("RepositoryVersions","display_name"))).withRepoVersion(getProperty(request,PropertyHelper.getPropertyId("RepositoryVersions","repository_version"))).withRepos(getRepos(request)).build();
case DELETE:
return DeleteRepositoryVersionRequestAuditEvent.builder().withTimestamp(System.currentTimeMillis()).withRequestType(request.getRequestType()).withResultStatus(result.getStatus()).withUrl(request.getURI()).withRemoteIp(request.getRemoteAddress()).withUserName(username).withStackName(request.getResource().getKeyValueMap().get(Resource.Type.Stack)).withStackVersion(request.getResource().getKeyValueMap().get(Resource.Type.StackVersion)).withRepoVersion(request.getResource().getKeyValueMap().get(Resource.Type.RepositoryVersion)).build();
default :
return null;
}
}
