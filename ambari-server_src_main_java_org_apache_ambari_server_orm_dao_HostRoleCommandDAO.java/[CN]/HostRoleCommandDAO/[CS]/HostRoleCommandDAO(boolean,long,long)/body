{
  this.hostRoleCommandStatusSummaryCacheEnabled=hostRoleCommandStatusSummaryCacheEnabled;
  LOG.info("Host role command status summary cache {} !",hostRoleCommandStatusSummaryCacheEnabled ? "enabled" : "disabled");
  hrcStatusSummaryCache=CacheBuilder.newBuilder().maximumSize(hostRoleCommandStatusSummaryCacheLimit).expireAfterWrite(hostRoleCommandStatusSummaryCacheExpiryDurationMins,TimeUnit.MINUTES).build(new CacheLoader<Long,Map<Long,HostRoleCommandStatusSummaryDTO>>(){
    @Override public Map<Long,HostRoleCommandStatusSummaryDTO> load(    Long requestId) throws Exception {
      LOG.debug("Cache miss for host role command status summary object for request {}, fetching from JPA",requestId);
      ReadWriteLock lock=transactionLocks.getLock(LockArea.HRC_STATUS_CACHE);
      lock.readLock().lock();
      try {
        Map<Long,HostRoleCommandStatusSummaryDTO> hrcCommandStatusByStageId=loadAggregateCounts(requestId);
        return hrcCommandStatusByStageId;
      }
  finally {
        lock.readLock().unlock();
      }
    }
  }
);
}
