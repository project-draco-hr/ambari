{
  AmbariContext ambariContext=createNiceMock(AmbariContext.class);
  expect(ambariContext.getClusterName(anyLong())).andReturn("clusterName").anyTimes();
  PowerMock.mockStatic(AmbariContext.class);
  expect(AmbariContext.getClusterController()).andReturn(clusterController).anyTimes();
  reset(topology);
  HostGroupInfo group1Info=new HostGroupInfo("host_group_1");
  group1Info.addHost("host1");
  group1Info.setConfiguration(emptyConfiguration);
  HostGroupInfo group2Info=new HostGroupInfo("host_group_2");
  Map<String,HostGroupInfo> groupInfoMap=new HashMap<String,HostGroupInfo>();
  group2Info.addHosts(Arrays.asList("host2","host3"));
  group2Info.setConfiguration(emptyConfiguration);
  groupInfoMap.put("host_group_1",group1Info);
  groupInfoMap.put("host_group_2",group2Info);
  expect(topology.isNameNodeHAEnabled()).andReturn(false).anyTimes();
  expect(topology.getConfiguration()).andReturn(clusterConfig).anyTimes();
  expect(topology.getBlueprint()).andReturn(blueprint).anyTimes();
  expect(topology.getHostGroupInfo()).andReturn(groupInfoMap).anyTimes();
  expect(topology.getClusterId()).andReturn(new Long(1)).anyTimes();
  expect(topology.getAmbariContext()).andReturn(ambariContext).anyTimes();
  expect(topology.isClusterKerberosEnabled()).andReturn(true).anyTimes();
  ResourceProvider resourceProvider=createStrictMock(ResourceProvider.class);
  expect(clusterController.ensureResourceProvider(Resource.Type.Artifact)).andReturn(resourceProvider).once();
  Resource resource=createStrictMock(Resource.class);
  Set<Resource> result=Collections.singleton(resource);
  expect(resourceProvider.getResources((Request)anyObject(Request.class),(Predicate)anyObject(Predicate.class))).andReturn(result).once();
  Map<String,Map<String,Object>> resourcePropertiesMap=new HashMap<>();
  resourcePropertiesMap.put(ArtifactResourceProvider.ARTIFACT_DATA_PROPERTY,Collections.<String,Object>emptyMap());
  Map<String,Object> propertiesMap=new HashMap<>();
  propertiesMap.put("testProperty","testValue");
  resourcePropertiesMap.put(ArtifactResourceProvider.ARTIFACT_DATA_PROPERTY + "/properties",propertiesMap);
  expect(resource.getPropertiesMap()).andReturn(resourcePropertiesMap).once();
  PowerMock.replay(AmbariContext.class);
  replay(ambariContext,topology,clusterController,resource,resourceProvider);
}
