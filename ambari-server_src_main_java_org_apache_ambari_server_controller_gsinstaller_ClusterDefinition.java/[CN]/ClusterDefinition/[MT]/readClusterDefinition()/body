{
  InputStream is=null;
  try {
    is=this.getClass().getClassLoader().getResourceAsStream(CLUSTER_DEFINITION_FILE);
    BufferedReader br=new BufferedReader(new InputStreamReader(is));
    String line;
    while ((line=br.readLine()) != null) {
      line=line.trim();
      if (line.startsWith(CLUSTER_NAME_TAG)) {
        clusterName=line.substring(CLUSTER_NAME_TAG.length());
      }
 else       if (line.startsWith(VERSION_ID_TAG)) {
        versionId=line.substring(VERSION_ID_TAG.length());
      }
 else {
        String[] parts=line.split("\\s+");
        assert(parts.length == 3);
        String serviceName=parts[0];
        String componentName=parts[1];
        String hostName=parts[2];
        if (componentNameMap.containsKey(componentName)) {
          componentName=componentNameMap.get(componentName);
        }
        services.add(serviceName);
        Set<String> serviceComponents=components.get(serviceName);
        if (serviceComponents == null) {
          serviceComponents=new HashSet<String>();
          components.put(serviceName,serviceComponents);
        }
        serviceComponents.add(componentName);
        Map<String,Set<String>> serviceHostComponents=hostComponents.get(serviceName);
        if (serviceHostComponents == null) {
          serviceHostComponents=new HashMap<String,Set<String>>();
          hostComponents.put(serviceName,serviceHostComponents);
        }
        Set<String> hostHostComponents=serviceHostComponents.get(hostName);
        if (hostHostComponents == null) {
          hostHostComponents=new HashSet<String>();
          serviceHostComponents.put(hostName,hostHostComponents);
        }
        hostHostComponents.add(componentName);
        hosts.add(hostName);
      }
    }
  }
 catch (  IOException e) {
    String msg="Caught exception reading " + CLUSTER_DEFINITION_FILE + ".";
    throw new IllegalStateException(msg,e);
  }
 finally {
    if (is != null) {
      try {
        is.close();
      }
 catch (      IOException ex) {
      }
    }
  }
}
