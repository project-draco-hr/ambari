{
  File masterKeyFile=new File(fileDir,"master");
  Assert.assertTrue(MasterKeyServiceImpl.initializeMasterKeyFile(masterKeyFile,"ThisisSomePassPhrase"));
  MasterKeyService ms=new MasterKeyServiceImpl(masterKeyFile);
  Assert.assertTrue(ms.isMasterKeyInitialized());
  Assert.assertTrue(masterKeyFile.exists());
  Set<PosixFilePermission> permissions=Files.getPosixFilePermissions(Paths.get(masterKeyFile.getAbsolutePath()));
  Assert.assertNotNull(permissions);
  Assert.assertEquals(2,permissions.size());
  Assert.assertTrue(permissions.contains(PosixFilePermission.OWNER_READ));
  Assert.assertTrue(permissions.contains(PosixFilePermission.OWNER_WRITE));
  Assert.assertFalse(permissions.contains(PosixFilePermission.OWNER_EXECUTE));
  Assert.assertFalse(permissions.contains(PosixFilePermission.GROUP_READ));
  Assert.assertFalse(permissions.contains(PosixFilePermission.GROUP_WRITE));
  Assert.assertFalse(permissions.contains(PosixFilePermission.GROUP_EXECUTE));
  Assert.assertFalse(permissions.contains(PosixFilePermission.OTHERS_READ));
  Assert.assertFalse(permissions.contains(PosixFilePermission.OTHERS_WRITE));
  Assert.assertFalse(permissions.contains(PosixFilePermission.OTHERS_EXECUTE));
  MasterKeyService ms1=new MasterKeyServiceImpl(masterKeyFile);
  Assert.assertTrue(ms1.isMasterKeyInitialized());
  Assert.assertEquals("ThisisSomePassPhrase",new String(ms1.getMasterSecret()));
  Assert.assertEquals(new String(ms.getMasterSecret()),new String(ms1.getMasterSecret()));
}
