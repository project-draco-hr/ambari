def unpack_jce_policy():
    properties = get_ambari_properties()
    jdk_path = properties.get_property(JAVA_HOME_PROPERTY)
    jdk_security_path = ((jdk_path + os.sep) + configDefaults.JDK_SECURITY_DIR)
    jce_name = properties.get_property(JCE_NAME_PROPERTY)
    jce_zip_path = ((configDefaults.SERVER_RESOURCES_DIR + os.sep) + jce_name)
    unpack_cmd = 'unzip -o -j -q {0} -d {1}'.format(jce_zip_path, jdk_security_path)
    if (os.path.exists(jdk_security_path) and os.path.exists(jce_zip_path) and validate_jdk(jdk_path)):
        try:
            (retcode, out, err) = run_os_command(unpack_cmd)
            if (retcode != 0):
                raise FatalException(retcode, err)
        except Exception as e:
            err = "Fail during the execution of '{0}'. {1}".format(unpack_cmd.format(jce_zip_path, jdk_security_path), e)
            raise FatalException(1, err)
    else:
        err = 'Can not execute {0}. The path {1}, {2} or {3} is invalid.'.format(unpack_cmd, jdk_security_path, jce_zip_path, jdk_path)
        raise FatalException(1, err)
