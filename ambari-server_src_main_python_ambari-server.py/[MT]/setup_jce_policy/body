def setup_jce_policy(path):
    if os.path.exists(path):
        copy_cmd = 'cp {0} {1}'.format(path, configDefaults.SERVER_RESOURCES_DIR)
        try:
            (retcode, out, err) = run_os_command(copy_cmd)
            if (retcode != 0):
                raise FatalException(retcode, err)
        except Exception as e:
            err = "Fail during the execution of '{0}'. {1}".format(copy_cmd.format(path, configDefaults.SERVER_RESOURCES_DIR), e)
            raise FatalException(1, err)
    else:
        err = "Can not run 'setup-jce'. Invalid path {0}.".format(path)
        raise FatalException(1, err)
    conf_file = search_file(AMBARI_PROPERTIES_FILE, get_conf_dir())
    properties = get_ambari_properties()
    zip_name = os.path.split(path)[1]
    properties.process_pair(JCE_NAME_PROPERTY, zip_name)
    try:
        properties.store(open(conf_file, 'w'))
    except Exception as e:
        print_error_msg(('Could not write ambari config file "%s": %s' % (conf_file, e)))
    print 'Installing JCE policy...'
    try:
        unpack_jce_policy()
    except FatalException as e:
        err = 'Installing JCE failed: {0}. Exiting.'.format(e)
        raise FatalException(e.code, err)
    print ('NOTE: Restart Ambari Server to apply changes' + ' ("ambari-server restart|stop|start")')
