def prompt_db_properties(args):
    global DATABASE_INDEX
    if PROMPT_DATABASE_OPTIONS:
        load_default_db_properties(args)
        ok = get_YN_input('Enter advanced database configuration [y/n] (n)? ', False)
        if ok:
            database_num = str((DATABASE_INDEX + 1))
            database_num = get_validated_string_input((('Select database:\n1 - Postgres(Embedded)\n2 - Oracle\n[' + database_num) + ']:'), database_num, '^[12]$', 'Invalid number.', False)
            DATABASE_INDEX = (int(database_num) - 1)
            args.database = DATABASE_NAMES[DATABASE_INDEX]
            if (args.database != 'postgres'):
                args.database_host = get_validated_string_input((('Hostname [' + args.database_host) + ']:'), args.database_host, '^[a-zA-Z0-9.\\-]*$', 'Invalid hostname.', False)
                args.database_port = DATABASE_PORTS[DATABASE_INDEX]
                args.database_port = get_validated_string_input((('Port [' + args.database_port) + ']:'), args.database_port, '^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$', 'Invalid port.', False)
                pass
            else:
                args.database_host = 'localhost'
                args.database_port = DATABASE_PORTS[DATABASE_INDEX]
                pass
            args.database_name = get_validated_string_input((((DATABASE_STORAGE_NAMES[DATABASE_INDEX] + ' Name [') + args.database_name) + ']:'), args.database_name, '^[a-zA-z\\-"]+$', (('Invalid ' + DATABASE_STORAGE_NAMES[DATABASE_INDEX]) + ' name.'), False)
            args.database_username = get_validated_string_input((('Username [' + args.database_username) + ']: '), args.database_username, USERNAME_PATTERN, 'Invalid characters in username. Start with _ or alpha followed by alphanumeric or _ or - characters', False)
            args.database_password = read_password(args.database_password)
    print_info_msg('Using database options: {database},{host},{port},{schema},{user},{password}'.format(database=args.database, host=args.database_host, port=args.database_port, schema=args.database_name, user=args.database_username, password=args.database_password))
