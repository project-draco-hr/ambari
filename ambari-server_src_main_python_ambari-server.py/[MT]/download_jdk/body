def download_jdk():
    conf_file = search_file(AMBARI_PROPERTIES_FILE, get_conf_dir())
    if (conf_file is None):
        print ('File %s not found in search path $%s: %s' % (AMBARI_PROPERTIES_FILE, AMBARI_CONF_VAR, get_conf_dir()))
        return (-1)
    print ('Loading properties from ' + conf_file)
    properties = None
    try:
        properties = Properties()
        properties.load(open(conf_file))
    except Exception as e:
        print ('Could not read "%s": %s' % (conf_file, e))
        return (-1)
    try:
        jdk_url = properties['jdk.url']
        resources_dir = properties['resources.dir']
    except KeyError as e:
        print ((('Property ' + str(e)) + ' is not defined at ') + conf_file)
        return (-1)
    dest_file = ((resources_dir + os.sep) + JDK_LOCAL_FILENAME)
    print ((('Trying to download JDK from ' + jdk_url) + ' to ') + dest_file)
    try:
        src_size = int(urllib.urlopen(jdk_url).info()['Content-Length'])
        print (('JDK distribution size is ' + str(src_size)) + ' bytes')
        file_exists = os.path.isfile(dest_file)
        file_size = (-1)
        if file_exists:
            file_size = os.stat(dest_file).st_size
        if (file_exists and (file_size == src_size)):
            print 'File already exists'
        else:
            urllib.urlretrieve(jdk_url, dest_file)
            print ('Successfully downloaded JDK distribution to ' + dest_file)
    except Exception as e:
        print ('Failed to download JDK: ' + str(e))
        return (-1)
    downloaded_size = os.stat(dest_file).st_size
    if ((downloaded_size != src_size) or (downloaded_size < JDK_MIN_FILESIZE)):
        print (('Size of downloaded JDK distribution file is ' + str(downloaded_size)) + ' bytes, it is probably damaged or incomplete')
        return (-1)
    print 'Installing JDK to {0}'.format(JDK_INSTALL_DIR)
    (retcode, out, err) = run_os_command(CREATE_JDK_DIR_CMD)
    savedPath = os.getcwd()
    os.chdir(JDK_INSTALL_DIR)
    (retcode, out, err) = run_os_command(MAKE_FILE_EXECUTABLE_CMD.format(dest_file))
    (retcode, out, err) = run_os_command(dest_file)
    os.chdir(savedPath)
    jdk_version = re.search('Creating (jdk.*)/jre', out).group(1)
    print 'Successfully installed JDK to {0}/{1}'.format(JDK_INSTALL_DIR, jdk_version)
    return 0
