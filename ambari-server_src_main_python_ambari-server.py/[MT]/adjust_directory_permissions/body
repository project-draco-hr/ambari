def adjust_directory_permissions(ambari_user):
    properties = get_ambari_properties()
    bootstrap_dir = get_value_from_properties(properties, BOOTSTRAP_DIR_PROPERTY)
    print_info_msg('Cleaning bootstrap directory ({0}) contents...'.format(bootstrap_dir))
    cmd = RECURSIVE_RM_CMD.format(bootstrap_dir)
    run_os_command(cmd)
    os.makedirs(bootstrap_dir)
    keyLocation = get_master_key_location(properties)
    masterKeyFile = search_file(SECURITY_MASTER_KEY_FILENAME, keyLocation)
    if masterKeyFile:
        NR_ADJUST_OWNERSHIP_LIST.append((masterKeyFile, '600', '{0}', '{0}', False))
    credStoreFile = get_credential_store_location(properties)
    if os.path.exists(credStoreFile):
        NR_ADJUST_OWNERSHIP_LIST.append((credStoreFile, '600', '{0}', '{0}', False))
    trust_store_location = properties[SSL_TRUSTSTORE_PATH_PROPERTY]
    if trust_store_location:
        NR_ADJUST_OWNERSHIP_LIST.append((trust_store_location, '600', '{0}', '{0}', False))
    print 'Adjusting ambari-server permissions and ownership...'
    for pack in NR_ADJUST_OWNERSHIP_LIST:
        file = pack[0]
        mod = pack[1]
        user = pack[2].format(ambari_user)
        recursive = pack[3]
        set_file_permissions(file, mod, user, recursive)
