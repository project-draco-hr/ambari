def store_local_properties(args):
    conf_file = search_file(AMBARI_PROPERTIES_FILE, get_conf_dir())
    properties = Properties()
    try:
        properties.load(open(conf_file))
    except Exception as e:
        print ('Could not read ambari config file "%s": %s' % (conf_file, e))
        return (-1)
    properties.removeOldProp(JDBC_SCHEMA_PROPERTY)
    properties.removeOldProp(JDBC_HOSTNAME_PROPERTY)
    properties.removeOldProp(JDBC_DATABASE_PROPERTY)
    properties.removeOldProp(JDBC_RCA_DRIVER_PROPERTY)
    properties.removeOldProp(JDBC_RCA_URL_PROPERTY)
    properties.removeOldProp(JDBC_PORT_PROPERTY)
    properties.removeOldProp(JDBC_PORT_PROPERTY)
    properties.removeOldProp(JDBC_DRIVER_PROPERTY)
    properties.removeOldProp(JDBC_URL_PROPERTY)
    properties.removeOldProp(JDBC_DATABASE_PROPERTY)
    properties.process_pair(PERSISTENCE_TYPE_PROPERTY, 'local')
    properties.process_pair(JDBC_USER_NAME_PROPERTY, args.database_username)
    properties.process_pair(JDBC_PASSWORD_FILE_PROPERTY, store_password_file(args.database_password, JDBC_PASSWORD_FILENAME))
    try:
        properties.store(open(conf_file, 'w'))
    except Exception as e:
        print ('Could not write ambari config file "%s": %s' % (conf_file, e))
        return (-1)
    return 0
