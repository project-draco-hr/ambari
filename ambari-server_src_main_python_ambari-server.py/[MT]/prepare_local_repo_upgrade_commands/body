def prepare_local_repo_upgrade_commands(args, dbkey, dbvalue):
    db_index = DATABASE_NAMES.index(args.database)
    tool = DATABASE_CLI_TOOLS_DESC[db_index]
    scriptPath = DATABASE_INSERT_METAINFO_SCRIPTS[db_index]
    command_list = []
    if (args.database == 'oracle'):
        sid_or_sname = 'sid'
        if ((hasattr(args, 'sid_or_sname') and (args.sid_or_sname == 'sname')) or (hasattr(args, 'jdbc_url') and args.jdbc_url and re.match(ORACLE_SNAME_PATTERN, args.jdbc_url))):
            print_info_msg('using SERVICE_NAME instead of SID for Oracle')
            sid_or_sname = 'service_name'
        command_list.append('{0} {1}'.format(tool, ORACLE_UPGRADE_STACK_ARGS.format(args.database_username, args.database_password, args.database_host, args.database_port, args.database_name, scriptPath, sid_or_sname, dbkey, dbvalue)).strip())
        command_list.append('{0} {1}'.format(tool, ORACLE_UPGRADE_STACK_ARGS.format(args.database_username, args.database_password, args.database_host, args.database_port, args.database_name, DATABASE_FIX_LOCAL_REPO_SCRIPTS[db_index], sid_or_sname, '', '')).strip())
    return command_list
