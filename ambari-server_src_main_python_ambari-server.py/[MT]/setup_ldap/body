def setup_ldap():
    if (not is_root()):
        err = 'Ambari-server setup-ldap should be run with root-level privileges'
        raise FatalException(4, err)
    properties = get_ambari_properties()
    ldap_property_list_reqd = ['authentication.ldap.primaryUrl', 'authentication.ldap.secondaryUrl', 'authentication.ldap.useSSL', 'authentication.ldap.usernameAttribute', 'authentication.ldap.baseDn', 'authentication.ldap.bindAnonymously']
    ldap_property_list_opt = ['authentication.ldap.managerDn', LDAP_MGR_PASSWORD_PROPERTY]
    LDAP_PRIMARY_URL_DEFAULT = get_value_from_properties(properties, ldap_property_list_reqd[0])
    LDAP_SECONDARY_URL_DEFAULT = get_value_from_properties(properties, ldap_property_list_reqd[1])
    LDAP_USE_SSL_DEFAULT = get_value_from_properties(properties, ldap_property_list_reqd[2], 'false')
    LDAP_USER_ATT_DEFAULT = get_value_from_properties(properties, ldap_property_list_reqd[3], 'uid')
    LDAP_BASE_DN_DEFAULT = get_value_from_properties(properties, ldap_property_list_reqd[4])
    LDAP_BIND_DEFAULT = get_value_from_properties(properties, ldap_property_list_reqd[5], 'false')
    LDAP_MGR_DN_DEFAULT = get_value_from_properties(properties, ldap_property_list_opt[0])
    ldap_properties_map_reqd = {ldap_property_list_reqd[0]: (LDAP_PRIMARY_URL_DEFAULT, 'Primary URL* {{host:port}} {0}: '.format(get_prompt_default(LDAP_PRIMARY_URL_DEFAULT)), False), ldap_property_list_reqd[1]: (LDAP_SECONDARY_URL_DEFAULT, 'Secondary URL {0}: '.format(get_prompt_default(LDAP_SECONDARY_URL_DEFAULT)), True), ldap_property_list_reqd[2]: (LDAP_USE_SSL_DEFAULT, 'Use SSL* [true/false] {0}: '.format(get_prompt_default(LDAP_USE_SSL_DEFAULT)), False), ldap_property_list_reqd[3]: (LDAP_USER_ATT_DEFAULT, 'User name attribute* {0}: '.format(get_prompt_default(LDAP_USER_ATT_DEFAULT)), False), ldap_property_list_reqd[4]: (LDAP_BASE_DN_DEFAULT, 'Base DN* {0}: '.format(get_prompt_default(LDAP_BASE_DN_DEFAULT)), False), ldap_property_list_reqd[5]: (LDAP_BIND_DEFAULT, 'Bind anonymously* [true/false] {0}: '.format(get_prompt_default(LDAP_BIND_DEFAULT)), False), }
    ldap_property_value_map = {}
    for (idx, key) in enumerate(ldap_property_list_reqd):
        if (idx == 0):
            pattern = REGEX_HOSTNAME_PORT
        elif (idx in [2, 5]):
            pattern = REGEX_TRUE_FALSE
        else:
            pattern = REGEX_ANYTHING
        input = get_validated_string_input(ldap_properties_map_reqd[key][1], ldap_properties_map_reqd[key][0], pattern, 'Invalid characters in the input!', False, ldap_properties_map_reqd[key][2])
        if ((input is not None) and (input != '')):
            ldap_property_value_map[key] = input
    bindAnonymously = ldap_property_value_map['authentication.ldap.bindAnonymously']
    anonymous = (bindAnonymously and (bindAnonymously.lower() == 'true'))
    password = None
    if (not anonymous):
        username = get_validated_string_input('Manager DN* {0}: '.format(get_prompt_default(LDAP_MGR_DN_DEFAULT)), LDAP_MGR_DN_DEFAULT, '.*', 'Invalid characters in the input!', False, False)
        ldap_property_value_map[LDAP_MGR_USERNAME_PROPERTY] = username
        password = configure_ldap_password()
        ldap_property_value_map[LDAP_MGR_PASSWORD_PROPERTY] = password
    print ('=' * 20)
    print 'Review Settings'
    print ('=' * 20)
    for property in ldap_property_list_reqd:
        if (property in ldap_property_value_map):
            print ('%s: %s' % (property, ldap_property_value_map[property]))
    for property in ldap_property_list_opt:
        if ldap_property_value_map.has_key(property):
            if (property != LDAP_MGR_PASSWORD_PROPERTY):
                print ('%s: %s' % (property, ldap_property_value_map[property]))
            else:
                print ('%s: %s' % (property, '****'))
    save_settings = get_YN_input('Save settings [y/n] (y)? ', True)
    if save_settings:
        ldap_property_value_map[CLIENT_SECURITY_KEY] = 'ldap'
        update_properties(ldap_property_value_map)
        print 'Saving...done'
    print "Ambari Server 'LDAP setup' completed successfully. Exiting."
    return 0
