def check_ambari_user():
    try:
        user = read_ambari_user()
        create_user = False
        update_user_setting = False
        if (user is not None):
            create_user = get_YN_input("Ambari-server daemon is configured to run under user '{0}'. Change this setting [y/n] (n)? ".format(user), False)
            update_user_setting = create_user
        else:
            update_user_setting = True
            create_user = get_YN_input('Customize user account for ambari-server daemon [y/n] (n)? ', False)
            if (not create_user):
                user = 'root'
        if create_user:
            (retcode, user) = create_custom_user()
            if (retcode != 0):
                return retcode
        if update_user_setting:
            write_property(NR_USER_PROPERTY, user)
        adjust_directory_permissions(user)
    except OSError:
        print_error_msg(('Failed: %s' % OSError.message))
        return 4
    except Exception as e:
        print_error_msg(('Unexpected error %s' % e.message))
        return 1
    return 0
