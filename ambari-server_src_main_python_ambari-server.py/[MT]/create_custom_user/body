def create_custom_user():
    user = get_validated_string_input('Please choose user name for ambari-server process: ', 'ambari', '^[a-z_][a-z0-9_-]{1,31}$', 'Invalid username.', False)
    print_info_msg('Trying to create group {0}'.format(user))
    command = NR_GROUPADD_CMD.format(user)
    (retcode, out, err) = run_os_command(command)
    if (retcode == 9):
        print_warning_msg('Group {0} already exists, skipping group creation'.format(user))
    elif (retcode != 0):
        print_warning_msg("Can't create group {0}. Command {1} finished with {2}: \n{3}".format(user, command, retcode, err))
        return (retcode, None)
    print_info_msg('Trying to create user {0}'.format(user))
    command = NR_USERADD_CMD.format(user, NR_USER_COMMENT)
    (retcode, out, err) = run_os_command(command)
    if (retcode == 9):
        print_warning_msg('User {0} already exists, skipping user creation'.format(user))
        print_info_msg('Trying to add user {0} to group {0}'.format(user))
        command = NR_ADD_USER_TO_GROUP.format(user)
        (retcode, out, err) = run_os_command(command)
        if (retcode != 0):
            print_warning_msg("Can't add user {0} to group {0}. Command {1} finished with {2}: \n{3}".format(user, command, retcode, err))
            return (retcode, None)
    elif (retcode != 0):
        print_warning_msg("Can't create user {0}. Command {1} finished with {2}: \n{3}".format(user, command, retcode, err))
        return (retcode, None)
    print_info_msg('User/group configuration is done.')
    return (0, user)
