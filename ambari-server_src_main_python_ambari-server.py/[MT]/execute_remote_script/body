def execute_remote_script(args, scriptPath):
    tool = get_db_cli_tool(args)
    if (not tool):
        args.warnings.append('{0} not found. Please, run DDL script manually'.format(DATABASE_CLI_TOOLS[DATABASE_INDEX]))
        if VERBOSE:
            print_warning_msg('{0} not found'.format(DATABASE_CLI_TOOLS[DATABASE_INDEX]))
        return ((-1), "Client wasn't found", "Client wasn't found")
    if (args.database == 'postgres'):
        os.environ['PGPASSWORD'] = args.database_password
        (retcode, out, err) = run_in_shell('{0} {1}'.format(tool, POSTGRES_EXEC_ARGS.format(args.database_host, args.database_port, args.database_name, args.database_username, scriptPath)))
        return (retcode, out, err)
    elif (args.database == 'oracle'):
        (retcode, out, err) = run_in_shell('{0} {1}'.format(tool, ORACLE_EXEC_ARGS.format(args.database_username, args.database_password, args.database_host, args.database_port, args.database_name, scriptPath)))
        return (retcode, out, err)
    elif (args.database == 'mysql'):
        (retcode, out, err) = run_in_shell('{0} {1}'.format(tool, MYSQL_EXEC_ARGS.format(args.database_host, args.database_port, args.database_username, args.database_password, args.database_name, scriptPath)))
        return (retcode, out, err)
    return ((-2), 'Wrong database', 'Wrong database')
