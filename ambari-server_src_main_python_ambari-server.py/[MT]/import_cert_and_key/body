def import_cert_and_key(security_server_keys_dir):
    import_cert_path = get_validated_filepath_input('Please enter path to certificate: ', 'Certificate not found')
    import_key_path = get_validated_filepath_input('Please enter path to key: ', 'Key not found')
    pem_password = get_validated_string_input('Please enter password for private key: ', '', None, None, True)
    keystoreFilePath = os.path.join(security_server_keys_dir, SSL_KEYSTORE_FILE_NAME)
    passFilePath = os.path.join(security_server_keys_dir, SSL_KEY_PASSWORD_FILE_NAME)
    (retcode, out, err) = run_os_command(EXPRT_KSTR_CMD.format(import_cert_path, import_key_path, pem_password, keystoreFilePath))
    if (retcode == 0):
        print 'Successfully imported trusted cerificate and private key'
        set_file_permissions(keystoreFilePath, '660', read_ambari_user(), 'root', False)
        with open(passFilePath, 'w+') as passFile:
            passFile.write(pem_password)
            pass
        set_file_permissions(passFilePath, '660', read_ambari_user(), 'root', False)
        import_file_to_keystore(import_cert_path, os.path.join(security_server_keys_dir, SSL_CERT_FILE_NAME))
        import_file_to_keystore(import_key_path, os.path.join(security_server_keys_dir, SSL_KEY_FILE_NAME))
        return True
    else:
        print 'Could not import trusted cerificate and private key:'
        print err
        return False
