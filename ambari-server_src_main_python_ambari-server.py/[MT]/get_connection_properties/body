def get_connection_properties():
    default_db_num = '1'
    default_host = 'localhost'
    default_schema = 'ambari'
    database_num = get_validated_string_input((('Select database:\n1 - Postgres\n2 - Oracle\n3 - MySQL) \n[' + str(default_db_num)) + ']:'), default_db_num, '^[123]$', 'Invalid number.', False)
    db_host = get_validated_string_input((('Hostname [' + default_host) + ']:'), default_host, '^[a-zA-Z0-9.\\-]*$', 'Invalid hostname.', False)
    default_port = None
    if (database_num == '1'):
        default_port = '5432'
    elif (database_num == '2'):
        default_port = '1521'
    elif (database_num == '3'):
        default_port = '3306'
    db_port = get_validated_string_input((('Port [' + str(default_port)) + ']:'), default_port, '^[0-9]{1,5}$', 'Invalid port.', False)
    if (database_num == '2'):
        default_schema = 'xe'
    db_schema = get_validated_string_input((('Database/schema/service name [' + str(default_schema)) + ']:'), default_schema, '^[a-zA-z\\-"]+$', 'Invalid schema name.', False)
    usernameDefault = 'ambari'
    usernamePrompt = (('Username [' + usernameDefault) + ']: ')
    usernamePattern = '^[a-zA-Z_][a-zA-Z0-9_\\-]*$'
    usernameDescr = 'Invalid characters in username. Start with _ or alpha followed by alphanumeric or _ or - characters'
    username = get_validated_string_input(usernamePrompt, usernameDefault, usernamePattern, usernameDescr, False)
    password = configure_postgres_password()
    return (DRIVER_NAMES[(int(database_num) - 1)], CONNECTION_STRINGS[(int(database_num) - 1)].format(db_host, db_port, db_schema), username, password)
