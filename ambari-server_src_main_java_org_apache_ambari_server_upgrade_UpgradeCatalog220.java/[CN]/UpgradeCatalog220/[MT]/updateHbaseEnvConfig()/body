{
  AmbariManagementController ambariManagementController=injector.getInstance(AmbariManagementController.class);
  boolean updateConfig=false;
  for (  final Cluster cluster : getCheckedClusterMap(ambariManagementController.getClusters()).values()) {
    StackId stackId=cluster.getCurrentStackVersion();
    Config hbaseEnvConfig=cluster.getDesiredConfigByType(HBASE_ENV_CONFIG);
    if (hbaseEnvConfig != null) {
      String content=hbaseEnvConfig.getProperties().get(CONTENT_PROPERTY);
      if (content != null) {
        if (!content.contains("-Djava.io.tmpdir")) {
          content+="\n\nexport HBASE_OPTS=\"${HBASE_OPTS} -Djava.io.tmpdir={{java_io_tmpdir}}\"";
          updateConfig=true;
        }
        if (stackId != null && stackId.getStackName().equals("HDP") && VersionUtils.compareVersions(stackId.getStackVersion(),"2.2") >= 0) {
          if (!content.contains("MaxDirectMemorySize={{hbase_max_direct_memory_size}}m")) {
            String newPartOfContent="\n\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS {% if hbase_max_direct_memory_size %} -XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m {% endif %}\"\n\n";
            content+=newPartOfContent;
            updateConfig=true;
          }
          if (updateConfig) {
            Map<String,String> updates=Collections.singletonMap(CONTENT_PROPERTY,content);
            updateConfigurationPropertiesForCluster(cluster,HBASE_ENV_CONFIG,updates,true,false);
          }
        }
      }
    }
  }
}
