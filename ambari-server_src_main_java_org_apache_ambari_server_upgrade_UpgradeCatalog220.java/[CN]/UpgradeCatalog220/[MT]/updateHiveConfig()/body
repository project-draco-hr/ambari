{
  AmbariManagementController ambariManagementController=injector.getInstance(AmbariManagementController.class);
  for (  final Cluster cluster : getCheckedClusterMap(ambariManagementController.getClusters()).values()) {
    Config hiveSiteConfig=cluster.getDesiredConfigByType(HIVE_SITE_CONFIG);
    if (hiveSiteConfig != null) {
      String hiveServer2OperationLogLocation=hiveSiteConfig.getProperties().get(HIVE_SERVER2_OPERATION_LOG_LOCATION_PROPERTY);
      if (hiveServer2OperationLogLocation != null && hiveServer2OperationLogLocation.equals("${system:java.io.tmpdir}/${system:user.name}/operation_logs")) {
        Map<String,String> updates=Collections.singletonMap(HIVE_SERVER2_OPERATION_LOG_LOCATION_PROPERTY,"/tmp/hive/operation_logs");
        updateConfigurationPropertiesForCluster(cluster,HIVE_SITE_CONFIG,updates,true,false);
      }
    }
    StackId stackId=cluster.getCurrentStackVersion();
    boolean isStackNotLess23=(stackId != null && stackId.getStackName().equals("HDP") && VersionUtils.compareVersions(stackId.getStackVersion(),"2.3") >= 0);
    Config hiveEnvConfig=cluster.getDesiredConfigByType(HIVE_ENV_CONFIG);
    if (hiveEnvConfig != null) {
      Map<String,String> hiveEnvProps=new HashMap<String,String>();
      String content=hiveEnvConfig.getProperties().get(CONTENT_PROPERTY);
      if (content != null) {
        if (isStackNotLess23) {
          content=updateHiveEnvContentHDP23(content);
        }
 else {
          content=updateHiveEnvContent(content);
        }
        hiveEnvProps.put(CONTENT_PROPERTY,content);
        updateConfigurationPropertiesForCluster(cluster,HIVE_ENV_CONFIG,hiveEnvProps,true,true);
      }
    }
  }
}
