{
  LOG.info("Updating alert definitions.");
  AmbariManagementController ambariManagementController=injector.getInstance(AmbariManagementController.class);
  AlertDefinitionDAO alertDefinitionDAO=injector.getInstance(AlertDefinitionDAO.class);
  Clusters clusters=ambariManagementController.getClusters();
  Map<String,Cluster> clusterMap=getCheckedClusterMap(clusters);
  for (  final Cluster cluster : clusterMap.values()) {
    long clusterID=cluster.getClusterId();
    final AlertDefinitionEntity journalNodeProcessAlertDefinitionEntity=alertDefinitionDAO.findByName(clusterID,"journalnode_process");
    final AlertDefinitionEntity hostDiskUsageAlertDefinitionEntity=alertDefinitionDAO.findByName(clusterID,"ambari_agent_disk_usage");
    if (journalNodeProcessAlertDefinitionEntity != null) {
      String source=journalNodeProcessAlertDefinitionEntity.getSource();
      journalNodeProcessAlertDefinitionEntity.setSource(modifyJournalnodeProcessAlertSource(source));
      journalNodeProcessAlertDefinitionEntity.setSourceType(SourceType.WEB);
      journalNodeProcessAlertDefinitionEntity.setHash(UUID.randomUUID().toString());
      alertDefinitionDAO.merge(journalNodeProcessAlertDefinitionEntity);
      LOG.info("journalnode_process alert definition was updated.");
    }
    if (hostDiskUsageAlertDefinitionEntity != null) {
      hostDiskUsageAlertDefinitionEntity.setDescription("This host-level alert is triggered if the amount of disk space " + "used goes above specific thresholds. The default threshold values are 50% for WARNING and 80% for CRITICAL.");
      hostDiskUsageAlertDefinitionEntity.setLabel("Host Disk Usage");
      alertDefinitionDAO.merge(hostDiskUsageAlertDefinitionEntity);
      LOG.info("ambari_agent_disk_usage alert definition was updated.");
    }
  }
}
