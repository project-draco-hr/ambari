{
  PrivilegeEventCreator creator=new PrivilegeEventCreator();
  Map<String,Object> properties=new HashMap<>();
  properties.put(PrivilegeResourceProvider.PRINCIPAL_TYPE_PROPERTY_ID,"USER");
  properties.put(PrivilegeResourceProvider.PERMISSION_NAME_PROPERTY_ID,"Permission1");
  properties.put(PrivilegeResourceProvider.PRINCIPAL_NAME_PROPERTY_ID,userName);
  Map<String,Object> properties2=new HashMap<>();
  properties2.put(PrivilegeResourceProvider.PRINCIPAL_TYPE_PROPERTY_ID,"USER");
  properties2.put(PrivilegeResourceProvider.PERMISSION_NAME_PROPERTY_ID,"Permission2");
  properties2.put(PrivilegeResourceProvider.PRINCIPAL_NAME_PROPERTY_ID,userName + "2");
  Map<String,Object> properties3=new HashMap<>();
  properties3.put(PrivilegeResourceProvider.PRINCIPAL_TYPE_PROPERTY_ID,"GROUP");
  properties3.put(PrivilegeResourceProvider.PERMISSION_NAME_PROPERTY_ID,"Permission1");
  properties3.put(PrivilegeResourceProvider.PRINCIPAL_NAME_PROPERTY_ID,"testgroup");
  NamedPropertySet nps=new NamedPropertySet("1",properties);
  NamedPropertySet nps2=new NamedPropertySet("2",properties2);
  NamedPropertySet nps3=new NamedPropertySet("3",properties3);
  Request request=AuditEventCreatorTestHelper.createRequest(Request.Type.PUT,Resource.Type.ClusterPrivilege,null,null);
  Result result=AuditEventCreatorTestHelper.createResult(new ResultStatus(ResultStatus.STATUS.OK));
  request.getBody().addPropertySet(nps);
  request.getBody().addPropertySet(nps2);
  request.getBody().addPropertySet(nps3);
  AuditEvent event=AuditEventCreatorTestHelper.getEvent(creator,request,result);
  String actual=event.getAuditMessage();
  String expected="User(" + userName + "), RemoteIp(1.2.3.4), Operation(Role change), RequestType(PUT), url(http://example.com:8080/api/v1/test), ResultStatus(200 OK), Roles(\n"+ "Permission2: \n"+ "  Users: "+ userName+ "2\n"+ "Permission1: \n"+ "  Users: "+ userName+ "\n"+ "  Groups: testgroup)";
  Assert.assertTrue("Class mismatch",event instanceof ClusterPrivilegeChangeRequestAuditEvent);
  Assert.assertEquals(expected,actual);
  Assert.assertTrue(actual.contains(userName));
}
