{
  JsonObject resourcesObj=new JsonObject();
  JsonArray clientComponentsArray=clientResourcesObj.get("components").getAsJsonArray();
  resourcesObj.addProperty("schema","http://example.org/specification/v2.0.0");
  resourcesObj.add("metadata",new JsonObject());
  resourcesObj.add("global",clientResourcesObj.has("global") ? clientResourcesObj.get("global").getAsJsonObject() : new JsonObject());
  JsonObject componentsObj=new JsonObject();
  if (clientComponentsArray != null) {
    for (int i=0; i < clientComponentsArray.size(); i++) {
      JsonObject inputComponent=clientComponentsArray.get(i).getAsJsonObject();
      if (inputComponent.has("id")) {
        JsonObject componentValue=new JsonObject();
        if (inputComponent.has("priority")) {
          componentValue.addProperty("yarn.role.priority",inputComponent.get("priority").getAsString());
        }
        if (inputComponent.has("instanceCount")) {
          componentValue.addProperty("yarn.component.instances",inputComponent.get("instanceCount").getAsString());
        }
        if (inputComponent.has("yarnMemory")) {
          componentValue.addProperty("yarn.memory",inputComponent.get("yarnMemory").getAsString());
        }
        if (inputComponent.has("yarnCpuCores")) {
          componentValue.addProperty("yarn.vcores",inputComponent.get("yarnCpuCores").getAsString());
        }
        if (inputComponent.has("yarnLabel")) {
          componentValue.addProperty("yarn.label.expression",inputComponent.get("yarnLabel").getAsString());
        }
        componentsObj.add(inputComponent.get("id").getAsString(),componentValue);
      }
    }
  }
  resourcesObj.add("components",componentsObj);
  String jsonString=new GsonBuilder().setPrettyPrinting().create().toJson(resourcesObj);
  FileOutputStream fos=null;
  try {
    fos=new FileOutputStream(resourcesJsonFile);
    IOUtils.write(jsonString,fos);
  }
  finally {
    if (fos != null) {
      fos.close();
    }
  }
}
