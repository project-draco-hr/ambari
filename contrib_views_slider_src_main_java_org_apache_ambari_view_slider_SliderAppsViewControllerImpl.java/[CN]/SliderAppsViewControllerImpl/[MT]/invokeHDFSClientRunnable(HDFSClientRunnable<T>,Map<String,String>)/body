{
  ClassLoader currentClassLoader=Thread.currentThread().getContextClassLoader();
  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());
  try {
    boolean securityEnabled=Boolean.valueOf(hadoopConfigs.get("security_enabled"));
    UserGroupInformation sliderUser;
    if (securityEnabled) {
      String viewPrincipal=getViewParameterValue(PARAM_VIEW_PRINCIPAL);
      String viewPrincipalKeytab=getViewParameterValue(PARAM_VIEW_PRINCIPAL_KEYTAB);
      UserGroupInformation ambariUser=UserGroupInformation.loginUserFromKeytabAndReturnUGI(viewPrincipal,viewPrincipalKeytab);
      sliderUser=UserGroupInformation.createProxyUser(getUserToRunAs(),ambariUser);
    }
 else {
      sliderUser=UserGroupInformation.getBestUGI(null,getUserToRunAs());
    }
    try {
      T value=sliderUser.doAs(new PrivilegedExceptionAction<T>(){
        @Override public T run() throws Exception {
          return runnable.run();
        }
      }
);
      return value;
    }
 catch (    UndeclaredThrowableException e) {
      throw e;
    }
  }
  finally {
    Thread.currentThread().setContextClassLoader(currentClassLoader);
  }
}
