{
  Configuration sliderClientConfiguration=getSliderClientConfiguration();
  SliderClient client=new SliderClient(){
    @Override public String getUsername() throws IOException {
      return "yarn";
    }
    @Override protected void initHadoopBinding() throws IOException, SliderException {
      super.initHadoopBinding();
      try {
        FileSystem fs=FileSystem.get(FileSystem.getDefaultUri(getConfig()),getConfig(),"yarn");
        SliderFileSystem fileSystem=new SliderFileSystem(fs,getConfig());
        Field fsField=SliderClient.class.getDeclaredField("sliderFileSystem");
        fsField.setAccessible(true);
        fsField.set(this,fileSystem);
      }
 catch (      InterruptedException e) {
        throw new SliderException("Slider view unable to override filesystem of Slider client",e);
      }
catch (      NoSuchFieldException e) {
        throw new SliderException("Slider view unable to override filesystem of Slider client",e);
      }
catch (      SecurityException e) {
        throw new SliderException("Slider view unable to override filesystem of Slider client",e);
      }
catch (      IllegalArgumentException e) {
        throw new SliderException("Slider view unable to override filesystem of Slider client",e);
      }
catch (      IllegalAccessException e) {
        throw new SliderException("Slider view unable to override filesystem of Slider client",e);
      }
    }
    @Override public void init(    Configuration conf){
      super.init(conf);
      try {
        initHadoopBinding();
      }
 catch (      SliderException e) {
        throw new RuntimeException("Unable to automatically init Hadoop binding",e);
      }
catch (      IOException e) {
        throw new RuntimeException("Unable to automatically init Hadoop binding",e);
      }
    }
  }
;
  try {
    sliderClientConfiguration=client.bindArgs(sliderClientConfiguration,new String[]{"usage"});
    client.init(sliderClientConfiguration);
    client.start();
  }
 catch (  Exception e) {
    logger.warn("Unable to create SliderClient",e);
    throw new RuntimeException(e.getMessage(),e);
  }
catch (  Throwable e) {
    logger.warn("Unable to create SliderClient",e);
    throw new RuntimeException(e.getMessage(),e);
  }
  return client;
}
