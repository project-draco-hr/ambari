{
  if (hdfsServiceInfo != null && hdfsServiceInfo.isStarted()) {
    if (hadoopConfigs.containsKey("fs.defaultFS")) {
      final String fsPath=hadoopConfigs.get("fs.defaultFS");
      try {
        invokeHDFSClientRunnable(new HDFSClientRunnable<Boolean>(){
          @Override public Boolean run() throws IOException, InterruptedException {
            HdfsConfiguration hdfsConfiguration=new HdfsConfiguration();
            for (            Entry<String,String> entry : hadoopConfigs.entrySet()) {
              hdfsConfiguration.set(entry.getKey(),entry.getValue());
            }
            FileSystem fs=FileSystem.get(URI.create(fsPath),hdfsConfiguration,getUserToRunAs(hadoopConfigs));
            Path homePath=fs.getHomeDirectory();
            fs.listFiles(homePath,false);
            fs.close();
            return Boolean.TRUE;
          }
        }
,hadoopConfigs);
      }
 catch (      IOException e) {
        String message="Error validating access to user home directory: " + e.getMessage();
        logger.warn(message,e);
        return new Validation(message);
      }
catch (      InterruptedException e) {
        String message="Error validating access to user home directory: " + e.getMessage();
        logger.warn(message,e);
        return new Validation(message);
      }
    }
 else {
      return new Validation("Unknown filesystem location for verification");
    }
  }
  return null;
}
