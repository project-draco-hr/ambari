{
  AmbariCluster ambariCluster=getAmbariCluster();
  if (ambariCluster != null) {
    AmbariService zkService=ambariClient.getService(ambariCluster,"ZOOKEEPER");
    if (zkService != null && ambariCluster.getDesiredConfigs() != null && ambariCluster.getDesiredConfigs().containsKey("global") && ambariCluster.getDesiredConfigs().containsKey("yarn-site") && ambariCluster.getDesiredConfigs().containsKey("core-site")) {
      Map<String,String> globalConfigs=ambariClient.getConfiguration(ambariCluster,"global",ambariCluster.getDesiredConfigs().get("yarn-site"));
      Map<String,String> yarnSiteConfigs=ambariClient.getConfiguration(ambariCluster,"yarn-site",ambariCluster.getDesiredConfigs().get("yarn-site"));
      Map<String,String> coreSiteConfigs=ambariClient.getConfiguration(ambariCluster,"core-site",ambariCluster.getDesiredConfigs().get("core-site"));
      String zkPort=globalConfigs.get("clientPort");
      String hdfsPath=coreSiteConfigs.get("fs.defaultFS");
      String rmAddress=yarnSiteConfigs.get("yarn.resourcemanager.address");
      String rmSchedulerAddress=yarnSiteConfigs.get("yarn.resourcemanager.scheduler.address");
      StringBuilder zkQuorum=new StringBuilder();
      List<AmbariHostComponent> zkHosts=zkService.getComponentsToHostComponentsMap().get("ZOOKEEPER_SERVER");
      for (      AmbariHostComponent zkHost : zkHosts) {
        if (zkQuorum.length() > 0) {
          zkQuorum.append(',');
        }
        zkQuorum.append(zkHost.getHostName() + ":" + zkPort);
      }
      HdfsConfiguration hdfsConfig=new HdfsConfiguration();
      YarnConfiguration yarnConfig=new YarnConfiguration(hdfsConfig);
      yarnConfig.set("slider.yarn.queue","default");
      yarnConfig.set("yarn.log-aggregation-enable","true");
      yarnConfig.set("yarn.resourcemanager.address",rmAddress);
      yarnConfig.set("yarn.resourcemanager.scheduler.address",rmSchedulerAddress);
      yarnConfig.set("fs.defaultFS",hdfsPath);
      yarnConfig.set("slider.zookeeper.quorum",zkQuorum.toString());
      yarnConfig.set("yarn.application.classpath","/etc/hadoop/conf,/usr/lib/hadoop/*,/usr/lib/hadoop/lib/*,/usr/lib/hadoop-hdfs/*,/usr/lib/hadoop-hdfs/lib/*,/usr/lib/hadoop-yarn/*,/usr/lib/hadoop-yarn/lib/*,/usr/lib/hadoop-mapreduce/*,/usr/lib/hadoop-mapreduce/lib/*");
      return yarnConfig;
    }
  }
  return null;
}
