{
  String hdfsPath=viewContext.getProperties().get(PROPERTY_HDFS_ADDRESS);
  String rmAddress=viewContext.getProperties().get(PROPERTY_YARN_RM_ADDRESS);
  String rmSchedulerAddress=viewContext.getProperties().get(PROPERTY_YARN_RM_SCHEDULER_ADDRESS);
  String zkQuorum=viewContext.getProperties().get(PROPERTY_ZK_QUOROM);
  boolean securedCluster=Boolean.valueOf(viewContext.getProperties().get(PROPERTY_SLIDER_SECURITY_ENABLED));
  HdfsConfiguration hdfsConfig=new HdfsConfiguration();
  YarnConfiguration yarnConfig=new YarnConfiguration(hdfsConfig);
  yarnConfig.set("slider.yarn.queue","default");
  yarnConfig.set("yarn.log-aggregation-enable","true");
  yarnConfig.set("yarn.resourcemanager.address",rmAddress);
  yarnConfig.set("yarn.resourcemanager.scheduler.address",rmSchedulerAddress);
  yarnConfig.set("fs.defaultFS",hdfsPath);
  yarnConfig.set("slider.zookeeper.quorum",zkQuorum.toString());
  yarnConfig.set("yarn.application.classpath","/etc/hadoop/conf,/usr/hdp/current/hadoop/*,/usr/hdp/current/hadoop/lib/*,/usr/hdp/current/hadoop-hdfs/*,/usr/hdp/current/hadoop-hdfs/lib/*,/usr/hdp/current/hadoop-yarn/*,/usr/hdp/current/hadoop-yarn/lib/*,/usr/hdp/current/hadoop-mapreduce/*,/usr/hdp/current/hadoop-mapreduce/lib/*");
  if (securedCluster) {
    String rmPrincipal=viewContext.getProperties().get(PROPERTY_YARN_RM_PRINCIPAL);
    String nnPrincipal=viewContext.getProperties().get(PROPERTY_HDFS_NN_PRINCIPAL);
    yarnConfig.set("yarn.resourcemanager.principal",rmPrincipal);
    yarnConfig.set("dfs.namenode.kerberos.principal",nnPrincipal);
    yarnConfig.set("hadoop.security.authorization","true");
    yarnConfig.set("hadoop.security.authentication","kerberos");
    yarnConfig.set("slider.security.enabled","true");
  }
  return yarnConfig;
}
