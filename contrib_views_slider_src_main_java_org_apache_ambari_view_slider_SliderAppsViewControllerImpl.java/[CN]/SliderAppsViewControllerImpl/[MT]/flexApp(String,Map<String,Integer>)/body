{
  ApplicationId applicationId=invokeSliderClientRunnable(new SliderClientContextRunnable<ApplicationId>(){
    @Override public ApplicationId run(    SliderClient sliderClient) throws YarnException, IOException, InterruptedException {
      Set<String> properties=new HashSet<String>();
      properties.add("id");
      properties.add("name");
      final SliderApp sliderApp=getSliderApp(appId,properties);
      if (sliderApp == null) {
        throw new ApplicationNotFoundException(appId);
      }
      ActionFlexArgs flexArgs=new ActionFlexArgs();
      flexArgs.parameters.add(sliderApp.getName());
      for (      Entry<String,Integer> e : componentsMap.entrySet()) {
        flexArgs.componentDelegate.componentTuples.add(e.getKey());
        flexArgs.componentDelegate.componentTuples.add(e.getValue().toString());
      }
      sliderClient.actionFlex(sliderApp.getName(),flexArgs);
      return sliderClient.applicationId;
    }
  }
);
  logger.info("Flexed Slider App [" + appId + "] with response: "+ applicationId);
}
