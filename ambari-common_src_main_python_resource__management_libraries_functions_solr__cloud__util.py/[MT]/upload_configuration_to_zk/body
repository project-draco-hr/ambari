def upload_configuration_to_zk(zookeeper_quorum, solr_znode, config_set, config_set_dir, tmp_dir, java64_home, retry=5, interval=10, solrconfig_content=None, jaas_file=None):
    '\n  Upload configuration set to zookeeper with solrCloudCli.sh\n  At first, it tries to download configuration set if exists into a temporary location, then upload that one to\n  zookeeper. If the configuration set does not exist in zookeeper then upload it based on the config_set_dir parameter.\n  '
    random_num = random.random()
    tmp_config_set_dir = format('{tmp_dir}/solr_config_{config_set}_{random_num}')
    solr_cli_prefix = __create_solr_cloud_cli_prefix(zookeeper_quorum, solr_znode, java64_home)
    Execute(format('{solr_cli_prefix} --download-config --config-dir {tmp_config_set_dir} --config-set {config_set} --retry {retry} --interval {interval}'), only_if=format('{solr_cli_prefix} --check-config --config-set {config_set} --retry {retry} --interval {interval}'))
    appendableDict = {}
    appendableDict['--jaas-file'] = jaas_file
    if (solrconfig_content is not None):
        File(format('{tmp_config_set_dir}/solrconfig.xml'), content=solrconfig_content, only_if=format('test -d {tmp_config_set_dir}'))
        upload_tmp_config_cmd = format('{solr_cli_prefix} --upload-config --config-dir {tmp_config_set_dir} --config-set {config_set} --retry {retry} --interval {interval}')
        upload_tmp_config_cmd = __append_flags_if_exists(upload_tmp_config_cmd, appendableDict)
        Execute(upload_tmp_config_cmd, only_if=format('test -d {tmp_config_set_dir}'))
    upload_config_cmd = format('{solr_cli_prefix} --upload-config --config-dir {config_set_dir} --config-set {config_set} --retry {retry} --interval {interval}')
    upload_config_cmd = __append_flags_if_exists(upload_config_cmd, appendableDict)
    Execute(upload_config_cmd, not_if=format('test -d {tmp_config_set_dir}'))
    Directory(tmp_config_set_dir, action='delete', create_parents=True)
