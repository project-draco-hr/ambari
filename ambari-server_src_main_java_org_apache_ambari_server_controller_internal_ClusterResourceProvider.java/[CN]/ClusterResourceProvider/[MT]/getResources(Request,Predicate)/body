{
  final Set<ClusterRequest> requests=new HashSet<ClusterRequest>();
  if (predicate == null) {
    requests.add(getRequest(Collections.<String,Object>emptyMap()));
  }
 else {
    for (    Map<String,Object> propertyMap : getPropertyMaps(predicate)) {
      requests.add(getRequest(propertyMap));
    }
  }
  Set<String> requestedIds=getRequestPropertyIds(request,predicate);
  Set<ClusterResponse> responses=getResources(new Command<Set<ClusterResponse>>(){
    @Override public Set<ClusterResponse> invoke() throws AmbariException {
      return getManagementController().getClusters(requests);
    }
  }
);
  Set<Resource> resources=new HashSet<Resource>();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Found clusters matching getClusters request" + ", clusterResponseCount=" + responses.size());
  }
  for (  ClusterResponse response : responses) {
    Resource resource=new ResourceImpl(Resource.Type.Cluster);
    setResourceProperty(resource,CLUSTER_ID_PROPERTY_ID,response.getClusterId(),requestedIds);
    setResourceProperty(resource,CLUSTER_NAME_PROPERTY_ID,response.getClusterName(),requestedIds);
    setResourceProperty(resource,CLUSTER_PROVISIONING_STATE_PROPERTY_ID,response.getProvisioningState(),requestedIds);
    setResourceProperty(resource,CLUSTER_DESIRED_CONFIGS_PROPERTY_ID,response.getDesiredConfigs(),requestedIds);
    resource.setProperty(CLUSTER_VERSION_PROPERTY_ID,response.getDesiredStackVersion());
    if (LOG.isDebugEnabled()) {
      LOG.debug("Adding ClusterResponse to resource" + ", clusterResponse=" + response.toString());
    }
    resources.add(resource);
  }
  return resources;
}
