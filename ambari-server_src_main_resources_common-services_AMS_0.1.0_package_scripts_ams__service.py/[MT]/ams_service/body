def ams_service(name='collector', action='start'):
    import params
    if (name == 'collector'):
        cmd = format('{ams_collector_script} --config {ams_collector_conf_dir}')
        pid_file = format('{ams_collector_pid_dir}/ambari-metrics-collector.pid')
        no_op_test = format('ls {pid_file} >/dev/null 2>&1 && ps `cat {pid_file}` >/dev/null 2>&1')
        if (action == 'start'):
            daemon_cmd = format('{cmd} start')
            Execute(daemon_cmd, not_if=no_op_test, user=params.ams_user)
            pass
        elif (action == 'stop'):
            daemon_cmd = format('{cmd} stop')
            Execute(daemon_cmd, user=params.ams_user)
            pass
        pass
    elif (name == 'monitor'):
        cmd = format('{ams_monitor_script} --config {ams_monitor_conf_dir}')
        pid_file = format('{ams_monitor_pid_dir}/ambari-metrics-monitor.pid')
        no_op_test = format('ls {pid_file} >/dev/null 2>&1 && ps `cat {pid_file}` >/dev/null 2>&1')
        if (action == 'start'):
            daemon_cmd = format('{cmd} start')
            Execute(daemon_cmd, user=params.ams_user)
            pass
        elif (action == 'stop'):
            daemon_cmd = format('{cmd} stop')
            Execute(daemon_cmd, user=params.ams_user)
            pass
        pass
    pass
