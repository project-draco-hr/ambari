def configure(self, env):
    import params
    ganglia.groups_and_users()
    ganglia.config()
    if params.has_namenodes:
        generate_daemon('gmond', name='HDPNameNode', role='server', owner='root', group=params.user_group)
    if params.has_jobtracker:
        generate_daemon('gmond', name='HDPJobTracker', role='server', owner='root', group=params.user_group)
    if params.has_hbase_masters:
        generate_daemon('gmond', name='HDPHBaseMaster', role='server', owner='root', group=params.user_group)
    if params.has_resourcemanager:
        generate_daemon('gmond', name='HDPResourceManager', role='server', owner='root', group=params.user_group)
    if params.has_nodemanager:
        generate_daemon('gmond', name='HDPNodeManager', role='server', owner='root', group=params.user_group)
    if params.has_historyserver:
        generate_daemon('gmond', name='HDPHistoryServer', role='server', owner='root', group=params.user_group)
    if params.has_slaves:
        generate_daemon('gmond', name='HDPDataNode', role='server', owner='root', group=params.user_group)
    if params.has_tasktracker:
        generate_daemon('gmond', name='HDPTaskTracker', role='server', owner='root', group=params.user_group)
    if params.has_hbase_rs:
        generate_daemon('gmond', name='HDPHBaseRegionServer', role='server', owner='root', group=params.user_group)
    if params.has_nimbus_server:
        generate_daemon('gmond', name='HDPNimbus', role='server', owner='root', group=params.user_group)
    if params.has_supervisor_server:
        generate_daemon('gmond', name='HDPSupervisor', role='server', owner='root', group=params.user_group)
    if params.has_flume:
        generate_daemon('gmond', name='HDPFlumeServer', role='server', owner='root', group=params.user_group)
    if params.has_journalnode:
        generate_daemon('gmond', name='HDPJournalNode', role='server', owner='root', group=params.user_group)
    generate_daemon('gmetad', name='gmetad', role='server', owner='root', group=params.user_group)
    change_permission()
    server_files()
    File(path.join(params.ganglia_dir, 'gmetad.conf'), owner='root', group=params.user_group)
