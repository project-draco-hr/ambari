{
  bind(AuditLogger.class).to(AsyncAuditLogger.class);
  bind(AuditLogger.class).annotatedWith(Names.named(AsyncAuditLogger.InnerLogger)).to(AuditLoggerDefaultImpl.class);
  Multibinder<RequestAuditEventCreator> multiBinder=Multibinder.newSetBinder(binder(),RequestAuditEventCreator.class);
  Set<Class> bindingSet=ClasspathScannerUtils.findOnClassPath(getPackageToScan(),getExclusions(),getSelectors());
  for (  Class clazz : bindingSet) {
    multiBinder.addBinding().to(clazz).in(Scopes.SINGLETON);
  }
  bind(RequestAuditLogger.class).to(RequestAuditLoggerImpl.class);
}
