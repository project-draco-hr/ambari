{
  bind(AuditLogger.class).to(AsyncAuditLogger.class);
  bind(AuditLogger.class).annotatedWith(Names.named(AsyncAuditLogger.InnerLogger)).to(AuditLoggerDefaultImpl.class);
  Multibinder<RequestAuditEventCreator> auditLogEventCreatorBinder=Multibinder.newSetBinder(binder(),RequestAuditEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(DefaultEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(ComponentEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(ServiceEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(UnauthorizedEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(ConfigurationChangeEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(UserEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(GroupEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(MemberEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(PrivilegeEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(BlueprintExportEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(ServiceConfigDownloadEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(BlueprintEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(ViewInstanceEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(ViewPrivilegeEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(RepositoryEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(RepositoryVersionEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(AlertGroupEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(AlertTargetEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(HostEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(UpgradeEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(UpgradeItemEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(RecommendationIgnoreEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(ValidationIgnoreEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(CredentialEventCreator.class);
  auditLogEventCreatorBinder.addBinding().to(RequestEventCreator.class);
  bind(RequestAuditLogger.class).to(RequestAuditLoggerImpl.class);
}
