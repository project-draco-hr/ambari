{
  final RepositoryVersionResourceProvider provider=(RepositoryVersionResourceProvider)injector.getInstance(ResourceProviderFactory.class).getRepositoryVersionProvider();
  final RepositoryVersionEntity entity=new RepositoryVersionEntity();
  entity.setDisplayName("name");
  entity.setStack("HDP-1.1");
  entity.setUpgradePackage("pack1");
  entity.setVersion("1.1");
  entity.setRepositories("[{\"os\":\"redhat6\",\"baseurls\":[{\"id\":\"HDP-2.2.0.1-885\",\"type\":\"HDP\",\"baseurl\":\"http://host1/hdp\"},{\"id\":\"HDP-UTILS-1.0.0.20\",\"type\":\"HDP-UTILS\",\"baseurl\":\"http://host1/hdp-utils\"}]}]");
  provider.validateRepositoryVersion(entity);
  entity.setVersion("1.1-17");
  provider.validateRepositoryVersion(entity);
  entity.setVersion("1.1.1.1");
  provider.validateRepositoryVersion(entity);
  entity.setVersion("1.1.343432.2");
  provider.validateRepositoryVersion(entity);
  entity.setVersion("1.1.343432.2-234234324");
  provider.validateRepositoryVersion(entity);
  entity.setRepositories("[{\"os\":\"redhat8\",\"baseurls\":[{\"type\":\"HDP\",\"baseurl\":\"http://host1/hdp\"},{\"id\":\"HDP-UTILS-1.0.0.20\",\"type\":\"HDP-UTILS\",\"baseurl\":\"http://host1/hdp-utils\"}]}]");
  try {
    provider.validateRepositoryVersion(entity);
    Assert.fail("Should throw exception");
  }
 catch (  Exception ex) {
  }
  entity.setRepositories("[{\"os\":\"redhat8\",\"baseurls\":[{\"id\":\"HDP-2.2.0.1-885\",\"type\":\"HDP\",\"baseurl\":\"http://host1/hdp\"},{\"id\":\"HDP-UTILS-1.0.0.20\",\"type\":\"HDP-UTILS\",\"baseurl\":\"http://host1/hdp-utils\"}]}]");
  try {
    provider.validateRepositoryVersion(entity);
    Assert.fail("Should throw exception");
  }
 catch (  Exception ex) {
  }
  entity.setRepositories("");
  try {
    provider.validateRepositoryVersion(entity);
    Assert.fail("Should throw exception");
  }
 catch (  Exception ex) {
  }
  entity.setUpgradePackage("pack2");
  try {
    provider.validateRepositoryVersion(entity);
    Assert.fail("Should throw exception");
  }
 catch (  Exception ex) {
  }
  entity.setStack("BIGTOP");
  try {
    provider.validateRepositoryVersion(entity);
    Assert.fail("Should throw exception");
  }
 catch (  Exception ex) {
  }
}
