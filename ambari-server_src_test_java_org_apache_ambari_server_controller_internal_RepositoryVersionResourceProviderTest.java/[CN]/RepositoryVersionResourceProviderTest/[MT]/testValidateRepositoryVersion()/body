{
  StackDAO stackDAO=injector.getInstance(StackDAO.class);
  StackEntity stackEntity=stackDAO.find("HDP","1.1");
  Assert.assertNotNull(stackEntity);
  final RepositoryVersionEntity entity=new RepositoryVersionEntity();
  entity.setDisplayName("name");
  entity.setStack(stackEntity);
  entity.setVersion("1.1");
  entity.setOperatingSystems("[{\"OperatingSystems/os_type\":\"redhat6\",\"repositories\":[{\"Repositories/repo_id\":\"1\",\"Repositories/repo_name\":\"1\",\"Repositories/base_url\":\"http://example.com/repo1\"}]}]");
  final RepositoryVersionDAO repositoryVersionDAO=injector.getInstance(RepositoryVersionDAO.class);
  AmbariMetaInfo info=injector.getInstance(AmbariMetaInfo.class);
  RepositoryVersionResourceProvider.validateRepositoryVersion(repositoryVersionDAO,info,entity);
  entity.setVersion("1.1-17");
  RepositoryVersionResourceProvider.validateRepositoryVersion(repositoryVersionDAO,info,entity);
  entity.setVersion("1.1.1.1");
  RepositoryVersionResourceProvider.validateRepositoryVersion(repositoryVersionDAO,info,entity);
  entity.setVersion("1.1.343432.2");
  RepositoryVersionResourceProvider.validateRepositoryVersion(repositoryVersionDAO,info,entity);
  entity.setVersion("1.1.343432.2-234234324");
  RepositoryVersionResourceProvider.validateRepositoryVersion(repositoryVersionDAO,info,entity);
  entity.setOperatingSystems(jsonStringRedhat7);
  try {
    RepositoryVersionResourceProvider.validateRepositoryVersion(repositoryVersionDAO,info,entity);
    Assert.fail("Should throw exception");
  }
 catch (  Exception ex) {
  }
  entity.setOperatingSystems("");
  try {
    RepositoryVersionResourceProvider.validateRepositoryVersion(repositoryVersionDAO,info,entity);
    Assert.fail("Should throw exception");
  }
 catch (  Exception ex) {
  }
  StackEntity bigtop=new StackEntity();
  stackEntity.setStackName("BIGTOP");
  entity.setStack(bigtop);
  try {
    RepositoryVersionResourceProvider.validateRepositoryVersion(repositoryVersionDAO,info,entity);
    Assert.fail("Should throw exception");
  }
 catch (  Exception ex) {
  }
  entity.setDisplayName("name");
  entity.setStack(stackEntity);
  entity.setVersion("1.1");
  entity.setOperatingSystems("[{\"OperatingSystems/os_type\":\"redhat6\",\"repositories\":[{\"Repositories/repo_id\":\"1\",\"Repositories/repo_name\":\"1\",\"Repositories/base_url\":\"http://example.com/repo1\"}]}]");
  repositoryVersionDAO.create(entity);
  final RepositoryVersionEntity entity2=new RepositoryVersionEntity();
  entity2.setId(2l);
  entity2.setDisplayName("name2");
  entity2.setStack(stackEntity);
  entity2.setVersion("1.2");
  entity2.setOperatingSystems("[{\"OperatingSystems/os_type\":\"redhat6\",\"repositories\":[{\"Repositories/repo_id\":\"1\",\"Repositories/repo_name\":\"1\",\"Repositories/base_url\":\"http://example.com/repo1\"}]}]");
  try {
    RepositoryVersionResourceProvider.validateRepositoryVersion(repositoryVersionDAO,info,entity2);
    Assert.fail("Should throw exception: Base url http://example.com/repo1 is already defined for another repository version");
  }
 catch (  Exception ex) {
  }
}
