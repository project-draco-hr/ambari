def get_nameservice(hdfs_site):
    "\n  Multiple nameservices can be configured for example to support seamless distcp\n  between two HA clusters. The nameservices are defined as a comma separated\n  list in hdfs_site['dfs.nameservices']. The parameter\n  hdfs['dfs.internal.nameservices'] was introduced in Hadoop 2.6 to denote the\n  nameservice for the current cluster (HDFS-6376).\n\n  This method uses hdfs['dfs.internal.nameservices'] to get the current\n  nameservice, if that parameter is not available it tries to splits the value\n  in hdfs_site['dfs.nameservices'] returning the first string or what is\n  contained in hdfs_site['dfs.namenode.shared.edits.dir'].\n\n  By default hdfs_site['dfs.nameservices'] is returned.\n  :param hdfs_site:\n  :return: string or empty\n  "
    name_service = hdfs_site.get('dfs.internal.nameservices', None)
    if (not name_service):
        import re
        name_service = hdfs_site.get('dfs.nameservices', None)
        if name_service:
            for ns in name_service.split(','):
                if (('dfs.namenode.shared.edits.dir' in hdfs_site) and re.match(('.*%s$' % ns), hdfs_site['dfs.namenode.shared.edits.dir'])):
                    return ns
            return name_service.split(',')[0]
    return name_service
