def __map_local_file_to_hdfs_file(tarball_prefix):
    '\n  :param tarball_prefix: Prefix of the tarball must be one of tez, hive, mr, pig\n  :return: Using the source tarball file pattern, it finds the corresponding file in the local filesystem, and\n  maps it to its corresponding location in HDFS, while substituting the dynamic variables like {{ hdp_stack_version }}\n  and {{ component_version }}.\n  On success, returns a string with the path of where the file should be on HDFS, otherwise, returns an empty string.\n  '
    import params
    if ((not hasattr(params, 'hdp_stack_version')) or (params.hdp_stack_version is None)):
        Logger.warning('Could not find hdp_stack_version')
        return ''
    (component_tar_source_file, component_tar_destination_folder) = __get_tar_source_and_dest_folder(tarball_prefix)
    if ((not component_tar_source_file) or (not component_tar_destination_folder)):
        return ''
    source_file_pattern = __create_regex_pattern(component_tar_source_file, params.hdp_stack_version)
    source_and_dest_pairs = __populate_source_and_dests(tarball_prefix, source_file_pattern, component_tar_destination_folder, params.hdp_stack_version)
    if (source_and_dest_pairs and (len(source_and_dest_pairs) == 1)):
        return source_and_dest_pairs[0][1]
    return ''
