@patch('os.path.exists')
def test_configure_environ(self, osPathExistsMock):
    config = AmbariConfig().getConfig()
    tmpdir = config.get('stack', 'installprefix')
    puppetInstance = PuppetExecutor('/tmp', '/x', '/y', tmpdir, config)
    environ = puppetInstance.configureEnviron({})
    self.assertEquals(environ, {})
    config.set('puppet', 'ruby_home', 'test/ruby_home')
    puppetInstance = PuppetExecutor('/tmp', '/x', '/y', tmpdir, config)
    osPathExistsMock.return_value = True
    environ = puppetInstance.configureEnviron({'PATH': 'test_path', })
    self.assertEquals(environ['PATH'], 'test/ruby_home/bin:test_path')
    self.assertEquals(environ['MY_RUBY_HOME'], 'test/ruby_home')
