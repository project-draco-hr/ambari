{
  BarGraphDataListResponse dataList=new BarGraphDataListResponse();
  Collection<BarGraphData> vBarGraphDatas=new ArrayList<BarGraphData>();
  BarGraphData vBarGraphData=new BarGraphData();
  Collection<NameValueData> vNameValues=new ArrayList<NameValueData>();
  SolrUtil.setMainQuery(solrQuery,null);
  queryGenerator.setSingleIncludeFilter(solrQuery,fieldTime,"[" + from + " TO "+ to+ "]");
  if (typeXAxis.contains("string") || typeXAxis.contains("key_lower_case") || typeXAxis.contains("text")) {
    SolrUtil.setFacetField(solrQuery,xAxisField);
    try {
      QueryResponse response=solrDaoBase.process(solrQuery);
      if (response != null && response.getResults() != null) {
        long count=response.getResults().getNumFound();
        if (count > 0) {
          FacetField facetField=response.getFacetField(xAxisField);
          if (facetField != null) {
            List<Count> countValues=facetField.getValues();
            if (countValues != null) {
              for (              Count countValue : countValues) {
                if (countValue != null) {
                  NameValueData vNameValue=new NameValueData();
                  vNameValue.setName(countValue.getName());
                  vNameValue.setValue("" + countValue.getCount());
                  vNameValues.add(vNameValue);
                }
              }
            }
            vBarGraphData.setName(xAxisField);
            vBarGraphDatas.add(vBarGraphData);
            dataList.setGraphData(vBarGraphDatas);
          }
        }
      }
      if (xAxisField.equalsIgnoreCase(LogSearchConstants.SOLR_LEVEL)) {
        Collection<NameValueData> sortedVNameValues=new ArrayList<NameValueData>();
        for (        String level : LogSearchConstants.SUPPORTED_LOG_LEVEL) {
          NameValueData value=new NameValueData();
          value.setName(level);
          String val="0";
          for (          NameValueData valueLevel : vNameValues) {
            if (valueLevel.getName().equalsIgnoreCase(level)) {
              val=valueLevel.getValue();
              break;
            }
          }
          value.setValue(val);
          sortedVNameValues.add(value);
        }
        vBarGraphData.setDataCount(sortedVNameValues);
      }
 else {
        vBarGraphData.setDataCount(vNameValues);
      }
      return dataList;
    }
 catch (    SolrException|SolrServerException|IOException e) {
      String query=solrQuery != null ? solrQuery.toQueryString() : "";
      logger.error("Got exception for solr query :" + query,e.getCause());
    }
  }
 else {
    SolrUtil.setRowCount(solrQuery,0);
    String yAxis=yAxisField.contains("count") ? "sum" : yAxisField;
    String jsonQuery=queryGenerator.buildJSONFacetAggregatedFuncitonQuery(yAxis,xAxisField);
    SolrUtil.setJSONFacet(solrQuery,jsonQuery);
    try {
      QueryResponse response=solrDaoBase.process(solrQuery);
      SimpleOrderedMap<Object> jsonFacetResponse=(SimpleOrderedMap<Object>)response.getResponse().get("facets");
      if (jsonFacetResponse.toString().equals("{count=0}")) {
        return dataList;
      }
      NameValueData value=new NameValueData();
      String sum=(String)jsonFacetResponse.getVal(1);
      value.setName(xAxisField);
      value.setValue(sum != null ? sum.substring(0,sum.indexOf(".")) : "");
      vNameValues.add(value);
      vBarGraphData.setDataCount(vNameValues);
      vBarGraphData.setName(xAxisField);
      vBarGraphDatas.add(vBarGraphData);
      dataList.setGraphData(vBarGraphDatas);
      return dataList;
    }
 catch (    SolrException|SolrServerException|IOException e) {
      String query=solrQuery != null ? solrQuery.toQueryString() : "";
      logger.error("Got exception for solr query :" + query,e.getCause());
    }
  }
  return null;
}
