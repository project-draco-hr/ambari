{
  BarGraphDataListResponse dataList=new BarGraphDataListResponse();
  Collection<BarGraphData> vGraphData=new ArrayList<BarGraphData>();
  String mainQuery=queryGenerator.buildInclusiveRangeFilterQuery(fieldTime,from,to);
  SolrUtil.setMainQuery(solrQuery,mainQuery);
  SolrUtil.setFacetSort(solrQuery,LogSearchConstants.FACET_INDEX);
  String jsonQuery="";
  if (SolrUtil.isSolrFieldNumber(typeXAxis,solrDaoBase)) {
    String function=(yAxisField.contains("count")) ? "sum" : yAxisField;
    jsonQuery=queryGenerator.buidlJSONFacetRangeQueryForNumber(stackField,xAxisField,function);
  }
 else {
    jsonQuery=queryGenerator.buildJsonFacetTermsRangeQuery(stackField,xAxisField);
  }
  try {
    SolrUtil.setJSONFacet(solrQuery,jsonQuery);
    dataList.setGraphData(vGraphData);
    QueryResponse response=solrDaoBase.process(solrQuery);
    if (response == null) {
      response=new QueryResponse();
    }
    Long count=response.getResults().getNumFound();
    if (count <= 0) {
      return dataList;
    }
    SimpleOrderedMap<Object> jsonFacetResponse=(SimpleOrderedMap<Object>)response.getResponse().get("facets");
    if (jsonFacetResponse == null || jsonFacetResponse.toString().equals("{count=0}")) {
      return dataList;
    }
    extractNonRangeStackValuesFromBucket(jsonFacetResponse,stackField,vGraphData,typeXAxis);
    if (LogSearchConstants.SOLR_LEVEL.equalsIgnoreCase(stackField) && LogSearchConstants.SOLR_LEVEL.equalsIgnoreCase(xAxisField)) {
      Collection<BarGraphData> levelVGraphData=dataList.getGraphData();
      for (      BarGraphData graphData : levelVGraphData) {
        Collection<NameValueData> valueList=graphData.getDataCount();
        Collection<NameValueData> valueListSorted=new ArrayList<NameValueData>();
        for (        String level : LogSearchConstants.SUPPORTED_LOG_LEVEL) {
          String val="0";
          for (          NameValueData value : valueList) {
            if (value.getName().equalsIgnoreCase(level)) {
              val=value.getValue();
              break;
            }
          }
          NameValueData v1=new NameValueData();
          v1.setName(level.toUpperCase());
          v1.setValue(val);
          valueListSorted.add(v1);
        }
        graphData.setDataCount(valueListSorted);
      }
    }
    return dataList;
  }
 catch (  SolrException|IOException|SolrServerException e) {
    String query=solrQuery != null ? solrQuery.toQueryString() : "";
    logger.error("Got exception for solr query :" + query,e.getCause());
    throw RESTErrorUtil.createRESTException(MessageEnums.DATA_NOT_FOUND.getMessage().getMessage(),MessageEnums.DATA_NOT_FOUND);
  }
}
