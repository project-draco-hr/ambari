{
  List<NodeData> extensionTree=new ArrayList<>();
  if (firstHirarchicalPivotFields != null) {
    for (    PivotField pivotHost : firstHirarchicalPivotFields) {
      if (pivotHost != null) {
        NodeData hostNode=new NodeData();
        String name=(pivotHost.getValue() == null ? "" : "" + pivotHost.getValue());
        String value="" + pivotHost.getCount();
        if (!StringUtils.isBlank(name)) {
          hostNode.setName(name);
        }
        if (!StringUtils.isBlank(value)) {
          hostNode.setValue(value);
        }
        if (!StringUtils.isBlank(firstPriority)) {
          hostNode.setType(firstPriority);
        }
        hostNode.setParent(true);
        hostNode.setRoot(true);
        PivotField hostPivot=null;
        for (        PivotField searchHost : secondHirarchicalPivotFields) {
          if (!StringUtils.isBlank(hostNode.getName()) && hostNode.getName().equals(searchHost.getValue())) {
            hostPivot=searchHost;
            break;
          }
        }
        List<PivotField> pivotLevelHost=hostPivot == null ? null : hostPivot.getPivot();
        if (pivotLevelHost != null) {
          Collection<NameValueData> logLevelCount=new ArrayList<>();
          for (          PivotField pivotLevel : pivotLevelHost) {
            if (pivotLevel != null) {
              NameValueData vnameValue=new NameValueData();
              String levelName=(pivotLevel.getValue() == null ? "" : "" + pivotLevel.getValue());
              vnameValue.setName(levelName.toUpperCase());
              vnameValue.setValue("" + pivotLevel.getCount());
              logLevelCount.add(vnameValue);
            }
          }
          hostNode.setLogLevelCount(logLevelCount);
        }
        List<PivotField> pivotComponents=pivotHost.getPivot();
        if (pivotComponents != null) {
          Collection<NodeData> componentNodes=new ArrayList<>();
          for (          PivotField pivotComp : pivotComponents) {
            if (pivotComp != null) {
              NodeData compNode=new NodeData();
              String compName=(pivotComp.getValue() == null ? "" : "" + pivotComp.getValue());
              compNode.setName(compName);
              if (!StringUtils.isBlank(secondPriority)) {
                compNode.setType(secondPriority);
              }
              compNode.setValue("" + pivotComp.getCount());
              compNode.setParent(false);
              compNode.setRoot(false);
              List<PivotField> pivotLevels=pivotComp.getPivot();
              if (pivotLevels != null) {
                Collection<NameValueData> logLevelCount=new ArrayList<>();
                for (                PivotField pivotLevel : pivotLevels) {
                  if (pivotLevel != null) {
                    NameValueData vnameValue=new NameValueData();
                    String compLevel=pivotLevel.getValue() == null ? "" : "" + pivotLevel.getValue();
                    vnameValue.setName((compLevel).toUpperCase());
                    vnameValue.setValue("" + pivotLevel.getCount());
                    logLevelCount.add(vnameValue);
                  }
                }
                compNode.setLogLevelCount(logLevelCount);
              }
              componentNodes.add(compNode);
            }
          }
          hostNode.setChilds(componentNodes);
        }
        extensionTree.add(hostNode);
      }
    }
  }
  return extensionTree;
}
