{
  if (isCacheInitialized) {
    return;
  }
  System.setProperty("net.sf.ehcache.skipUpdateCheck","true");
  if (configuration.useMetricsCacheCustomSizingEngine()) {
    System.setProperty("net.sf.ehcache.sizeofengine." + TIMELINE_METRIC_CACHE_MANAGER_NAME,"org.apache.ambari.server.controller.metrics.timeline.cache.TimelineMetricsCacheSizeOfEngine");
  }
  net.sf.ehcache.config.Configuration managerConfig=new net.sf.ehcache.config.Configuration();
  managerConfig.setName(TIMELINE_METRIC_CACHE_MANAGER_NAME);
  managerConfig.setMaxBytesLocalHeap(configuration.getMetricsCacheManagerHeapPercent());
  CacheManager manager=CacheManager.create(managerConfig);
  LOG.info("Creating Metrics Cache with timeouts => ttl = " + configuration.getMetricCacheTTLSeconds() + ", idle = "+ configuration.getMetricCacheIdleSeconds());
  CacheConfiguration cacheConfiguration=createCacheConfiguration();
  Cache cache=new Cache(cacheConfiguration);
  timelineMetricsCache=new TimelineMetricCache(cache,cacheEntryFactory);
  LOG.info("Registering metrics cache with provider: name = " + cache.getName() + ", guid: "+ cache.getGuid());
  manager.addCache(timelineMetricsCache);
  isCacheInitialized=true;
}
