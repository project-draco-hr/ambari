def os_store_local_properties(args):
    properties = get_ambari_properties()
    if (properties == (-1)):
        print_error_msg('Error getting ambari properties')
        return (-1)
    isSecure = get_is_secure(properties)
    properties.removeOldProp(JDBC_SCHEMA_PROPERTY)
    properties.removeOldProp(JDBC_HOSTNAME_PROPERTY)
    properties.removeOldProp(JDBC_RCA_DRIVER_PROPERTY)
    properties.removeOldProp(JDBC_RCA_URL_PROPERTY)
    properties.removeOldProp(JDBC_PORT_PROPERTY)
    properties.removeOldProp(JDBC_DRIVER_PROPERTY)
    properties.removeOldProp(JDBC_URL_PROPERTY)
    properties.process_pair(PERSISTENCE_TYPE_PROPERTY, 'local')
    properties.process_pair(JDBC_DATABASE_PROPERTY, args.database_name)
    properties.process_pair(JDBC_USER_NAME_PROPERTY, args.database_username)
    properties.process_pair(JDBC_PASSWORD_PROPERTY, store_password_file(args.database_password, JDBC_PASSWORD_FILENAME))
    if isSecure:
        encrypted_password = encrypt_password(JDBC_RCA_PASSWORD_ALIAS, args.database_password)
        if (args.database_password != encrypted_password):
            properties.process_pair(JDBC_PASSWORD_PROPERTY, encrypted_password)
        pass
    pass
    return 0
