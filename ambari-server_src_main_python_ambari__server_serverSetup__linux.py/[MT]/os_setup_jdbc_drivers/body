def os_setup_jdbc_drivers(args):
    result = os_find_jdbc_driver(args)
    msg = 'Before starting Ambari Server, you must copy the {0} JDBC driver JAR file to {1}.'.format(DATABASE_FULL_NAMES[args.dbms], JAVA_SHARE_PATH)
    if (result == (-1)):
        if SILENT:
            print_error_msg(msg)
            raise FatalException((-1), msg)
        else:
            print_warning_msg(msg)
            raw_input(PRESS_ENTER_MSG)
            result = os_find_jdbc_driver(args)
            if (result == (-1)):
                print_error_msg(msg)
                raise FatalException((-1), msg)
    if (type(result) is not int):
        print 'Copying JDBC drivers to server resources...'
        try:
            resources_dir = args[RESOURCES_DIR_PROPERTY]
        except KeyError:
            print_error_msg(((('There is no value for ' + RESOURCES_DIR_PROPERTY) + 'in ') + AMBARI_PROPERTIES_FILE))
            return (-1)
        db_name = DATABASE_FULL_NAMES[args.dbms].lower()
        jdbc_symlink = os.path.join(resources_dir, (db_name + '-jdbc-driver.jar'))
        db_default_driver_path = os.path.join(JAVA_SHARE_PATH, JDBC_DB_DEFAULT_DRIVER[db_name])
        if os.path.lexists(jdbc_symlink):
            os.remove(jdbc_symlink)
        copy_status = copy_files(result, resources_dir)
        if (not (copy_status == 0)):
            raise FatalException((-1), 'Failed to copy JDBC drivers to server resources')
        if (db_default_driver_path in result):
            os.symlink(os.path.join(resources_dir, JDBC_DB_DEFAULT_DRIVER[db_name]), jdbc_symlink)
