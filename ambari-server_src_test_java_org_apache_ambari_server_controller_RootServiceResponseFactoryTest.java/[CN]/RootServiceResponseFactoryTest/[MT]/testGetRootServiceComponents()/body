{
  RootServiceComponentRequest request=new RootServiceComponentRequest(null,null);
  Set<RootServiceComponentResponse> rootServiceComponents;
  try {
    rootServiceComponents=responseFactory.getRootServiceComponents(request);
  }
 catch (  Exception e) {
    assertTrue(e instanceof ObjectNotFoundException);
  }
  request=new RootServiceComponentRequest(null,RootServiceResponseFactory.Components.AMBARI_SERVER.name());
  try {
    rootServiceComponents=responseFactory.getRootServiceComponents(request);
  }
 catch (  Exception e) {
    assertTrue(e instanceof ObjectNotFoundException);
  }
  request=new RootServiceComponentRequest(RootServiceResponseFactory.Services.AMBARI.name(),null);
  rootServiceComponents=responseFactory.getRootServiceComponents(request);
  assertEquals(RootServiceResponseFactory.Services.AMBARI.getComponents().length,rootServiceComponents.size());
  for (int i=0; i < RootServiceResponseFactory.Services.AMBARI.getComponents().length; i++) {
    Components component=RootServiceResponseFactory.Services.AMBARI.getComponents()[i];
    if (component.name().equals(RootServiceResponseFactory.Components.AMBARI_SERVER.name()))     assertTrue(rootServiceComponents.contains(new RootServiceComponentResponse(component.name(),configs.getConfigsMap())));
 else     assertTrue(rootServiceComponents.contains(new RootServiceComponentResponse(component.name(),Collections.<String,String>emptyMap())));
  }
  request=new RootServiceComponentRequest(RootServiceResponseFactory.Services.AMBARI.name(),RootServiceResponseFactory.Services.AMBARI.getComponents()[0].name());
  rootServiceComponents=responseFactory.getRootServiceComponents(request);
  assertEquals(1,rootServiceComponents.size());
  assertTrue(rootServiceComponents.contains(new RootServiceComponentResponse(RootServiceResponseFactory.Services.AMBARI.getComponents()[0].name(),configs.getConfigsMap())));
  request=new RootServiceComponentRequest(RootServiceResponseFactory.Services.AMBARI.name(),"XXX");
  try {
    rootServiceComponents=responseFactory.getRootServiceComponents(request);
  }
 catch (  Exception e) {
    assertTrue(e instanceof ObjectNotFoundException);
  }
}
