{
  String jmxProtocolString=clusterJmxProtocolMap.get(clusterName);
  try {
    String newCoreSiteConfigVersion=getDesiredConfigVersion(clusterName,"core-site");
    String cachedCoreSiteConfigVersion=clusterCoreSiteConfigVersionMap.get(clusterName);
    if (!newCoreSiteConfigVersion.equals(cachedCoreSiteConfigVersion)) {
      clusterCoreSiteConfigVersionMap.put(clusterName,newCoreSiteConfigVersion);
      Map<String,String> protocolMap=getDesiredConfigMap(clusterName,newCoreSiteConfigVersion,"core-site",jmxDesiredProperties.get("NAMENODE"));
      jmxProtocolString=getJMXProtocolString(protocolMap.get("NAMENODE"),componentName);
      clusterJmxProtocolMap.put(clusterName,jmxProtocolString);
    }
  }
 catch (  Exception e) {
    LOG.error("Exception while detecting JMX protocol for component: " + componentName,e);
    LOG.error("Defaulting to HTTP protocol for component: " + componentName);
    jmxProtocolString="http";
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("JMXProtocol = " + jmxProtocolString + ", for clusterName="+ clusterName+ ", componentName = "+ componentName);
  }
  return jmxProtocolString;
}
