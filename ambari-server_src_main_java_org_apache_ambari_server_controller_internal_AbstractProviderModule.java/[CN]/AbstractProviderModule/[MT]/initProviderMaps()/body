{
  ResourceProvider provider=getResourceProvider(Resource.Type.Cluster);
  Request request=PropertyHelper.getReadRequest(CLUSTER_NAME_PROPERTY_ID);
  try {
    Set<Resource> clusters=provider.getResources(request,null);
    clusterHostMap=new HashMap<String,Map<String,String>>();
    clusterHostComponentMap=new HashMap<String,Map<String,String>>();
    clusterGangliaCollectorMap=new HashMap<String,String>();
    for (    Resource cluster : clusters) {
      String clusterName=(String)cluster.getPropertyValue(CLUSTER_NAME_PROPERTY_ID);
      provider=getResourceProvider(Resource.Type.Host);
      request=PropertyHelper.getReadRequest(HOST_NAME_PROPERTY_ID,HOST_IP_PROPERTY_ID);
      Predicate predicate=new PredicateBuilder().property(HOST_CLUSTER_NAME_PROPERTY_ID).equals(clusterName).toPredicate();
      Set<Resource> hosts=provider.getResources(request,predicate);
      Map<String,String> hostMap=clusterHostMap.get(clusterName);
      if (hostMap == null) {
        hostMap=new HashMap<String,String>();
        clusterHostMap.put(clusterName,hostMap);
      }
      for (      Resource host : hosts) {
        String hostName=(String)host.getPropertyValue(HOST_NAME_PROPERTY_ID);
        String hostIp=(String)host.getPropertyValue(HOST_IP_PROPERTY_ID);
        hostMap.put(hostName,hostIp == null ? hostName : hostIp);
      }
      provider=getResourceProvider(Resource.Type.HostComponent);
      request=PropertyHelper.getReadRequest(HOST_COMPONENT_HOST_NAME_PROPERTY_ID,HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID);
      predicate=new PredicateBuilder().property(HOST_COMPONENT_CLUSTER_NAME_PROPERTY_ID).equals(clusterName).toPredicate();
      Set<Resource> hostComponents=provider.getResources(request,predicate);
      Map<String,String> hostComponentMap=clusterHostComponentMap.get(clusterName);
      if (hostComponentMap == null) {
        hostComponentMap=new HashMap<String,String>();
        clusterHostComponentMap.put(clusterName,hostComponentMap);
      }
      for (      Resource hostComponent : hostComponents) {
        String componentName=(String)hostComponent.getPropertyValue(HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID);
        String hostName=(String)hostComponent.getPropertyValue(HOST_COMPONENT_HOST_NAME_PROPERTY_ID);
        hostComponentMap.put(componentName,hostMap.get(hostName));
        if (componentName.equals(GANGLIA_SERVER) || componentName.equals(GANGLIA_MONITOR) || componentName.equals(GANGLIA_SERVER_OLD)) {
          clusterGangliaCollectorMap.put(clusterName,clusterHostMap.get(clusterName).get(hostName));
        }
      }
    }
  }
 catch (  UnsupportedPropertyException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error("Caught UnsupportedPropertyException while trying to get the host mappings.",e);
    }
    throw new SystemException("An exception occurred while initializing the host mappings: " + e,e);
  }
catch (  NoSuchResourceException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error("Caught NoSuchResourceException exception while trying to get the host mappings.",e);
    }
    throw new SystemException("An exception occurred while initializing the host mappings: " + e,e);
  }
catch (  NoSuchParentResourceException e) {
    if (LOG.isErrorEnabled()) {
      LOG.error("Caught NoSuchParentResourceException exception while trying to get the host mappings.",e);
    }
    throw new SystemException("An exception occurred while initializing the host mappings: " + e,e);
  }
}
