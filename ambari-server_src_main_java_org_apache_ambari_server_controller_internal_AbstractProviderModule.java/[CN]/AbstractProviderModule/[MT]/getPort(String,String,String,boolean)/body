{
  Map<String,Map<String,String>> clusterJmxPorts=jmxPortMap.get(clusterName);
  if (clusterJmxPorts == null) {
synchronized (jmxPortMap) {
      clusterJmxPorts=jmxPortMap.get(clusterName);
      if (clusterJmxPorts == null) {
        clusterJmxPorts=new ConcurrentHashMap<String,Map<String,String>>();
        jmxPortMap.put(clusterName,clusterJmxPorts);
      }
    }
  }
  Service.Type service=componentServiceMap.get(componentName);
  if (service != null) {
    try {
      String configType=serviceConfigTypes.get(service);
      String currVersion=getDesiredConfigVersion(clusterName,configType);
      String oldVersion=serviceConfigVersions.get(configType);
      if (!currVersion.equals(oldVersion) || !(clusterJmxPorts.containsKey(hostName) && clusterJmxPorts.get(hostName).containsKey(componentName))) {
        serviceConfigVersions.put(configType,currVersion);
        Map<String,Object> configProperties=getConfigProperties(clusterName,currVersion,serviceConfigTypes.get(service));
        Map<String,String[]> componentPortsProperties=new HashMap<String,String[]>();
        componentPortsProperties.put(componentName,getPortProperties(service,componentName,hostName,configProperties,httpsEnabled));
        Map<String,String> portMap=getDesiredConfigMap(clusterName,currVersion,serviceConfigTypes.get(service),componentPortsProperties,configProperties);
        for (        Entry<String,String> entry : portMap.entrySet()) {
          String portString=getPortString(entry.getValue());
          if (null != portString) {
            if (!clusterJmxPorts.containsKey(hostName)) {
              clusterJmxPorts.put(hostName,new ConcurrentHashMap<String,String>());
            }
            clusterJmxPorts.get(hostName).put(entry.getKey(),portString);
          }
        }
      }
    }
 catch (    Exception e) {
      LOG.error("Exception initializing jmx port maps. " + e);
    }
  }
  LOG.debug("jmxPortMap -> " + jmxPortMap);
  return clusterJmxPorts.get(hostName).get(componentName);
}
