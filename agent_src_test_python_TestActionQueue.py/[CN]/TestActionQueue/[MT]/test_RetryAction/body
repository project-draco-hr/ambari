def test_RetryAction(self):
    action = {'id': 'tttt', }
    config = AmbariConfig().getConfig()
    actionQueue = ActionQueue(config)
    path = actionQueue.getInstallFilename(action['id'])
    configFile = {'data': 'test', 'owner': os.getuid(), 'group': os.getgid(), 'permission': 448, 'path': path, 'umask': 18, }
    badAction = {'id': 'tttt', 'kind': 'INSTALL_AND_CONFIG_ACTION', 'workDirComponent': 'abc-hdfs', 'file': configFile, 'clusterDefinitionRevision': 12, 'command': ['/bin/ls', '/foo/bar/badPath1234'], }
    path = getFilePath(action, path)
    goodAction = {'id': 'tttt', 'kind': 'INSTALL_AND_CONFIG_ACTION', 'workDirComponent': 'abc-hdfs', 'file': configFile, 'clusterDefinitionRevision': 12, 'command': ['/bin/ls', path], }
    actionQueue.start()
    response = {'actions': [badAction, goodAction], }
    actionQueue.maxRetries = 2
    actionQueue.sleepInterval = 1
    result = actionQueue.put(response)
    time.sleep(5)
    actionQueue.stop()
    actionQueue.join()
    results = actionQueue.result()
    self.assertEqual(len(results), 2, 'Number of results is not 2.')
    result = results[0]
    maxretries = config.get('command', 'maxretries')
    self.assertEqual(int(result['retryActionCount']), int(maxretries), ('Number of retries is %d and not %d' % (int(result['retryActionCount']), int(str(maxretries)))))
    result = results[1]
    self.assertEqual(int(result['retryActionCount']), 1, ('Number of retries is %d and not %d' % (int(result['retryActionCount']), 1)))
