{
  CommandReport commandReport=null;
  if (identityRecord != null) {
    String message=String.format("Creating keytab file for %s",evaluatedPrincipal);
    LOG.info(message);
    actionLog.writeStdOut(message);
    if (operationHandler == null) {
      message=String.format("Failed to create keytab file for %s, missing KerberosOperationHandler",evaluatedPrincipal);
      actionLog.writeStdErr(message);
      LOG.error(message);
      commandReport=createCommandReport(1,HostRoleStatus.FAILED,"{}",actionLog.getStdOut(),actionLog.getStdErr());
    }
 else {
      Map<String,String> principalPasswordMap=getPrincipalPasswordMap(requestSharedDataContext);
      Map<String,Integer> principalKeyNumberMap=getPrincipalKeyNumberMap(requestSharedDataContext);
      String host=identityRecord.get(HOSTNAME);
      String keytabFilePath=identityRecord.get(KEYTAB_FILE_PATH);
      if ((host != null) && !host.isEmpty() && (keytabFilePath != null)&& !keytabFilePath.isEmpty()) {
        String password=principalPasswordMap.get(evaluatedPrincipal);
        if (password == null) {
          message=String.format("Failed to create keytab file for %s, missing password",evaluatedPrincipal);
          actionLog.writeStdErr(message);
          LOG.error(message);
          commandReport=createCommandReport(1,HostRoleStatus.FAILED,"{}",actionLog.getStdOut(),actionLog.getStdErr());
        }
 else {
          File hostDirectory=new File(getDataDirectoryPath(),host);
          if (hostDirectory.exists() || hostDirectory.mkdirs()) {
            File keytabFile=new File(hostDirectory,DigestUtils.sha1Hex(keytabFilePath));
            Integer keyNumber=principalKeyNumberMap.get(evaluatedPrincipal);
            try {
              if (operationHandler.createKeytabFile(evaluatedPrincipal,password,keyNumber,keytabFile)) {
                message=String.format("Successfully created keytab file for %s at %s",evaluatedPrincipal,keytabFile.getAbsolutePath());
                LOG.debug(message);
              }
 else {
                message=String.format("Failed to create keytab file for %s at %s",evaluatedPrincipal,keytabFile.getAbsolutePath());
                actionLog.writeStdErr(message);
                LOG.error(message);
                commandReport=createCommandReport(1,HostRoleStatus.FAILED,"{}",actionLog.getStdOut(),actionLog.getStdErr());
              }
            }
 catch (            KerberosOperationException e) {
              message=String.format("Failed to create keytab file for %s - %s",evaluatedPrincipal,e.getMessage());
              actionLog.writeStdErr(message);
              LOG.error(message,e);
              commandReport=createCommandReport(1,HostRoleStatus.FAILED,"{}",actionLog.getStdOut(),actionLog.getStdErr());
            }
          }
 else {
            message=String.format("Failed to create keytab file for %s, the container directory does not exist: %s",evaluatedPrincipal,hostDirectory.getAbsolutePath());
            actionLog.writeStdErr(message);
            LOG.error(message);
            commandReport=createCommandReport(1,HostRoleStatus.FAILED,"{}",actionLog.getStdOut(),actionLog.getStdErr());
          }
        }
      }
    }
  }
  return commandReport;
}
