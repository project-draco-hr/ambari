{
  AlertCurrentEntity hostAlert=EasyMock.createStrictMock(AlertCurrentEntity.class);
  AlertCurrentEntity serviceAlert=EasyMock.createStrictMock(AlertCurrentEntity.class);
  AlertCurrentEntity componentAlert=EasyMock.createStrictMock(AlertCurrentEntity.class);
  AlertHistoryEntity hostHistory=EasyMock.createStrictMock(AlertHistoryEntity.class);
  AlertHistoryEntity serviceHistory=EasyMock.createStrictMock(AlertHistoryEntity.class);
  AlertHistoryEntity componentHistory=EasyMock.createStrictMock(AlertHistoryEntity.class);
  EasyMock.expect(hostAlert.getAlertHistory()).andReturn(hostHistory).atLeastOnce();
  EasyMock.expect(serviceAlert.getAlertHistory()).andReturn(serviceHistory).atLeastOnce();
  EasyMock.expect(componentAlert.getAlertHistory()).andReturn(componentHistory).atLeastOnce();
  EasyMock.expect(hostHistory.getHostName()).andReturn(HOSTNAME).atLeastOnce();
  EasyMock.expect(hostHistory.getServiceName()).andReturn(null).atLeastOnce();
  EasyMock.expect(hostHistory.getComponentName()).andReturn(null).atLeastOnce();
  EasyMock.expect(serviceHistory.getHostName()).andReturn(null).atLeastOnce();
  EasyMock.expect(serviceHistory.getServiceName()).andReturn(SERVICE).atLeastOnce();
  EasyMock.expect(serviceHistory.getComponentName()).andReturn(null).atLeastOnce();
  if (testType.equals("SCH")) {
    EasyMock.expect(componentHistory.getHostName()).andReturn(HOSTNAME).atLeastOnce();
    EasyMock.expect(componentHistory.getServiceName()).andReturn(SERVICE).atLeastOnce();
    EasyMock.expect(componentHistory.getComponentName()).andReturn(COMPONENT).atLeastOnce();
  }
 else {
    EasyMock.expect(componentHistory.getHostName()).andReturn(null).atLeastOnce();
    EasyMock.expect(componentHistory.getServiceName()).andReturn(null).atLeastOnce();
    EasyMock.expect(componentHistory.getComponentName()).andReturn(COMPONENT).atLeastOnce();
  }
  List<AlertCurrentEntity> currentAlerts=new ArrayList<AlertCurrentEntity>();
  currentAlerts.add(hostAlert);
  currentAlerts.add(serviceAlert);
  currentAlerts.add(componentAlert);
  EasyMock.expect(m_alertsDAO.findCurrent()).andReturn(currentAlerts).atLeastOnce();
  EasyMock.replay(hostHistory,serviceHistory,componentHistory);
  return currentAlerts;
}
