{
  return Guice.createInjector(new AbstractModule(){
    @Override protected void configure(){
      bind(EntityManager.class).toInstance(createNiceMock(EntityManager.class));
      bind(DBAccessor.class).toInstance(createNiceMock(DBAccessor.class));
      bind(ActionDBAccessor.class).toInstance(createNiceMock(ActionDBAccessor.class));
      bind(ExecutionScheduler.class).toInstance(createNiceMock(ExecutionScheduler.class));
      bind(OsFamily.class).toInstance(createNiceMock(OsFamily.class));
      bind(AmbariMetaInfo.class).toInstance(createMock(AmbariMetaInfo.class));
      bind(ActionManager.class).toInstance(createNiceMock(ActionManager.class));
      bind(org.apache.ambari.server.actionmanager.RequestFactory.class).toInstance(createNiceMock(org.apache.ambari.server.actionmanager.RequestFactory.class));
      bind(RequestExecutionFactory.class).toInstance(createNiceMock(RequestExecutionFactory.class));
      bind(StageFactory.class).toInstance(createNiceMock(StageFactory.class));
      install(new FactoryModuleBuilder().build(RoleGraphFactory.class));
      bind(Clusters.class).toInstance(createNiceMock(Clusters.class));
      bind(AbstractRootServiceResponseFactory.class).toInstance(createNiceMock(AbstractRootServiceResponseFactory.class));
      bind(StackManagerFactory.class).toInstance(createNiceMock(StackManagerFactory.class));
      bind(ConfigFactory.class).toInstance(createNiceMock(ConfigFactory.class));
      bind(ConfigGroupFactory.class).toInstance(createNiceMock(ConfigGroupFactory.class));
      bind(ServiceFactory.class).toInstance(createNiceMock(ServiceFactory.class));
      bind(ServiceComponentFactory.class).toInstance(createNiceMock(ServiceComponentFactory.class));
      bind(ServiceComponentHostFactory.class).toInstance(createNiceMock(ServiceComponentHostFactory.class));
      bind(PasswordEncoder.class).toInstance(createNiceMock(PasswordEncoder.class));
      bind(KerberosHelper.class).toInstance(createNiceMock(KerberosHelper.class));
      bind(Users.class).toInstance(createMock(Users.class));
      bind(AmbariManagementController.class).to(AmbariManagementControllerImpl.class);
      bind(RoleCommandOrderProvider.class).to(CachedRoleCommandOrderProvider.class);
      bind(CredentialStoreService.class).to(CredentialStoreServiceImpl.class);
      bind(UserDAO.class).toInstance(createMock(UserDAO.class));
      bind(WidgetLayoutDAO.class).toInstance(createMock(WidgetLayoutDAO.class));
      bind(HostRoleCommandDAO.class).toInstance(createMock(HostRoleCommandDAO.class));
    }
  }
);
}
