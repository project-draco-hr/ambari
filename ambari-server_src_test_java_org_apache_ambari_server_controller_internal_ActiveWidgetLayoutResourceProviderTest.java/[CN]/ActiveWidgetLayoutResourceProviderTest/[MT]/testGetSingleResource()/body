{
  Request request=PropertyHelper.getReadRequest(ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_CLUSTER_NAME_PROPERTY_ID,ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_ID_PROPERTY_ID,ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_DISPLAY_NAME_PROPERTY_ID,ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_LAYOUT_NAME_PROPERTY_ID,ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_SECTION_NAME_PROPERTY_ID,ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_USERNAME_PROPERTY_ID,ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_SCOPE_PROPERTY_ID,ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_WIDGETS_PROPERTY_ID);
  AmbariManagementController amc=createMock(AmbariManagementController.class);
  Clusters clusters=createMock(Clusters.class);
  Cluster cluster=createMock(Cluster.class);
  UserEntity userEntity=createMock(UserEntity.class);
  expect(amc.getClusters()).andReturn(clusters).atLeastOnce();
  expect(clusters.getClusterById(1L)).andReturn(cluster).atLeastOnce();
  expect(cluster.getClusterName()).andReturn("c1").anyTimes();
  Predicate predicate=new PredicateBuilder().property(ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_USERNAME_PROPERTY_ID).equals("username").toPredicate();
  expect(userDAO.findUserByName("username")).andReturn(userEntity);
  expect(userEntity.getActiveWidgetLayouts()).andReturn("[{\"id\":\"1\"},{\"id\":\"2\"}]");
  expect(widgetLayoutDAO.findById(1L)).andReturn(getMockEntities().get(0));
  expect(widgetLayoutDAO.findById(2L)).andReturn(getMockEntities().get(1));
  replay(amc,clusters,cluster,widgetLayoutDAO,userEntity,userDAO);
  ActiveWidgetLayoutResourceProvider provider=createProvider(amc);
  Set<Resource> results=provider.getResources(request,predicate);
  assertEquals(2,results.size());
  Resource r=results.iterator().next();
  Assert.assertEquals("section0",r.getPropertyValue(ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_SECTION_NAME_PROPERTY_ID));
  Assert.assertEquals("CLUSTER",r.getPropertyValue(ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_SCOPE_PROPERTY_ID));
  Assert.assertEquals("username",r.getPropertyValue(ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_USERNAME_PROPERTY_ID));
  Assert.assertEquals("displ_name",r.getPropertyValue(ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_DISPLAY_NAME_PROPERTY_ID));
  Assert.assertEquals("layout name0",r.getPropertyValue(ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_LAYOUT_NAME_PROPERTY_ID));
  Assert.assertEquals("[]",r.getPropertyValue(ActiveWidgetLayoutResourceProvider.WIDGETLAYOUT_WIDGETS_PROPERTY_ID).toString());
  verify(amc,clusters,cluster,widgetLayoutDAO,userEntity,userDAO);
}
