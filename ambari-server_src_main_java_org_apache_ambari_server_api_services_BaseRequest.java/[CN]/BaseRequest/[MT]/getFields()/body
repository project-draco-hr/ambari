{
  Map<String,TemporalInfo> mapProperties;
  String partialResponseFields=m_uriInfo.getQueryParameters().getFirst(QueryLexer.QUERY_FIELDS);
  if (partialResponseFields == null) {
    mapProperties=Collections.emptyMap();
  }
 else {
    Set<String> setMatches=new HashSet<String>();
    Pattern re=Pattern.compile("[^,\\[]*?\\[[^\\]]*?\\]|[^,]+");
    Matcher m=re.matcher(partialResponseFields);
    while (m.find()) {
      for (int groupIdx=0; groupIdx < m.groupCount() + 1; groupIdx++) {
        setMatches.add(m.group(groupIdx));
      }
    }
    mapProperties=new HashMap<String,TemporalInfo>(setMatches.size());
    for (    String field : setMatches) {
      TemporalInfo temporalInfo=null;
      if (field.contains("[")) {
        String[] temporalData=field.substring(field.indexOf('[') + 1,field.indexOf(']')).split(",");
        field=field.substring(0,field.indexOf('['));
        long start=Long.parseLong(temporalData[0].trim());
        long end=-1;
        long step=-1;
        if (temporalData.length >= 2) {
          end=Long.parseLong(temporalData[1].trim());
          if (temporalData.length == 3) {
            step=Long.parseLong(temporalData[2].trim());
          }
        }
        temporalInfo=new TemporalInfoImpl(start,end,step);
      }
      mapProperties.put(field,temporalInfo);
    }
  }
  return mapProperties;
}
