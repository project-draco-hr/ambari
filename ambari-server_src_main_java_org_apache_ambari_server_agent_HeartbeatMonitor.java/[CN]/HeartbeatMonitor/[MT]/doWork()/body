{
  List<Host> allHosts=fsm.getHosts();
  long now=System.currentTimeMillis();
  for (  Host hostObj : allHosts) {
    String host=hostObj.getHostName();
    HostState hostState=hostObj.getState();
    String hostname=hostObj.getHostName();
    long lastHeartbeat=0;
    try {
      lastHeartbeat=fsm.getHost(host).getLastHeartbeatTime();
    }
 catch (    AmbariException e) {
      LOG.warn("Exception in getting host object; Is it fatal?",e);
    }
    if (lastHeartbeat + 2 * threadWakeupInterval < now) {
      LOG.warn("Heartbeat lost from host " + host);
      hostObj.handleEvent(new HostHeartbeatLostEvent(host));
      for (      Cluster cluster : fsm.getClustersForHost(hostObj.getHostName())) {
        for (        ServiceComponentHost sch : cluster.getServiceComponentHosts(hostObj.getHostName())) {
          Service s=cluster.getService(sch.getServiceName());
          ServiceComponent sc=s.getServiceComponent(sch.getServiceComponentName());
          if (!sc.isClientComponent() && !sch.getState().equals(State.INIT) && !sch.getState().equals(State.INSTALLING)&& !sch.getState().equals(State.INSTALL_FAILED)&& !sch.getState().equals(State.UNINSTALLED)&& !sch.getState().equals(State.MAINTENANCE)) {
            LOG.warn("Setting component state to UNKNOWN for component " + sc.getName() + " on "+ host);
            sch.setState(State.UNKNOWN);
          }
        }
      }
      if (hostState != hostObj.getState() && scanner != null) {
        scanner.updateHBaseMaster(hostObj);
      }
      actionQueue.dequeueAll(host);
      actionManager.handleLostHost(host);
    }
    if (hostState == HostState.WAITING_FOR_HOST_STATUS_UPDATES) {
      long timeSpentInState=hostObj.getTimeInState();
      if (timeSpentInState + 5 * threadWakeupInterval < now) {
        LOG.warn("timeSpentInState + 5*threadWakeupInterval < now, Go back to init");
        hostObj.setState(HostState.INIT);
      }
    }
    List<StatusCommand> cmds=generateStatusCommands(hostname);
    LOG.trace("Generated " + cmds.size() + " status commands for host: "+ hostname);
    if (cmds.isEmpty()) {
    }
 else {
      for (      StatusCommand command : cmds) {
        actionQueue.enqueue(hostname,command);
      }
    }
  }
}
