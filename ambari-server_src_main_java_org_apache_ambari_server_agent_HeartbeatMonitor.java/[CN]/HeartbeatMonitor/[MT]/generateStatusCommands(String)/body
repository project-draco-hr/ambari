{
  List<StatusCommand> cmds=new ArrayList<StatusCommand>();
  for (  Cluster cl : clusters.getClustersForHost(hostname)) {
    for (    ServiceComponentHost sch : cl.getServiceComponentHosts(hostname)) {
      String serviceName=sch.getServiceName();
      Service service=cl.getService(sch.getServiceName());
      ServiceComponent sc=service.getServiceComponent(sch.getServiceComponentName());
      if (LOG.isDebugEnabled()) {
        LOG.debug("Live status will include status of service " + serviceName + " of cluster "+ cl.getClusterName());
      }
      Map<String,Map<String,String>> configurations=new TreeMap<String,Map<String,String>>();
      Config clusterConfig=cl.getDesiredConfigByType("global");
      if (clusterConfig != null) {
        Map<String,String> props=new HashMap<String,String>(clusterConfig.getProperties());
        Map<String,Map<String,String>> allConfigTags=configHelper.getEffectiveDesiredTags(cl,hostname);
        Map<String,Map<String,String>> configTags=new HashMap<String,Map<String,String>>();
        for (        Map.Entry<String,Map<String,String>> entry : allConfigTags.entrySet()) {
          if (entry.getKey().equals("global")) {
            configTags.put("global",entry.getValue());
          }
        }
        Map<String,Map<String,String>> properties=configHelper.getEffectiveConfigProperties(cl,configTags);
        if (!properties.isEmpty()) {
          for (          Map<String,String> propertyMap : properties.values()) {
            props.putAll(propertyMap);
          }
        }
        configurations.put("global",props);
      }
      StatusCommand statusCmd=new StatusCommand();
      statusCmd.setClusterName(cl.getClusterName());
      statusCmd.setServiceName(serviceName);
      statusCmd.setComponentName(sch.getServiceComponentName());
      statusCmd.setConfigurations(configurations);
      cmds.add(statusCmd);
    }
  }
  return cmds;
}
