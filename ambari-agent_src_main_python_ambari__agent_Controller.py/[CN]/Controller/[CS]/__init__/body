def __init__(self, config, range=30):
    threading.Thread.__init__(self)
    logger.debug('Initializing Controller RPC thread.')
    self.lock = threading.Lock()
    self.safeMode = True
    self.credential = None
    self.config = config
    self.hostname = hostname.hostname(config)
    self.serverHostname = config.get('server', 'hostname')
    server_secured_url = ((('https://' + self.serverHostname) + ':') + config.get('server', 'secured_url_port'))
    self.registerUrl = ((server_secured_url + '/agent/v1/register/') + self.hostname)
    self.heartbeatUrl = ((server_secured_url + '/agent/v1/heartbeat/') + self.hostname)
    self.componentsUrl = (server_secured_url + '/agent/v1/components/')
    self.netutil = NetUtil()
    self.responseId = (-1)
    self.repeatRegistration = False
    self.isRegistered = False
    self.cachedconnect = None
    self.range = range
    self.hasMappedComponents = True
    self.heartbeat_wait_event = threading.Event()
    self.registration_listeners = []
    cache_dir = config.get('agent', 'cache_dir')
    if (cache_dir is None):
        cache_dir = '/var/lib/ambari-agent/cache'
    self.alert_scheduler_handler = AlertSchedulerHandler(os.path.join(cache_dir, 'alerts', 'alert_definitions.json'))
