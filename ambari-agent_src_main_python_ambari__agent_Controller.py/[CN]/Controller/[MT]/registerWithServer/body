def registerWithServer(self):
    retry = False
    firstTime = True
    registered = False
    id = (-1)
    ret = {}
    while (registered == False):
        try:
            data = json.dumps(self.register.build(id))
            logger.info(('Registering with the server ' + pprint.pformat(data)))
            req = urllib2.Request(self.registerUrl, data, {'Content-Type': 'application/json', })
            stream = security.secured_url_open(req)
            response = stream.read()
            stream.close()
            ret = json.loads(response)
            logger.info(('Registered with the server with ' + pprint.pformat(ret)))
            registered = True
            pass
        except Exception as err:
            delay = self.netutil.CONNECT_SERVER_RETRY_INTERVAL_SEC
            logger.info(('Unable to connect to: ' + self.registerUrl), exc_info=True)
            ' Sleeping for {0} seconds and then retrying again '.format(delay)
            time.sleep(delay)
            pass
        pass
    return ret
