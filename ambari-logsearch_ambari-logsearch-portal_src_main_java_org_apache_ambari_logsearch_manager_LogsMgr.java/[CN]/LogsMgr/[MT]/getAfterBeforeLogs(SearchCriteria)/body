{
  VSolrLogList vSolrLogList=new VSolrLogList();
  SolrDocumentList docList=null;
  String id=(String)searchCriteria.getParamValue(LogSearchConstants.ID);
  if (StringUtils.isBlank(id)) {
    return convertObjToString(vSolrLogList);
  }
  String maxRows="";
  maxRows=(String)searchCriteria.getParamValue("numberRows");
  if (StringUtils.isBlank(maxRows)) {
    maxRows="" + maxRows;
  }
  String scrollType=(String)searchCriteria.getParamValue("scrollType");
  if (StringUtils.isBlank(scrollType)) {
    scrollType="";
  }
  String logTime=null;
  String sequenceId=null;
  try {
    SolrQuery solrQuery=new SolrQuery();
    SolrUtil.setMainQuery(solrQuery,queryGenerator.buildFilterQuery(LogSearchConstants.ID,id));
    SolrUtil.setRowCount(solrQuery,1);
    QueryResponse response=serviceLogsSolrDao.process(solrQuery);
    if (response == null) {
      return convertObjToString(vSolrLogList);
    }
    docList=response.getResults();
    if (docList != null && !docList.isEmpty()) {
      Date date=(Date)docList.get(0).getFieldValue(LogSearchConstants.LOGTIME);
      logTime=DateUtil.convertDateWithMillisecondsToSolrDate(date);
      sequenceId="" + docList.get(0).getFieldValue(LogSearchConstants.SEQUNCE_ID);
    }
    if (StringUtils.isBlank(logTime)) {
      return convertObjToString(vSolrLogList);
    }
  }
 catch (  SolrServerException|SolrException|IOException e) {
    throw RESTErrorUtil.createRESTException(MessageEnums.SOLR_ERROR.getMessage().getMessage(),MessageEnums.ERROR_SYSTEM);
  }
  if (LogSearchConstants.SCROLL_TYPE_BEFORE.equals(scrollType)) {
    vSolrLogList=whenScrollUp(searchCriteria,logTime,sequenceId,maxRows);
    SolrDocumentList solrDocList=new SolrDocumentList();
    for (    SolrDocument solrDoc : vSolrLogList.getList()) {
      solrDocList.add(solrDoc);
    }
    vSolrLogList.setSolrDocuments(solrDocList);
    return convertObjToString(vSolrLogList);
  }
 else   if (LogSearchConstants.SCROLL_TYPE_AFTER.equals(scrollType)) {
    SolrDocumentList solrDocList=new SolrDocumentList();
    vSolrLogList=new VSolrLogList();
    for (    SolrDocument solrDoc : whenScrollDown(searchCriteria,logTime,sequenceId,maxRows).getList()) {
      solrDocList.add(solrDoc);
    }
    vSolrLogList.setSolrDocuments(solrDocList);
    return convertObjToString(vSolrLogList);
  }
 else {
    vSolrLogList=new VSolrLogList();
    SolrDocumentList initial=new SolrDocumentList();
    SolrDocumentList before=whenScrollUp(searchCriteria,logTime,sequenceId,maxRows).getList();
    SolrDocumentList after=whenScrollDown(searchCriteria,logTime,sequenceId,maxRows).getList();
    if (before != null && !before.isEmpty()) {
      for (      SolrDocument solrDoc : Lists.reverse(before)) {
        initial.add(solrDoc);
      }
    }
    initial.add(docList.get(0));
    if (after != null && !after.isEmpty()) {
      for (      SolrDocument solrDoc : after) {
        initial.add(solrDoc);
      }
    }
    vSolrLogList.setSolrDocuments(initial);
    return convertObjToString(vSolrLogList);
  }
}
