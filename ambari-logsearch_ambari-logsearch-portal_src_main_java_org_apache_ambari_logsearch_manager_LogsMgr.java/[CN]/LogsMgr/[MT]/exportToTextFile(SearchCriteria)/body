{
  String defaultFormat="text";
  SolrQuery solrQuery=queryGenerator.commonServiceFilterQuery(searchCriteria);
  String from=(String)searchCriteria.getParamValue("from");
  String to=(String)searchCriteria.getParamValue("to");
  String utcOffset=(String)searchCriteria.getParamValue("utcOffset");
  String format=(String)searchCriteria.getParamValue("format");
  format=defaultFormat.equalsIgnoreCase(format) && format != null ? ".txt" : ".json";
  if (StringUtils.isBlank(utcOffset)) {
    utcOffset="0";
  }
  if (!dateUtil.isDateValid(from) || !dateUtil.isDateValid(to)) {
    logger.error("Not valid date format. Valid format should be" + LogSearchConstants.SOLR_DATE_FORMAT_PREFIX_Z);
    throw restErrorUtil.createRESTException("Not valid date format. Valid format should be" + LogSearchConstants.SOLR_DATE_FORMAT_PREFIX_Z,MessageEnums.INVALID_INPUT_DATA);
  }
 else {
    from=from.replace("T"," ");
    from=from.replace(".",",");
    to=to.replace("T"," ");
    to=to.replace(".",",");
    to=dateUtil.addOffsetToDate(to,Long.parseLong(utcOffset),"yyyy-MM-dd HH:mm:ss,SSS");
    from=dateUtil.addOffsetToDate(from,Long.parseLong(utcOffset),"yyyy-MM-dd HH:mm:ss,SSS");
  }
  String fileName=dateUtil.getCurrentDateInString();
  if (searchCriteria.getParamValue("hostLogFile") != null && searchCriteria.getParamValue("compLogFile") != null) {
    fileName=searchCriteria.getParamValue("hostLogFile") + "_" + searchCriteria.getParamValue("compLogFile");
  }
  String textToSave="";
  try {
    QueryResponse response=serviceLogsSolrDao.process(solrQuery);
    if (response == null) {
      throw restErrorUtil.createRESTException(MessageEnums.SOLR_ERROR.getMessage().getMessage(),MessageEnums.ERROR_SYSTEM);
    }
    SolrDocumentList docList=response.getResults();
    if (docList == null) {
      throw restErrorUtil.createRESTException(MessageEnums.SOLR_ERROR.getMessage().getMessage(),MessageEnums.ERROR_SYSTEM);
    }
    VSummary vsummary=bizUtil.buildSummaryForLogFile(docList);
    vsummary.setFormat(format);
    vsummary.setFrom(from);
    vsummary.setTo(to);
    String includeString=(String)searchCriteria.getParamValue("iMessage");
    if (StringUtils.isBlank(includeString)) {
      includeString="";
    }
    String include[]=includeString.split(LogSearchConstants.I_E_SEPRATOR);
    for (    String inc : include) {
      includeString=includeString + ",\"" + inc+ "\"";
    }
    includeString=includeString.replaceFirst(",","");
    if (!StringUtils.isBlank(includeString)) {
      vsummary.setIncludeString(includeString);
    }
    String excludeString=null;
    boolean isNormalExcluded=false;
    excludeString=(String)searchCriteria.getParamValue("eMessage");
    if (StringUtils.isBlank(excludeString)) {
      excludeString="";
    }
    String exclude[]=excludeString.split(LogSearchConstants.I_E_SEPRATOR);
    for (    String exc : exclude) {
      excludeString=excludeString + ",\"" + exc+ "\"";
    }
    excludeString=excludeString.replaceFirst(",","");
    if (!StringUtils.isBlank(excludeString)) {
      vsummary.setExcludeString(excludeString);
      isNormalExcluded=true;
    }
    String globalExcludeString=(String)searchCriteria.getParamValue("gEMessage");
    if (StringUtils.isBlank(globalExcludeString)) {
      globalExcludeString="";
    }
    String globalExclude[]=globalExcludeString.split(LogSearchConstants.I_E_SEPRATOR);
    for (    String exc : globalExclude) {
      excludeString=excludeString + ",\"" + exc+ "\"";
    }
    if (!StringUtils.isBlank(excludeString)) {
      if (!isNormalExcluded) {
        excludeString=excludeString.replaceFirst(",","");
      }
      vsummary.setExcludeString(excludeString);
    }
    for (    SolrDocument solrDoc : docList) {
      Date logTimeDateObj=(Date)solrDoc.get(LogSearchConstants.LOGTIME);
      if (logTimeDateObj != null) {
        String logTime=dateUtil.convertSolrDateToNormalDateFormat(logTimeDateObj.getTime(),Long.parseLong(utcOffset));
        solrDoc.remove(LogSearchConstants.LOGTIME);
        solrDoc.addField(LogSearchConstants.LOGTIME,logTime);
      }
    }
    if (format.toLowerCase(Locale.ENGLISH).equals(".txt")) {
      textToSave=bizUtil.convertObjectToNormalText(docList);
    }
 else     if (format.toLowerCase(Locale.ENGLISH).equals(".json")) {
      textToSave=convertObjToString(docList);
    }
 else {
      throw restErrorUtil.createRESTException("unsoported format either should be json or text",MessageEnums.ERROR_SYSTEM);
    }
    return fileUtil.saveToFile(textToSave,fileName,vsummary);
  }
 catch (  SolrException|SolrServerException|IOException|ParseException e) {
    logger.error("Error during solrQuery=" + solrQuery,e);
    throw restErrorUtil.createRESTException(MessageEnums.SOLR_ERROR.getMessage().getMessage(),MessageEnums.ERROR_SYSTEM);
  }
}
