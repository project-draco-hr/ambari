{
  SolrQuery solrQuery=queryGenerator.commonServiceFilterQuery(searchCriteria);
  solrQuery.setParam("event","/service/logs/components/level/counts");
  if (searchCriteria.getSortBy() == null) {
    searchCriteria.setSortBy(LogSearchConstants.SOLR_COMPONENT);
    searchCriteria.setSortType(SolrQuery.ORDER.asc.toString());
  }
  queryGenerator.setFilterFacetSort(solrQuery,searchCriteria);
  String componentLevelHirachy="type,level";
  VNodeList list=new VNodeList();
  try {
    queryGenerator.setFacetPivot(solrQuery,1,componentLevelHirachy);
    QueryResponse response=serviceLogsSolrDao.process(solrQuery);
    List<List<PivotField>> listPivotField=new ArrayList<List<PivotField>>();
    NamedList<List<PivotField>> namedList=response.getFacetPivot();
    if (namedList != null) {
      listPivotField=namedList.getAll(componentLevelHirachy);
    }
    List<PivotField> secondHirarchicalPivotFields=null;
    if (listPivotField == null || listPivotField.isEmpty()) {
      return convertObjToString(list);
    }
 else {
      secondHirarchicalPivotFields=listPivotField.get(0);
    }
    List<VNode> datatList=new ArrayList<VNode>();
    for (    PivotField singlePivotField : secondHirarchicalPivotFields) {
      if (singlePivotField != null) {
        VNode comp=new VNode();
        comp.setName("" + singlePivotField.getValue());
        List<PivotField> levelList=singlePivotField.getPivot();
        List<VNameValue> levelCountList=new ArrayList<VNameValue>();
        comp.setLogLevelCount(levelCountList);
        if (levelList != null) {
          for (          PivotField levelPivot : levelList) {
            VNameValue level=new VNameValue();
            level.setName(("" + levelPivot.getValue()).toUpperCase());
            level.setValue("" + levelPivot.getCount());
            levelCountList.add(level);
          }
        }
        datatList.add(comp);
      }
    }
    list.setvNodeList(datatList);
    return convertObjToString(list);
  }
 catch (  SolrException|SolrServerException|IOException e) {
    logger.error(e.getMessage() + "SolrQuery" + solrQuery);
    throw restErrorUtil.createRESTException(MessageEnums.SOLR_ERROR.getMessage().getMessage(),MessageEnums.ERROR_SYSTEM);
  }
}
