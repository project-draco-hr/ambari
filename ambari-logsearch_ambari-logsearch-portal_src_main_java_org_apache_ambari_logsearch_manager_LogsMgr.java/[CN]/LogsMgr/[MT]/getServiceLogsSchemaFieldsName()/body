{
  List<String> fieldNames=new ArrayList<String>();
  String suffix=PropertiesUtil.getProperty("solr.core.logs");
  String excludeArray[]=PropertiesUtil.getPropertyStringList("servicelogs.exclude.columnlist");
  HashMap<String,String> uiFieldColumnMapping=new LinkedHashMap<String,String>();
  ConfigUtil.getSchemaFieldsName(suffix,excludeArray,fieldNames);
  for (  String fieldName : fieldNames) {
    String uiField=ConfigUtil.serviceLogsColumnMapping.get(fieldName + LogSearchConstants.SOLR_SUFFIX);
    if (uiField != null) {
      uiFieldColumnMapping.put(fieldName,uiField);
    }
 else {
      uiFieldColumnMapping.put(fieldName,fieldName);
    }
  }
  try {
    HashMap<String,String> uiFieldColumnMappingSorted=new LinkedHashMap<String,String>();
    uiFieldColumnMappingSorted.put(LogSearchConstants.SOLR_LOG_MESSAGE,"");
    Iterator<Entry<String,String>> it=bizUtil.sortHashMapByValuesD(uiFieldColumnMapping).entrySet().iterator();
    while (it.hasNext()) {
      @SuppressWarnings("rawtypes") Map.Entry pair=(Map.Entry)it.next();
      uiFieldColumnMappingSorted.put("" + pair.getKey(),"" + pair.getValue());
      it.remove();
    }
    return convertObjToString(uiFieldColumnMappingSorted);
  }
 catch (  IOException e) {
    logger.error(e);
  }
  throw restErrorUtil.createRESTException("Cache is Empty for FieldsName",MessageEnums.DATA_NOT_FOUND);
}
