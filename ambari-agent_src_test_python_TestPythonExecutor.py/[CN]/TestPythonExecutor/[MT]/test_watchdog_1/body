def test_watchdog_1(self):
    '\n    Tests whether watchdog works\n    '
    subproc_mock = self.Subprocess_mockup()
    executor = PythonExecutor('/tmp', AmbariConfig().getConfig())
    (_, tmpoutfile) = tempfile.mkstemp()
    (_, tmperrfile) = tempfile.mkstemp()
    executor.PYTHON_TIMEOUT_SECONDS = 0.1

    def lauch_python_subprocess_method(command, tmpout, tmperr):
        subproc_mock.tmpout = tmpout
        subproc_mock.tmperr = tmperr
        return subproc_mock
    executor.lauch_python_subprocess = lauch_python_subprocess_method
    runShellKillPgrp_method = MagicMock()
    runShellKillPgrp_method.side_effect = (lambda python: python.terminate())
    executor.runShellKillPgrp = runShellKillPgrp_method
    subproc_mock.returncode = None
    thread = Thread(target=executor.run_file, args=('fake_command', 'fake_puppetFile', tmpoutfile, tmperrfile))
    thread.start()
    time.sleep(0.1)
    subproc_mock.finished_event.wait()
    self.assertEquals(subproc_mock.was_terminated, True, 'Subprocess should be terminated due to timeout')
