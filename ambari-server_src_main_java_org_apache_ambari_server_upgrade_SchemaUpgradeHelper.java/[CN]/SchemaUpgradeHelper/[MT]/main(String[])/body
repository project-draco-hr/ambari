{
  try {
    String[] splittedJavaVersion=System.getProperty("java.version").split("\\.");
    float javaVersion=Float.parseFloat(splittedJavaVersion[0] + "." + splittedJavaVersion[1]);
    if (javaVersion < Configuration.JDK_MIN_VERSION) {
      LOG.error(String.format("Oracle JDK version is lower than %.1f It can cause problems during upgrade process. Please," + " use 'ambari-server setup' command to upgrade JDK!",Configuration.JDK_MIN_VERSION));
      System.exit(1);
    }
    Injector injector=Guice.createInjector(new UpgradeHelperModule(),new AuditLoggerModule());
    SchemaUpgradeHelper schemaUpgradeHelper=injector.getInstance(SchemaUpgradeHelper.class);
    String targetVersion=schemaUpgradeHelper.getAmbariServerVersion();
    LOG.info("Upgrading schema to target version = " + targetVersion);
    UpgradeCatalog targetUpgradeCatalog=AbstractUpgradeCatalog.getUpgradeCatalog(targetVersion);
    LOG.debug("Target upgrade catalog. " + targetUpgradeCatalog);
    String sourceVersion=schemaUpgradeHelper.readSourceVersion();
    LOG.info("Upgrading schema from source version = " + sourceVersion);
    List<UpgradeCatalog> upgradeCatalogs=schemaUpgradeHelper.getUpgradePath(sourceVersion,targetVersion);
    String date=new SimpleDateFormat("MM-dd-yyyy_HH:mm:ss").format(new Date());
    String ambariUpgradeConfigUpdatesFileName="ambari_upgrade_config_changes_" + date + ".json";
    schemaUpgradeHelper.executeUpgrade(upgradeCatalogs);
    schemaUpgradeHelper.startPersistenceService();
    schemaUpgradeHelper.executePreDMLUpdates(upgradeCatalogs);
    schemaUpgradeHelper.executeDMLUpdates(upgradeCatalogs,ambariUpgradeConfigUpdatesFileName);
    schemaUpgradeHelper.executeOnPostUpgrade(upgradeCatalogs);
    schemaUpgradeHelper.resetUIState();
    LOG.info("Upgrade successful.");
    schemaUpgradeHelper.cleanUpRCATables();
    schemaUpgradeHelper.stopPersistenceService();
  }
 catch (  Throwable e) {
    if (e instanceof AmbariException) {
      LOG.error("Exception occurred during upgrade, failed",e);
      throw (AmbariException)e;
    }
 else {
      LOG.error("Unexpected error, upgrade failed",e);
      throw new Exception("Unexpected error, upgrade failed",e);
    }
  }
}
