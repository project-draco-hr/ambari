{
  log.info("Loading user by name: " + username);
  UserEntity user=null;
  try {
    user=userDAO.findByName(username);
  }
 catch (  Exception e) {
    System.err.println(e);
  }
  if (isLdapEnabled() && (user == null || user.getLdapUser())) {
  }
  if (user == null) {
    log.info("user not found ");
    throw new UsernameNotFoundException("Username " + username + " not found");
  }
 else   if (user.getRoleEntities().isEmpty()) {
    System.err.println("no roles ex");
    throw new UsernameNotFoundException("Username " + username + " has no roles");
  }
  List<GrantedAuthority> authorities=new ArrayList<GrantedAuthority>(user.getRoleEntities().size());
  System.err.println("Authorities number = " + user.getRoleEntities().size());
  for (  RoleEntity roleEntity : user.getRoleEntities()) {
    authorities.add(new SimpleGrantedAuthority(roleEntity.getRoleName().toUpperCase()));
  }
  return new User(user.getUserName(),user.getUserPassword(),authorities);
}
