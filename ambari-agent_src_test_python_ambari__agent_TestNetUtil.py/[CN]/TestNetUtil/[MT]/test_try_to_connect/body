@not_for_platform(PLATFORM_WINDOWS)
@patch('time.sleep')
@patch.object(threading._Event, 'wait')
def test_try_to_connect(self, event_mock, sleepMock):
    event_mock.return_value = False
    netutil = NetUtil.NetUtil()
    checkURL = MagicMock(name='checkURL')
    checkURL.return_value = (True, 'test')
    netutil.checkURL = checkURL
    self.assertEqual((0, True, False), netutil.try_to_connect('url', 10))
    gets = [[True, ''], [False, ''], [False, '']]

    def side_effect(*args):
        return gets.pop()
    checkURL.side_effect = side_effect
    self.assertEqual((2, True, False), netutil.try_to_connect('url', 10))
    checkURL.side_effect = None
    checkURL.return_value = (False, 'test')
    self.assertEqual((5, False, False), netutil.try_to_connect('url', 5))
