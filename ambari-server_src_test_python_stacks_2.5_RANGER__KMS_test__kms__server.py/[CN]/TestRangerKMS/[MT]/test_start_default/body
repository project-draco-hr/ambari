@patch('resource_management.libraries.functions.ranger_functions.Rangeradmin.check_ranger_login_urllib2', new=MagicMock(return_value=200))
@patch('resource_management.libraries.functions.ranger_functions.Rangeradmin.create_ambari_admin_user', new=MagicMock(return_value=200))
@patch('kms.get_repo')
@patch('kms.create_repo')
@patch('os.path.isfile')
def test_start_default(self, get_repo_mock, create_repo_mock, isfile_mock):
    get_repo_mock.return_value = True
    create_repo_mock.return_value = True
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/kms_server.py'), classname='KmsServer', command='start', config_file='ranger-kms-default.json', stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    self.assert_configure_default()
    current_datetime = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    self.assertResourceCalled('File', '/usr/hdp/current/ranger-kms/conf/ranger-security.xml', owner='kms', group='kms', content='<ranger>\n<enabled>{0}</enabled>\n</ranger>'.format(current_datetime), mode=420)
    self.assertResourceCalled('Directory', '/etc/ranger/c1_kms', owner='kms', group='kms', mode=509, create_parents=True)
    self.assertResourceCalled('Directory', '/etc/ranger/c1_kms/policycache', owner='kms', group='kms', mode=509, create_parents=True)
    self.assertResourceCalled('File', '/etc/ranger/c1_kms/policycache/kms_c1_kms.json', owner='kms', group='kms', mode=420)
    self.assertResourceCalled('XmlConfig', 'ranger-kms-audit.xml', mode=484, owner='kms', group='kms', conf_dir='/usr/hdp/current/ranger-kms/conf', configurations=self.getConfig()['configurations']['ranger-kms-audit'], configuration_attributes=self.getConfig()['configuration_attributes']['ranger-kms-audit'])
    self.assertResourceCalled('XmlConfig', 'ranger-kms-security.xml', mode=484, owner='kms', group='kms', conf_dir='/usr/hdp/current/ranger-kms/conf', configurations=self.getConfig()['configurations']['ranger-kms-security'], configuration_attributes=self.getConfig()['configuration_attributes']['ranger-kms-security'])
    self.assertResourceCalled('XmlConfig', 'ranger-policymgr-ssl.xml', mode=484, owner='kms', group='kms', conf_dir='/usr/hdp/current/ranger-kms/conf', configurations=self.getConfig()['configurations']['ranger-kms-policymgr-ssl'], configuration_attributes=self.getConfig()['configuration_attributes']['ranger-kms-policymgr-ssl'])
    self.assertResourceCalled('Execute', ('/usr/hdp/current/ranger-kms/ranger_credential_helper.py', '-l', '/usr/hdp/current/ranger-kms/cred/lib/*', '-f', '/etc/ranger/c1_kms/cred.jceks', '-k', 'sslKeyStore', '-v', 'myKeyFilePassword', '-c', '1'), environment={'JAVA_HOME': u'/usr/jdk64/jdk1.7.0_45', }, logoutput=True, sudo=True)
    self.assertResourceCalled('Execute', ('/usr/hdp/current/ranger-kms/ranger_credential_helper.py', '-l', '/usr/hdp/current/ranger-kms/cred/lib/*', '-f', '/etc/ranger/c1_kms/cred.jceks', '-k', 'sslTrustStore', '-v', 'changeit', '-c', '1'), environment={'JAVA_HOME': u'/usr/jdk64/jdk1.7.0_45', }, logoutput=True, sudo=True)
    self.assertResourceCalled('File', '/etc/ranger/c1_kms/cred.jceks', owner='kms', group='kms', mode=416)
    self.assertResourceCalled('Directory', '/tmp/jce_dir', create_parents=True)
    self.assertResourceCalled('File', '/tmp/jce_dir/UnlimitedJCEPolicyJDK7.zip', content=DownloadSource('http://c6401.ambari.apache.org:8080/resources//UnlimitedJCEPolicyJDK7.zip'), mode=420)
    self.assertResourceCalled('File', '/usr/jdk64/jdk1.7.0_45/jre/lib/security/local_policy.jar', action=['delete'])
    self.assertResourceCalled('File', '/usr/jdk64/jdk1.7.0_45/jre/lib/security/US_export_policy.jar', action=['delete'])
    self.assertResourceCalled('Execute', ('unzip', '-o', '-j', '-q', '/tmp/jce_dir/UnlimitedJCEPolicyJDK7.zip', '-d', '/usr/jdk64/jdk1.7.0_45/jre/lib/security'), only_if='test -e /usr/jdk64/jdk1.7.0_45/jre/lib/security && test -f /tmp/jce_dir/UnlimitedJCEPolicyJDK7.zip', path=['/bin/', '/usr/bin'], sudo=True)
    self.assertResourceCalled('Execute', '/usr/hdp/current/ranger-kms/ranger-kms start', environment={'JAVA_HOME': u'/usr/jdk64/jdk1.7.0_45', }, not_if='ps -ef | grep proc_rangerkms | grep -v grep', user='kms')
    self.assertTrue(isfile_mock.called)
    self.assertNoMoreResources()
