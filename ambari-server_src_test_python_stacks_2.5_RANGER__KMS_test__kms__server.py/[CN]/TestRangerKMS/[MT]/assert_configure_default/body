def assert_configure_default(self):
    self.assertResourceCalled('Directory', '/usr/hdp/current/ranger-kms/conf', owner='kms', group='kms', create_parents=True)
    self.assertResourceCalled('File', '/usr/hdp/current/ranger-kms/ews/webapp/lib/mysql-connector-java-old.jar', action=['delete'])
    self.assertResourceCalled('File', '/tmp/mysql-connector-java.jar', content=DownloadSource('http://c6401.ambari.apache.org:8080/resources//mysql-connector-java.jar'), mode=420)
    self.assertResourceCalled('Directory', '/usr/hdp/current/ranger-kms/ews/lib', mode=493)
    self.assertResourceCalled('Execute', ('cp', '--remove-destination', '/tmp/mysql-connector-java.jar', '/usr/hdp/current/ranger-kms/ews/webapp/lib'), path=['/bin', '/usr/bin/'], sudo=True)
    self.assertResourceCalled('File', '/usr/hdp/current/ranger-kms/ews/webapp/lib/mysql-connector-java.jar', mode=420)
    self.assertResourceCalled('ModifyPropertiesFile', '/usr/hdp/current/ranger-kms/install.properties', properties=self.getConfig()['configurations']['kms-properties'], owner='kms')
    self.assertResourceCalled('ModifyPropertiesFile', '/usr/hdp/current/ranger-kms/install.properties', properties={'SQL_CONNECTOR_JAR': '/usr/hdp/current/ranger-kms/ews/webapp/lib/mysql-connector-java.jar', }, owner='kms')
    self.assertResourceCalled('File', '/usr/lib/ambari-agent/DBConnectionVerification.jar', content=DownloadSource('http://c6401.ambari.apache.org:8080/resources/DBConnectionVerification.jar'), mode=420)
    self.assertResourceCalled('Execute', "/usr/jdk64/jdk1.7.0_45/bin/java -cp /usr/lib/ambari-agent/DBConnectionVerification.jar:/usr/hdp/current/ranger-kms/ews/webapp/lib/mysql-connector-java.jar org.apache.ambari.server.DBConnectionVerification 'jdbc:mysql://c6401.ambari.apache.org:3306/rangerkms01' rangerkms01 rangerkms01 com.mysql.jdbc.Driver", path=['/usr/sbin:/sbin:/usr/local/bin:/bin:/usr/bin'], tries=5, try_sleep=10, environment={})
    self.assertResourceCalled('Directory', '/usr/hdp/current/ranger-kms/ews/webapp/WEB-INF/classes/lib', mode=493, owner='kms', group='kms')
    self.assertResourceCalled('Execute', ('cp', '/usr/hdp/current/ranger-kms/ranger-kms-initd', '/etc/init.d/ranger-kms'), not_if=format('ls /etc/init.d/ranger-kms'), only_if=format('ls /usr/hdp/current/ranger-kms/ranger-kms-initd'), sudo=True)
    self.assertResourceCalled('File', '/etc/init.d/ranger-kms', mode=493)
    self.assertResourceCalled('Directory', '/usr/hdp/current/ranger-kms/', owner='kms', group='kms', recursive_ownership=True)
    self.assertResourceCalled('Directory', '/var/run/ranger_kms', mode=493, owner='kms', group='hadoop', cd_access='a', create_parents=True)
    self.assertResourceCalled('Directory', '/var/log/ranger/kms', owner='kms', group='kms', cd_access='a', create_parents=True, mode=493)
    self.assertResourceCalled('File', '/usr/hdp/current/ranger-kms/conf/ranger-kms-env-logdir.sh', content=format('export RANGER_KMS_LOG_DIR=/var/log/ranger/kms'), owner='kms', group='kms', mode=493)
    self.assertResourceCalled('Execute', ('ln', '-sf', '/usr/hdp/current/ranger-kms/ranger-kms', '/usr/bin/ranger-kms'), not_if=format('ls /usr/bin/ranger-kms'), only_if=format('ls /usr/hdp/current/ranger-kms/ranger-kms'), sudo=True)
    self.assertResourceCalled('File', '/usr/bin/ranger-kms', mode=493)
    self.assertResourceCalled('Execute', ('ln', '-sf', '/usr/hdp/current/ranger-kms/ranger-kms', '/usr/bin/ranger-kms-services.sh'), not_if=format('ls /usr/bin/ranger-kms-services.sh'), only_if=format('ls /usr/hdp/current/ranger-kms/ranger-kms'), sudo=True)
    self.assertResourceCalled('File', '/usr/bin/ranger-kms-services.sh', mode=493)
    self.assertResourceCalled('Execute', ('ln', '-sf', '/usr/hdp/current/ranger-kms/ranger-kms-initd', '/usr/hdp/current/ranger-kms/ranger-kms-services.sh'), not_if=format('ls /usr/hdp/current/ranger-kms/ranger-kms-services.sh'), only_if=format('ls /usr/hdp/current/ranger-kms/ranger-kms-initd'), sudo=True)
    self.assertResourceCalled('File', '/usr/hdp/current/ranger-kms/ranger-kms-services.sh', mode=493)
    self.assertResourceCalled('Directory', '/var/log/ranger/kms', owner='kms', group='kms', mode=509)
    self.assertResourceCalled('Execute', ('/usr/jdk64/jdk1.7.0_45/bin/java', '-cp', '/usr/hdp/current/ranger-kms/cred/lib/*', 'org.apache.ranger.credentialapi.buildks', 'create', 'ranger.ks.jdbc.password', '-value', 'rangerkms01', '-provider', 'jceks://file/etc/ranger/kms/rangerkms.jceks'), environment={'JAVA_HOME': u'/usr/jdk64/jdk1.7.0_45', }, logoutput=True, sudo=True)
    self.assertResourceCalled('File', '/etc/ranger/kms/rangerkms.jceks', owner='kms', group='kms', mode=416)
    self.assertResourceCalled('Execute', ('/usr/jdk64/jdk1.7.0_45/bin/java', '-cp', '/usr/hdp/current/ranger-kms/cred/lib/*', 'org.apache.ranger.credentialapi.buildks', 'create', 'ranger.ks.masterkey.password', '-value', 'StrongPassword01', '-provider', 'jceks://file/etc/ranger/kms/rangerkms.jceks'), environment={'JAVA_HOME': u'/usr/jdk64/jdk1.7.0_45', }, logoutput=True, sudo=True)
    self.assertResourceCalled('File', '/etc/ranger/kms/rangerkms.jceks', owner='kms', group='kms', mode=416)
    self.assertResourceCalled('XmlConfig', 'dbks-site.xml', mode=420, owner='kms', group='kms', conf_dir='/usr/hdp/current/ranger-kms/conf', configurations=self.getConfig()['configurations']['dbks-site'], configuration_attributes=self.getConfig()['configuration_attributes']['dbks-site'])
    self.assertResourceCalled('XmlConfig', 'ranger-kms-site.xml', mode=420, owner='kms', group='kms', conf_dir='/usr/hdp/current/ranger-kms/conf', configurations=self.getConfig()['configurations']['ranger-kms-site'], configuration_attributes=self.getConfig()['configuration_attributes']['ranger-kms-site'])
    self.assertResourceCalled('XmlConfig', 'kms-site.xml', mode=420, owner='kms', group='kms', conf_dir='/usr/hdp/current/ranger-kms/conf', configurations=self.getConfig()['configurations']['kms-site'], configuration_attributes=self.getConfig()['configuration_attributes']['kms-site'])
    self.assertResourceCalled('File', '/usr/hdp/current/ranger-kms/conf/kms-log4j.properties', mode=420, owner='kms', group='kms', content=self.getConfig()['configurations']['kms-log4j']['content'])
