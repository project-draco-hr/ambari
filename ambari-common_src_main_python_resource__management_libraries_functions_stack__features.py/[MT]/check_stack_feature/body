def check_stack_feature(stack_feature, stack_version):
    '\n  Given a stack_feature and a specific stack_version, it validates that the feature is supported by the stack_version.\n  :param stack_feature: Feature name to check if it is supported by the stack. For example: "rolling_upgrade"\n  :param stack_version: Version of the stack\n  :return: Will return True if successful, otherwise, False. \n  '
    stack_features_config = default('/configurations/cluster-env/stack_features', None)
    data = _DEFAULT_STACK_FEATURES
    if stack_features_config:
        data = json.loads(stack_features_config)
    for feature in data['stack_features']:
        if (feature['name'] == stack_feature):
            if ('min_version' in feature):
                min_version = feature['min_version']
                if Script.is_stack_less_than(min_version):
                    return False
            if ('max_version' in feature):
                max_version = feature['max_version']
                if Script.is_stack_greater_or_equal(max_version):
                    return False
            return True
    return False
