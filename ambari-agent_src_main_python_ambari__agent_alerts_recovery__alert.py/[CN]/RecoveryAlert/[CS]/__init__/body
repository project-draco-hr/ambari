def __init__(self, alert_meta, alert_source_meta, config, recovery_manager):
    super(RecoveryAlert, self).__init__(alert_meta, alert_source_meta, config)
    self.recovery_manager = recovery_manager
    self.warning_count = DEFAULT_WARNING_RECOVERIES_COUNT
    self.critical_count = DEFAULT_CRITICAL_RECOVERIES_COUNT
    if ('reporting' in alert_source_meta):
        reporting = alert_source_meta['reporting']
        reporting_state_warning = self.RESULT_WARNING.lower()
        reporting_state_critical = self.RESULT_CRITICAL.lower()
        if ((reporting_state_warning in reporting) and ('count' in reporting[reporting_state_warning])):
            self.warning_count = reporting[reporting_state_warning]['count']
        if ((reporting_state_critical in reporting) and ('count' in reporting[reporting_state_critical])):
            self.critical_count = reporting[reporting_state_critical]['count']
    if (self.critical_count <= self.warning_count):
        if logger.isEnabledFor(logging.DEBUG):
            logger.debug('[Alert][{0}] The CRITICAL value of {1} must be greater than the WARNING value of {2}'.format(self.get_name(), self.critical_count, self.warning_count))
