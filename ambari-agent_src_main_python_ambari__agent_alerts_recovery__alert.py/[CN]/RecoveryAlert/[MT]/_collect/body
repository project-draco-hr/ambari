def _collect(self):
    component = UNKNOWN_COMPONENT
    if ('componentName' in self.alert_meta):
        component = self.alert_meta['componentName']
    if logger.isEnabledFor(logging.DEBUG):
        logger.debug('[Alert][{0}] Checking recovery operations for {1}'.format(self.get_name(), component))
    recovery_action_info = {}
    recovery_actions = self.recovery_manager.get_actions_copy()
    if (component in recovery_actions):
        recovery_action_info = recovery_actions[component]
    recovered_times = 0
    if ('count' in recovery_action_info):
        recovered_times = recovery_action_info['count']
    lastResetText = ''
    if ('lastReset' in recovery_action_info):
        lastResetText = (' since ' + str(datetime.datetime.fromtimestamp(recovery_action_info['lastReset'])))
    warned_threshold_reached = False
    if ('warnedThresholdReached' in recovery_action_info):
        warned_threshold_reached = recovery_action_info['warnedThresholdReached']
    if ((recovered_times >= self.critical_count) or warned_threshold_reached):
        result = self.RESULT_CRITICAL
    elif (recovered_times >= self.warning_count):
        result = self.RESULT_WARNING
    elif ((recovered_times < self.warning_count) and (recovered_times < self.critical_count)):
        result = self.RESULT_OK
    else:
        result = self.RESULT_UNKNOWN
    return (result, [lastResetText, recovered_times, component])
