{
  RemoteClusterResourceProvider provider=new RemoteClusterResourceProvider();
  RemoteAmbariClusterDAO clusterDAO=createNiceMock(RemoteAmbariClusterDAO.class);
  RemoteAmbariClusterEntity clusterEntity=new RemoteAmbariClusterEntity();
  setField(RemoteClusterResourceProvider.class.getDeclaredField("remoteAmbariClusterDAO"),clusterDAO);
  EqualsPredicate equalsPredicate=new EqualsPredicate(RemoteClusterResourceProvider.CLUSTER_NAME_PROPERTY_ID,"test");
  RemoteAmbariClusterRegistry clusterRegistry=createMock(RemoteAmbariClusterRegistry.class);
  setField(RemoteClusterResourceProvider.class.getDeclaredField("remoteAmbariClusterRegistry"),clusterRegistry);
  Set<Map<String,Object>> properties=new HashSet<>();
  Map<String,Object> propertyMap=new HashMap<>();
  propertyMap.put(RemoteClusterResourceProvider.CLUSTER_NAME_PROPERTY_ID,"test");
  expect(clusterDAO.findByName("test")).andReturn(clusterEntity);
  clusterRegistry.delete(clusterEntity);
  replay(clusterDAO);
  properties.add(propertyMap);
  SecurityContextHolder.getContext().setAuthentication(TestAuthenticationFactory.createAdministrator());
  provider.deleteResources(PropertyHelper.getCreateRequest(properties,null),equalsPredicate);
}
