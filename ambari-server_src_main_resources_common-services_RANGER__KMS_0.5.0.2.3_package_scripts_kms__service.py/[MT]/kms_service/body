def kms_service(action='start', upgrade_type=None):
    import params
    env_dict = {'JAVA_HOME': params.java_home, }
    if (params.db_flavor.lower() == 'sqla'):
        env_dict = {'JAVA_HOME': params.java_home, 'LD_LIBRARY_PATH': params.ld_library_path, }
    if (action == 'start'):
        no_op_test = format('ps -ef | grep proc_rangerkms | grep -v grep')
        cmd = format('{kms_home}/ranger-kms start')
        try:
            Execute(cmd, not_if=no_op_test, environment=env_dict, user=format('{kms_user}'))
        except:
            show_logs(params.kms_log_dir, params.kms_user)
            raise
    elif (action == 'stop'):
        if ((upgrade_type == UPGRADE_TYPE_NON_ROLLING) and (params.upgrade_direction == Direction.UPGRADE)):
            if os.path.isfile(format('{kms_home}/ranger-kms')):
                File(format('{kms_home}/ranger-kms'), owner=params.kms_user, group=params.kms_group)
        cmd = format('{kms_home}/ranger-kms stop')
        try:
            Execute(cmd, environment=env_dict, user=format('{kms_user}'))
        except:
            show_logs(params.kms_log_dir, params.kms_user)
            raise
