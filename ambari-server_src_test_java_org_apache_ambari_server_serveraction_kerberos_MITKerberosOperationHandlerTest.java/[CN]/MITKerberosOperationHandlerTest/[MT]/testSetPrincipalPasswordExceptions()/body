{
  MITKerberosOperationHandler handler=injector.getInstance(MITKerberosOperationHandler.class);
  handler.open(new PrincipalKeyCredential(DEFAULT_ADMIN_PRINCIPAL,DEFAULT_ADMIN_PASSWORD),DEFAULT_REALM,KERBEROS_ENV_MAP);
  try {
    handler.setPrincipalPassword(DEFAULT_ADMIN_PRINCIPAL,null);
    Assert.fail("KerberosOperationException not thrown for null password");
  }
 catch (  Throwable t) {
    Assert.assertEquals(KerberosOperationException.class,t.getClass());
  }
  try {
    handler.setPrincipalPassword(DEFAULT_ADMIN_PRINCIPAL,"");
    Assert.fail("KerberosOperationException not thrown for empty password");
    handler.createPrincipal("","1234",false);
    Assert.fail("AmbariException not thrown for empty principal");
  }
 catch (  Throwable t) {
    Assert.assertEquals(KerberosOperationException.class,t.getClass());
  }
  try {
    handler.setPrincipalPassword(null,DEFAULT_ADMIN_PASSWORD);
    Assert.fail("KerberosOperationException not thrown for null principal");
  }
 catch (  Throwable t) {
    Assert.assertEquals(KerberosOperationException.class,t.getClass());
  }
  try {
    handler.setPrincipalPassword("",DEFAULT_ADMIN_PASSWORD);
    Assert.fail("KerberosOperationException not thrown for empty principal");
  }
 catch (  Throwable t) {
    Assert.assertEquals(KerberosOperationException.class,t.getClass());
  }
}
