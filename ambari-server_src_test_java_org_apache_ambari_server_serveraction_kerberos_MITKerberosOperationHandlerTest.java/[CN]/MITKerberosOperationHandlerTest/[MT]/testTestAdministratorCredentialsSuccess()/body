{
  MITKerberosOperationHandler handler=createMockBuilder(MITKerberosOperationHandler.class).addMockedMethod(KerberosOperationHandler.class.getDeclaredMethod("executeCommand",String[].class)).createNiceMock();
  expect(handler.executeCommand(anyObject(String[].class))).andAnswer(new IAnswer<ShellCommandUtil.Result>(){
    @Override public ShellCommandUtil.Result answer() throws Throwable {
      ShellCommandUtil.Result result=createMock(ShellCommandUtil.Result.class);
      expect(result.getExitCode()).andReturn(0).anyTimes();
      expect(result.isSuccessful()).andReturn(true).anyTimes();
      expect(result.getStderr()).andReturn("").anyTimes();
      expect(result.getStdout()).andReturn("Authenticating as principal admin/admin with password.\n" + "Principal: admin/admin@EXAMPLE.COM\n" + "Expiration date: [never]\n"+ "Last password change: Thu Jan 08 13:09:52 UTC 2015\n"+ "Password expiration date: [none]\n"+ "Maximum ticket life: 1 day 00:00:00\n"+ "Maximum renewable life: 0 days 00:00:00\n"+ "Last modified: Thu Jan 08 13:09:52 UTC 2015 (root/admin@EXAMPLE.COM)\n"+ "Last successful authentication: [never]\n"+ "Last failed authentication: [never]\n"+ "Failed password attempts: 0\n"+ "Number of keys: 6\n"+ "Key: vno 1, aes256-cts-hmac-sha1-96, no salt\n"+ "Key: vno 1, aes128-cts-hmac-sha1-96, no salt\n"+ "Key: vno 1, des3-cbc-sha1, no salt\n"+ "Key: vno 1, arcfour-hmac, no salt\n"+ "Key: vno 1, des-hmac-sha1, no salt\n"+ "Key: vno 1, des-cbc-md5, no salt\n"+ "MKey: vno 1\n"+ "Attributes:\n"+ "Policy: [none]").anyTimes();
      replay(result);
      return result;
    }
  }
);
  replayAll();
  handler.open(new KerberosCredential(DEFAULT_ADMIN_PRINCIPAL,DEFAULT_ADMIN_PASSWORD,null),DEFAULT_REALM,KERBEROS_ENV_MAP);
  handler.testAdministratorCredentials();
  handler.close();
}
