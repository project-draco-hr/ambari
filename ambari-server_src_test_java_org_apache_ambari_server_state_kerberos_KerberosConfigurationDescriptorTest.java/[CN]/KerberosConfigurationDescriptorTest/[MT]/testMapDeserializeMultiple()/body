{
  List<KerberosConfigurationDescriptor> configurations=new ArrayList<KerberosConfigurationDescriptor>();
  for (  Map<String,Map<String,Object>> item : MAP_MULTIPLE_VALUES) {
    configurations.add(new KerberosConfigurationDescriptor(item));
  }
  Assert.assertNotNull(configurations);
  Assert.assertEquals(2,configurations.size());
  for (  KerberosConfigurationDescriptor configuration : configurations) {
    Assert.assertFalse(configuration.isContainer());
    String type=configuration.getType();
    Map<String,String> properties=configuration.getProperties();
    if ("configuration-type".equals(type)) {
      Assert.assertNotNull(properties);
      Assert.assertEquals(2,properties.size());
      Assert.assertEquals("black",properties.get("property1"));
      Assert.assertEquals("white",properties.get("property2"));
      Assert.assertEquals("black",configuration.getProperty("property1"));
      Assert.assertEquals("white",configuration.getProperty("property2"));
    }
 else     if ("configuration-type2".equals(type)) {
      Assert.assertNotNull(properties);
      Assert.assertEquals(3,properties.size());
      Assert.assertEquals("red",properties.get("property1"));
      Assert.assertEquals("yellow",properties.get("property2"));
      Assert.assertEquals("green",properties.get("property3"));
      Assert.assertEquals("red",configuration.getProperty("property1"));
      Assert.assertEquals("yellow",configuration.getProperty("property2"));
      Assert.assertEquals("green",configuration.getProperty("property3"));
    }
 else {
      Assert.fail("Missing expected configuration type");
    }
  }
}
