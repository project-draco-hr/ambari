def run(self, data):
    Runner.lock.acquire()
    try:
        if (data['actionType'] == 'info'):
            ph = packageRunner()
            result = ph.info(data['packages'])
        elif (data['actionType'] == 'install'):
            ph = packageRunner()
            if ('dry-run' in data):
                opt = data['dry-run']
            else:
                opt = 'false'
            result = ph.install(data['packages'], opt)
        elif (data['actionType'] == 'remove'):
            ph = packageRunner()
            if ('dry-run' in data):
                opt = data['dry-run']
            else:
                opt = 'false'
            result = ph.remove(data['packages'], opt)
        elif (data['actionType'] == 'status'):
            dh = daemonRunner()
            result = dh.status(data['daemonName'])
        elif (data['actionType'] == 'start'):
            dh = daemonRunner()
            result = dh.start(data['daemonName'])
        elif (data['actionType'] == 'stop'):
            dh = daemonRunner()
            result = dh.stop(data['daemonName'])
        elif ((data['actionType'] == 'run') or (data['@action'] == 'org.apache.hms.common.entity.action.ScriptAction')):
            she = shellRunner()
            script = []
            script.append(data['script'])
            if ('parameters' in data):
                for parameter in data['parameters']:
                    script.append(parameter)
            result = she.run(script)
        return result
    finally:
        Runner.lock.release()
