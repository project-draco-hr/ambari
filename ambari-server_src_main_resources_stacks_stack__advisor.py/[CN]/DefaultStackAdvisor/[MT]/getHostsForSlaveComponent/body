def getHostsForSlaveComponent(self, services, hosts, component, hostsList, freeHosts):
    if (component['StackServiceComponents']['cardinality'] == 'ALL'):
        return hostsList
    if self.isComponentHostsPopulated(component):
        return component['StackServiceComponents']['hostnames']
    hostsForComponent = []
    componentName = component['StackServiceComponents']['component_name']
    if self.isSlaveComponent(component):
        cardinality = str(component['StackServiceComponents']['cardinality'])
        (hostsMin, hostsMax) = self.parseCardinality(cardinality, len(hostsList))
        (hostsMin, hostsMax) = ((0 if (hostsMin is None) else hostsMin), (len(hostsList) if (hostsMax is None) else hostsMax))
        if (self.isComponentUsingCardinalityForLayout(componentName) and cardinality):
            if (hostsMin > len(hostsForComponent)):
                hostsForComponent.extend(freeHosts[0:(hostsMin - len(hostsForComponent))])
        else:
            hostsForComponent.extend(freeHosts)
            if (not hostsForComponent):
                hostsForComponent = hostsList[(-1):]
        hostsForComponent = list(set(hostsForComponent))
        if (len(hostsForComponent) < hostsMin):
            hostsForComponent = list(set(hostsList))[0:hostsMin]
        elif (len(hostsForComponent) > hostsMax):
            hostsForComponent = list(set(hostsList))[0:hostsMax]
    elif self.isClientComponent(component):
        hostsForComponent = freeHosts[0:1]
        if (not hostsForComponent):
            hostsForComponent = hostsList[(-1):]
    return hostsForComponent
