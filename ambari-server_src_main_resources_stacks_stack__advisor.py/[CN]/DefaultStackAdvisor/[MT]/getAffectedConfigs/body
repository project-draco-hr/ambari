def getAffectedConfigs(self, services):
    'returns properties dict including changed-configurations and depended-by configs'
    changedConfigs = services['changed-configurations']
    allDependencies = []
    for item in services['services']:
        allDependencies.extend(item['configurations'])
    dependencies = []
    size = (-1)
    while (size != len(dependencies)):
        size = len(dependencies)
        for config in allDependencies:
            property = {'type': re.sub('\\.xml$', '', config['StackConfigurations']['type']), 'name': config['StackConfigurations']['property_name'], }
            if ((property in dependencies) or (property in changedConfigs)):
                for dependedConfig in config['StackConfigurations']['property_depended_by']:
                    if (dependedConfig not in dependencies):
                        dependencies.append(dependedConfig)
    return dependencies
