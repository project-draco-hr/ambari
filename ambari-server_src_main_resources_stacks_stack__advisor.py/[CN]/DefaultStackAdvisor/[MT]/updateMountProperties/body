def updateMountProperties(self, siteConfig, propertyDefinitions, configurations, services, hosts):
    '\n    Update properties according to recommendations for available mount-points\n\n    propertyDefinitions is an array of set : property name, component name, initial value, recommendation type\n\n     Where,\n\n       property name - name of the property\n       component name, name of the component to which belongs this property\n       initial value - initial path\n       recommendation type - could be "multi" or "single". This describes recommendation strategy, to use only one disk\n        or use all available space on the host\n\n    :type propertyDefinitions list\n    :type siteConfig str\n    :type configurations dict\n    :type services dict\n    :type hosts dict\n    '
    props = self.getServicesSiteProperties(services, siteConfig)
    put_f = self.putProperty(configurations, siteConfig, services)
    for prop_item in propertyDefinitions:
        (name, component, default_value, rc_type) = prop_item
        recommendation = None
        if ((props is None) or (name not in props)):
            if (rc_type == 'multi'):
                recommendation = self.getMountPathVariations(default_value, component, services, hosts)
            else:
                recommendation = self.getMountPathVariation(default_value, component, services, hosts)
        elif (props and (name in props) and (props[name] == default_value)):
            if (rc_type == 'multi'):
                recommendation = self.getMountPathVariations(default_value, component, services, hosts)
            else:
                recommendation = self.getMountPathVariation(default_value, component, services, hosts)
        if recommendation:
            put_f(name, ','.join(recommendation))
