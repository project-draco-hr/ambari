def recommendConfigurations(self, services, hosts):
    stackName = services['Versions']['stack_name']
    stackVersion = services['Versions']['stack_version']
    hostsList = [host['Hosts']['host_name'] for host in hosts['items']]
    servicesList = [service['StackServices']['service_name'] for service in services['services']]
    components = [component['StackServiceComponents']['component_name'] for service in services['services'] for component in service['components']]
    clusterSummary = self.getConfigurationClusterSummary(servicesList, hosts, components)
    recommendations = {'Versions': {'stack_name': stackName, 'stack_version': stackVersion, }, 'hosts': hostsList, 'services': servicesList, 'recommendations': {'blueprint': {'configurations': {}, 'host_groups': [], }, 'blueprint_cluster_binding': {'host_groups': [], }, }, }
    configurations = recommendations['recommendations']['blueprint']['configurations']
    for service in servicesList:
        calculation = self.getServiceConfigurationRecommender(service)
        if (calculation is not None):
            calculation(configurations, clusterSummary)
    return recommendations
