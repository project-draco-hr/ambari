{
  ControllerResponse response=agentToHeartbeatResponseMap.get(heartbeat.getHostname());
  if (response != null) {
    if (response.getResponseId() == heartbeat.getResponseId()) {
      return response;
    }
  }
  short responseId=(short)(Short.parseShort(response.getResponseId()) + 1);
  Node node=Nodes.getInstance().getNodes().get(heartbeat.getHostname());
  NodeState state=node.getNodeState();
  GregorianCalendar c=new GregorianCalendar();
  c.setTime(new Date());
  state.setLastHeartbeatTime(DatatypeFactory.newInstance().newXMLGregorianCalendar(c));
  Cluster cluster=Clusters.getInstance().getClusterByName(state.getClusterName());
  ClusterContext clusterContext=new ClusterContextImpl(cluster,node);
  List<Action> allActions=new ArrayList<Action>();
  if (heartbeat.getIdle()) {
    List<ServerStatus> serverStatuses=heartbeat.getServersStatus();
    StartedComponentServers componentServers=new StartedComponentServers();
    for (    ServerStatus status : serverStatuses) {
      if (status.getState() == State.STARTED) {
        componentServers.serverStarted(status.getComponent(),status.getServerName());
      }
    }
    org.apache.ambari.resource.statemachine.Cluster clusterSMobject=StateMachineInvoker.getStateMachineClusterInstance(state.getClusterName());
    List<Service> clusterServices=clusterSMobject.getServices();
    for (    Service service : clusterServices) {
      List<Role> roles=service.getRoles();
      for (      Role role : roles) {
        if (role.shouldStart() && !componentServers.isStarted(role.getAssociatedService().getServiceName(),role.getRoleName())) {
          HDFSPluginImpl plugin=new HDFSPluginImpl();
          List<Action> actions=plugin.startRoleServer(clusterContext,role.getRoleName());
          allActions.addAll(actions);
        }
      }
    }
  }
  ControllerResponse r=new ControllerResponse();
  r.setResponseId(String.valueOf(responseId));
  r.setActions(allActions);
  agentToHeartbeatResponseMap.put(heartbeat.getHostname(),r);
  return r;
}
