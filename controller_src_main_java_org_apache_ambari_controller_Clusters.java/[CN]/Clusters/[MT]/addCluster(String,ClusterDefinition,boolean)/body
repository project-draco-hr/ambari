{
  validateClusterDefinition(clusterName,cdef);
  setNewClusterDefaults(cdef);
  Date requestTime=new Date();
  ClusterState clsState=new ClusterState();
  clsState.setCreationTime(Util.getXMLGregorianCalendar(requestTime));
  clsState.setLastUpdateTime(Util.getXMLGregorianCalendar(requestTime));
  clsState.setDeployTime(Util.getXMLGregorianCalendar((Date)null));
  if (cdef.getGoalState().equals(ClusterDefinition.GOAL_STATE_ATTIC)) {
    clsState.setState(ClusterState.CLUSTER_STATE_ATTIC);
  }
 else {
    clsState.setState(ClusterState.CLUSTER_STATE_INACTIVE);
  }
  if (cdef.getRoleToNodesMap() == null) {
    List<RoleToNodes> role2NodesList=generateRoleToNodesListBasedOnNodeAttributes(cdef);
    cdef.setRoleToNodesMap(role2NodesList);
  }
  if (dry_run) {
    return cdef;
  }
  Cluster cls=this.addClusterEntry(cdef,clsState);
  if (cdef.getNodes() != null && !cdef.getGoalState().equals(ClusterDefinition.GOAL_STATE_ATTIC)) {
    updateClusterNodesReservation(cls.getName(),cdef);
  }
  if (!cdef.getGoalState().equals(ClusterDefinition.GOAL_STATE_ATTIC)) {
    updateNodeToRolesAssociation(cdef.getNodes(),cdef.getRoleToNodesMap());
  }
  System.out.println(getInstallAndConfigureScript(clusterName,-1));
  ClusterFSM cs=StateMachineInvoker.createCluster(cls,cls.getLatestRevisionNumber(),cls.getClusterState());
  if (cdef.getGoalState().equals(ClusterDefinition.GOAL_STATE_ACTIVE)) {
    cs.activate();
  }
  return cdef;
}
