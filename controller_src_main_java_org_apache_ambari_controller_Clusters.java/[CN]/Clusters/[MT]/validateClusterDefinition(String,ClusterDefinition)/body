{
  if (cdef.getName() == null || cdef.getName().equals("")) {
    String msg="Cluster Name must be specified and must be non-empty string";
    throw new WebApplicationException((new ExceptionResponse(msg,Response.Status.BAD_REQUEST)).get());
  }
  if (!cdef.getName().equals(clusterName)) {
    String msg="Cluster Name specified in URL and cluster definition are not same";
    throw new WebApplicationException((new ExceptionResponse(msg,Response.Status.BAD_REQUEST)).get());
  }
  if (cdef.getNodes() == null || cdef.getNodes().equals("")) {
    String msg="Cluster node range must be specified and must be non-empty string";
    throw new WebApplicationException((new ExceptionResponse(msg,Response.Status.BAD_REQUEST)).get());
  }
  if (cdef.getStackName() == null || cdef.getStackName().equals("")) {
    String msg="Cluster stack must be specified and must be non-empty string";
    throw new WebApplicationException((new ExceptionResponse(msg,Response.Status.BAD_REQUEST)).get());
  }
  if (cdef.getStackRevision() == null || cdef.getStackRevision().equals("")) {
    String msg="Cluster stack revision must be specified";
    throw new WebApplicationException((new ExceptionResponse(msg,Response.Status.BAD_REQUEST)).get());
  }
  Stack bp=Stacks.getInstance().getStack(cdef.getStackName(),Integer.parseInt(cdef.getStackRevision()));
  while (bp.getParentName() != null) {
    if (bp.getParentRevision() == null) {
      bp=Stacks.getInstance().getStack(bp.getParentName(),-1);
    }
 else {
      bp=Stacks.getInstance().getStack(bp.getParentName(),Integer.parseInt(bp.getParentRevision()));
    }
  }
  List<String> cluster_node_range=new ArrayList<String>();
  cluster_node_range.addAll(getHostnamesFromRangeExpressions(cdef.getNodes()));
  if (cdef.getRoleToNodesMap() != null) {
    List<String> nodes_specified_using_role_association=new ArrayList<String>();
    for (    RoleToNodes e : cdef.getRoleToNodesMap()) {
      List<String> hosts=getHostnamesFromRangeExpressions(e.getNodes());
      nodes_specified_using_role_association.addAll(hosts);
    }
    nodes_specified_using_role_association.removeAll(cluster_node_range);
    if (!nodes_specified_using_role_association.isEmpty()) {
      String msg="Some nodes explicityly associated with roles using RoleToNodesMap do not belong in the " + "golbal node range specified for the cluster : [" + nodes_specified_using_role_association + "]";
      throw new WebApplicationException((new ExceptionResponse(msg,Response.Status.BAD_REQUEST)).get());
    }
  }
}
