{
  ClusterDefinition cluster123=new ClusterDefinition();
  cluster123.setName("blue.dev.Cluster123");
  cluster123.setBlueprintName("cluster123-blueprint");
  cluster123.setBlueprintRevision("0");
  cluster123.setDescription("cluster123 - development cluster");
  cluster123.setGoalState(ClusterState.CLUSTER_STATE_ACTIVE);
  List<String> activeServices=new ArrayList<String>();
  activeServices.add("hdfs");
  activeServices.add("mapred");
  cluster123.setActiveServices(activeServices);
  List<String> nodeRangeExpressions=new ArrayList<String>();
  String nodes1="jt-nodex";
  String nodes2="nn-nodex";
  String nodes3="hostname-1x hostname-2x hostname-3x hostname-4x";
  String nodes4="node-2x node-3x node-4x";
  nodeRangeExpressions.add(nodes1);
  nodeRangeExpressions.add(nodes2);
  nodeRangeExpressions.add(nodes3);
  nodeRangeExpressions.add(nodes4);
  cluster123.setNodeRangeExpressions(nodeRangeExpressions);
  RoleToNodesMap rnm=new RoleToNodesMap();
  RoleToNodesMapEntry rnme=new RoleToNodesMapEntry();
  rnme.setRoleName("jobtracker-role");
  nodeRangeExpressions=new ArrayList<String>();
  nodeRangeExpressions.add(nodes1);
  rnme.setNodeRangeExpressions(nodeRangeExpressions);
  rnm.getRoleToNodesMapEntry().add(rnme);
  rnme=new RoleToNodesMapEntry();
  rnme.setRoleName("namenode-role");
  nodeRangeExpressions=new ArrayList<String>();
  nodeRangeExpressions.add(nodes2);
  rnme.setNodeRangeExpressions(nodeRangeExpressions);
  rnm.getRoleToNodesMapEntry().add(rnme);
  rnme=new RoleToNodesMapEntry();
  rnme.setRoleName("slaves-role");
  nodeRangeExpressions=new ArrayList<String>();
  nodeRangeExpressions.add(nodes3);
  nodeRangeExpressions.add(nodes4);
  rnme.setNodeRangeExpressions(nodeRangeExpressions);
  rnm.getRoleToNodesMapEntry().add(rnme);
  cluster123.setRoleToNodesMap(rnm);
  ClusterDefinition cluster124=new ClusterDefinition();
  cluster124.setName("blue.research.Cluster124");
  cluster124.setBlueprintName("cluster124-blueprint");
  cluster124.setBlueprintRevision("0");
  cluster124.setDescription("cluster124 - research cluster");
  cluster124.setGoalState(ClusterState.CLUSTER_STATE_INACTIVE);
  activeServices=new ArrayList<String>();
  activeServices.add("hdfs");
  activeServices.add("mapred");
  cluster124.setActiveServices(activeServices);
  nodeRangeExpressions=new ArrayList<String>();
  nodes1="jt-node";
  nodes2="nn-node";
  nodes3="hostname-1 hostname-2 hostname-3 hostname-4";
  nodes4="node-2 node-3 node-4";
  nodeRangeExpressions.add(nodes1);
  nodeRangeExpressions.add(nodes2);
  nodeRangeExpressions.add(nodes3);
  nodeRangeExpressions.add(nodes4);
  cluster124.setNodeRangeExpressions(nodeRangeExpressions);
  rnm=new RoleToNodesMap();
  rnme=new RoleToNodesMapEntry();
  rnme.setRoleName("jobtracker-role");
  nodeRangeExpressions=new ArrayList<String>();
  nodeRangeExpressions.add(nodes1);
  rnme.setNodeRangeExpressions(nodeRangeExpressions);
  rnm.getRoleToNodesMapEntry().add(rnme);
  rnme=new RoleToNodesMapEntry();
  rnme.setRoleName("namenode-role");
  nodeRangeExpressions=new ArrayList<String>();
  nodeRangeExpressions.add(nodes2);
  rnme.setNodeRangeExpressions(nodeRangeExpressions);
  rnm.getRoleToNodesMapEntry().add(rnme);
  rnme=new RoleToNodesMapEntry();
  rnme.setRoleName("slaves-role");
  nodeRangeExpressions=new ArrayList<String>();
  nodeRangeExpressions.add(nodes3);
  nodeRangeExpressions.add(nodes4);
  rnme.setNodeRangeExpressions(nodeRangeExpressions);
  rnm.getRoleToNodesMapEntry().add(rnme);
  cluster124.setRoleToNodesMap(rnm);
  try {
    addCluster(cluster123);
    addCluster(cluster124);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
