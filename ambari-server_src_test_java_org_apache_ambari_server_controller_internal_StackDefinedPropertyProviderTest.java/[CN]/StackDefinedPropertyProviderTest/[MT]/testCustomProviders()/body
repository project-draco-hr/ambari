{
  StackDefinedPropertyProvider sdpp=new StackDefinedPropertyProvider(Resource.Type.HostComponent,null,null,new CombinedStreamProvider(),"HostRoles/cluster_name","HostRoles/host_name","HostRoles/component_name","HostRoles/state",new EmptyPropertyProvider(),new EmptyPropertyProvider());
  Resource resource=new ResourceImpl(Resource.Type.HostComponent);
  resource.setProperty("HostRoles/cluster_name","c1");
  resource.setProperty("HostRoles/host_name","h1");
  resource.setProperty("HostRoles/component_name","DATANODE");
  resource.setProperty("HostRoles/state","STARTED");
  Request request=PropertyHelper.getReadRequest(Collections.<String>emptySet(),new HashMap<String,TemporalInfo>());
  Set<Resource> set=sdpp.populateResources(Collections.singleton(resource),request,null);
  Assert.assertEquals(1,set.size());
  Resource res=set.iterator().next();
  Map<String,Map<String,Object>> values=res.getPropertiesMap();
  Assert.assertTrue(values.containsKey("foo/type1"));
  Assert.assertTrue(values.containsKey("foo/type2"));
  Assert.assertTrue(values.containsKey("foo/type3"));
  Assert.assertFalse(values.containsKey("foo/type4"));
  Assert.assertTrue(values.get("foo/type1").containsKey("name"));
  Assert.assertTrue(values.get("foo/type2").containsKey("name"));
  Assert.assertTrue(values.get("foo/type3").containsKey("name"));
  Assert.assertEquals("value1",values.get("foo/type1").get("name"));
  Assert.assertEquals("value2",values.get("foo/type2").get("name"));
  Assert.assertEquals("value3",values.get("foo/type3").get("name"));
}
