@patch.object(setup_agent, 'getAvaliableAgentPackageVersions')
@patch('ambari_commons.OSCheck.is_suse_family')
@patch('ambari_commons.OSCheck.is_debian_family')
@patch.object(setup_agent, 'findNearestAgentPackageVersion')
def test_returned_optimal_version_is_default(self, findNearestAgentPackageVersion_method, is_debian_family_method, is_suse_family_method, getAvaliableAgentPackageVersions_method):
    getAvaliableAgentPackageVersions_method.return_value = {'exitstatus': 0, 'log': '1.1.1', }
    is_suse_family_method.return_value = False
    is_debian_family_method.return_value = False
    findNearestAgentPackageVersion_method.return_value = {'exitstatus': 0, 'log': ['1.1.1.1', ''], }
    projectVersion = '1.1.1'
    result_version = setup_agent.getOptimalVersion(projectVersion)
    self.assertTrue(findNearestAgentPackageVersion_method.called)
    self.assertTrue((result_version['exitstatus'] == 1))
