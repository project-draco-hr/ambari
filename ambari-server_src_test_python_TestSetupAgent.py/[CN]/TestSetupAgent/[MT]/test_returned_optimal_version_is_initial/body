@patch.object(setup_agent, 'getAvaliableAgentPackageVersions')
@patch.object(setup_agent, 'is_suse')
@patch.object(setup_agent, 'is_ubuntu')
@patch.object(setup_agent, 'findNearestAgentPackageVersion')
def test_returned_optimal_version_is_initial(self, findNearestAgentPackageVersion_method, is_ubuntu_method, is_suse_method, getAvaliableAgentPackageVersions_method):
    getAvaliableAgentPackageVersions_method.return_value = {'exitstatus': 0, 'log': '1.1.1', }
    is_suse_method.return_value = False
    is_ubuntu_method.return_value = False
    projectVersion = '1.1.1'
    result_version = setup_agent.getOptimalVersion(projectVersion)
    self.assertTrue(findNearestAgentPackageVersion_method.called)
    self.assertTrue((result_version['log'] == projectVersion))
    pass
