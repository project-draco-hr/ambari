@patch.object(setup_agent, 'is_suse')
@patch.object(setup_agent, 'findNearestAgentPackageVersionSuse')
@patch.object(setup_agent, 'findNearestAgentPackageVersion')
def test_returned_optimal_version_is_nearest(self, findNearestAgentPackageVersion_method, findNearestAgentPackageVersionSuse_method, is_suse_method):
    is_suse_method.return_value = False
    projectVersion = ''
    nearest_version = (projectVersion + '1.1.1')
    findNearestAgentPackageVersion_method.return_value = {'exitstatus': 0, 'log': [nearest_version, ''], }
    result_version = setup_agent.getOptimalVersion(projectVersion)
    self.assertFalse(findNearestAgentPackageVersionSuse_method.called)
    self.assertTrue(findNearestAgentPackageVersion_method.called)
    self.assertTrue((result_version['log'] == nearest_version))
    pass
