{
  prepareRollingUpgradesDDL();
  dbAccessor.addColumn(ALERT_DEFINITION_TABLE,new DBColumnInfo("ignore_host",Short.class,1,0,false));
  dbAccessor.addColumn("hostcomponentdesiredstate",new DBColumnInfo("security_state",String.class,32,SecurityState.UNSECURED.toString(),false));
  dbAccessor.addColumn("hostcomponentstate",new DBColumnInfo("security_state",String.class,32,SecurityState.UNSECURED.toString(),false));
  dbAccessor.addColumn("servicedesiredstate",new DBColumnInfo("security_state",String.class,32,SecurityState.UNSECURED.toString(),false));
  dbAccessor.addColumn(ALERT_DEFINITION_TABLE,new DBColumnInfo("description",char[].class,32672,null,true));
  ArrayList<DBColumnInfo> columns=new ArrayList<DBColumnInfo>();
  columns.add(new DBColumnInfo("target_id",Long.class,null,null,false));
  columns.add(new DBColumnInfo("alert_state",String.class,255,null,false));
  dbAccessor.createTable(ALERT_TARGET_STATES_TABLE,columns,"target_id");
  dbAccessor.addFKConstraint(ALERT_TARGET_STATES_TABLE,"fk_alert_target_states_target_id","target_id",ALERT_TARGET_TABLE,"target_id",false);
  dbAccessor.alterColumn("viewinstanceproperty",new DBColumnInfo("value",String.class,2000,null,true));
  dbAccessor.alterColumn("viewinstancedata",new DBColumnInfo("value",String.class,2000,null,true));
  ddlUpdateRepositoryVersion();
}
