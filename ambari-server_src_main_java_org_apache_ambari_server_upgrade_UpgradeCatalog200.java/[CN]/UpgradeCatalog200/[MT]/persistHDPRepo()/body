{
  AmbariManagementController amc=injector.getInstance(AmbariManagementController.class);
  AmbariMetaInfo ambariMetaInfo=amc.getAmbariMetaInfo();
  Map<String,Cluster> clusterMap=amc.getClusters().getClusters();
  for (  Cluster cluster : clusterMap.values()) {
    StackId stackId=cluster.getCurrentStackVersion();
    String stackName=stackId.getStackName();
    String stackVersion=stackId.getStackVersion();
    String stackRepoId=stackName + "-" + stackVersion;
    for (    OperatingSystemInfo osi : ambariMetaInfo.getOperatingSystems(stackName,stackVersion)) {
      MetainfoDAO metaInfoDAO=injector.getInstance(MetainfoDAO.class);
      String repoMetaKey=AmbariMetaInfo.generateRepoMetaKey(stackName,stackVersion,osi.getOsType(),stackRepoId,AmbariMetaInfo.REPOSITORY_XML_PROPERTY_BASEURL);
      if (metaInfoDAO.findByKey(repoMetaKey) == null) {
        RepositoryInfo repositoryInfo=ambariMetaInfo.getRepository(stackName,stackVersion,osi.getOsType(),stackRepoId);
        String baseUrl=repositoryInfo.getDefaultBaseUrl();
        ambariMetaInfo.updateRepo(stackName,stackVersion,osi.getOsType(),stackRepoId,baseUrl,null);
      }
    }
    System.out.printf("Ambari has recorded the following repository base urls for cluster %s. Please verify the " + "values and ensure that these are correct. If necessary, " + "after starting Ambari Server, you can edit them using Ambari UI, "+ "Admin -> Stacks and Versions -> Versions Tab and editing the base urls for the current Repo. "+ "It is critical that these repo base urls are valid for your environment as they "+ "will be used for Add Host/Service operations.",cluster.getClusterName());
    System.out.println(repositoryTable(ambariMetaInfo.getStack(stackName,stackVersion).getRepositories()));
  }
}
