{
  AmbariManagementController amc=injector.getInstance(AmbariManagementController.class);
  AmbariMetaInfo ambariMetaInfo=amc.getAmbariMetaInfo();
  Map<String,Cluster> clusterMap=amc.getClusters().getClusters();
  for (  Cluster cluster : clusterMap.values()) {
    StackId stackId=cluster.getCurrentStackVersion();
    String stackName=stackId.getStackName();
    String stackVersion=stackId.getStackVersion();
    String stackRepoId=stackName + "-" + stackVersion;
    for (    OperatingSystemInfo osi : ambariMetaInfo.getOperatingSystems(stackName,stackVersion)) {
      MetainfoDAO metaInfoDAO=injector.getInstance(MetainfoDAO.class);
      String repoMetaKey=AmbariMetaInfo.generateRepoMetaKey(stackName,stackVersion,osi.getOsType(),stackRepoId,AmbariMetaInfo.REPOSITORY_XML_PROPERTY_BASEURL);
      if (metaInfoDAO.findByKey(repoMetaKey) == null) {
        RepositoryInfo repositoryInfo=ambariMetaInfo.getRepository(stackName,stackVersion,osi.getOsType(),stackRepoId);
        String baseUrl=repositoryInfo.getDefaultBaseUrl();
        ambariMetaInfo.updateRepoBaseURL(stackName,stackVersion,osi.getOsType(),stackRepoId,baseUrl);
      }
    }
  }
}
