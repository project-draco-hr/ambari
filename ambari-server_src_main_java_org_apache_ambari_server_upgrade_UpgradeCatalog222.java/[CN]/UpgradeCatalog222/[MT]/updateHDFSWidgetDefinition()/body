{
  LOG.info("Updating HDFS widget definition.");
  AmbariManagementController ambariManagementController=injector.getInstance(AmbariManagementController.class);
  AmbariMetaInfo ambariMetaInfo=injector.getInstance(AmbariMetaInfo.class);
  Type widgetLayoutType=new TypeToken<Map<String,List<WidgetLayout>>>(){
  }
.getType();
  Gson gson=injector.getInstance(Gson.class);
  WidgetDAO widgetDAO=injector.getInstance(WidgetDAO.class);
  Clusters clusters=ambariManagementController.getClusters();
  Map<String,Cluster> clusterMap=getCheckedClusterMap(clusters);
  for (  final Cluster cluster : clusterMap.values()) {
    long clusterID=cluster.getClusterId();
    for (    String widgetName : HDFS_WIDGETS_TO_UPDATE) {
      List<WidgetEntity> widgetEntities=widgetDAO.findByName(clusterID,widgetName,"ambari","HDFS_SUMMARY");
      if (widgetEntities != null) {
        WidgetEntity entityToUpdate=null;
        if (widgetEntities.size() > 1) {
          LOG.info("Found more that 1 entity with name = " + widgetName + " for cluster = "+ cluster.getClusterName()+ ", skipping update.");
        }
 else {
          entityToUpdate=widgetEntities.iterator().next();
        }
        if (entityToUpdate != null) {
          LOG.info("Updating widget: " + entityToUpdate.getWidgetName());
          WidgetLayoutInfo targetWidgetLayoutInfo=null;
          StackId stackId=cluster.getDesiredStackVersion();
          Map<String,Object> widgetDescriptor=null;
          StackInfo stackInfo=ambariMetaInfo.getStack(stackId.getStackName(),stackId.getStackVersion());
          ServiceInfo serviceInfo=stackInfo.getService("HDFS");
          File widgetDescriptorFile=serviceInfo.getWidgetsDescriptorFile();
          if (widgetDescriptorFile != null && widgetDescriptorFile.exists()) {
            try {
              widgetDescriptor=gson.fromJson(new FileReader(widgetDescriptorFile),widgetLayoutType);
            }
 catch (            Exception ex) {
              String msg="Error loading widgets from file: " + widgetDescriptorFile;
              LOG.error(msg,ex);
              widgetDescriptor=null;
            }
          }
          if (widgetDescriptor != null) {
            LOG.debug("Loaded widget descriptor: " + widgetDescriptor);
            for (            Object artifact : widgetDescriptor.values()) {
              List<WidgetLayout> widgetLayouts=(List<WidgetLayout>)artifact;
              for (              WidgetLayout widgetLayout : widgetLayouts) {
                if (widgetLayout.getLayoutName().equals("default_hdfs_dashboard")) {
                  for (                  WidgetLayoutInfo layoutInfo : widgetLayout.getWidgetLayoutInfoList()) {
                    if (layoutInfo.getWidgetName().equals(widgetName)) {
                      targetWidgetLayoutInfo=layoutInfo;
                    }
                  }
                }
              }
            }
          }
          if (targetWidgetLayoutInfo != null) {
            entityToUpdate.setMetrics(gson.toJson(targetWidgetLayoutInfo.getMetricsInfo()));
            entityToUpdate.setWidgetValues(gson.toJson(targetWidgetLayoutInfo.getValues()));
            widgetDAO.merge(entityToUpdate);
          }
 else {
            LOG.warn("Unable to find widget layout info for " + widgetName + " in the stack: "+ stackId);
          }
        }
      }
    }
  }
}
