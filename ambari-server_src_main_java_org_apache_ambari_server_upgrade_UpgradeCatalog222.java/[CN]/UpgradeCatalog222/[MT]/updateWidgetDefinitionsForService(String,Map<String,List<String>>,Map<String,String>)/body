{
  AmbariManagementController ambariManagementController=injector.getInstance(AmbariManagementController.class);
  AmbariMetaInfo ambariMetaInfo=injector.getInstance(AmbariMetaInfo.class);
  Type widgetLayoutType=new TypeToken<Map<String,List<WidgetLayout>>>(){
  }
.getType();
  Gson gson=injector.getInstance(Gson.class);
  WidgetDAO widgetDAO=injector.getInstance(WidgetDAO.class);
  Clusters clusters=ambariManagementController.getClusters();
  Map<String,Cluster> clusterMap=getCheckedClusterMap(clusters);
  for (  final Cluster cluster : clusterMap.values()) {
    long clusterID=cluster.getClusterId();
    StackId stackId=cluster.getDesiredStackVersion();
    Map<String,Object> widgetDescriptor=null;
    StackInfo stackInfo=ambariMetaInfo.getStack(stackId.getStackName(),stackId.getStackVersion());
    ServiceInfo serviceInfo=stackInfo.getService(serviceName);
    if (serviceInfo == null) {
      LOG.info("Skipping updating widget definition, because " + serviceName + " service is not present in cluster "+ "cluster_name= "+ cluster.getClusterName());
      continue;
    }
    for (    String section : widgetMap.keySet()) {
      List<String> widgets=widgetMap.get(section);
      for (      String widgetName : widgets) {
        List<WidgetEntity> widgetEntities=widgetDAO.findByName(clusterID,widgetName,"ambari",section);
        if (widgetEntities != null && widgetEntities.size() > 0) {
          WidgetEntity entityToUpdate=null;
          if (widgetEntities.size() > 1) {
            LOG.info("Found more that 1 entity with name = " + widgetName + " for cluster = "+ cluster.getClusterName()+ ", skipping update.");
          }
 else {
            entityToUpdate=widgetEntities.iterator().next();
          }
          if (entityToUpdate != null) {
            LOG.info("Updating widget: " + entityToUpdate.getWidgetName());
            WidgetLayoutInfo targetWidgetLayoutInfo=null;
            File widgetDescriptorFile=serviceInfo.getWidgetsDescriptorFile();
            if (widgetDescriptorFile != null && widgetDescriptorFile.exists()) {
              try {
                widgetDescriptor=gson.fromJson(new FileReader(widgetDescriptorFile),widgetLayoutType);
              }
 catch (              Exception ex) {
                String msg="Error loading widgets from file: " + widgetDescriptorFile;
                LOG.error(msg,ex);
                widgetDescriptor=null;
              }
            }
            if (widgetDescriptor != null) {
              LOG.debug("Loaded widget descriptor: " + widgetDescriptor);
              for (              Object artifact : widgetDescriptor.values()) {
                List<WidgetLayout> widgetLayouts=(List<WidgetLayout>)artifact;
                for (                WidgetLayout widgetLayout : widgetLayouts) {
                  if (widgetLayout.getLayoutName().equals(sectionLayoutMap.get(section))) {
                    for (                    WidgetLayoutInfo layoutInfo : widgetLayout.getWidgetLayoutInfoList()) {
                      if (layoutInfo.getWidgetName().equals(widgetName)) {
                        targetWidgetLayoutInfo=layoutInfo;
                      }
                    }
                  }
                }
              }
            }
            if (targetWidgetLayoutInfo != null) {
              entityToUpdate.setMetrics(gson.toJson(targetWidgetLayoutInfo.getMetricsInfo()));
              entityToUpdate.setWidgetValues(gson.toJson(targetWidgetLayoutInfo.getValues()));
              widgetDAO.merge(entityToUpdate);
            }
 else {
              LOG.warn("Unable to find widget layout info for " + widgetName + " in the stack: "+ stackId);
            }
          }
        }
      }
    }
  }
}
