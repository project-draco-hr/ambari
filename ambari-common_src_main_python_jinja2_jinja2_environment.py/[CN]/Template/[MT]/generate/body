def generate(self, *args, **kwargs):
    'For very large templates it can be useful to not render the whole\n        template at once but evaluate each statement after another and yield\n        piece for piece.  This method basically does exactly that and returns\n        a generator that yields one item after another as unicode strings.\n\n        It accepts the same arguments as :meth:`render`.\n        '
    vars = dict(*args, **kwargs)
    try:
        for event in self.root_render_func(self.new_context(vars)):
            yield event
    except:
        exc_info = sys.exc_info()
    else:
        return
    yield self.environment.handle_exception(exc_info, True)
