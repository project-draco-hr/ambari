@internalcode
def get_template(self, name, parent=None, globals=None):
    'Load a template from the loader.  If a loader is configured this\n        method ask the loader for the template and returns a :class:`Template`.\n        If the `parent` parameter is not `None`, :meth:`join_path` is called\n        to get the real template name before loading.\n\n        The `globals` parameter can be used to provide template wide globals.\n        These variables are available in the context at render time.\n\n        If the template does not exist a :exc:`TemplateNotFound` exception is\n        raised.\n\n        .. versionchanged:: 2.4\n           If `name` is a :class:`Template` object it is returned from the\n           function unchanged.\n        '
    if isinstance(name, Template):
        return name
    if (parent is not None):
        name = self.join_path(name, parent)
    return self._load_template(name, self.make_globals(globals))
