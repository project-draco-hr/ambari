@internalcode
def parse(self, source, name=None, filename=None):
    'Parse the sourcecode and return the abstract syntax tree.  This\n        tree of nodes is used by the compiler to convert the template into\n        executable source- or bytecode.  This is useful for debugging or to\n        extract information from templates.\n\n        If you are :ref:`developing Jinja2 extensions <writing-extensions>`\n        this gives you a good overview of the node tree generated.\n        '
    try:
        return self._parse(source, name, filename)
    except TemplateSyntaxError:
        exc_info = sys.exc_info()
    self.handle_exception(exc_info, source_hint=source)
