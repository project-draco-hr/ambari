{
  final ClusterEntity clusterEntity=createCluster();
  final ClusterServiceEntity clusterServiceEntityHDFS=addService(clusterEntity,"HDFS");
  final ClusterServiceEntity clusterServiceEntityHIVE=addService(clusterEntity,"HIVE");
  final ClusterServiceEntity clusterServiceEntityHCATALOG=addService(clusterEntity,"HCATALOG");
  final ClusterServiceEntity clusterServiceEntityWEBHCAT=addService(clusterEntity,"WEBHCAT");
  final HostEntity hostEntity=createHost(clusterEntity);
  addComponent(clusterEntity,clusterServiceEntityHDFS,hostEntity,"NAMENODE");
  addComponent(clusterEntity,clusterServiceEntityHIVE,hostEntity,"HIVE_SERVER");
  addComponent(clusterEntity,clusterServiceEntityHCATALOG,hostEntity,"HCAT");
  addComponent(clusterEntity,clusterServiceEntityWEBHCAT,hostEntity,"WEBHCAT_SERVER");
  UpgradeCatalog170 upgradeCatalog170=injector.getInstance(UpgradeCatalog170.class);
  upgradeCatalog170.moveHcatalogIntoHiveService();
  ServiceComponentDesiredStateDAO serviceComponentDesiredStateDAO=injector.getInstance(ServiceComponentDesiredStateDAO.class);
  ServiceComponentDesiredStateEntityPK pkHCATInHive=new ServiceComponentDesiredStateEntityPK();
  pkHCATInHive.setComponentName("HCAT");
  pkHCATInHive.setClusterId(clusterEntity.getClusterId());
  pkHCATInHive.setServiceName("HIVE");
  ServiceComponentDesiredStateEntity serviceComponentDesiredStateEntity=serviceComponentDesiredStateDAO.findByPK(pkHCATInHive);
  assertNotNull(serviceComponentDesiredStateEntity);
  HostComponentDesiredStateDAO hostComponentDesiredStateDAO=injector.getInstance(HostComponentDesiredStateDAO.class);
  HostComponentDesiredStateEntityPK hcDesiredStateEntityPk=new HostComponentDesiredStateEntityPK();
  hcDesiredStateEntityPk.setServiceName("HIVE");
  hcDesiredStateEntityPk.setClusterId(clusterEntity.getClusterId());
  hcDesiredStateEntityPk.setComponentName("HCAT");
  hcDesiredStateEntityPk.setHostName(HOST_NAME);
  HostComponentDesiredStateEntity hcDesiredStateEntity=hostComponentDesiredStateDAO.findByPK(hcDesiredStateEntityPk);
  assertNotNull(hcDesiredStateEntity);
  HostComponentStateDAO hostComponentStateDAO=injector.getInstance(HostComponentStateDAO.class);
  HostComponentStateEntityPK hcStateEntityPk=new HostComponentStateEntityPK();
  hcStateEntityPk.setServiceName("HIVE");
  hcStateEntityPk.setClusterId(clusterEntity.getClusterId());
  hcStateEntityPk.setComponentName("HCAT");
  hcStateEntityPk.setHostName(HOST_NAME);
  HostComponentStateEntity hcStateEntity=hostComponentStateDAO.findByPK(hcStateEntityPk);
  assertNotNull(hcStateEntity);
}
