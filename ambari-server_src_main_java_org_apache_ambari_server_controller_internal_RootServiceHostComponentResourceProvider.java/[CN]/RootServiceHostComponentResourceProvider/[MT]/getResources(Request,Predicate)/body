{
  final Set<RootServiceHostComponentRequest> requests=new HashSet<RootServiceHostComponentRequest>();
  if (predicate == null) {
    requests.add(getRequest(Collections.<String,Object>emptyMap()));
  }
 else {
    for (    Map<String,Object> propertyMap : getPropertyMaps(predicate)) {
      requests.add(getRequest(propertyMap));
    }
  }
  Set<String> requestedIds=getRequestPropertyIds(request,predicate);
  Set<RootServiceHostComponentResponse> responses=getResources(new Command<Set<RootServiceHostComponentResponse>>(){
    @Override public Set<RootServiceHostComponentResponse> invoke() throws AmbariException {
      return getRootServiceHostComponents(requests);
    }
  }
);
  Set<Resource> resources=new HashSet<Resource>();
  for (  RootServiceHostComponentResponse response : responses) {
    Resource resource=new ResourceImpl(Resource.Type.RootServiceHostComponent);
    setResourceProperty(resource,SERVICE_NAME_PROPERTY_ID,response.getServiceName(),requestedIds);
    setResourceProperty(resource,HOST_NAME_PROPERTY_ID,response.getHostName(),requestedIds);
    setResourceProperty(resource,COMPONENT_NAME_PROPERTY_ID,response.getComponentName(),requestedIds);
    setResourceProperty(resource,COMPONENT_STATE_PROPERTY_ID,response.getComponentState(),requestedIds);
    setResourceProperty(resource,COMPONENT_VERSION_PROPERTY_ID,response.getComponentVersion(),requestedIds);
    setResourceProperty(resource,PROPERTIES_PROPERTY_ID,response.getProperties(),requestedIds);
    resources.add(resource);
  }
  return resources;
}
