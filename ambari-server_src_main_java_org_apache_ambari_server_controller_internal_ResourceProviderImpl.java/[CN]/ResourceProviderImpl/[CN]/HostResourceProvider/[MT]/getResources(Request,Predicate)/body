{
  Set<PropertyId> requestedIds=PropertyHelper.getRequestPropertyIds(getPropertyIds(),request,predicate);
  HostRequest hostRequest=getRequest(getProperties(predicate));
  Set<HostResponse> responses=getManagementController().getHosts(Collections.singleton(hostRequest));
  Set<Resource> resources=new HashSet<Resource>();
  for (  HostResponse response : responses) {
    Resource resource=new ResourceImpl(Resource.Type.Host);
    if (null != hostRequest.getClusterNames()) {
      for (      String clusterName : hostRequest.getClusterNames()) {
        if (response.getClusterNames().contains(clusterName)) {
          setResourceProperty(resource,HOST_CLUSTER_NAME_PROPERTY_ID,clusterName,requestedIds);
        }
      }
    }
    setResourceProperty(resource,HOST_NAME_PROPERTY_ID,response.getHostname(),requestedIds);
    setResourceProperty(resource,HOST_IP_PROPERTY_ID,response.getIpv4(),requestedIds);
    setResourceProperty(resource,HOST_TOTAL_MEM_PROPERTY_ID,Long.valueOf(response.getTotalMemBytes()),requestedIds);
    setResourceProperty(resource,HOST_CPU_COUNT_PROPERTY_ID,Long.valueOf(response.getCpuCount()),requestedIds);
    setResourceProperty(resource,HOST_OS_ARCH_PROPERTY_ID,response.getOsArch(),requestedIds);
    setResourceProperty(resource,HOST_OS_TYPE_PROPERTY_ID,response.getOsType(),requestedIds);
    resources.add(resource);
  }
  return resources;
}
