def test_flume_env_not_22(self):
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/flume_handler.py'), classname='FlumeHandler', command='configure', config_file='default.json', stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    self.assertResourceCalled('Directory', '/var/run/flume', group='hadoop', owner='flume')
    self.assertResourceCalled('Directory', '/etc/flume/conf', owner='flume', create_parents=True)
    self.assertResourceCalled('Directory', '/var/log/flume', owner='flume', cd_access='a', group='hadoop', create_parents=True, mode=493)
    self.assertResourceCalled('Directory', '/etc/flume/conf/a1', owner='flume')
    self.assertResourceCalled('PropertiesFile', '/etc/flume/conf/a1/flume.conf', owner='flume', mode=420, properties=build_flume(self.getConfig()['configurations']['flume-conf']['content'])['a1'])
    self.assertResourceCalled('File', '/etc/flume/conf/a1/log4j.properties', owner='flume', content=Template('log4j.properties.j2', agent_name='a1'), mode=420)
    self.assertResourceCalled('File', '/etc/flume/conf/a1/ambari-meta.json', owner='flume', content='{"channels_count": 1, "sinks_count": 1, "sources_count": 1}', mode=420)
    content = InlineTemplate(self.getConfig()['configurations']['flume-env']['content'])
    self.assertTrue((content.get_content().find('/usr/lib/hive') > (-1)))
    self.assertResourceCalled('File', '/etc/flume/conf/a1/flume-env.sh', owner='flume', content=content)
