@patch('glob.glob')
@patch('flume._set_desired_state')
@patch('flume.await_flume_process_termination')
def test_stop_default(self, await_flume_process_termination_mock, set_desired_mock, glob_mock):
    glob_mock.side_effect = [['/var/run/flume/a1/pid'], ['/etc/flume/conf/a1/ambari-meta.json']]
    await_flume_process_termination_mock.return_value = True
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/flume_handler.py'), classname='FlumeHandler', command='stop', config_file='default.json', hdp_stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    self.assertTrue(glob_mock.called)
    await_flume_process_termination_mock.assert_called_with('/var/run/flume/a1.pid')
    self.assertTrue(set_desired_mock.called)
    self.assertTrue((set_desired_mock.call_args[0][0] == 'INSTALLED'))
    self.assertResourceCalled('File', '/var/run/flume/a1.pid', action=['delete'])
    self.assertNoMoreResources()
