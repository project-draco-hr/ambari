@patch('resource_management.libraries.script.Script.put_structured_out')
@patch('flume.find_expected_agent_names')
@patch('flume.flume_status')
def test_status_many_critical(self, status_mock, expected_names_mock, structured_out_mock):
    expected_names_mock.return_value = ['a1', 'a2']
    status_mock.return_value = [{'name': 'a1', 'status': 'NOT_RUNNING', }, {'name': 'a2', 'status': 'NOT_RUNNING', }]
    try:
        self.executeScript('2.0.6/services/FLUME/package/scripts/flume_handler.py', classname='FlumeHandler', command='status', config_file='default.json')
    except:
        pass
    self.assertTrue(structured_out_mock.called)
    struct_out = structured_out_mock.call_args[0][0]
    self.assertTrue(struct_out.has_key('processes'))
    self.assertTrue(struct_out.has_key('alerts'))
    self.assertTrue(('Agents a1, a2 are NOT running on c6401.ambari.apache.org' == struct_out['alerts'][0]['text']))
    self.assertTrue(('CRITICAL' == struct_out['alerts'][0]['state']))
    self.assertNoMoreResources()
