{
  StateProvider mockStateProvider=createStrictMock(StateProvider.class);
  ClusterDefinitionProvider mockClusterDefinitionProvider=createStrictMock(ClusterDefinitionProvider.class);
  HostInfoProvider mockHostInfoProvider=createStrictMock(HostInfoProvider.class);
  TestClusterDefinitionProvider testClusterDefinitionProvider=new TestClusterDefinitionProvider();
  expect(mockClusterDefinitionProvider.getClusterName()).andDelegateTo(testClusterDefinitionProvider);
  expect(mockClusterDefinitionProvider.getVersionId()).andDelegateTo(testClusterDefinitionProvider);
  expect(mockClusterDefinitionProvider.getInputStream()).andDelegateTo(testClusterDefinitionProvider);
  expect(mockStateProvider.getRunningState(anyObject(String.class),anyObject(String.class))).andReturn(StateProvider.State.Stopped);
  expect(mockStateProvider.getRunningState(anyObject(String.class),anyObject(String.class))).andReturn(StateProvider.State.Stopped);
  expect(mockStateProvider.setRunningState(anyObject(String.class),anyObject(String.class),eq(StateProvider.State.Running))).andReturn(null);
  expect(mockStateProvider.getRunningState(anyObject(String.class),anyObject(String.class))).andReturn(StateProvider.State.Stopped);
  expect(mockStateProvider.setRunningState(anyObject(String.class),anyObject(String.class),eq(StateProvider.State.Running))).andReturn(null);
  expect(mockStateProvider.getRunningState(anyObject(String.class),anyObject(String.class))).andReturn(StateProvider.State.Stopped);
  expect(mockStateProvider.setRunningState(anyObject(String.class),anyObject(String.class),eq(StateProvider.State.Running))).andReturn(null);
  expect(mockStateProvider.getRunningState(anyObject(String.class),anyObject(String.class))).andReturn(StateProvider.State.Stopped);
  expect(mockStateProvider.setRunningState(anyObject(String.class),anyObject(String.class),eq(StateProvider.State.Running))).andReturn(null);
  expect(mockStateProvider.getRunningState(anyObject(String.class),anyObject(String.class))).andReturn(StateProvider.State.Stopped);
  expect(mockStateProvider.setRunningState(anyObject(String.class),anyObject(String.class),eq(StateProvider.State.Running))).andReturn(null);
  replay(mockClusterDefinitionProvider,mockHostInfoProvider,mockStateProvider);
  ClusterDefinition clusterDefinition=new ClusterDefinition(mockStateProvider,mockClusterDefinitionProvider,mockHostInfoProvider);
  Assert.assertEquals(1,clusterDefinition.setServiceState("HDFS","STARTED"));
  verify(mockClusterDefinitionProvider,mockHostInfoProvider,mockStateProvider);
}
