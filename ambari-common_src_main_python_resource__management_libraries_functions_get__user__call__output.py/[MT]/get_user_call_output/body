def get_user_call_output(command, user, quiet=False, is_checked_call=True, **call_kwargs):
    '\n  This function eliminates only output of command inside the su, ignoring the su ouput itself.\n  This is useful since some users have motd messages setup by default on su -l. \n  \n  @return: code, stdout, stderr\n  '
    command_string = (shell.string_cmd_from_args_list(command) if isinstance(command, (list, tuple)) else command)
    out_files = []
    try:
        out_files.append(tempfile.NamedTemporaryFile())
        out_files.append(tempfile.NamedTemporaryFile())
        for f in out_files:
            os.chmod(f.name, 438)
        command_string += (' 1>' + out_files[0].name)
        command_string += (' 2>' + out_files[1].name)
        (code, _) = shell.call(shell.as_user(command_string, user), quiet=quiet, **call_kwargs)
        files_output = []
        for f in out_files:
            files_output.append(f.read().strip('\n'))
        if code:
            all_output = ((files_output[1] + '\n') + files_output[0])
            err_msg = Logger.filter_text(("Execution of '%s' returned %d. %s" % (command_string, code, all_output)))
            if is_checked_call:
                raise Fail(err_msg)
            else:
                Logger.warning(err_msg)
        return (code, files_output[0], files_output[1])
    finally:
        for f in out_files:
            f.close()
