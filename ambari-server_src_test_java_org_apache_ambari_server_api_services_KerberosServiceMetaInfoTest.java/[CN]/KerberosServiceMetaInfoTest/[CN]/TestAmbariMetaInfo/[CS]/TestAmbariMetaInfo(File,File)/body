{
  super(stackRoot,null,serverVersionFile);
  metaInfoDAO=createNiceMock(MetainfoDAO.class);
  Class<?> c=getClass().getSuperclass();
  Field f=c.getDeclaredField("metaInfoDAO");
  f.setAccessible(true);
  f.set(this,metaInfoDAO);
  ActionMetadata actionMetadata=new ActionMetadata();
  f=c.getDeclaredField("actionMetadata");
  f.setAccessible(true);
  f.set(this,actionMetadata);
  alertDefinitionDAO=createNiceMock(AlertDefinitionDAO.class);
  f=c.getDeclaredField("alertDefinitionDao");
  f.setAccessible(true);
  f.set(this,alertDefinitionDAO);
  alertDefinitionFactory=new AlertDefinitionFactory();
  f=c.getDeclaredField("alertDefinitionFactory");
  f.setAccessible(true);
  f.set(this,alertDefinitionFactory);
  AmbariEventPublisher ambariEventPublisher=new AmbariEventPublisher();
  f=c.getDeclaredField("eventPublisher");
  f.setAccessible(true);
  f.set(this,ambariEventPublisher);
  Configuration config=createNiceMock(Configuration.class);
  expect(config.getSharedResourcesDirPath()).andReturn("./src/test/resources").anyTimes();
  replay(config);
  osFamily=new OsFamily(config);
  f=c.getDeclaredField("os_family");
  f.setAccessible(true);
  f.set(this,osFamily);
}
