{
  Assert.assertNotNull(serviceInfo);
  List<ComponentInfo> componentList=serviceInfo.getComponents();
  Assert.assertNotNull(componentList);
  Assert.assertEquals(expectedDependenciesMap.size(),componentList.size());
  for (  ComponentInfo component : componentList) {
    Assert.assertTrue(expectedDependenciesMap.containsKey(component.getName()));
    Map<String,? extends DependencyInfo> expectedDependencyMap=expectedDependenciesMap.get(component.getName());
    List<DependencyInfo> componentDependencies=component.getDependencies();
    if (expectedDependencyMap == null) {
      Assert.assertNull(componentDependencies);
    }
 else {
      Assert.assertEquals(expectedDependencyMap.size(),componentDependencies.size());
      for (      DependencyInfo componentDependency : componentDependencies) {
        DependencyInfo expectedDependency=expectedDependencyMap.get(componentDependency.getComponentName());
        Assert.assertNotNull(expectedDependency);
        AutoDeployInfo expectedDependencyAutoDeploy=expectedDependency.getAutoDeploy();
        AutoDeployInfo componentDependencyAutoDeploy=componentDependency.getAutoDeploy();
        Assert.assertEquals(expectedDependency.getName(),componentDependency.getName());
        Assert.assertEquals(expectedDependency.getServiceName(),componentDependency.getServiceName());
        Assert.assertEquals(expectedDependency.getComponentName(),componentDependency.getComponentName());
        Assert.assertEquals(expectedDependency.getScope(),componentDependency.getScope());
        if (expectedDependencyAutoDeploy == null) {
          Assert.assertNull(componentDependencyAutoDeploy);
        }
 else {
          Assert.assertNotNull(componentDependencyAutoDeploy);
          Assert.assertEquals(expectedDependencyAutoDeploy.isEnabled(),componentDependencyAutoDeploy.isEnabled());
          Assert.assertEquals(expectedDependencyAutoDeploy.getCoLocate(),componentDependencyAutoDeploy.getCoLocate());
        }
      }
    }
  }
}
