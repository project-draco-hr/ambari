def _get_mount(self, type):
    '\n    /hadoop/hdfs/data will always be on the root\n\n    If the type is MULT_DRIVE_CONFLICT:\n    /hadoop/hdfs/data/1 is on /dev/sda1\n    /hadoop/hdfs/data/2 is on /dev/sda1\n\n    If the type is MULT_DRIVE_DISTINCT:\n    /hadoop/hdfs/data/1 is on /dev/sda1\n    /hadoop/hdfs/data/2 is on /dev/sda2\n    '
    out = (((((((((((((((('/dev/mapper/VolGroup-lv_root on / type ext4 (rw)' + os.linesep) + 'proc on /proc type proc (rw)') + os.linesep) + 'sysfs on /sys type sysfs (rw)') + os.linesep) + 'devpts on /dev/pts type devpts (rw,gid=5,mode=620)') + os.linesep) + 'tmpfs on /dev/shm type tmpfs (rw)') + os.linesep) + '/dev/sda1 on /boot type ext4 (rw)') + os.linesep) + 'none on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)') + os.linesep) + 'sunrpc on /var/lib/nfs/rpc_pipefs type rpc_pipefs (rw)') + os.linesep) + '/vagrant on /vagrant type vboxsf (uid=501,gid=501,rw)')
    if (type == self.MOUNT_TYPE.MULT_DRIVE_CONFLICT):
        out += (os.linesep + '/dev/sda1 on /hadoop/hdfs type ext4 (rw)')
    elif (type == self.MOUNT_TYPE.MULT_DRIVE_DISTINCT):
        out += (((os.linesep + '/dev/sda1 on /hadoop/hdfs/data/1 type ext4 (rw)') + os.linesep) + '/dev/sda2 on /hadoop/hdfs/data/2 type ext4 (rw)')
    elif (type == self.MOUNT_TYPE.ONE_SEGMENT_MOUNT):
        out += (os.linesep + '/dev/sda1 on /hadoop type ext4 (rw)')
    elif (type == self.MOUNT_TYPE.SAME_PREFIX_MOUNTS):
        out += (((os.linesep + '/dev/sda1 on /hadoop/hdfs/data type ext4 (rw)') + os.linesep) + '/dev/sda2 on /hadoop/hdfs/data1 type ext4 (rw)')
    out_array = [x.split(' ') for x in out.strip().split('\n')]
    mount_val = []
    for m in out_array:
        if ((len(m) >= 6) and (m[1] == 'on') and (m[3] == 'type')):
            x = dict(device=m[0], mount_point=m[2], fstype=m[4], options=(m[5][1:(-1)].split(',') if (len(m[5]) >= 2) else []))
            mount_val.append(x)
    return mount_val
