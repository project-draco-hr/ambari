def install_services():
    SERVICE_URL_FORMAT = (Options.CLUSTER_URL + '/services/{0}')
    SERVICES = ['MAPREDUCE2', 'YARN']
    PUT_IN_INSTALLED = [{'RequestInfo': {'context': 'Install MapReduce2', }, 'Body': {'ServiceInfo': {'state': 'INSTALLED', }, }, }, {'RequestInfo': {'context': 'Install YARN', }, 'Body': {'ServiceInfo': {'state': 'INSTALLED', }, }, }]
    err_retcode = 0
    err_message = ''
    for index in [0, 1]:
        try:
            curl(SERVICE_URL_FORMAT.format(SERVICES[index]), validate=True, validate_expect_body=(not Options.OPTIONS.printonly), request_type='PUT', data=PUT_IN_INSTALLED[index])
        except FatalException as e:
            if (not (e.code == 0)):
                err_retcode = e.code
                err_message = (((((err_message + ' Error while installing ') + SERVICES[index]) + '. Details: ') + e.message) + '.')
    if (err_retcode != 0):
        raise FatalException(err_retcode, (err_message + '(Services may already be installed or agents are not yet started.)'))
    Options.OPTIONS.exit_message = 'Requests has been submitted to install YARN and MAPREDUCE2. Use Ambari Web to monitor the status of the install requests.'
