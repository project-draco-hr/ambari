def update_config_using_existing_properties(conf_type, properties_template, site_properties, properties_attributes_latest, catalog):
    keys_processed = []
    keys_to_delete = []
    properties_parsed = catalog.get_properties_as_dict(properties_template)
    for key in properties_template.keys():
        keys_processed.append(key)
        if ((CatConst.PROPERTY_REMOVE_TAG in properties_template) and (properties_template[CatConst.PROPERTY_REMOVE_TAG] == CatConst.TRUE_TAG)):
            keys_to_delete.append(key)
    for key in site_properties.keys():
        if (key not in keys_processed):
            properties_parsed[key] = site_properties[key]
    for key in keys_to_delete:
        del properties_parsed[key]
    if (properties_attributes_latest is not None):
        for key in properties_attributes_latest:
            properties_attributes_latest[key] = dict(filter((lambda (item_key, item_value): (item_key not in keys_to_delete)), zip(properties_attributes_latest[key].keys(), properties_attributes_latest[key].values())))
    update_config(properties_parsed, conf_type, attributes=properties_attributes_latest)
