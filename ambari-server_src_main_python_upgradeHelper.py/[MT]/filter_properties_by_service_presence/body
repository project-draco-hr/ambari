def filter_properties_by_service_presence(config_type, catalog, catalog_properties):
    '\n  Filter properties by required-services tag.\n  required-services tag could be catalog to per-property defined. per-property definition\n  will always override per-catalog definition.\n  :param config_type: str\n  :param catalog: UpgradeCatalog\n  :param catalog_properties: dict\n  :return: dict\n  '
    cproperties = dict(catalog_properties)
    catalog_required_services = []
    del_props = []
    if ((CatConst.REQUIRED_SERVICES in catalog.config_groups.get(config_type)) and isinstance(catalog.config_groups.get(config_type)[CatConst.REQUIRED_SERVICES], list)):
        catalog_required_services = catalog.config_groups.get(config_type)[CatConst.REQUIRED_SERVICES]
    for prop_name in cproperties:
        required_services = catalog_required_services
        if ((CatConst.REQUIRED_SERVICES in cproperties[prop_name]) and isinstance(cproperties[prop_name][CatConst.REQUIRED_SERVICES], list)):
            required_services = catalog_properties[prop_name][CatConst.REQUIRED_SERVICES]
        if (not is_services_exists(required_services)):
            del_props.append(prop_name)
    for prop in del_props:
        del cproperties[prop]
    return cproperties
