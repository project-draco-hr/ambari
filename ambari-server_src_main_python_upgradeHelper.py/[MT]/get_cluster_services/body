def get_cluster_services():
    services_url = (Options.CLUSTER_URL + '/services')
    raw_services = curl(services_url, parse=True, simulate=False)
    if ((raw_services is not None) and ('items' in raw_services) and isinstance(raw_services['items'], list)):
        return list(map((lambda item: item['ServiceInfo']['service_name']), raw_services['items']))
    Options.logger.warning("Failed to load services list, functionality that depends on them couldn't work")
    return []
