def _process_property_value_transformation(self, catalog, property_map_definition, old_value):
    '\n    :type catalog: UpgradeCatalog\n    :type property_map_definition: dict\n    :type old_value: str\n    :return: str\n    '
    tmp = old_value
    if ((CatConst.REPLACE_FROM_TAG in property_map_definition) and (CatConst.REPLACE_TO_TAG in property_map_definition) and (property_map_definition[CatConst.REPLACE_TO_TAG] is not None) and (property_map_definition[CatConst.REPLACE_FROM_TAG] is not None)):
        tmp = tmp.replace(property_map_definition[CatConst.REPLACE_FROM_TAG], property_map_definition[CatConst.REPLACE_TO_TAG])
    if (CatConst.COERCE_TO_PROPERTY_TAG in property_map_definition):
        if (property_map_definition[CatConst.COERCE_TO_PROPERTY_TAG] == CatConst.COERCE_YAML_OPTION_TAG):
            data = list(map((lambda x: ("'%s'" % x.strip())), tmp.split(',')))
            tmp = ('[%s]' % ','.join(data))
    return tmp
