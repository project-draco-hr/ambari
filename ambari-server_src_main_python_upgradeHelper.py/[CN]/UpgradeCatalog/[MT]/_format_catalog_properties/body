def _format_catalog_properties(self, properties):
    '\n    Transform properties from short form to normal one:\n    "property": "text" => "property": { "value": "text" }\n    :param properties: dict\n    :return: dict\n    '
    for config_item in properties:
        cfg_item = properties[config_item]
        '\n        case when "properties": {\n                        "yarn-site": {\n                            .....\n                         }\n                     }\n        is set like "properties": {\n           "yarn-site": ""\n        }\n      '
        if (not isinstance(cfg_item, dict)):
            raise MalformedPropertyDefinitionException(("The property catalog '%s' definition error" % config_item))
        properties[config_item] = dict(zip(cfg_item.keys(), map((lambda x: (x if (isinstance(x, dict) or isinstance(x, list)) else {CatConst.PROPERTY_VALUE_TAG: x, })), cfg_item.values())))
    return properties
