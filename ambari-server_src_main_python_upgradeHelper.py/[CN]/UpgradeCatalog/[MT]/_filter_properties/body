def _filter_properties(self, config_group):

    def _property_filter_strings(value):
        if (not isinstance(value, dict)):
            return {CatConst.PROPERTY_VALUE_TAG: value, }
        elif ((self._substitution_handler is not None) and (CatConst.VALUE_TEMPLATE_TAG in value) and (CatConst.VALUE_TEMPLATE_TAG in value)):
            parsed_value = self._substitution_handler(self._search_pattern.findall(value[CatConst.PROPERTY_VALUE_TAG]), value[CatConst.PROPERTY_VALUE_TAG])
            if (parsed_value is not None):
                value[CatConst.PROPERTY_VALUE_TAG] = parsed_value
        return value
    properties = self._properties_catalog[config_group].copy()
    properties = dict(zip(properties, map(_property_filter_strings, properties.values())))
    return properties
