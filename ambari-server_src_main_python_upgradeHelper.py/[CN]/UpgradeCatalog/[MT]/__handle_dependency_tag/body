def __handle_dependency_tag(self, name, catalog_item_name, catalog_property_item, properties):
    '\n    :type name str\n    :type catalog_item_name str\n    :type catalog_property_item dict\n    :type properties dict\n    '
    if ((CatConst.RESOLVE_DEPENDENCY_TAG in catalog_property_item) and (catalog_property_item[CatConst.RESOLVE_DEPENDENCY_TAG] == CatConst.TRUE_TAG)):
        sa_suggestions = Options.stack_advisor.get_suggestion(Options.server_config_factory, [StackAdvisorRequestProperty(name, catalog_item_name)])
        for sa_catalog in sa_suggestions:
            if (sa_catalog not in Options.server_config_factory.items()):
                Options.server_config_factory.create_config(sa_catalog)
            catalog_properties = Options.server_config_factory.get_config(sa_catalog).properties
            for sa_property in sa_suggestions[sa_catalog]:
                if ((sa_suggestions[sa_catalog][sa_property] is None) and (sa_property in catalog_properties)):
                    print ('rem %s:%s' % (sa_catalog, sa_property))
                    del catalog_properties[sa_property]
                elif (sa_suggestions[sa_catalog][sa_property] is not None):
                    catalog_properties[sa_property] = sa_suggestions[sa_catalog][sa_property]
