{
  if (isValidActionName(ad.getActionName(),reason)) {
    if (defaultTimeout < MIN_TIMEOUT || defaultTimeout > MAX_TIMEOUT) {
      reason.append("Default timeout should be between " + MIN_TIMEOUT + " and "+ MAX_TIMEOUT);
      return false;
    }
    if (actionType == null || actionType == ActionType.SYSTEM_DISABLED) {
      reason.append("Action type cannot be " + actionType);
      return false;
    }
    if (ad.getDescription() == null || ad.getDescription().isEmpty()) {
      reason.append("Action description cannot be empty");
      return false;
    }
    if (ad.getTargetService() == null || ad.getTargetService().isEmpty()) {
      if (ad.getTargetComponent() != null && !ad.getTargetComponent().isEmpty()) {
        reason.append("Target component cannot be specified unless target service is specified");
        return false;
      }
    }
    if (ad.getInputs() != null && !ad.getInputs().isEmpty()) {
      String[] parameters=ad.getInputs().split(",");
      for (      String parameter : parameters) {
        if (parameter.trim().isEmpty()) {
          reason.append("Empty parameter cannot be specified as an input parameter");
        }
      }
    }
  }
 else {
    return false;
  }
  return true;
}
