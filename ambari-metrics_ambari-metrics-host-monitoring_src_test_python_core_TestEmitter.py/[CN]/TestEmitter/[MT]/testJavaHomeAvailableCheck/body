@patch.object(OSCheck, 'os_distribution', new=MagicMock(return_value=os_distro_value))
@patch('urllib2.urlopen')
def testJavaHomeAvailableCheck(self, url_open_mock):
    url_open_mock.return_value = MagicMock()
    url_open_mock.return_value.getcode.return_value = 200
    self.assertEqual(urllib2.urlopen(None, None).getcode(), 200)
    url_open_mock.reset_mock()
    stop_handler = bind_signal_handlers()
    config = Configuration()
    application_metric_map = ApplicationMetricMap('host', '10.10.10.10')
    application_metric_map.clear()
    application_metric_map.put_metric('APP1', {'metric1': 1, }, 1)
    emitter = Emitter(config, application_metric_map, stop_handler)
    emitter.submit_metrics()
    self.assertEqual(url_open_mock.call_count, 1)
    self.assertUrlData(url_open_mock)
