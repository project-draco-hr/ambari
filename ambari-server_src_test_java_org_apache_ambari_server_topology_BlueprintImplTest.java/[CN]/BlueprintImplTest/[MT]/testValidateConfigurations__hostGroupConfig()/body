{
  Map<String,Map<String,String>> group2Props=new HashMap<>();
  Map<String,String> group2Category2Props=new HashMap<>();
  group2Props.put("category2",group2Category2Props);
  group2Category2Props.put("prop2","val");
  Configuration group2Configuration=new Configuration(group2Props,EMPTY_ATTRIBUTES,configuration);
  expect(group2.getConfiguration()).andReturn(group2Configuration).atLeastOnce();
  expect(group1.getCardinality()).andReturn("1").atLeastOnce();
  expect(group1.getComponents()).andReturn(Arrays.asList(new Component("c1"),new Component("c2"))).atLeastOnce();
  expect(group2.getCardinality()).andReturn("1").atLeastOnce();
  expect(group2.getComponents()).andReturn(Arrays.asList(new Component("c1"),new Component("c3"))).atLeastOnce();
  replay(stack,group1,group2);
  Blueprint blueprint=new BlueprintImpl("test",hostGroups,stack,configuration,null);
  blueprint.validateRequiredProperties();
  BlueprintEntity entity=blueprint.toEntity();
  verify(stack,group1,group2);
  assertTrue(entity.getSecurityType() == SecurityType.NONE);
  assertTrue(entity.getSecurityDescriptorReference() == null);
}
