{
  expect(group1.getCardinality()).andReturn("1").atLeastOnce();
  expect(group1.getComponents()).andReturn(Arrays.asList(new Component("c1"),new Component("c2"))).atLeastOnce();
  expect(group2.getCardinality()).andReturn("1").atLeastOnce();
  expect(group2.getComponents()).andReturn(Arrays.asList(new Component("c1"),new Component("c3"))).atLeastOnce();
  expect(group2.getConfiguration()).andReturn(EMPTY_CONFIGURATION).atLeastOnce();
  replay(stack,group1,group2);
  Map<String,String> category2Props=new HashMap<>();
  properties.put("category2",category2Props);
  category2Props.put("prop2","val");
  SecurityConfiguration securityConfiguration=new SecurityConfiguration(SecurityType.KERBEROS,"testRef",null);
  Blueprint blueprint=new BlueprintImpl("test",hostGroups,stack,configuration,securityConfiguration);
  blueprint.validateRequiredProperties();
  BlueprintEntity entity=blueprint.toEntity();
  verify(stack,group1,group2);
  assertTrue(entity.getSecurityType() == SecurityType.KERBEROS);
  assertTrue(entity.getSecurityDescriptorReference().equals("testRef"));
}
