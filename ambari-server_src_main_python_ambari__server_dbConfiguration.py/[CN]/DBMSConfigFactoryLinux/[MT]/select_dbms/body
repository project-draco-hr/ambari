def select_dbms(self, options):
    try:
        dbms_index = options.dbms_index
    except AttributeError:
        dbms_index = self._get_default_dbms_index(options)
    if (not options.silent):
        n_dbms = 1
        dbms_choice_prompt = '==============================================================================\nChoose one of the following options:\n'
        dbms_choices = ''
        for desc in self.DBMS_LIST:
            if (len(desc.storage_name) > 0):
                dbms_storage = ' ({0})'.format(desc.storage_name)
            else:
                dbms_storage = ''
            dbms_choice_prompt += self.DBMS_PROMPT_PATTERN.format(n_dbms, desc.dbms_name, dbms_storage)
            dbms_choices += str(n_dbms)
            n_dbms += 1
        database_num = str((dbms_index + 1))
        dbms_choice_prompt += self.DBMS_CHOICE_PROMPT_PATTERN.format(database_num)
        dbms_valid_choices = self.JDK_VALID_CHOICES_PATTERN.format(dbms_choices)
        database_num = get_validated_string_input(dbms_choice_prompt, database_num, dbms_valid_choices, 'Invalid number.', False)
        dbms_index = (int(database_num) - 1)
        if (dbms_index >= n_dbms):
            print_info_msg('Unknown db option, default to {0} {1}.'.format(self.DBMS_LIST[0].storage_name, self.DBMS_LIST[0].dbms_name))
            dbms_index = 0
    return dbms_index
