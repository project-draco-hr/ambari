def create(self, options, properties, dbId='Ambari'):
    '\n    # Windows implementation of the factory method. The outcome of the derived implementations\n    #  is expected to be a subclass of DBMSConfig.\n    # properties = property bag that will ultimately define the type of database. Since\n    #   right now in Windows we only support SQL Server, this argument is not yet used.\n    # dbId = additional information, that helps distinguish between various database connections\n    #   (Ambari vs. Metrics is a prime example).\n    '
    from ambari_server.dbConfiguration_windows import createSQLServerConfig
    return createSQLServerConfig(options, properties, STORAGE_TYPE_REMOTE, dbId)
