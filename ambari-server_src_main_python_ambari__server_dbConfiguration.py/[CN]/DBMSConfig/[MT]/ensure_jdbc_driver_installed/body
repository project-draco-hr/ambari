def ensure_jdbc_driver_installed(self, properties):
    server_jdbc_path = properties.get_property(JDBC_DRIVER_PATH_PROPERTY)
    if (server_jdbc_path and os.path.isfile(server_jdbc_path)):
        return True
    default_driver_path = self._get_default_driver_path(properties)
    if (default_driver_path and os.path.isfile(default_driver_path)):
        ambari_should_use_existing_default_jdbc = get_YN_input('Should ambari use existing default jdbc {0} [y/n] (y)? '.format(default_driver_path), True)
        if ambari_should_use_existing_default_jdbc:
            properties.process_pair(JDBC_DRIVER_PATH_PROPERTY, default_driver_path)
            update_properties(properties)
            return True
    path_to_custom_jdbc_driver = get_validated_string_input('Enter full path to custom jdbc driver: ', None, None, None, False, False)
    if (path_to_custom_jdbc_driver and os.path.isfile(path_to_custom_jdbc_driver)):
        try:
            custom_jdbc_name = os.path.basename(path_to_custom_jdbc_driver)
            if (not (path_to_custom_jdbc_driver == os.path.join(configDefaults.JAVA_SHARE_PATH, custom_jdbc_name))):
                if os.path.isfile(os.path.join(configDefaults.JAVA_SHARE_PATH, custom_jdbc_name)):
                    replace_jdbc_in_share_dir = get_YN_input('You already have file {0} in /usr/share/java/. Should it be replaced? [y/n] (y)? '.format(custom_jdbc_name), True)
                    if replace_jdbc_in_share_dir:
                        try:
                            os.remove(os.path.join(configDefaults.JAVA_SHARE_PATH, custom_jdbc_name))
                        except Exception as ee:
                            err = ('ERROR: Could not remove jdbc file. %s' % os.path.join(configDefaults.JAVA_SHARE_PATH, custom_jdbc_name))
                            raise FatalException(1, err)
                shutil.copy(path_to_custom_jdbc_driver, configDefaults.JAVA_SHARE_PATH)
                print 'Copying {0} to {1}'.format(path_to_custom_jdbc_driver, configDefaults.JAVA_SHARE_PATH)
        except Exception as e:
            err = 'Can not copy file {0} to {1} due to: {2} . Please check file permissions and free disk space.'.format(path_to_custom_jdbc_driver, configDefaults.JAVA_SHARE_PATH, str(e))
            raise FatalException(1, err)
        properties.process_pair(JDBC_DRIVER_PATH_PROPERTY, path_to_custom_jdbc_driver)
        update_properties(properties)
        return True
    else:
        print_error_msg('Custom jdbc connector path is unavailable. Please put correct path to jdbc connector.')
    return False
