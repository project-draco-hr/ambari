@patch('common.__set_osparams')
@patch('utils.exec_psql_cmd')
@patch('common.__get_hdfs_dir_owner')
def test_start_default(self, owner_mock, psql_mock, set_osparams_mock):
    owner_mock.return_value = 'postgres'
    self.executeScript((self.HAWQ_PACKAGE_DIR + '/scripts/hawqmaster.py'), classname='HawqMaster', command='start', config_dict=self.config_dict, stack_version=self.STACK_VERSION, target=self.TARGET_COMMON_SERVICES)
    self.asserts_for_configure()
    self.assertResourceCalled('HdfsResource', '/hawq_data', immutable_paths=self.DEFAULT_IMMUTABLE_PATHS, default_fs=u'hdfs://c6401.ambari.apache.org:8020', hadoop_bin_dir='/usr/phd/current/hadoop-client/bin', hadoop_conf_dir='/usr/phd/current/hadoop-client/conf', hdfs_site=self.getConfig()['configurations']['hdfs-site'], type='directory', action=['create_on_execute'], owner=self.GPADMIN, group=self.GPADMIN, user=u'hdfs', mode=493, security_enabled=False, kinit_path_local='/usr/bin/kinit', recursive_chown=True, keytab=UnknownConfigurationMock(), principal_name=UnknownConfigurationMock())
    self.assertResourceCalled('HdfsResource', None, immutable_paths=self.DEFAULT_IMMUTABLE_PATHS, default_fs=u'hdfs://c6401.ambari.apache.org:8020', hadoop_bin_dir='/usr/phd/current/hadoop-client/bin', hadoop_conf_dir='/usr/phd/current/hadoop-client/conf', hdfs_site=self.getConfig()['configurations']['hdfs-site'], action=['execute'], user=u'hdfs', security_enabled=False, kinit_path_local='/usr/bin/kinit', keytab=UnknownConfigurationMock(), principal_name=UnknownConfigurationMock())
    self.assertResourceCalled('Execute', (self.SOURCE_HAWQ_SCRIPT + 'hawq init master -a -v --ignore-bad-hosts'), logoutput=True, not_if=None, only_if=None, user=self.GPADMIN, timeout=900)
    self.assertNoMoreResources()
