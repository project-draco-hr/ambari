@patch('hawqmaster.common.__set_osparams')
@patch('hawqmaster.master_helper.__is_active_master')
@patch('hawqmaster.master_helper.__is_local_initialized')
def test_start_localmaster(self, is_local_initialized_mock, active_master_mock, set_osparams_mock):
    active_master_mock.return_value = True
    is_local_initialized_mock.return_value = True
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/hawqmaster.py'), classname='HawqMaster', command='start', config_file='hawq_default.json', stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    self.__asserts_for_configure()
    self.assertResourceCalled('Execute', 'source /usr/local/hawq/greenplum_path.sh && hawq ssh-exkeys -f /usr/local/hawq/etc/hawq_hosts -p gpadmin', logoutput=True, not_if=None, only_if=None, user=self.GPADMIN, timeout=900)
    self.assertResourceCalled('HdfsResource', '/hawq_default', default_fs=u'hdfs://c6401.ambari.apache.org:8020', hdfs_site=self.getConfig()['configurations']['hdfs-site'], type='directory', action=['create_on_execute'], owner=self.GPADMIN, group=self.GPADMIN, user=u'hdfs', mode=493, security_enabled=False, kinit_path_local='/usr/bin/kinit', recursive_chown=True, keytab=UnknownConfigurationMock(), principal_name=UnknownConfigurationMock())
    self.assertResourceCalled('HdfsResource', None, default_fs=u'hdfs://c6401.ambari.apache.org:8020', hdfs_site=self.getConfig()['configurations']['hdfs-site'], action=['execute'], user=u'hdfs', security_enabled=False, kinit_path_local='/usr/bin/kinit', keytab=UnknownConfigurationMock(), principal_name=UnknownConfigurationMock())
    self.assertResourceCalled('Execute', 'source /usr/local/hawq/greenplum_path.sh && hawq start master -a -v', logoutput=True, not_if="netstat -tupln | egrep ':5432\\s' | egrep postgres", only_if=None, user=self.GPADMIN, timeout=900)
    self.assertNoMoreResources()
