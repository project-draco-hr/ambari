{
  ServiceComponentHost sch=createNewServiceComponentHost(clusterName,"HDFS","DATANODE",hostName1,false);
  ServiceComponentHostImpl impl=(ServiceComponentHostImpl)sch;
  long timestamp=0;
  HashSet<State> validStates=new HashSet<State>();
  validStates.add(State.INSTALLED);
  validStates.add(State.INSTALL_FAILED);
  validStates.add(State.UNKNOWN);
  validStates.add(State.DISABLED);
  for (  State state : validStates) {
    sch.setState(state);
    ServiceComponentHostEvent disableEvent=createEvent(impl,++timestamp,ServiceComponentHostEventType.HOST_SVCCOMP_DISABLE);
    impl.handleEvent(disableEvent);
    Assert.assertEquals(-1,impl.getLastOpStartTime());
    Assert.assertEquals(-1,impl.getLastOpLastUpdateTime());
    Assert.assertEquals(-1,impl.getLastOpEndTime());
    Assert.assertEquals(State.DISABLED,impl.getState());
  }
  HashSet<State> invalidStates=new HashSet<State>();
  invalidStates.add(State.INIT);
  invalidStates.add(State.INSTALLING);
  invalidStates.add(State.STARTING);
  invalidStates.add(State.STARTED);
  invalidStates.add(State.STOPPING);
  invalidStates.add(State.UNINSTALLING);
  invalidStates.add(State.UNINSTALLED);
  invalidStates.add(State.UPGRADING);
  for (  State state : invalidStates) {
    sch.setState(state);
    ServiceComponentHostEvent disableEvent=createEvent(impl,++timestamp,ServiceComponentHostEventType.HOST_SVCCOMP_DISABLE);
    boolean exceptionThrown=false;
    try {
      impl.handleEvent(disableEvent);
    }
 catch (    Exception e) {
      exceptionThrown=true;
    }
    Assert.assertTrue("Exception not thrown on invalid event",exceptionThrown);
    Assert.assertEquals(-1,impl.getLastOpStartTime());
    Assert.assertEquals(-1,impl.getLastOpLastUpdateTime());
    Assert.assertEquals(-1,impl.getLastOpEndTime());
  }
}
