{
  String stackVersion="HDP-2.0.6";
  String clusterName="c2";
  String hostName="h3";
  clusters.addCluster(clusterName);
  clusters.addHost(hostName);
  clusters.getHost(hostName).setOsType("centos5");
  clusters.getHost(hostName).persist();
  clusters.getCluster(clusterName).setDesiredStackVersion(new StackId(stackVersion));
  metaInfo.init();
  clusters.mapHostToCluster(hostName,clusterName);
  Cluster cluster=clusters.getCluster(clusterName);
  ServiceComponentHost sch1=createNewServiceComponentHost(cluster,"HDFS","NAMENODE",hostName);
  ServiceComponentHost sch2=createNewServiceComponentHost(cluster,"HDFS","DATANODE",hostName);
  ServiceComponentHost sch3=createNewServiceComponentHost(cluster,"MAPREDUCE2","HISTORYSERVER",hostName);
  HostComponentDesiredStateEntityPK pk=new HostComponentDesiredStateEntityPK();
  pk.setClusterId(Long.valueOf(cluster.getClusterId()));
  pk.setComponentName(sch1.getServiceComponentName());
  pk.setServiceName(sch1.getServiceName());
  pk.setHostName(hostName);
  HostComponentDesiredStateDAO dao=injector.getInstance(HostComponentDesiredStateDAO.class);
  HostComponentDesiredStateEntity entity=dao.findByPK(pk);
  Assert.assertEquals(PassiveState.ACTIVE,entity.getPassiveState());
  Assert.assertEquals(PassiveState.ACTIVE,sch1.getPassiveState());
  sch1.setPassiveState(PassiveState.PASSIVE);
  Assert.assertEquals(PassiveState.PASSIVE,sch1.getPassiveState());
  entity=dao.findByPK(pk);
  Assert.assertEquals(PassiveState.PASSIVE,entity.getPassiveState());
}
