{
  String stackVersion="HDP-2.0.6";
  StackId stackId=new StackId(stackVersion);
  String clusterName="c2";
  createCluster(stackId,clusterName);
  final String hostName="h3";
  Set<String> hostNames=new HashSet<String>();
  hostNames.add(hostName);
  addHostsToCluster(clusterName,hostAttributes,hostNames);
  Cluster cluster=clusters.getCluster(clusterName);
  helper.getOrCreateRepositoryVersion(stackId,stackId.getStackVersion());
  cluster.createClusterVersion(stackId,stackId.getStackVersion(),"admin",RepositoryVersionState.INSTALLING);
  HostEntity hostEntity=hostDAO.findByName(hostName);
  Assert.assertNotNull(hostEntity);
  ServiceComponentHost sch1=createNewServiceComponentHost(cluster,"HDFS","NAMENODE",hostName);
  HostComponentDesiredStateEntityPK pk=new HostComponentDesiredStateEntityPK();
  pk.setClusterId(Long.valueOf(cluster.getClusterId()));
  pk.setComponentName(sch1.getServiceComponentName());
  pk.setServiceName(sch1.getServiceName());
  pk.setHostId(hostEntity.getHostId());
  HostComponentDesiredStateEntity entity=hostComponentDesiredStateDAO.findByPK(pk);
  Assert.assertEquals(MaintenanceState.OFF,entity.getMaintenanceState());
  Assert.assertEquals(MaintenanceState.OFF,sch1.getMaintenanceState());
  sch1.setMaintenanceState(MaintenanceState.ON);
  Assert.assertEquals(MaintenanceState.ON,sch1.getMaintenanceState());
  entity=hostComponentDesiredStateDAO.findByPK(pk);
  Assert.assertEquals(MaintenanceState.ON,entity.getMaintenanceState());
}
