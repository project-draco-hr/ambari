{
  try {
    Map<String,Cluster> clusterMap=clusters.getClusters();
    HostComponentDesiredStateDAO hostComponentDesiredStateDAO=injector.getInstance(HostComponentDesiredStateDAO.class);
    List<HostComponentDesiredStateEntity> hostComponentDesiredStateEntities=hostComponentDesiredStateDAO.findAll();
    if (hostComponentDesiredStateEntities != null) {
      for (      HostComponentDesiredStateEntity hcdse : hostComponentDesiredStateEntities) {
        hostComponentDesiredStateDAO.remove(hcdse);
      }
    }
    HostComponentStateDAO hostComponentStateDAO=injector.getInstance(HostComponentStateDAO.class);
    List<HostComponentStateEntity> hostComponentStateEntities=hostComponentStateDAO.findAll();
    if (hostComponentStateEntities != null) {
      for (      HostComponentStateEntity hcse : hostComponentStateEntities) {
        hostComponentStateDAO.remove(hcse);
      }
    }
    for (    String clusterName : clusterMap.keySet()) {
      clusters.deleteCluster(clusterName);
    }
    for (    Host host : clusters.getHosts()) {
      clusters.deleteHost(host.getHostName());
    }
  }
 catch (  IllegalStateException ise) {
  }
}
