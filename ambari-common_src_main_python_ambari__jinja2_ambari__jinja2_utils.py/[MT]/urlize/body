def urlize(text, trim_url_limit=None, nofollow=False):
    'Converts any URLs in text into clickable links. Works on http://,\n    https:// and www. links. Links can have trailing punctuation (periods,\n    commas, close-parens) and leading punctuation (opening parens) and\n    it\'ll still do the right thing.\n\n    If trim_url_limit is not None, the URLs in link text will be limited\n    to trim_url_limit characters.\n\n    If nofollow is True, the URLs in link text will get a rel="nofollow"\n    attribute.\n    '
    trim_url = (lambda x, limit=trim_url_limit: (((limit is not None) and (x[:limit] + (((len(x) >= limit) and '...') or ''))) or x))
    words = _word_split_re.split(unicode(escape(text)))
    nofollow_attr = ((nofollow and ' rel="nofollow"') or '')
    for (i, word) in enumerate(words):
        match = _punctuation_re.match(word)
        if match:
            (lead, middle, trail) = match.groups()
            if (middle.startswith('www.') or (('@' not in middle) and (not middle.startswith('http://')) and (len(middle) > 0) and (middle[0] in (_letters + _digits)) and (middle.endswith('.org') or middle.endswith('.net') or middle.endswith('.com')))):
                middle = ('<a href="http://%s"%s>%s</a>' % (middle, nofollow_attr, trim_url(middle)))
            if (middle.startswith('http://') or middle.startswith('https://')):
                middle = ('<a href="%s"%s>%s</a>' % (middle, nofollow_attr, trim_url(middle)))
            if (('@' in middle) and (not middle.startswith('www.')) and (not (':' in middle)) and _simple_email_re.match(middle)):
                middle = ('<a href="mailto:%s">%s</a>' % (middle, middle))
            if (((lead + middle) + trail) != word):
                words[i] = ((lead + middle) + trail)
    return u''.join(words)
