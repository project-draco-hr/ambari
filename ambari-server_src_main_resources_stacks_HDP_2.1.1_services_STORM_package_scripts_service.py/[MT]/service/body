def service(name, action='start'):
    import params
    import status_params
    pid_file = status_params.pid_files[name]
    no_op_test = format('ls {pid_file} >/dev/null 2>&1 && ps `cat {pid_file}` >/dev/null 2>&1')
    if (action == 'start'):
        cmd = ['/usr/bin/storm', name]
        if (name == 'ui'):
            crt_pid_cmd = format('pgrep -f "^java.+backtype.storm.ui.core$" > {pid_file}')
        else:
            crt_pid_cmd = format('pgrep -f "^java.+backtype.storm.daemon.{name}$" > {pid_file}')
        if call(no_op_test)[0]:
            subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, env={'PATH': format('{java64_home}/bin:/bin'), })
        Execute(crt_pid_cmd, logoutput=True, tries=6, try_sleep=10)
    elif (action == 'stop'):
        cmd = format('kill `cat {pid_file}` >/dev/null 2>&1')
        Execute(cmd)
        Execute(format('! ({no_op_test})'), tries=5, try_sleep=3)
        Execute(format('rm -f {pid_file}'))
