def setup_ranger_admin(upgrade_type=None):
    import params
    ranger_home = params.ranger_home
    ranger_conf = params.ranger_conf
    Directory(ranger_conf, owner=params.unix_user, group=params.unix_group, create_parents=True)
    if (upgrade_type is not None):
        copy_jdbc_connector()
    File(format('/usr/lib/ambari-agent/{check_db_connection_jar_name}'), content=DownloadSource(format('{jdk_location}{check_db_connection_jar_name}')), mode=420)
    cp = format('{check_db_connection_jar}')
    if (params.db_flavor.lower() == 'sqla'):
        cp = ((cp + os.pathsep) + format('{ranger_home}/ews/lib/{jdbc_jar_name}'))
    else:
        cp = ((cp + os.pathsep) + format('{driver_curl_target}'))
    cp = ((cp + os.pathsep) + format('{ranger_home}/ews/lib/*'))
    db_connection_check_command = format("{java_home}/bin/java -cp {cp} org.apache.ambari.server.DBConnectionVerification '{ranger_jdbc_connection_url}' {ranger_db_user} {ranger_db_password!p} {ranger_jdbc_driver}")
    env_dict = {}
    if (params.db_flavor.lower() == 'sqla'):
        env_dict = {'LD_LIBRARY_PATH': params.ld_lib_path, }
    Execute(db_connection_check_command, path='/usr/sbin:/sbin:/usr/local/bin:/bin:/usr/bin', tries=5, try_sleep=10, environment=env_dict)
    Execute(('ln', '-sf', format('{ranger_home}/ews/webapp/WEB-INF/classes/conf'), format('{ranger_home}/conf')), not_if=format('ls {ranger_home}/conf'), only_if=format('ls {ranger_home}/ews/webapp/WEB-INF/classes/conf'), sudo=True)
    if (upgrade_type is not None):
        src_file = format('{ranger_home}/ews/webapp/WEB-INF/classes/conf.dist/ranger-admin-default-site.xml')
        dst_file = format('{ranger_home}/conf/ranger-admin-default-site.xml')
        Execute(('cp', '-f', src_file, dst_file), sudo=True)
        src_file = format('{ranger_home}/ews/webapp/WEB-INF/classes/conf.dist/security-applicationContext.xml')
        dst_file = format('{ranger_home}/conf/security-applicationContext.xml')
        Execute(('cp', '-f', src_file, dst_file), sudo=True)
    Directory(format('{ranger_home}/'), owner=params.unix_user, group=params.unix_group, recursive_ownership=True)
    Directory(params.admin_log_dir, owner=params.unix_user, group=params.unix_group)
    if os.path.isfile(params.ranger_admin_default_file):
        File(params.ranger_admin_default_file, owner=params.unix_user, group=params.unix_group)
    else:
        Logger.warning('Required file {0} does not exist, copying the file to {1} path'.format(params.ranger_admin_default_file, ranger_conf))
        src_file = format('{ranger_home}/ews/webapp/WEB-INF/classes/conf.dist/ranger-admin-default-site.xml')
        dst_file = format('{ranger_home}/conf/ranger-admin-default-site.xml')
        Execute(('cp', '-f', src_file, dst_file), sudo=True)
        File(params.ranger_admin_default_file, owner=params.unix_user, group=params.unix_group)
    if os.path.isfile(params.security_app_context_file):
        File(params.security_app_context_file, owner=params.unix_user, group=params.unix_group)
    else:
        Logger.warning('Required file {0} does not exist, copying the file to {1} path'.format(params.security_app_context_file, ranger_conf))
        src_file = format('{ranger_home}/ews/webapp/WEB-INF/classes/conf.dist/security-applicationContext.xml')
        dst_file = format('{ranger_home}/conf/security-applicationContext.xml')
        Execute(('cp', '-f', src_file, dst_file), sudo=True)
        File(params.security_app_context_file, owner=params.unix_user, group=params.unix_group)
    if ((upgrade_type is not None) and params.stack_is_hdp23_or_further):
        if os.path.islink('/usr/bin/ranger-admin'):
            Link('/usr/bin/ranger-admin', action='delete')
        Link('/usr/bin/ranger-admin', to=format('{ranger_home}/ews/ranger-admin-services.sh'))
    Execute(('ln', '-sf', format('{ranger_home}/ews/ranger-admin-services.sh'), '/usr/bin/ranger-admin'), not_if=format('ls /usr/bin/ranger-admin'), only_if=format('ls {ranger_home}/ews/ranger-admin-services.sh'), sudo=True)
    XmlConfig('ranger-admin-site.xml', conf_dir=ranger_conf, configurations=params.config['configurations']['ranger-admin-site'], configuration_attributes=params.config['configuration_attributes']['ranger-admin-site'], owner=params.unix_user, group=params.unix_group, mode=420)
    Directory(os.path.join(ranger_conf, 'ranger_jaas'), mode=448, owner=params.unix_user, group=params.unix_group)
    do_keystore_setup(upgrade_type=upgrade_type)
