def setup_usersync(upgrade_type=None):
    import params
    usersync_home = params.usersync_home
    ranger_home = params.ranger_home
    ranger_ugsync_conf = params.ranger_ugsync_conf
    if ((not is_empty(params.ranger_usersync_ldap_ldapbindpassword)) and (params.ug_sync_source == 'org.apache.ranger.ldapusersync.process.LdapUserGroupBuilder')):
        password_validation(params.ranger_usersync_ldap_ldapbindpassword)
    Directory(params.ranger_pid_dir, mode=488, owner=params.unix_user, group=params.unix_group)
    Directory(params.usersync_log_dir, owner=params.unix_user, group=params.unix_group, cd_access='a', create_parents=True, mode=493)
    File(format('{ranger_ugsync_conf}/ranger-usersync-env-logdir.sh'), content=format('export logdir={usersync_log_dir}'), owner=params.unix_user, group=params.unix_group, mode=493)
    Directory(format('{ranger_ugsync_conf}/'), owner=params.unix_user)
    if (upgrade_type is not None):
        src_file = format('{usersync_home}/conf.dist/ranger-ugsync-default.xml')
        dst_file = format('{usersync_home}/conf/ranger-ugsync-default.xml')
        Execute(('cp', '-f', src_file, dst_file), sudo=True)
        src_file = format('{usersync_home}/conf.dist/log4j.xml')
        dst_file = format('{usersync_home}/conf/log4j.xml')
        Execute(('cp', '-f', src_file, dst_file), sudo=True)
    XmlConfig('ranger-ugsync-site.xml', conf_dir=ranger_ugsync_conf, configurations=params.config['configurations']['ranger-ugsync-site'], configuration_attributes=params.config['configuration_attributes']['ranger-ugsync-site'], owner=params.unix_user, group=params.unix_group, mode=420)
    if os.path.isfile(params.ranger_ugsync_default_file):
        File(params.ranger_ugsync_default_file, owner=params.unix_user, group=params.unix_group)
    if os.path.isfile(params.usgsync_log4j_file):
        File(params.usgsync_log4j_file, owner=params.unix_user, group=params.unix_group)
    if os.path.isfile(params.cred_validator_file):
        File(params.cred_validator_file, group=params.unix_group, mode=2413)
    cred_lib = os.path.join(usersync_home, 'lib', '*')
    ranger_credential_helper(cred_lib, 'usersync.ssl.key.password', params.ranger_usersync_keystore_password, params.ugsync_jceks_path)
    if ((not is_empty(params.ranger_usersync_ldap_ldapbindpassword)) and (params.ug_sync_source == 'org.apache.ranger.ldapusersync.process.LdapUserGroupBuilder')):
        ranger_credential_helper(cred_lib, 'ranger.usersync.ldap.bindalias', params.ranger_usersync_ldap_ldapbindpassword, params.ugsync_jceks_path)
    ranger_credential_helper(cred_lib, 'usersync.ssl.truststore.password', params.ranger_usersync_truststore_password, params.ugsync_jceks_path)
    File(params.ugsync_jceks_path, owner=params.unix_user, group=params.unix_group, mode=416)
    File([params.usersync_start, params.usersync_stop], owner=params.unix_user, group=params.unix_group)
    File(params.usersync_services_file, mode=493)
    Execute(('ln', '-sf', format('{usersync_services_file}'), '/usr/bin/ranger-usersync'), not_if=format('ls /usr/bin/ranger-usersync'), only_if=format('ls {usersync_services_file}'), sudo=True)
    if (not os.path.isfile(params.ranger_usersync_keystore_file)):
        cmd = format("{java_home}/bin/keytool -genkeypair -keyalg RSA -alias selfsigned -keystore '{ranger_usersync_keystore_file}' -keypass {ranger_usersync_keystore_password!p} -storepass {ranger_usersync_keystore_password!p} -validity 3600 -keysize 2048 -dname '{default_dn_name}'")
        Execute(cmd, logoutput=True, user=params.unix_user)
        File(params.ranger_usersync_keystore_file, owner=params.unix_user, group=params.unix_group, mode=416)
