def setup_ranger_db(rolling_upgrade=False):
    import params
    File(params.downloaded_custom_connector, content=DownloadSource(params.driver_curl_source), mode=420)
    Directory(params.java_share_dir, mode=493)
    Execute(('cp', '--remove-destination', params.downloaded_custom_connector, params.driver_curl_target), path=['/bin', '/usr/bin/'], sudo=True)
    File(params.driver_curl_target, mode=420)
    ranger_home = params.ranger_home
    if rolling_upgrade:
        ranger_home = format('/usr/hdp/{version}/ranger-admin')
    Execute(('cp', '--remove-destination', params.downloaded_custom_connector, os.path.join(params.ranger_home, 'ews', 'lib')), path=['/bin', '/usr/bin/'], sudo=True)
    File(os.path.join(params.ranger_home, 'ews', 'lib', params.jdbc_jar_name), mode=420)
    ModifyPropertiesFile(format('{ranger_home}/install.properties'), properties=params.config['configurations']['admin-properties'], owner=params.unix_user)
    if params.create_db_dbuser:
        Logger.info('Setting up Ranger DB and DB User')
        dba_setup = format('python {ranger_home}/dba_script.py -q')
        Execute(dba_setup, environment={'RANGER_ADMIN_HOME': ranger_home, 'JAVA_HOME': params.java_home, }, logoutput=True, user=params.unix_user)
    else:
        Logger.info('Separate DBA property not set. Assuming Ranger DB and DB User exists!')
    db_setup = format('python {ranger_home}/db_setup.py')
    Execute(db_setup, environment={'RANGER_ADMIN_HOME': ranger_home, 'JAVA_HOME': params.java_home, }, logoutput=True, user=params.unix_user)
