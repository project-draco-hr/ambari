def looking_for_pid(pattern, wait_time=1):
    '\n    Searching for pid according to given pattern of command line\n    during wait_time.\n    Wait time is required to give a time to process to be executed.\n\n    Return list of PID Items, which match the pattern.\n  '
    tstart = time.time()
    found_pids = []
    while (int((time.time() - tstart)) <= wait_time):
        sys.stdout.write('.')
        sys.stdout.flush()
        pids = [pid for pid in os.listdir(PROC_DIR) if pid.isdigit()]
        found_pids = []
        for pid in pids:
            try:
                arg = open(os.path.join(PROC_DIR, pid, PROC_CMDLINE), 'rb').read()
                if (pattern in arg):
                    found_pids += [{'pid': pid, 'exe': get_symlink_path(os.path.join(PROC_DIR, pid, PROC_EXEC)), 'cmd': arg.replace('\x00', ' ').strip(), }]
            except:
                pass
        if (wait_time == 1):
            break
        time.sleep(1)
    return found_pids
