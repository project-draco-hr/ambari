{
  Iterator<String> iterator=node.getFieldNames();
  while (iterator.hasNext()) {
    String name=iterator.next();
    JsonNode child=node.get(name);
    if (child.isArray()) {
      Iterator<JsonNode> arrayIter=child.getElements();
      Set<Map<String,Object>> arraySet=new HashSet<Map<String,Object>>();
      List<String> primitives=new ArrayList<String>();
      while (arrayIter.hasNext()) {
        JsonNode next=arrayIter.next();
        if (next.isValueNode()) {
          primitives.add(next.getTextValue());
        }
 else {
          NamedPropertySet arrayPropertySet=new NamedPropertySet(name,new HashMap<String,Object>());
          processNode(next,"",arrayPropertySet,requestInfoProps);
          arraySet.add(arrayPropertySet.getProperties());
        }
      }
      Object properties=primitives.isEmpty() ? arraySet : primitives;
      propertySet.getProperties().put(PropertyHelper.getPropertyId(path,name),properties);
    }
 else     if (child.isContainerNode()) {
      if (name.equals(BODY_TITLE)) {
        name="";
      }
      if (name.equals(REQUEST_BLOB_TITLE)) {
        propertySet.getProperties().put(PropertyHelper.getPropertyId(path,name),child.toString());
      }
 else {
        processNode(child,path.isEmpty() ? name : path + '/' + name,propertySet,requestInfoProps);
      }
    }
 else {
      if (path.equals(REQUEST_INFO_PATH)) {
        requestInfoProps.put(PropertyHelper.getPropertyId(null,name),child.asText());
      }
 else       if (path.startsWith(REQUEST_INFO_PATH)) {
        requestInfoProps.put(PropertyHelper.getPropertyId(path.substring(REQUEST_INFO_PATH.length() + SLASH.length()),name),child.asText());
      }
 else {
        propertySet.getProperties().put(PropertyHelper.getPropertyId(path.equals(BODY_TITLE) ? "" : path,name),child.asText());
      }
    }
  }
}
