@patch.object(Script, 'is_hdp_stack_greater_or_equal', new=MagicMock(return_value='2.3.0'))
@patch.object(functions, 'get_hdp_version', new=MagicMock(return_value='2.3.0.0-1234'))
def test_pre_rolling_restart_23(self):
    config_file = (self.get_src_folder() + '/test/python/stacks/2.0.6/configs/default.json')
    with open(config_file, 'r') as f:
        json_content = json.load(f)
    version = '2.3.0.0-1234'
    json_content['commandParams']['version'] = version
    mocks_dict = {}
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/historyserver.py'), classname='HistoryServer', command='pre_rolling_restart', config_dict=json_content, hdp_stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES, call_mocks=[(0, None), (0, None), (0, None)], mocks_dict=mocks_dict)
    self.assertResourceCalled('Execute', ('hdp-select set hadoop-mapreduce-historyserver %s' % version))
    self.assertResourceCalled('HdfsResource', 'hdfs:///hdp/apps/2.3.0.0-1234/mapreduce//mapreduce.tar.gz', security_enabled=False, hadoop_conf_dir='/usr/hdp/current/hadoop-client/conf', keytab=UnknownConfigurationMock(), source='/usr/hdp/current/hadoop-client/mapreduce.tar.gz', kinit_path_local='/usr/bin/kinit', user='hdfs', owner='hdfs', group='hadoop', hadoop_bin_dir='/usr/hdp/current/hadoop-client/bin', type='file', action=['create_on_execute'], mode=292)
    self.assertResourceCalled('HdfsResource', None, security_enabled=False, hadoop_bin_dir='/usr/hdp/current/hadoop-client/bin', keytab=UnknownConfigurationMock(), kinit_path_local='/usr/bin/kinit', user='hdfs', action=['execute'], hadoop_conf_dir='/usr/hdp/current/hadoop-client/conf')
    self.assertNoMoreResources()
    self.assertEquals(2, mocks_dict['call'].call_count)
    self.assertEquals('conf-select create-conf-dir --package hadoop --stack-version 2.3.0.0-1234 --conf-version 0', mocks_dict['call'].call_args_list[0][0][0])
    self.assertEquals('conf-select set-conf-dir --package hadoop --stack-version 2.3.0.0-1234 --conf-version 0', mocks_dict['call'].call_args_list[1][0][0])
