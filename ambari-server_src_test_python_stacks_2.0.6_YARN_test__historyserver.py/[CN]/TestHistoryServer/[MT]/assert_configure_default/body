def assert_configure_default(self):
    self.assertResourceCalled('HdfsDirectory', '/app-logs', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', recursive_chmod=True, owner='yarn', group='hadoop', action=['create_delayed'], mode=511, bin_dir='/usr/bin')
    self.assertResourceCalled('HdfsDirectory', '/mapred', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', owner='mapred', bin_dir='/usr/bin', action=['create_delayed'])
    self.assertResourceCalled('HdfsDirectory', '/mapred/system', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', owner='hdfs', bin_dir='/usr/bin', action=['create_delayed'])
    self.assertResourceCalled('HdfsDirectory', '/mr-history/tmp', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', mode=511, owner='mapred', group='hadoop', bin_dir='/usr/bin', action=['create_delayed'])
    self.assertResourceCalled('HdfsDirectory', '/mr-history/done', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', mode=1023, owner='mapred', group='hadoop', bin_dir='/usr/bin', action=['create_delayed'])
    self.assertResourceCalled('HdfsDirectory', None, security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', bin_dir='/usr/bin', action=['create'])
    self.assertResourceCalled('Directory', '/var/run/hadoop-yarn', owner='yarn', group='hadoop', recursive=True)
    self.assertResourceCalled('Directory', '/var/run/hadoop-yarn/yarn', owner='yarn', group='hadoop', recursive=True)
    self.assertResourceCalled('Directory', '/var/log/hadoop-yarn/yarn', owner='yarn', group='hadoop', recursive=True)
    self.assertResourceCalled('Directory', '/var/run/hadoop-mapreduce', owner='mapred', group='hadoop', recursive=True)
    self.assertResourceCalled('Directory', '/var/run/hadoop-mapreduce/mapred', owner='mapred', group='hadoop', recursive=True)
    self.assertResourceCalled('Directory', '/var/log/hadoop-mapreduce', owner='mapred', group='hadoop', recursive=True)
    self.assertResourceCalled('Directory', '/var/log/hadoop-mapreduce/mapred', owner='mapred', group='hadoop', recursive=True)
    self.assertResourceCalled('Directory', '/var/log/hadoop-yarn', owner='yarn', recursive=True, ignore_failures=True)
    self.assertResourceCalled('Directory', '/hadoop/yarn', owner='yarn', group='hadoop')
    self.assertResourceCalled('XmlConfig', 'core-site.xml', owner='hdfs', group='hadoop', mode=420, conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['core-site'], configuration_attributes=self.getConfig()['configuration_attributes']['core-site'])
    self.assertResourceCalled('XmlConfig', 'mapred-site.xml', owner='yarn', group='hadoop', mode=420, conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['mapred-site'], configuration_attributes=self.getConfig()['configuration_attributes']['mapred-site'])
    self.assertResourceCalled('XmlConfig', 'yarn-site.xml', owner='yarn', group='hadoop', mode=420, conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['yarn-site'], configuration_attributes=self.getConfig()['configuration_attributes']['yarn-site'])
    self.assertResourceCalled('XmlConfig', 'capacity-scheduler.xml', owner='yarn', group='hadoop', mode=420, conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['capacity-scheduler'], configuration_attributes=self.getConfig()['configuration_attributes']['capacity-scheduler'])
    self.assertResourceCalled('File', '/etc/hadoop/conf/yarn.exclude', owner='yarn', group='hadoop')
    self.assertResourceCalled('File', '/etc/security/limits.d/yarn.conf', content=Template('yarn.conf.j2'), mode=420)
    self.assertResourceCalled('File', '/etc/security/limits.d/mapreduce.conf', content=Template('mapreduce.conf.j2'), mode=420)
    self.assertResourceCalled('File', '/etc/hadoop/conf/yarn-env.sh', content=InlineTemplate(self.getConfig()['configurations']['yarn-env']['content']), owner='yarn', group='hadoop', mode=493)
    self.assertResourceCalled('File', '/etc/hadoop/conf/mapred-env.sh', content=InlineTemplate(self.getConfig()['configurations']['mapred-env']['content']), owner='hdfs')
    self.assertResourceCalled('File', '/etc/hadoop/conf/taskcontroller.cfg', content=Template('taskcontroller.cfg.j2'), owner='hdfs')
    self.assertResourceCalled('XmlConfig', 'mapred-site.xml', owner='mapred', group='hadoop', conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['mapred-site'], configuration_attributes=self.getConfig()['configuration_attributes']['mapred-site'])
    self.assertResourceCalled('XmlConfig', 'capacity-scheduler.xml', owner='hdfs', group='hadoop', conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['capacity-scheduler'], configuration_attributes=self.getConfig()['configuration_attributes']['capacity-scheduler'])
    self.assertResourceCalled('File', '/etc/hadoop/conf/fair-scheduler.xml', owner='mapred', group='hadoop')
    self.assertResourceCalled('File', '/etc/hadoop/conf/ssl-client.xml.example', owner='mapred', group='hadoop')
    self.assertResourceCalled('File', '/etc/hadoop/conf/ssl-server.xml.example', owner='mapred', group='hadoop')
