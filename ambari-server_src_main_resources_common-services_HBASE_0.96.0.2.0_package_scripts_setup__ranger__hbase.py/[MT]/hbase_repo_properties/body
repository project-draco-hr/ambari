def hbase_repo_properties(params):
    config_dict = dict()
    config_dict['username'] = params.config['configurations']['ranger-hbase-plugin-properties']['REPOSITORY_CONFIG_USERNAME']
    config_dict['password'] = params.config['configurations']['ranger-hbase-plugin-properties']['REPOSITORY_CONFIG_PASSWORD']
    config_dict['hadoop.security.authentication'] = params.config['configurations']['core-site']['hadoop.security.authentication']
    config_dict['hbase.security.authentication'] = params.config['configurations']['hbase-site']['hbase.security.authentication']
    config_dict['hbase.zookeeper.property.clientPort'] = params.config['configurations']['hbase-site']['hbase.zookeeper.property.clientPort']
    config_dict['hbase.zookeeper.quorum'] = params.config['configurations']['hbase-site']['hbase.zookeeper.quorum']
    config_dict['zookeeper.znode.parent'] = params.config['configurations']['hbase-site']['zookeeper.znode.parent']
    if params.config['configurations']['cluster-env']['security_enabled']:
        config_dict['hbase.master.kerberos.principal'] = params.config['configurations']['hbase-site']['hbase.master.kerberos.principal']
    else:
        config_dict['hbase.master.kerberos.principal'] = ''
    repo = dict()
    repo['isActive'] = 'true'
    repo['config'] = json.dumps(config_dict)
    repo['description'] = 'hbase repo'
    repo['name'] = (params.config['clusterName'] + '_hbase')
    repo['repositoryType'] = 'Hbase'
    repo['assetType'] = '2'
    data = json.dumps(repo)
    return data
