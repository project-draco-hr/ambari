{
  AuthToLocalBuilder builder=new AuthToLocalBuilder("EXAMPLE.COM","FOOBAR.COM,HW.HDP,BAZ.NET",false);
  String existingRules="RULE:[1:$1@$0](.*@BAZ.NET)s/@.*//\n" + "RULE:[1:$1@$0](accumulo-c1@EXAMPLE.COM)s/.*/accumulo/\n" + "RULE:[1:$1@$0](ambari-qa-c1@EXAMPLE.COM)s/.*/ambari-qa/\n"+ "RULE:[1:$1@$0](hbase-c1@EXAMPLE.COM)s/.*/hbase/\n"+ "RULE:[1:$1@$0](hdfs-c1@EXAMPLE.COM)s/.*/hdfs/\n"+ "RULE:[1:$1@$0](spark-c1@EXAMPLE.COM)s/.*/spark/\n"+ "RULE:[1:$1@$0](tracer-c1@EXAMPLE.COM)s/.*/accumulo/\n"+ "RULE:[1:$1@$0](.*@EXAMPLE.COM)s/@.*//\n"+ "RULE:[1:$1@$0](.*@FOOBAR.COM)s/@.*//\n"+ "RULE:[1:$1@$0](.*@HW.HDP)s/@.*//\n"+ "RULE:[2:$1@$0](accumulo@EXAMPLE.COM)s/.*/accumulo/\n"+ "RULE:[2:$1@$0](amshbase@EXAMPLE.COM)s/.*/ams/\n"+ "RULE:[2:$1@$0](amszk@EXAMPLE.COM)s/.*/ams/\n"+ "RULE:[2:$1@$0](dn@EXAMPLE.COM)s/.*/hdfs/\n"+ "RULE:[2:$1@$0](falcon@EXAMPLE.COM)s/.*/falcon/\n"+ "RULE:[2:$1@$0](hbase@EXAMPLE.COM)s/.*/hbase/\n"+ "RULE:[2:$1@$0](hive@EXAMPLE.COM)s/.*/hive/\n"+ "RULE:[2:$1@$0](jhs@EXAMPLE.COM)s/.*/mapred/\n"+ "RULE:[2:$1@$0](nm@EXAMPLE.COM)s/.*/yarn/\n"+ "RULE:[2:$1@$0](nn@EXAMPLE.COM)s/.*/hdfs/\n"+ "RULE:[2:$1@$0](oozie@EXAMPLE.COM)s/.*/oozie/\n"+ "RULE:[2:$1@$0](rm@EXAMPLE.COM)s/.*/yarn/\n"+ "RULE:[2:$1@$0](yarn@EXAMPLE.COM)s/.*/yarn/\n"+ "DEFAULT";
  builder.addRules(existingRules);
  builder.addRule("nn/_HOST@EXAMPLE.COM","hdfs");
  builder.addRule("dn/_HOST@EXAMPLE.COM","hdfs");
  builder.addRule("rm/_HOST@EXAMPLE.COM","yarn");
  builder.addRule("yarn/_HOST@EXAMPLE.COM","yarn");
  builder.addRule("kafka/_HOST@EXAMPLE.COM",null);
  builder.addRule("hdfs-c1@EXAMPLE.COM","hdfs");
  assertEquals(existingRules,builder.generate());
}
