{
  String rules="RULE:[1:$1@$0](foobar@\\QEXAMPLE1.COM\\E$)s/.*@\\QEXAMPLE1.COM\\E$/hdfs/\n" + "RULE:[1:$1@$0](.*@\\QEXAMPLE1.COM\\E)s/@\\QEXAMPLE1.COM\\E//\n" + "RULE:[2:$1@$0](.*@\\QEXAMPLE1.COM\\E)s/@\\QEXAMPLE1.COM\\E//";
  AuthToLocalBuilder builder=new AuthToLocalBuilder("EXAMPLE.COM",Collections.<String>emptyList(),false);
  builder.addRules(rules);
  builder.addRule("nn/_HOST@EXAMPLE.COM","hdfs");
  builder.addRule("dn/_HOST@EXAMPLE.COM","hdfs");
  builder.addRule("jn/_HOST@EXAMPLE.COM","hdfs");
  builder.addRule("rm/_HOST@EXAMPLE.COM","yarn");
  builder.addRule("jhs/_HOST@EXAMPLE.COM","mapred");
  builder.addRule("hm/_HOST@EXAMPLE.COM","hbase");
  builder.addRule("rs/_HOST@EXAMPLE.COM","hbase");
  builder.addRule("ambari-qa-c1@EXAMPLE.COM","ambari-qa");
  assertEquals("RULE:[1:$1@$0](ambari-qa-c1@EXAMPLE.COM)s/.*/ambari-qa/\n" + "RULE:[1:$1@$0](.*@EXAMPLE.COM)s/@.*//\n" + "RULE:[1:$1@$0](.*@\\QEXAMPLE1.COM\\E)s/@\\QEXAMPLE1.COM\\E//\n"+ "RULE:[1:$1@$0](foobar@\\QEXAMPLE1.COM\\E$)s/.*@\\QEXAMPLE1.COM\\E$/hdfs/\n"+ "RULE:[2:$1@$0](dn@EXAMPLE.COM)s/.*/hdfs/\n"+ "RULE:[2:$1@$0](hm@EXAMPLE.COM)s/.*/hbase/\n"+ "RULE:[2:$1@$0](jhs@EXAMPLE.COM)s/.*/mapred/\n"+ "RULE:[2:$1@$0](jn@EXAMPLE.COM)s/.*/hdfs/\n"+ "RULE:[2:$1@$0](nn@EXAMPLE.COM)s/.*/hdfs/\n"+ "RULE:[2:$1@$0](rm@EXAMPLE.COM)s/.*/yarn/\n"+ "RULE:[2:$1@$0](rs@EXAMPLE.COM)s/.*/hbase/\n"+ "RULE:[2:$1@$0](.*@\\QEXAMPLE1.COM\\E)s/@\\QEXAMPLE1.COM\\E//\n"+ "DEFAULT",builder.generate());
}
