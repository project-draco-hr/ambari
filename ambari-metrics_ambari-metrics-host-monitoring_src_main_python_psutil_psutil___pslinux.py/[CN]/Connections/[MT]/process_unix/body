def process_unix(self, file, family, inodes, filter_pid=None):
    'Parse /proc/net/unix files.'
    f = open(file, 'rt')
    try:
        f.readline()
        for line in f:
            tokens = line.split()
            (_, _, _, _, type_, _, inode) = tokens[0:7]
            if (inode in inodes):
                pairs = inodes[inode]
            else:
                pairs = [(None, (-1))]
            for (pid, fd) in pairs:
                if ((filter_pid is not None) and (filter_pid != pid)):
                    continue
                else:
                    if (len(tokens) == 8):
                        path = tokens[(-1)]
                    else:
                        path = ''
                    type_ = int(type_)
                    raddr = None
                    status = _common.CONN_NONE
                    yield (fd, family, type_, path, raddr, status, pid)
    finally:
        f.close()
