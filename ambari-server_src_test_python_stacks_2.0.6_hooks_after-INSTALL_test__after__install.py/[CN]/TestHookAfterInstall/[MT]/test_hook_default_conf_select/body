@patch('shared_initialization.load_version', new=MagicMock(return_value='2.3.0.0-1243'))
@patch('resource_management.libraries.functions.conf_select.create')
@patch('resource_management.libraries.functions.conf_select.select')
@patch('os.symlink')
@patch('shutil.rmtree')
def test_hook_default_conf_select(self, rmtree_mock, symlink_mock, conf_select_select_mock, conf_select_create_mock):

    def mocked_conf_select(arg1, arg2, arg3, dry_run=False):
        return '/etc/{0}/{1}/0'.format(arg2, arg3)
    conf_select_create_mock.side_effect = mocked_conf_select
    config_file = (self.get_src_folder() + '/test/python/stacks/2.0.6/configs/default.json')
    with open(config_file, 'r') as f:
        json_content = json.load(f)
    version = '2.3.0.0-1234'
    json_content['commandParams']['version'] = version
    json_content['hostLevelParams']['stack_version'] = '2.3'
    self.executeScript('2.0.6/hooks/after-INSTALL/scripts/hook.py', classname='AfterInstallHook', command='hook', config_dict=json_content)
    self.assertResourceCalled('Execute', 'ambari-sudo.sh /usr/bin/hdp-select set all `ambari-python-wrap /usr/bin/hdp-select versions | grep ^2.3 | tail -1`', only_if='ls -d /usr/hdp/2.3*')
    self.assertResourceCalled('XmlConfig', 'core-site.xml', owner='hdfs', group='hadoop', conf_dir='/usr/hdp/current/hadoop-client/conf', configurations=self.getConfig()['configurations']['core-site'], configuration_attributes=self.getConfig()['configuration_attributes']['core-site'], only_if='ls /usr/hdp/current/hadoop-client/conf')
    package_dirs = conf_select.get_package_dirs()
    for (package, dir_defs) in package_dirs.iteritems():
        for dir_def in dir_defs:
            conf_dir = dir_def['conf_dir']
            conf_backup_dir = (conf_dir + '.backup')
            self.assertResourceCalled('Execute', ('cp', '-R', '-p', conf_dir, conf_backup_dir), not_if=('test -e ' + conf_backup_dir), sudo=True)
        for dir_def in dir_defs:
            conf_dir = dir_def['conf_dir']
            current_dir = dir_def['current_dir']
            self.assertResourceCalled('Directory', conf_dir, action=['delete'])
            self.assertResourceCalled('Link', conf_dir, to=current_dir)
        if (package in ['atlas']):
            self.assertResourceCalled('Execute', 'ambari-sudo.sh [RMF_ENV_PLACEHOLDER] -H -E cp -R --no-clobber /etc/atlas/conf.backup/* /etc/atlas/conf', only_if=('test -e ' + '/etc/atlas/conf'))
    self.assertNoMoreResources()
