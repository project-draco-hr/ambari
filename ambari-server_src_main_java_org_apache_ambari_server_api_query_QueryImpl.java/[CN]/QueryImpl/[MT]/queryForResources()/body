{
  Resource.Type resourceType=getResourceDefinition().getType();
  Predicate queryPredicate=createPredicate(getKeyValueMap(),processUserPredicate(userPredicate));
  finalizeProperties();
  Request request=createRequest();
  Set<Resource> resourceSet=new LinkedHashSet<Resource>();
  Set<Resource> providerResourceSet=new LinkedHashSet<Resource>();
  QueryResponse queryResponse=doQuery(resourceType,request,queryPredicate);
  if ((pageRequest != null || sortRequest != null) && !populateResourceRequired(resourceType)) {
    PageResponse pageResponse=clusterController.getPage(resourceType,queryResponse,request,queryPredicate,pageRequest,sortRequest);
    for (    Resource r : pageResponse.getIterable()) {
      resourceSet.add(r);
      providerResourceSet.add(r);
    }
  }
 else {
    resourceSet.addAll(queryResponse.getResources());
    providerResourceSet.addAll(queryResponse.getResources());
  }
  populatedQueryResults.put(null,new QueryResult(request,queryPredicate,userPredicate,getKeyValueMap(),new QueryResponseImpl(resourceSet)));
  queryResults.put(null,new QueryResult(request,queryPredicate,userPredicate,getKeyValueMap(),queryResponse));
  clusterController.populateResources(resourceType,providerResourceSet,request,queryPredicate);
  queryForSubResources();
}
