{
  Resource.Type resourceType=getResourceDefinition().getType();
  Predicate queryPredicate=createPredicate(getKeyValueMap(),processUserPredicate(userPredicate));
  Predicate updated=clusterController.getAmendedPredicate(resourceType,queryPredicate);
  if (null != updated) {
    queryPredicate=updated;
  }
  finalizeProperties();
  Request request=createRequest();
  Set<Resource> resourceSet=new LinkedHashSet<Resource>();
  Set<Resource> providerResourceSet=new LinkedHashSet<Resource>();
  QueryResponse queryResponse=doQuery(resourceType,request,queryPredicate,true);
  if ((pageRequest != null || sortRequest != null) && !populateResourceRequired(resourceType)) {
    PageResponse pageResponse=clusterController.getPage(resourceType,queryResponse,request,queryPredicate,pageRequest,sortRequest);
    for (    Resource r : pageResponse.getIterable()) {
      resourceSet.add(r);
      providerResourceSet.add(r);
    }
  }
 else {
    resourceSet.addAll(queryResponse.getResources());
    providerResourceSet.addAll(queryResponse.getResources());
  }
  populatedQueryResults.put(null,new QueryResult(request,queryPredicate,userPredicate,getKeyValueMap(),new QueryResponseImpl(resourceSet)));
  queryResults.put(null,new QueryResult(request,queryPredicate,userPredicate,getKeyValueMap(),queryResponse));
  if (renderer.requiresPropertyProviderInput()) {
    clusterController.populateResources(resourceType,providerResourceSet,request,queryPredicate);
  }
  if ((pageRequest != null || userPredicate != null) && !hasSubResourcePredicate() && populateResourceRequired(resourceType)) {
    QueryResponse newResponse=new QueryResponseImpl(resourceSet,queryResponse.isSortedResponse(),queryResponse.isPagedResponse(),queryResponse.getTotalResourceCount());
    PageResponse pageResponse=clusterController.getPage(resourceType,newResponse,request,queryPredicate,pageRequest,sortRequest);
    Set<Resource> newResourceSet=new LinkedHashSet<Resource>();
    for (    Resource r : pageResponse.getIterable()) {
      newResourceSet.add(r);
    }
    populatedQueryResults.put(null,new QueryResult(request,queryPredicate,userPredicate,getKeyValueMap(),new QueryResponseImpl(newResourceSet)));
  }
  queryForSubResources();
}
