{
  for (  Map.Entry<String,QueryImpl> entry : querySubResourceSet.entrySet()) {
    QueryImpl subResource=entry.getValue();
    Resource.Type resourceType=subResource.getResourceDefinition().getType();
    Request request=subResource.createRequest(!minimal);
    Request qRequest=subResource.createRequest(true);
    Set<Resource> providerResourceSet=new HashSet<Resource>();
    for (    QueryResult queryResult : queryResults.values()) {
      for (      Resource resource : queryResult.getProviderResourceSet()) {
        Map<Resource.Type,String> map=getKeyValueMap(resource,queryResult.getKeyValueMap());
        Predicate predicate=subResource.createPredicate(map);
        Set<Resource> resourceSet=new LinkedHashSet<Resource>();
        for (        Resource queryResource : subResource.doQuery(resourceType,qRequest,predicate)) {
          providerResourceSet.add(queryResource);
          resourceSet.add(queryResource);
        }
        subResource.queryResults.put(resource,new QueryResult(request,predicate,map,resourceSet));
      }
    }
    clusterController.populateResources(resourceType,providerResourceSet,qRequest,null);
    subResource.queryForSubResources();
  }
}
