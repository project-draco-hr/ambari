{
  Map<Resource,Set<Map<String,Object>>> resourcePropertyMaps=new HashMap<Resource,Set<Map<String,Object>>>();
  Map<String,String> categoryPropertyIdMap=getPropertyIdsForCategory(propertyIds,category);
  for (  Map.Entry<Resource,QueryResult> queryResultEntry : populatedQueryResults.entrySet()) {
    QueryResult queryResult=queryResultEntry.getValue();
    Resource queryParentResource=queryResultEntry.getKey();
    if (queryParentResource == parentResource) {
      Iterable<Resource> iterResource=clusterController.getIterable(resourceDefinition.getType(),queryResult.getQueryResponse(),queryResult.getRequest(),queryResult.getPredicate(),null,null);
      for (      Resource resource : iterResource) {
        Map<String,Object> resourcePropertyMap=new HashMap<String,Object>();
        for (        Map.Entry<String,String> categoryPropertyIdEntry : categoryPropertyIdMap.entrySet()) {
          Object value=resource.getPropertyValue(categoryPropertyIdEntry.getValue());
          if (value != null) {
            resourcePropertyMap.put(categoryPropertyIdEntry.getKey(),value);
          }
        }
        Set<Map<String,Object>> propertyMaps=new HashSet<Map<String,Object>>();
        for (        Map.Entry<String,QueryImpl> entry : requestedSubResources.entrySet()) {
          String subResourceCategory=category == null ? entry.getKey() : category + "/" + entry.getKey();
          QueryImpl subResource=entry.getValue();
          Map<Resource,Set<Map<String,Object>>> subResourcePropertyMaps=subResource.getJoinedResourceProperties(propertyIds,resource,subResourceCategory);
          Set<Map<String,Object>> combinedSubResourcePropertyMaps=new HashSet<Map<String,Object>>();
          for (          Set<Map<String,Object>> maps : subResourcePropertyMaps.values()) {
            combinedSubResourcePropertyMaps.addAll(maps);
          }
          propertyMaps=joinPropertyMaps(propertyMaps,combinedSubResourcePropertyMaps);
        }
        if (!resourcePropertyMap.isEmpty()) {
          if (propertyMaps.isEmpty()) {
            propertyMaps.add(resourcePropertyMap);
          }
 else {
            for (            Map<String,Object> propertyMap : propertyMaps) {
              propertyMap.putAll(resourcePropertyMap);
            }
          }
        }
        resourcePropertyMaps.put(resource,propertyMaps);
      }
    }
  }
  return resourcePropertyMaps;
}
