{
  String bindAddress=metricConfiguration.getWebappAddress();
  LOG.info("Instantiating AHSWebApp at " + bindAddress);
  try {
    Configuration conf=metricConfiguration.getMetricsConf();
    conf.set("hadoop.http.max.threads",String.valueOf(metricConfiguration.getTimelineMetricsServiceHandlerThreadCount()));
    HttpConfig.Policy policy=HttpConfig.Policy.valueOf(conf.get(TimelineMetricConfiguration.TIMELINE_SERVICE_HTTP_POLICY,HttpConfig.Policy.HTTP_ONLY.name()));
    webApp=WebApps.$for("applicationhistory",ApplicationHistoryClientService.class,ahsClientService,"ws").withHttpPolicy(conf,policy).at(bindAddress).start(new AHSWebApp(timelineStore,timelineMetricStore,ahsClientService));
  }
 catch (  Exception e) {
    String msg="AHSWebApp failed to start.";
    LOG.error(msg,e);
    throw new YarnRuntimeException(msg,e);
  }
}
