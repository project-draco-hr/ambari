{
  initClusterEntitiesWithConfigGroups();
  ClusterEntity clusterEntity=clusterDAO.findByName("c1");
  List<ConfigGroupEntity> configGroupEntities=configGroupDAO.findAllByTag("OOZIE");
  Assert.assertNotNull(configGroupEntities);
  ConfigGroupEntity configGroupEntity=configGroupEntities.get(0);
  Assert.assertNotNull(configGroupEntity);
  Assert.assertEquals("c1",configGroupEntity.getClusterEntity().getClusterName());
  Assert.assertEquals(Long.valueOf(1),configGroupEntity.getClusterEntity().getClusterId());
  Assert.assertEquals("oozie_server",configGroupEntity.getGroupName());
  Assert.assertEquals("OOZIE",configGroupEntity.getTag());
  Assert.assertEquals("oozie server",configGroupEntity.getDescription());
  List<ClusterConfigMappingEntity> clusterConfigMappingEntities=clusterDAO.getClusterConfigMappingsByStack(clusterEntity.getClusterId(),HDP_01);
  Assert.assertEquals(2,clusterConfigMappingEntities.size());
  ClusterConfigMappingEntity e1=clusterConfigMappingEntities.get(0);
  String tag1=e1.getTag();
  Assert.assertEquals("version1",tag1);
  String type1=e1.getType();
  Assert.assertEquals("oozie-site",type1);
  ClusterConfigMappingEntity e2=clusterConfigMappingEntities.get(1);
  String tag2=e2.getTag();
  Assert.assertEquals("version2",tag2);
  String type2=e2.getType();
  Assert.assertEquals("oozie-site",type2);
}
