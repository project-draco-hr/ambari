@staticmethod
def os_call(command, logoutput=None, env={}):
    shell = (not isinstance(command, list))
    print_output = ((logoutput == True) or ((logoutput == None) and Utils.verbose))
    if (not print_output):
        stdout = subprocess.PIPE
        stderr = subprocess.STDOUT
    else:
        stdout = stderr = None
    logger.info("Running '{0}'".format(command))
    proc = subprocess.Popen(command, shell=shell, stdout=stdout, stderr=stderr, env=env)
    if (not print_output):
        out = proc.communicate()[0].strip('\n')
    else:
        proc.wait()
        out = None
    code = proc.returncode
    if code:
        err_msg = ("Execution of '%s'\n returned %d. %s" % (command, code, out))
        raise OsCallFailure(err_msg)
    return out
