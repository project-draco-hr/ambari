{
  LOGGER.info("submit workflow job called");
  try {
    if (StringUtils.isEmpty(appPath)) {
      throw new RuntimeException("app path can't be empty.");
    }
    appPath=appPath.trim();
    if (!overwrite) {
      boolean fileExists=getHdfsgetApi().exists(appPath);
      LOGGER.info("FILE exists for [" + appPath + "] returned ["+ fileExists+ "]");
      if (fileExists) {
        HashMap<String,String> resp=new HashMap<String,String>();
        resp.put("status","workflow.folder.exists");
        resp.put("message","Workflow Folder exists");
        return Response.status(Response.Status.BAD_REQUEST).entity(resp).build();
      }
    }
    String workflowFile=null;
    if (appPath.endsWith(".xml")) {
      workflowFile=appPath;
    }
 else {
      workflowFile=appPath + (appPath.endsWith("/") ? "" : "/") + "workflow.xml";
    }
    postBody=formatXml(postBody);
    try {
      String filePath=createWorkflowFile(postBody,workflowFile,overwrite);
      LOGGER.info(String.format("submit workflow job done. filePath=[%s]",filePath));
    }
 catch (    org.apache.hadoop.security.AccessControlException ace) {
      HashMap<String,String> resp=new HashMap<String,String>();
      resp.put("status","workflow.oozie.error");
      resp.put("message","You dont seem to have access to folder path.");
      return Response.status(Response.Status.BAD_REQUEST).entity(resp).build();
    }
    String response=submitWorkflowJobToOozie(headers,appPath,ui.getQueryParameters());
    if (response != null && response.trim().startsWith("{")) {
      return Response.status(Response.Status.OK).entity(response).build();
    }
 else {
      HashMap<String,String> resp=new HashMap<String,String>();
      resp.put("status","workflow.oozie.error");
      resp.put("message",response);
      return Response.status(Response.Status.BAD_REQUEST).entity(resp).build();
    }
  }
 catch (  InterruptedException e) {
    throw new RuntimeException(e);
  }
catch (  Exception e) {
    LOGGER.error("Error in submit workflow",e);
    throw new RuntimeException(e);
  }
}
