{
  String nameNode="hdfs://" + viewContext.getCluster().getConfigurationValue("hdfs-site","dfs.namenode.rpc-address");
  if (!queryParams.containsKey("config.nameNode")) {
    ArrayList<String> nameNodes=new ArrayList<String>();
    LOGGER.info("Namenode===" + nameNode);
    nameNodes.add(nameNode);
    queryParams.put("config.nameNode",nameNodes);
  }
  HashMap<String,String> workflowConigs=new HashMap<String,String>();
  if (queryParams.containsKey("resourceManager") && "useDefault".equals(queryParams.getFirst("resourceManager"))) {
    String jobTrackerNode=viewContext.getCluster().getConfigurationValue("yarn-site","yarn.resourcemanager.address");
    LOGGER.info("jobTrackerNode===" + jobTrackerNode);
    workflowConigs.put("resourceManager",jobTrackerNode);
    workflowConigs.put("jobTracker",jobTrackerNode);
  }
  if (queryParams != null) {
    for (    Map.Entry<String,List<String>> entry : queryParams.entrySet()) {
      if (entry.getKey().startsWith("config.")) {
        if (entry.getValue() != null && entry.getValue().size() > 0) {
          workflowConigs.put(entry.getKey().substring(7),entry.getValue().get(0));
        }
      }
    }
  }
  if (queryParams.containsKey("oozieconfig.useSystemLibPath")) {
    String useSystemLibPath=queryParams.getFirst("oozieconfig.useSystemLibPath");
    workflowConigs.put(OOZIE_USE_SYSTEM_LIBPATH_CONF_KEY,useSystemLibPath);
  }
 else {
    workflowConigs.put(OOZIE_USE_SYSTEM_LIBPATH_CONF_KEY,"true");
  }
  if (queryParams.containsKey("oozieconfig.rerunOnFailure")) {
    String rerunFailnodes=queryParams.getFirst("oozieconfig.rerunOnFailure");
    workflowConigs.put(OOZIE_WF_RERUN_FAILNODES_CONF_KEY,rerunFailnodes);
  }
 else {
    workflowConigs.put(OOZIE_WF_RERUN_FAILNODES_CONF_KEY,"true");
  }
  workflowConigs.put("user.name",viewContext.getUsername());
  workflowConigs.put(OOZIE_WF_APPLICATION_PATH_CONF_KEY,nameNode + filePath);
  String configXMl=generateConigXml(workflowConigs);
  LOGGER.info("Config xml==" + configXMl);
  HashMap<String,String> customHeaders=new HashMap<String,String>();
  customHeaders.put("Content-Type","application/xml;charset=UTF-8");
  Response serviceResponse=consumeService(headers,getServiceUri() + "/v2/jobs",HttpMethod.POST,configXMl,customHeaders);
  LOGGER.info("REsp from oozie status entity==" + serviceResponse.getEntity());
  if (serviceResponse.getEntity() instanceof String) {
    return (String)serviceResponse.getEntity();
  }
 else {
    return "success";
  }
}
