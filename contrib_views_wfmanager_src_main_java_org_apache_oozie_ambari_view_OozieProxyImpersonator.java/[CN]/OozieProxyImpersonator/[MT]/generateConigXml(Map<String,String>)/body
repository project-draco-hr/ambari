{
  DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
  DocumentBuilder db;
  try {
    db=dbf.newDocumentBuilder();
    Document doc=db.newDocument();
    Element configElement=doc.createElement("configuration");
    doc.appendChild(configElement);
    for (    Map.Entry<String,String> entry : map.entrySet()) {
      Element propElement=doc.createElement("property");
      configElement.appendChild(propElement);
      Element nameElem=doc.createElement("name");
      nameElem.setTextContent(entry.getKey());
      Element valueElem=doc.createElement("value");
      valueElem.setTextContent(entry.getValue());
      propElement.appendChild(nameElem);
      propElement.appendChild(valueElem);
    }
    DOMSource domSource=new DOMSource(doc);
    StringWriter writer=new StringWriter();
    StreamResult result=new StreamResult(writer);
    TransformerFactory tf=TransformerFactory.newInstance();
    Transformer transformer=tf.newTransformer();
    transformer.setOutputProperty(OutputKeys.INDENT,"yes");
    transformer.setOutputProperty(XML_INDENT_AMT_PROP_NAME,XML_INDENT_SPACES);
    transformer.transform(domSource,result);
    return writer.toString();
  }
 catch (  ParserConfigurationException|TransformerException e) {
    LOGGER.error("error in generating config xml",e);
    throw new RuntimeException(e);
  }
}
