{
  Map<String,String> commandParameters=getCommandParameters();
  if (null == commandParameters || commandParameters.isEmpty()) {
    return createCommandReport(0,HostRoleStatus.FAILED,"{}","","Unable to change configuration values without command parameters");
  }
  String clusterName=commandParameters.get("clusterName");
  String key=commandParameters.get("key");
  String value=commandParameters.get("value");
  String configType=commandParameters.get("type");
  if (null == clusterName || null == configType || null == key) {
    String message="cluster={0}, type={1}, key={2}";
    message=MessageFormat.format(message,clusterName,configType,key);
    return createCommandReport(0,HostRoleStatus.FAILED,"{}","",message);
  }
  Cluster cluster=m_clusters.getCluster(clusterName);
  Map<String,DesiredConfig> desiredConfigs=cluster.getDesiredConfigs();
  DesiredConfig desiredConfig=desiredConfigs.get(configType);
  Config config=cluster.getConfig(configType,desiredConfig.getTag());
  Map<String,String> propertiesToChange=new HashMap<String,String>();
  propertiesToChange.put(key,value);
  config.updateProperties(propertiesToChange);
  String serviceVersionNote="Stack Upgrade";
  m_configHelper.createConfigType(cluster,m_controller,configType,config.getProperties(),m_controller.getAuthName(),serviceVersionNote);
  String message="Updated ''{0}'' with ''{1}={2}''";
  message=MessageFormat.format(message,configType,key,value);
  return createCommandReport(0,HostRoleStatus.COMPLETED,"{}",message,"");
}
