{
  Set<NamedPropertySet> setRequestProps=request.getBody().getNamedPropertySets();
  HashMap<Resource.Type,Set<Map<String,Object>>> mapProps=new HashMap<Resource.Type,Set<Map<String,Object>>>();
  ResourceInstance resource=request.getResource();
  Resource.Type type=resource.getResourceDefinition().getType();
  ClusterController controller=getClusterController();
  String resourceKeyProperty=controller.getSchema(type).getKeyPropertyId(type);
  TreeNode<Resource> tree=queryResult.getResultTree();
  Collection<TreeNode<Resource>> treeChildren=tree.getChildren();
  for (  TreeNode<Resource> node : treeChildren) {
    Resource r=node.getObject();
    Object keyVal=r.getPropertyValue(resourceKeyProperty);
    for (    NamedPropertySet namedProps : setRequestProps) {
      Map<String,Object> mapResourceProps=new HashMap<String,Object>(namedProps.getProperties());
      Resource.Type createType=getCreateType(resource,namedProps.getName());
      mapResourceProps.put(controller.getSchema(createType).getKeyPropertyId(resource.getResourceDefinition().getType()),keyVal);
      Set<Map<String,Object>> setCreateProps=mapProps.get(createType);
      if (setCreateProps == null) {
        setCreateProps=new HashSet<Map<String,Object>>();
        mapProps.put(createType,setCreateProps);
      }
      setCreateProps.add(mapResourceProps);
    }
  }
  return mapProps;
}
