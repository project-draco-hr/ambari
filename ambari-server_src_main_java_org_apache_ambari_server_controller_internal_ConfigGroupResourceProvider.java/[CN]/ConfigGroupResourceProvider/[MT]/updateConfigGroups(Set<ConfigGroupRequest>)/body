{
  if (requests.isEmpty()) {
    LOG.warn("Received an empty requests set");
    return;
  }
  Clusters clusters=getManagementController().getClusters();
  for (  ConfigGroupRequest request : requests) {
    basicRequestValidation(request);
    Cluster cluster;
    try {
      cluster=clusters.getCluster(request.getClusterName());
    }
 catch (    ClusterNotFoundException e) {
      throw new ParentObjectNotFoundException(String.format("The cluster %s does not exist, can not update a config group",request.getClusterName()),e);
    }
    Map<Long,ConfigGroup> configGroups=cluster.getConfigGroups();
    ConfigGroup configGroup=configGroups.get(request.getId());
    if (configGroup == null) {
      throw new AmbariException("Config group not found" + ", clusterName = " + request.getClusterName() + ", groupId = "+ request.getId());
    }
    if (!configGroup.getName().equals(request.getGroupName())) {
      validateRenameRequest(request);
      configGroup.setName(request.getGroupName());
      persist(configGroup);
    }
 else {
      validateRequest(request);
      String serviceName=configGroup.getServiceName();
      String requestServiceName=cluster.getServiceForConfigTypes(request.getConfigs().keySet());
      if (serviceName != null && requestServiceName != null && !StringUtils.equals(serviceName,requestServiceName)) {
        throw new IllegalArgumentException("Config group " + configGroup.getId() + " is mapped to service "+ serviceName+ ", "+ "but request contain configs from service "+ requestServiceName);
      }
 else       if (serviceName == null && requestServiceName != null) {
        configGroup.setServiceName(requestServiceName);
        serviceName=requestServiceName;
      }
      Map<String,Host> hosts=new HashMap<String,Host>();
      if (request.getHosts() != null && !request.getHosts().isEmpty()) {
        for (        String hostname : request.getHosts()) {
          Host host=clusters.getHost(hostname);
          if (host == null) {
            throw new HostNotFoundException(hostname);
          }
          hosts.put(hostname,host);
        }
      }
      verifyHostList(cluster,hosts,request);
      configGroup.setHosts(hosts);
      configGroup.setConfigurations(request.getConfigs());
      configGroup.setName(request.getGroupName());
      configGroup.setDescription(request.getDescription());
      configGroup.setTag(request.getTag());
      persist(configGroup);
      if (serviceName != null) {
        cluster.createServiceConfigVersion(serviceName,getManagementController().getAuthName(),null,configGroup);
      }
 else {
        LOG.warn("Could not determine service name for config group {}, service config version not created",configGroup.getId());
      }
    }
  }
  getManagementController().getConfigHelper().invalidateStaleConfigsCache();
}
