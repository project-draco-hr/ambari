{
  if (request.getId() == null) {
    throw new AmbariException("Config group id is a required field.");
  }
  Clusters clusters=getManagementController().getClusters();
  Cluster cluster;
  try {
    cluster=clusters.getCluster(request.getClusterName());
  }
 catch (  ClusterNotFoundException e) {
    throw new ParentObjectNotFoundException("Attempted to delete a config group from a cluster which doesn't " + "exist",e);
  }
  configLogger.info("Deleting Config group, " + ", clusterName = " + cluster.getClusterName() + ", id = "+ request.getId()+ ", user = "+ getManagementController().getAuthName());
  ConfigGroup configGroup=cluster.getConfigGroups().get(request.getId());
  if (configGroup == null) {
    throw new ConfigGroupNotFoundException(cluster.getClusterName(),request.getId().toString());
  }
  if (StringUtils.isEmpty(configGroup.getServiceName())) {
    if (!AuthorizationHelper.isAuthorized(ResourceType.CLUSTER,cluster.getResourceId(),RoleAuthorization.CLUSTER_MANAGE_CONFIG_GROUPS)) {
      throw new AuthorizationException("The authenticated user is not authorized to delete config groups");
    }
  }
 else {
    if (!AuthorizationHelper.isAuthorized(ResourceType.CLUSTER,cluster.getResourceId(),RoleAuthorization.SERVICE_MANAGE_CONFIG_GROUPS)) {
      throw new AuthorizationException("The authenticated user is not authorized to delete config groups");
    }
  }
  cluster.deleteConfigGroup(request.getId());
}
