{
  List<String> metricNames=new ArrayList<>();
  metricNames.add("M1");
  DefaultCondition condition=new DefaultCondition(metricNames,null,null,null,null,null,null,null,true);
  StringBuilder sb=new StringBuilder();
  condition.appendMetricNameClause(sb);
  Assert.assertEquals(sb.toString(),"(METRIC_NAME IN (?))");
  Assert.assertTrue(CollectionUtils.isEqualCollection(metricNames,condition.getMetricNames()));
  metricNames.add("m2");
  condition=new DefaultCondition(metricNames,null,null,null,null,null,null,null,true);
  sb=new StringBuilder();
  condition.appendMetricNameClause(sb);
  Assert.assertEquals(sb.toString(),"(METRIC_NAME IN (?, ?))");
  Assert.assertTrue(CollectionUtils.isEqualCollection(metricNames,condition.getMetricNames()));
  condition=new DefaultCondition(metricNames,null,null,null,null,null,null,null,true);
  condition.setMetricNamesNotCondition(true);
  sb=new StringBuilder();
  condition.appendMetricNameClause(sb);
  Assert.assertEquals(sb.toString(),"(METRIC_NAME NOT IN (?, ?))");
  Assert.assertTrue(CollectionUtils.isEqualCollection(metricNames,condition.getMetricNames()));
  metricNames.clear();
  metricNames.add("disk%");
  condition=new DefaultCondition(metricNames,null,null,null,null,null,null,null,true);
  sb=new StringBuilder();
  condition.appendMetricNameClause(sb);
  Assert.assertEquals(sb.toString(),"(METRIC_NAME LIKE ?)");
  Assert.assertTrue(CollectionUtils.isEqualCollection(metricNames,condition.getMetricNames()));
  metricNames.add("cpu%");
  condition=new DefaultCondition(metricNames,null,null,null,null,null,null,null,true);
  sb=new StringBuilder();
  condition.appendMetricNameClause(sb);
  Assert.assertEquals(sb.toString(),"(METRIC_NAME LIKE ? OR METRIC_NAME LIKE ?)");
  Assert.assertTrue(CollectionUtils.isEqualCollection(metricNames,condition.getMetricNames()));
  condition=new DefaultCondition(metricNames,null,null,null,null,null,null,null,true);
  condition.setMetricNamesNotCondition(true);
  sb=new StringBuilder();
  condition.appendMetricNameClause(sb);
  Assert.assertEquals(sb.toString(),"(METRIC_NAME NOT LIKE ? AND METRIC_NAME NOT LIKE ?)");
  Assert.assertTrue(CollectionUtils.isEqualCollection(metricNames,condition.getMetricNames()));
  metricNames.clear();
  metricNames.add("M1");
  metricNames.add("disk%");
  metricNames.add("M2");
  condition=new DefaultCondition(metricNames,null,null,null,null,null,null,null,true);
  sb=new StringBuilder();
  condition.appendMetricNameClause(sb);
  Assert.assertEquals(sb.toString(),"(METRIC_NAME IN (?, ?) OR METRIC_NAME LIKE ?)");
  Assert.assertEquals(metricNames.get(2),"disk%");
  metricNames.clear();
  metricNames.add("disk%");
  metricNames.add("metric1");
  metricNames.add("cpu%");
  condition=new DefaultCondition(metricNames,null,null,null,null,null,null,null,true);
  sb=new StringBuilder();
  condition.setMetricNamesNotCondition(true);
  condition.appendMetricNameClause(sb);
  Assert.assertEquals(sb.toString(),"(METRIC_NAME NOT IN (?) AND METRIC_NAME NOT LIKE ? AND METRIC_NAME NOT LIKE ?)");
  Assert.assertEquals(metricNames.get(0),"metric1");
  metricNames.clear();
  condition=new DefaultCondition(metricNames,null,null,null,null,null,null,null,true);
  sb=new StringBuilder();
  condition.appendMetricNameClause(sb);
  Assert.assertEquals(sb.toString(),"");
}
