{
  TestStreamProvider streamProvider=new TestStreamProvider();
  Map<String,String> hostMap=TestHostMappingProvider.getHostMap();
  JMXPropertyProvider propertyProvider=new JMXPropertyProvider(PropertyHelper.getJMXPropertyIds(Resource.Type.HostComponent),streamProvider,hostMap);
  Resource resource=new ResourceImpl(Resource.Type.HostComponent);
  resource.setProperty(JMXPropertyProvider.HOST_COMPONENT_HOST_NAME_PROPERTY_ID,"domu-12-31-39-0e-34-e1.compute-1.internal");
  resource.setProperty(JMXPropertyProvider.HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID,"NAMENODE");
  Request request=PropertyHelper.getReadRequest(Collections.<PropertyId>emptySet());
  Assert.assertEquals(1,propertyProvider.populateResources(Collections.singleton(resource),request,null).size());
  Assert.assertEquals(propertyProvider.getSpec("ec2-50-17-129-192.compute-1.amazonaws.com:50070"),streamProvider.getLastSpec());
  Assert.assertEquals(1084287,resource.getPropertyValue(PropertyHelper.getPropertyId("ReceivedBytes","metrics/rpc")));
  Assert.assertEquals(173,resource.getPropertyValue(PropertyHelper.getPropertyId("CreateFileOps","metrics/dfs/namenode")));
  Assert.assertEquals(405.8686,resource.getPropertyValue(PropertyHelper.getPropertyId("memHeapUsedM","metrics/jvm")));
  resource=new ResourceImpl(Resource.Type.HostComponent);
  resource.setProperty(JMXPropertyProvider.HOST_COMPONENT_HOST_NAME_PROPERTY_ID,"domu-12-31-39-14-ee-b3.compute-1.internal");
  resource.setProperty(JMXPropertyProvider.HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID,"DATANODE");
  request=PropertyHelper.getReadRequest(Collections.<PropertyId>emptySet());
  propertyProvider.populateResources(Collections.singleton(resource),request,null);
  Assert.assertEquals(propertyProvider.getSpec("ec2-23-23-71-42.compute-1.amazonaws.com:50075"),streamProvider.getLastSpec());
  Assert.assertEquals(0,resource.getPropertyValue(PropertyHelper.getPropertyId("ReceivedBytes","metrics/rpc")));
  Assert.assertEquals(16.870667,resource.getPropertyValue(PropertyHelper.getPropertyId("memHeapUsedM","metrics/jvm")));
  resource=new ResourceImpl(Resource.Type.HostComponent);
  resource.setProperty(JMXPropertyProvider.HOST_COMPONENT_HOST_NAME_PROPERTY_ID,"domu-12-31-39-14-ee-b3.compute-1.internal");
  resource.setProperty(JMXPropertyProvider.HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID,"JOBTRACKER");
  request=PropertyHelper.getReadRequest(Collections.singleton(PropertyHelper.getPropertyId("threadsWaiting","metrics/jvm")));
  propertyProvider.populateResources(Collections.singleton(resource),request,null);
  Assert.assertEquals(propertyProvider.getSpec("ec2-23-23-71-42.compute-1.amazonaws.com:50030"),streamProvider.getLastSpec());
  Assert.assertEquals(3,PropertyHelper.getProperties(resource).size());
  Assert.assertEquals(59,resource.getPropertyValue(PropertyHelper.getPropertyId("threadsWaiting","metrics/jvm")));
  Assert.assertNull(resource.getPropertyValue(PropertyHelper.getPropertyId("gcCount","metrics/jvm")));
}
