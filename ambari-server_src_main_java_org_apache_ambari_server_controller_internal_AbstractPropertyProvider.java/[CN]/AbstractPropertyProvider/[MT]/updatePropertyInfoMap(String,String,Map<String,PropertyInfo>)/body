{
  Map<String,PropertyInfo> componentMetricMap=getComponentMetrics().get(componentName);
  propertyInfoMap.clear();
  if (componentMetricMap == null) {
    return;
  }
  PropertyInfo propertyInfo=componentMetricMap.get(propertyId);
  if (propertyInfo != null) {
    propertyInfoMap.put(propertyId,propertyInfo);
    return;
  }
  Map.Entry<String,Pattern> regexEntry=getRegexEntry(propertyId);
  if (regexEntry != null) {
    String regexKey=regexEntry.getKey();
    propertyInfo=componentMetricMap.get(regexKey);
    if (propertyInfo != null) {
      propertyInfoMap.put(regexKey,propertyInfo);
      return;
    }
  }
  if (!propertyId.endsWith("/")) {
    propertyId+="/";
  }
  for (  Map.Entry<String,PropertyInfo> entry : componentMetricMap.entrySet()) {
    if (entry.getKey().startsWith(propertyId)) {
      String key=entry.getKey();
      propertyInfoMap.put(key,entry.getValue());
    }
  }
  if (regexEntry != null) {
    String regexPattern=regexEntry.getValue().pattern();
    regexPattern+="(\\S*)";
    for (    Map.Entry<String,PropertyInfo> entry : componentMetricMap.entrySet()) {
      if (entry.getKey().matches(regexPattern)) {
        propertyInfoMap.put(entry.getKey(),entry.getValue());
      }
    }
  }
  return;
}
