{
  try {
    numberOfPreviewRows=(Integer)parseOptions.getOption(ParseOptions.OPTIONS_NUMBER_OF_PREVIEW_ROWS);
  }
 catch (  Exception e) {
  }
  int numberOfRows=numberOfPreviewRows;
  previewRows=new ArrayList<Row>(numberOfPreviewRows);
  Row headerRow=null;
  if (parseOptions.getOption(ParseOptions.OPTIONS_HEADER).equals(ParseOptions.HEADER_FIRST_RECORD)) {
    if (!this.iterator().hasNext()) {
      throw new NoSuchElementException("Cannot parse Header");
    }
    isHeaderFirstRow=true;
    headerRow=iterator().next();
    previewRows.add(headerRow);
  }
  int[][] typeCounts=null;
  Row r=null;
  int numOfCols=0;
  if (iterator().hasNext()) {
    r=iterator().next();
    numOfCols=r.getRow().length;
    typeCounts=new int[numOfCols][ColumnDescription.DataTypes.values().length];
  }
 else {
    throw new NoSuchElementException("No rows in the csv.");
  }
  while (true) {
    Object[] values=r.getRow();
    previewRows.add(r);
    if (values.length != numOfCols)     throw new IllegalArgumentException("Illegal number of cols for row : " + r);
    for (int colNum=0; colNum < values.length; colNum++) {
      ColumnDescription.DataTypes type=ParseUtils.detectHiveDataType(values[colNum]);
      typeCounts[colNum][type.ordinal()]++;
    }
    numberOfRows--;
    if (numberOfRows <= 0 || !iterator().hasNext())     break;
    r=iterator().next();
  }
  ;
  if (previewRows.size() <= 0)   throw new NoSuchElementException("Does not contain any rows.");
  header=new ArrayList<ColumnDescription>(numOfCols);
  for (int colNum=0; colNum < numOfCols; colNum++) {
    int dataTypeId=getLikelyDataType(typeCounts,colNum);
    ColumnDescription.DataTypes type=ColumnDescription.DataTypes.values()[dataTypeId];
    String colName="Column" + colNum;
    if (null != headerRow)     colName=(String)headerRow.getRow()[colNum];
    ColumnDescription cd=new ColumnDescriptionImpl(colName,type.toString(),colNum);
    header.add(cd);
  }
}
