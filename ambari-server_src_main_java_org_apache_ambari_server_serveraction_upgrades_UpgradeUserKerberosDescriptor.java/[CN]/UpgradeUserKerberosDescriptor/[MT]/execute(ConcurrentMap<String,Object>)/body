{
  HostRoleCommand hostRoleCommand=getHostRoleCommand();
  String clusterName=hostRoleCommand.getExecutionCommandWrapper().getExecutionCommand().getClusterName();
  Cluster cluster=clusters.getCluster(clusterName);
  List<String> messages=new ArrayList<String>();
  List<String> errorMessages=new ArrayList<String>();
  if (cluster != null) {
    logMessage(messages,"Obtaining the user-defined Kerberos descriptor");
    TreeMap<String,String> foreignKeys=new TreeMap<String,String>();
    foreignKeys.put("cluster",String.valueOf(cluster.getClusterId()));
    ArtifactEntity entity=artifactDAO.findByNameAndForeignKeys("kerberos_descriptor",foreignKeys);
    KerberosDescriptor userDescriptor=(entity == null) ? null : kerberosDescriptorFactory.createInstance(entity.getArtifactData());
    if (userDescriptor != null) {
      StackId originalStackId=getStackIdFromCommandParams(ORIGINAL_STACK_KEY);
      StackId targetStackId=getStackIdFromCommandParams(TARGET_STACK_KEY);
      boolean isDowngrade=isDowngrade();
      StackId newVersion=(isDowngrade) ? originalStackId : targetStackId;
      StackId previousVersion=(isDowngrade) ? targetStackId : originalStackId;
      KerberosDescriptor newDescriptor=null;
      KerberosDescriptor previousDescriptor=null;
      if (newVersion == null) {
        logErrorMessage(messages,errorMessages,"The new stack version information was not found.");
      }
 else {
        logMessage(messages,String.format("Obtaining new stack Kerberos descriptor for %s.",newVersion.toString()));
        newDescriptor=ambariMetaInfo.getKerberosDescriptor(newVersion.getStackName(),newVersion.getStackVersion());
        if (newDescriptor == null) {
          logErrorMessage(messages,errorMessages,String.format("The Kerberos descriptor for the new stack version, %s, was not found.",newVersion.toString()));
        }
      }
      if (previousVersion == null) {
        logErrorMessage(messages,errorMessages,"The previous stack version information was not found.");
      }
 else {
        logMessage(messages,String.format("Obtaining previous stack Kerberos descriptor for %s.",previousVersion.toString()));
        previousDescriptor=ambariMetaInfo.getKerberosDescriptor(previousVersion.getStackName(),previousVersion.getStackVersion());
        if (newDescriptor == null) {
          logErrorMessage(messages,errorMessages,String.format("The Kerberos descriptor for the previous stack version, %s, was not found.",previousVersion.toString()));
        }
      }
      if (errorMessages.isEmpty()) {
        logMessage(messages,"Updating the user-specified Kerberos descriptor.");
        KerberosDescriptor updatedDescriptor=KerberosDescriptorUpdateHelper.updateUserKerberosDescriptor(previousDescriptor,newDescriptor,userDescriptor);
        logMessage(messages,"Storing updated user-specified Kerberos descriptor.");
        entity.setArtifactData(updatedDescriptor.toMap());
        artifactDAO.merge(entity);
        logMessage(messages,"Successfully updated the user-specified Kerberos descriptor.");
      }
    }
 else {
      logMessage(messages,"A user-specified Kerberos descriptor was not found. No updates are necessary.");
    }
  }
 else {
    logErrorMessage(messages,errorMessages,String.format("The cluster named %s was not found.",clusterName));
  }
  if (!errorMessages.isEmpty()) {
    logErrorMessage(messages,errorMessages,"No updates have been performed due to previous issues.");
  }
  return createCommandReport(0,HostRoleStatus.COMPLETED,"{}",StringUtils.join(messages,"\n"),StringUtils.join(errorMessages,"\n"));
}
