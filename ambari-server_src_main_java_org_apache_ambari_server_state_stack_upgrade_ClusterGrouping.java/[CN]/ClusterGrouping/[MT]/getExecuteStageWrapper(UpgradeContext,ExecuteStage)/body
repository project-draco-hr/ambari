{
  String service=execution.service;
  String component=execution.component;
  ExecuteTask et=(ExecuteTask)execution.task;
  if (null != service && !service.isEmpty() && null != component && !component.isEmpty()) {
    HostsType hosts=ctx.getResolver().getMasterAndHosts(service,component);
    if (hosts != null) {
      Set<String> realHosts=new LinkedHashSet<String>(hosts.hosts);
      if (null != et.hosts && "master".equals(et.hosts) && null != hosts.master) {
        realHosts=Collections.singleton(hosts.master);
      }
      if (null != et.hosts && "any".equals(et.hosts) && !hosts.hosts.isEmpty()) {
        realHosts=Collections.singleton(hosts.hosts.iterator().next());
      }
      return new StageWrapper(StageWrapper.Type.RU_TASKS,execution.title,new TaskWrapper(service,component,realHosts,et));
    }
  }
 else   if (null == service && null == component) {
    Set<String> hostNames=new HashSet<String>();
    for (    Host host : ctx.getCluster().getHosts()) {
      hostNames.add(host.getHostName());
    }
    return new StageWrapper(StageWrapper.Type.RU_TASKS,execution.title,new TaskWrapper(service,component,hostNames,et));
  }
  return null;
}
