{
  if (null == ClusterGrouping.this.executionStages) {
    return Collections.emptyList();
  }
  List<StageWrapper> results=new ArrayList<StageWrapper>();
  if (executionStages != null) {
    for (    ExecuteStage execution : executionStages) {
      Task task=execution.task;
      StageWrapper wrapper=null;
      if (null != execution.service && !execution.service.isEmpty() && null != execution.component && !execution.component.isEmpty()) {
        HostsType hosts=m_resolver.getMasterAndHosts(execution.service,execution.component);
        if (null == hosts) {
          continue;
        }
        Set<String> realHosts=new LinkedHashSet<String>(hosts.hosts);
        if (task.getType() == Task.Type.EXECUTE) {
          ExecuteTask et=(ExecuteTask)task;
          if (null != et.hosts && "master".equals(et.hosts) && null != hosts.master) {
            realHosts=Collections.singleton(hosts.master);
          }
          wrapper=new StageWrapper(StageWrapper.Type.RU_TASKS,execution.title,new TaskWrapper(execution.service,execution.component,realHosts,task));
        }
      }
 else {
switch (task.getType()) {
case MANUAL:
case SERVER_ACTION:
          wrapper=new StageWrapper(StageWrapper.Type.SERVER_SIDE_ACTION,execution.title,new TaskWrapper(null,null,Collections.<String>emptySet(),task));
        break;
default :
      break;
  }
}
if (null != wrapper) {
  results.add(wrapper);
}
}
}
return results;
}
