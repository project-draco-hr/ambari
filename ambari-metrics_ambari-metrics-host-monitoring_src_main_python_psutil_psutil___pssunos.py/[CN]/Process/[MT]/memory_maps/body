@wrap_exceptions
def memory_maps(self):

    def toaddr(start, end):
        return ('%s-%s' % (hex(start)[2:].strip('L'), hex(end)[2:].strip('L')))
    retlist = []
    rawlist = cext.proc_memory_maps(self.pid)
    hit_enoent = False
    for item in rawlist:
        (addr, addrsize, perm, name, rss, anon, locked) = item
        addr = toaddr(addr, addrsize)
        if (not name.startswith('[')):
            try:
                name = os.readlink(('/proc/%s/path/%s' % (self.pid, name)))
            except OSError:
                err = sys.exc_info()[1]
                if (err.errno == errno.ENOENT):
                    name = ('/proc/%s/path/%s' % (self.pid, name))
                    hit_enoent = True
                else:
                    raise
        retlist.append((addr, perm, name, rss, anon, locked))
    if hit_enoent:
        os.stat(('/proc/%s' % self.pid))
    return retlist
