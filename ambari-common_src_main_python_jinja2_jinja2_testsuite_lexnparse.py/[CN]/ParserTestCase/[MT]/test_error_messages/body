def test_error_messages(self):

    def assert_error(code, expected):
        try:
            Template(code)
        except TemplateSyntaxError as e:
            assert (str(e) == expected), 'unexpected error message'
        else:
            assert False, 'that was suposed to be an error'
    assert_error('{% for item in seq %}...{% endif %}', "Encountered unknown tag 'endif'. Jinja was looking for the following tags: 'endfor' or 'else'. The innermost block that needs to be closed is 'for'.")
    assert_error('{% if foo %}{% for item in seq %}...{% endfor %}{% endfor %}', "Encountered unknown tag 'endfor'. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.")
    assert_error('{% if foo %}', "Unexpected end of template. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.")
    assert_error('{% for item in seq %}', "Unexpected end of template. Jinja was looking for the following tags: 'endfor' or 'else'. The innermost block that needs to be closed is 'for'.")
    assert_error('{% block foo-bar-baz %}', 'Block names in Jinja have to be valid Python identifiers and may not contain hypens, use an underscore instead.')
    assert_error('{% unknown_tag %}', "Encountered unknown tag 'unknown_tag'.")
