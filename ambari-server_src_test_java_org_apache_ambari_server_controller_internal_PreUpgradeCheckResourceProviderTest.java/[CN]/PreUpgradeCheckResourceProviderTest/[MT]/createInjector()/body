{
  return Guice.createInjector(new AbstractModule(){
    @Override protected void configure(){
      Provider<Clusters> clustersProvider=new TestClustersProvider();
      Provider<UpgradeHelper> upgradeHelperProvider=new TestUpgradeHelperProvider();
      CheckHelper checkHelper=new CheckHelper();
      UpgradeCheckRegistry registry=new UpgradeCheckRegistry();
      bind(AmbariManagementController.class).toInstance(createNiceMock(AmbariManagementController.class));
      bind(CheckHelper.class).toInstance(checkHelper);
      bind(Clusters.class).toProvider(TestClustersProvider.class);
      bind(DBAccessor.class).toInstance(createNiceMock(DBAccessor.class));
      bind(EntityManager.class).toInstance(createNiceMock(EntityManager.class));
      bind(OsFamily.class).toInstance(createNiceMock(OsFamily.class));
      bind(RepositoryVersionDAO.class).toInstance(createNiceMock(RepositoryVersionDAO.class));
      bind(StackManagerFactory.class).toInstance(createNiceMock(StackManagerFactory.class));
      bind(UpgradeCheckRegistry.class).toInstance(registry);
      bind(UpgradeHelper.class).toProvider(TestUpgradeHelperProvider.class);
      requestStaticInjection(PreUpgradeCheckResourceProvider.class);
    }
  }
);
}
