{
  AmbariManagementController amc=createMock(AmbariManagementController.class);
  Capture<ExecuteActionRequest> earCapture=new Capture<ExecuteActionRequest>();
  Capture<Map<String,String>> rpCapture=new Capture<Map<String,String>>();
  expect(amc.createAction(capture(earCapture),capture(rpCapture))).andReturn(null);
  Cluster cluster=createMock(Cluster.class);
  expect(cluster.getClusterName()).andReturn("c1").anyTimes();
  ServiceComponentHost sch=createMock(ServiceComponentHost.class);
  expect(sch.getClusterName()).andReturn("c1");
  expect(sch.getPassiveState()).andReturn(state);
  expect(sch.getServiceName()).andReturn("HDFS");
  expect(sch.getServiceComponentName()).andReturn("NAMENODE").anyTimes();
  expect(sch.getHostName()).andReturn("h1");
  replay(amc,cluster,sch);
  Map<String,String> map=new HashMap<String,String>();
  map.put("context","abc");
  PassiveStateHelper.createRequest(amc,sch.getClusterName(),map);
  ExecuteActionRequest ear=earCapture.getValue();
  map=rpCapture.getValue();
  Assert.assertEquals("nagios_update_ignore",ear.getActionName());
  Assert.assertEquals("ACTIONEXECUTE",ear.getCommandName());
  Assert.assertEquals("NAGIOS",ear.getServiceName());
  Assert.assertEquals("NAGIOS_SERVER",ear.getComponentName());
  Assert.assertEquals("c1",ear.getClusterName());
  Assert.assertTrue(map.containsKey("context"));
}
