def printMetric(clusterName, hostName, metricName, file, cf, start, end, resolution, pointInTime):
    if clusterName.endswith('rrds'):
        clusterName = ''
    args = [file, cf]
    if (start is not None):
        args.extend(['-s', start])
    else:
        args.extend(['-s', 'now-10m'])
    if (end is not None):
        args.extend(['-e', end])
    if (resolution is not None):
        args.extend(['-r', resolution])
    rrdMetric = rrdtool.fetch(args)
    sys.stdout.write(rrdMetric[1][0])
    sys.stdout.write('\n')
    sys.stdout.write(clusterName)
    sys.stdout.write('\n')
    sys.stdout.write(hostName)
    sys.stdout.write('\n')
    sys.stdout.write(metricName)
    sys.stdout.write('\n')
    sys.stdout.write(str(rrdMetric[0][0]))
    sys.stdout.write('\n')
    sys.stdout.write(str(rrdMetric[0][2]))
    sys.stdout.write('\n')
    if (not pointInTime):
        valueCount = 0
        lastValue = None
        for tuple in rrdMetric[2]:
            thisValue = tuple[0]
            if ((valueCount > 0) and (thisValue == lastValue)):
                valueCount += 1
            else:
                if (valueCount > 1):
                    sys.stdout.write('[~r]')
                    sys.stdout.write(str(valueCount))
                    sys.stdout.write('\n')
                if (thisValue is None):
                    sys.stdout.write('[~n]\n')
                else:
                    sys.stdout.write(str(thisValue))
                    sys.stdout.write('\n')
                valueCount = 1
                lastValue = thisValue
    else:
        value = None
        idx = (-1)
        tuple = rrdMetric[2]
        tupleLastIdx = (len(tuple) * (-1))
        while ((value is None) and (idx >= tupleLastIdx)):
            value = tuple[idx][0]
            idx -= 1
        if (value is not None):
            sys.stdout.write(str(value))
            sys.stdout.write('\n')
    sys.stdout.write('[~EOM]\n')
    return
