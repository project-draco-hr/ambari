{
  ServiceCalculatedState suggestedServiceProvider;
  Service.Type serviceType=null;
  try {
    serviceType=Service.Type.valueOf(service);
  }
 catch (  Exception e) {
    LOG.debug(String.format("Could not parse service name \"%s\", will use default state provider",service));
  }
  if (serviceType == null) {
    return DEFAULT_SERVICE_CALCULATED_STATE;
  }
  if (serviceStateProviders.containsKey(serviceType)) {
    suggestedServiceProvider=serviceStateProviders.get(serviceType);
  }
 else {
switch (serviceType) {
case HDFS:
      suggestedServiceProvider=new HDFSServiceCalculatedState();
    break;
case FLUME:
  suggestedServiceProvider=new FlumeServiceCalculatedState();
break;
case OOZIE:
suggestedServiceProvider=new OozieServiceCalculatedState();
break;
case YARN:
suggestedServiceProvider=new YARNServiceCalculatedState();
break;
case HIVE:
suggestedServiceProvider=new HiveServiceCalculatedState();
break;
case HBASE:
suggestedServiceProvider=new HBaseServiceCalculatedState();
break;
default :
suggestedServiceProvider=DEFAULT_SERVICE_CALCULATED_STATE;
break;
}
serviceStateProviders.put(serviceType,suggestedServiceProvider);
}
return suggestedServiceProvider;
}
