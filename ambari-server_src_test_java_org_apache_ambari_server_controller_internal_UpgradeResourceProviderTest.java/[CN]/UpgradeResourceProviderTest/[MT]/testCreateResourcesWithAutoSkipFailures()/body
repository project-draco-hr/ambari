{
  Cluster cluster=clusters.getCluster("c1");
  Map<String,Object> requestProps=new HashMap<String,Object>();
  requestProps.put(UpgradeResourceProvider.UPGRADE_CLUSTER_NAME,"c1");
  requestProps.put(UpgradeResourceProvider.UPGRADE_VERSION,"2.2.0.0");
  requestProps.put(UpgradeResourceProvider.UPGRADE_PACK,"upgrade_test");
  requestProps.put(UpgradeResourceProvider.UPGRADE_TYPE,UpgradeType.ROLLING.toString());
  requestProps.put(UpgradeResourceProvider.UPGRADE_SKIP_FAILURES,Boolean.TRUE.toString());
  requestProps.put(UpgradeResourceProvider.UPGRADE_SKIP_SC_FAILURES,Boolean.TRUE.toString());
  requestProps.put(UpgradeResourceProvider.UPGRADE_SKIP_PREREQUISITE_CHECKS,Boolean.TRUE.toString());
  ResourceProvider upgradeResourceProvider=createProvider(amc);
  Request request=PropertyHelper.getCreateRequest(Collections.singleton(requestProps),null);
  upgradeResourceProvider.createResources(request);
  List<UpgradeEntity> upgrades=upgradeDao.findUpgrades(cluster.getClusterId());
  assertEquals(1,upgrades.size());
  UpgradeEntity entity=upgrades.get(0);
  assertEquals(cluster.getClusterId(),entity.getClusterId().longValue());
  List<UpgradeGroupEntity> upgradeGroups=entity.getUpgradeGroups();
  assertEquals(3,upgradeGroups.size());
  UpgradeGroupEntity zookeeperGroup=upgradeGroups.get(1);
  assertEquals("ZOOKEEPER",zookeeperGroup.getName());
  List<UpgradeItemEntity> upgradeItems=zookeeperGroup.getItems();
  assertEquals(5,upgradeItems.size());
  UpgradeItemEntity skippedFailureCheck=upgradeItems.get(upgradeItems.size() - 1);
  skippedFailureCheck.getTasks().contains(AutoSkipFailedSummaryAction.class.getName());
}
