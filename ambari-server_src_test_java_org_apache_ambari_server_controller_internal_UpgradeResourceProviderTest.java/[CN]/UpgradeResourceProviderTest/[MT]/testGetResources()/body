{
  org.apache.ambari.server.controller.spi.RequestStatus status=testCreateResources();
  Set<Resource> createdResources=status.getAssociatedResources();
  assertEquals(1,createdResources.size());
  Resource res=createdResources.iterator().next();
  Long id=(Long)res.getPropertyValue("Upgrade/request_id");
  assertNotNull(id);
  assertEquals(Long.valueOf(1),id);
  Set<String> propertyIds=new HashSet<String>();
  propertyIds.add("Upgrade");
  Predicate predicate=new PredicateBuilder().property(UpgradeResourceProvider.UPGRADE_REQUEST_ID).equals("1").and().property(UpgradeResourceProvider.UPGRADE_CLUSTER_NAME).equals("c1").toPredicate();
  Request request=PropertyHelper.getReadRequest(propertyIds);
  ResourceProvider upgradeResourceProvider=createProvider(amc);
  Set<Resource> resources=upgradeResourceProvider.getResources(request,predicate);
  assertEquals(1,resources.size());
  res=resources.iterator().next();
  assertNotNull(res.getPropertyValue("Upgrade/progress_percent"));
  assertNotNull(res.getPropertyValue("Upgrade/direction"));
  assertEquals(Direction.UPGRADE,res.getPropertyValue("Upgrade/direction"));
  propertyIds.clear();
  propertyIds.add("UpgradeGroup");
  predicate=new PredicateBuilder().property(UpgradeGroupResourceProvider.UPGRADE_REQUEST_ID).equals("1").and().property(UpgradeGroupResourceProvider.UPGRADE_CLUSTER_NAME).equals("c1").toPredicate();
  request=PropertyHelper.getReadRequest(propertyIds);
  ResourceProvider upgradeGroupResourceProvider=new UpgradeGroupResourceProvider(amc);
  resources=upgradeGroupResourceProvider.getResources(request,predicate);
  assertEquals(4,resources.size());
  res=resources.iterator().next();
  assertNotNull(res.getPropertyValue("UpgradeGroup/status"));
  assertNotNull(res.getPropertyValue("UpgradeGroup/group_id"));
  propertyIds.clear();
  propertyIds.add("UpgradeItem");
  predicate=new PredicateBuilder().property(UpgradeItemResourceProvider.UPGRADE_GROUP_ID).equals("1").and().property(UpgradeItemResourceProvider.UPGRADE_REQUEST_ID).equals("1").and().property(UpgradeItemResourceProvider.UPGRADE_CLUSTER_NAME).equals("c1").toPredicate();
  request=PropertyHelper.getReadRequest(propertyIds);
  ResourceProvider upgradeItemResourceProvider=new UpgradeItemResourceProvider(amc);
  resources=upgradeItemResourceProvider.getResources(request,predicate);
  assertEquals(2,resources.size());
  res=resources.iterator().next();
  assertNotNull(res.getPropertyValue("UpgradeItem/status"));
  propertyIds.clear();
  propertyIds.add("UpgradeItem");
  predicate=new PredicateBuilder().property(UpgradeItemResourceProvider.UPGRADE_GROUP_ID).equals("3").and().property(UpgradeItemResourceProvider.UPGRADE_REQUEST_ID).equals("1").and().property(UpgradeItemResourceProvider.UPGRADE_CLUSTER_NAME).equals("c1").toPredicate();
  request=PropertyHelper.getReadRequest(propertyIds);
  upgradeItemResourceProvider=new UpgradeItemResourceProvider(amc);
  resources=upgradeItemResourceProvider.getResources(request,predicate);
  assertEquals(1,resources.size());
  res=resources.iterator().next();
  assertEquals("Validate Partial Upgrade",res.getPropertyValue("UpgradeItem/context"));
  assertTrue(res.getPropertyValue("UpgradeItem/text").toString().startsWith("Please run"));
}
