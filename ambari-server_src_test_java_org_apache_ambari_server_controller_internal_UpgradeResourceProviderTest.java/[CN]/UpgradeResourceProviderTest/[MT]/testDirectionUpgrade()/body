{
  Cluster cluster=clusters.getCluster("c1");
  RepositoryVersionEntity repoVersionEntity=new RepositoryVersionEntity();
  repoVersionEntity.setDisplayName("My New Version 3");
  repoVersionEntity.setOperatingSystems("");
  repoVersionEntity.setStack("HDP-2.1.1");
  repoVersionEntity.setUpgradePackage("upgrade_direction");
  repoVersionEntity.setVersion("2.2.2.3");
  repoVersionDao.create(repoVersionEntity);
  Map<String,Object> requestProps=new HashMap<String,Object>();
  requestProps.put(UpgradeResourceProvider.UPGRADE_CLUSTER_NAME,"c1");
  requestProps.put(UpgradeResourceProvider.UPGRADE_VERSION,"2.2.2.3");
  ResourceProvider upgradeResourceProvider=createProvider(amc);
  Request request=PropertyHelper.getCreateRequest(Collections.singleton(requestProps),null);
  upgradeResourceProvider.createResources(request);
  List<UpgradeEntity> upgrades=upgradeDao.findUpgrades(cluster.getClusterId());
  assertEquals(1,upgrades.size());
  UpgradeEntity upgrade=upgrades.get(0);
  Long id=upgrade.getRequestId();
  assertEquals(3,upgrade.getUpgradeGroups().size());
  UpgradeGroupEntity group=upgrade.getUpgradeGroups().get(2);
  assertEquals(1,group.getItems().size());
  requestProps.put(UpgradeResourceProvider.UPGRADE_VERSION,"2.2");
  requestProps.put(UpgradeResourceProvider.UPGRADE_FROM_VERSION,"2.2.2.3");
  requestProps.put(UpgradeResourceProvider.UPGRADE_FORCE_DOWNGRADE,"true");
  request=PropertyHelper.getCreateRequest(Collections.singleton(requestProps),null);
  upgradeResourceProvider.createResources(request);
  upgrades=upgradeDao.findUpgrades(cluster.getClusterId());
  assertEquals(2,upgrades.size());
  upgrade=null;
  for (  UpgradeEntity u : upgrades) {
    if (!u.getRequestId().equals(id)) {
      upgrade=u;
    }
  }
  assertNotNull(upgrade);
  assertEquals("Downgrade groups reduced from 3 to 2",2,upgrade.getUpgradeGroups().size());
  group=upgrade.getUpgradeGroups().get(1);
  assertEquals("Execution items increased from 1 to 2",2,group.getItems().size());
}
