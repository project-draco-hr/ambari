{
  Cluster cluster=clusters.getCluster("c1");
  List<UpgradeEntity> upgrades=upgradeDao.findUpgrades(cluster.getClusterId());
  assertEquals(0,upgrades.size());
  Map<String,Object> requestProps=new HashMap<String,Object>();
  requestProps.put(UpgradeResourceProvider.UPGRADE_CLUSTER_NAME,"c1");
  requestProps.put(UpgradeResourceProvider.UPGRADE_VERSION,"2.2.2.2");
  ResourceProvider upgradeResourceProvider=createProvider(amc);
  Request request=PropertyHelper.getCreateRequest(Collections.singleton(requestProps),null);
  org.apache.ambari.server.controller.spi.RequestStatus status=upgradeResourceProvider.createResources(request);
  upgrades=upgradeDao.findUpgrades(cluster.getClusterId());
  assertEquals(1,upgrades.size());
  UpgradeEntity entity=upgrades.get(0);
  assertEquals(cluster.getClusterId(),entity.getClusterId().longValue());
  assertEquals(4,entity.getUpgradeGroups().size());
  UpgradeGroupEntity group=entity.getUpgradeGroups().get(1);
  assertEquals(4,group.getItems().size());
  assertTrue(group.getItems().get(0).getText().contains("Preparing"));
  assertTrue(group.getItems().get(1).getText().contains("Restarting"));
  assertTrue(group.getItems().get(2).getText().contains("Completing"));
  assertTrue(group.getItems().get(3).getText().contains("Service Check"));
  ActionManager am=injector.getInstance(ActionManager.class);
  List<Long> requests=am.getRequestsByStatus(RequestStatus.IN_PROGRESS,100,true);
  assertEquals(1,requests.size());
  assertEquals(requests.get(0),entity.getRequestId());
  List<Stage> stages=am.getRequestStatus(requests.get(0).longValue());
  assertEquals(8,stages.size());
  List<HostRoleCommand> tasks=am.getRequestTasks(requests.get(0).longValue());
  assertEquals(8,tasks.size());
  return status;
}
