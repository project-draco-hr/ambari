def replace_url_in_repoinfo_xml(repoinfo_xml_path, repo_id, repo_info):
    tree = ET.parse(repoinfo_xml_path)
    root = tree.getroot()
    for os_tag in root.findall('os'):
        family = os_tag.get('family', None)
        family = (family_map[family] if (family in family_map) else family)
        for repo_tag in os_tag.findall('repo'):
            repo_id_tag = repo_tag.find('repoid')
            if ((repo_id_tag is not None) and (repo_id_tag.text == repo_id)):
                baseurl_tag = repo_tag.find('baseurl')
                if ((baseurl_tag is not None) and (family in repo_info)):
                    if (family in repo_info):
                        print 'URLINFO_PROCESSOR: replacing {0} to {1} for repo id:{2} and family:{3}'.format(baseurl_tag.text, repo_info[family], repo_id, family)
                        baseurl_tag.text = repo_info[family]
    with open(repoinfo_xml_path, 'w') as out:
        out.write(XML_HEADER)
        tree.write(out)
