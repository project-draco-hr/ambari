def test_get_params_from_filesystem_JAAS(self):
    conf_dir = gettempdir()
    jaas_file = 'test_jaas.conf'
    jaas_file_path = ((conf_dir + os.sep) + jaas_file)
    with open(jaas_file_path, 'w+') as f:
        f.write('Client {\n  com.sun.security.auth.module.Krb5LoginModule required\n  useKeyTab=true\n  storeKey=true\n  useTicketCache=false\n  keyTab="/etc/security/keytabs/hbase.service.keytab"\n  principal="hbase/vp-ambari-ranger-med-0120-2.cs1cloud.internal@EXAMPLE.COM";\n};\n')
    config_file = {jaas_file: FILE_TYPE_JAAS_CONF, }
    result = get_params_from_filesystem(conf_dir, config_file)
    self.assertIn('test_jaas', result)
    self.assertIn('Client', result['test_jaas'])
    self.assertIn('com.sun.security.auth.module.Krb5LoginModule', result['test_jaas']['Client'])
    self.assertEquals('required', result['test_jaas']['Client']['com.sun.security.auth.module.Krb5LoginModule'])
    self.assertIn('useKeyTab', result['test_jaas']['Client'])
    self.assertEquals('true', result['test_jaas']['Client']['useKeyTab'])
    self.assertIn('storeKey', result['test_jaas']['Client'])
    self.assertEquals('true', result['test_jaas']['Client']['storeKey'])
    self.assertIn('useTicketCache', result['test_jaas']['Client'])
    self.assertEquals('false', result['test_jaas']['Client']['useTicketCache'])
    self.assertIn('keyTab', result['test_jaas']['Client'])
    self.assertEquals('/etc/security/keytabs/hbase.service.keytab', result['test_jaas']['Client']['keyTab'])
    self.assertIn('principal', result['test_jaas']['Client'])
    self.assertEquals('hbase/vp-ambari-ranger-med-0120-2.cs1cloud.internal@EXAMPLE.COM', result['test_jaas']['Client']['principal'])
    os.unlink(jaas_file_path)
    print result
