{
  Matcher m=PATTERN_RULE_PARSE.matcher(rule);
  if (!m.matches()) {
    throw new IllegalArgumentException("Invalid rule: " + rule);
  }
  expectedComponentCount=Integer.valueOf(m.group(1));
  String matchPattern=m.group(2);
  matchComponentCount=(matchPattern.startsWith("$") ? matchPattern.substring(1) : matchPattern).split("\\$").length;
  String patternRealm=m.group(3);
  principal=new Principal(m.group(4));
  String replacementRule=m.group(5);
  if (patternRealm != null) {
    this.rule=String.format("RULE:[%d:%s@%s](%s)%s",expectedComponentCount,matchPattern,patternRealm,principal.toString(),replacementRule);
  }
 else {
    this.rule=String.format("RULE:[%d:%s](%s)%s",expectedComponentCount,matchPattern,principal.toString(),replacementRule);
  }
}
