def test_get_bootstrap_path(self):
    http_client_mock = MagicMock()
    ssh_key = 'abc!@#$%^&*()_:"|<>?[];\'\\./'
    host_list = ['dev05.hortonworks.com', 'dev06.hortonworks.com']
    expected_path = '//bootstrap'
    expected_payload = {'hosts': ['dev05.hortonworks.com', 'dev06.hortonworks.com'], 'sshKey': 'abc!@#$%^&*()_:"|<>?[];\\\'\\\\./', }
    expected_headers = {'Content-Type': 'application/json', }
    expected_bootstrap_path = '/bootstrap/5'
    client = self.create_client(http_client_mock)
    resp = client.bootstrap_hosts(host_list, ssh_key)
    self.assertEqual(resp.get_bootstrap_path(), expected_bootstrap_path)
    http_client_mock.invoke.assert_called_with('POST', expected_path, headers=expected_headers, payload=expected_payload)
