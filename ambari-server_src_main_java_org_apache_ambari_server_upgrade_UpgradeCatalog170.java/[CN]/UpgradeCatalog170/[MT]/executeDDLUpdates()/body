{
  List<DBColumnInfo> columns;
  String dbType=getDbType();
  columns=new ArrayList<DBColumnInfo>();
  columns.add(new DBColumnInfo("principal_type_id",Integer.class,1,null,false));
  columns.add(new DBColumnInfo("principal_type_name",String.class,null,null,false));
  dbAccessor.createTable("adminprincipaltype",columns,"principal_type_id");
  dbAccessor.executeQuery("insert into adminprincipaltype (principal_type_id, principal_type_name)\n" + "  select 1, 'USER'\n" + "  union all\n"+ "  select 2, 'GROUP'",true);
  columns=new ArrayList<DBColumnInfo>();
  columns.add(new DBColumnInfo("principal_id",Long.class,null,null,false));
  columns.add(new DBColumnInfo("principal_type_id",Integer.class,1,null,false));
  dbAccessor.createTable("adminprincipal",columns,"principal_id");
  dbAccessor.executeQuery("insert into adminprincipal (principal_id, principal_type_id)\n" + "  select 1, 1",true);
  columns=new ArrayList<DBColumnInfo>();
  columns.add(new DBColumnInfo("resource_type_id",Integer.class,1,null,false));
  columns.add(new DBColumnInfo("resource_type_name",String.class,null,null,false));
  dbAccessor.createTable("adminresourcetype",columns,"resource_type_id");
  dbAccessor.executeQuery("insert into adminresourcetype (resource_type_id, resource_type_name)\n" + "  select 1, 'AMBARI'\n" + "  union all\n"+ "  select 2, 'CLUSTER'\n"+ "  union all\n"+ "  select 3, 'VIEW'",true);
  columns=new ArrayList<DBColumnInfo>();
  columns.add(new DBColumnInfo("resource_id",Long.class,null,null,false));
  columns.add(new DBColumnInfo("resource_type_id",Integer.class,1,null,false));
  dbAccessor.createTable("adminresource",columns,"resource_id");
  dbAccessor.executeQuery("insert into adminresource (resource_id, resource_type_id)\n" + "  select 1, 1",true);
  columns=new ArrayList<DBColumnInfo>();
  columns.add(new DBColumnInfo("permission_id",Long.class,null,null,false));
  columns.add(new DBColumnInfo("permission_name",String.class,null,null,false));
  columns.add(new DBColumnInfo("resource_type_id",Integer.class,1,null,false));
  dbAccessor.createTable("adminpermission",columns,"permission_id");
  dbAccessor.executeQuery("insert into adminpermission(permission_id, permission_name, resource_type_id)\n" + "  select 1, 'AMBARI.ADMIN', 1\n" + "  union all\n"+ "  select 2, 'CLUSTER.READ', 2\n"+ "  union all\n"+ "  select 3, 'CLUSTER.OPERATE', 2\n"+ "  union all\n"+ "  select 4, 'VIEW.USE', 3",true);
  columns=new ArrayList<DBColumnInfo>();
  columns.add(new DBColumnInfo("privilege_id",Long.class,null,null,false));
  columns.add(new DBColumnInfo("permission_id",Long.class,null,null,false));
  columns.add(new DBColumnInfo("resource_id",Long.class,null,null,false));
  columns.add(new DBColumnInfo("principal_id",Long.class,null,null,false));
  dbAccessor.createTable("adminprivilege",columns,"privilege_id");
  dbAccessor.executeQuery("insert into adminprivilege (privilege_id, permission_id, resource_id, principal_id)\n" + "  select 1, 1, 1, injector1",true);
  DBColumnInfo clusterConfigAttributesColumn=new DBColumnInfo("config_attributes",String.class,32000,null,true);
  dbAccessor.addColumn("clusterconfig",clusterConfigAttributesColumn);
  dbAccessor.addColumn("viewmain",new DBColumnInfo("mask",String.class,255,null,true));
  dbAccessor.addColumn("viewparameter",new DBColumnInfo("masked",Character.class,1,null,true));
  dbAccessor.addColumn("users",new DBColumnInfo("active",Integer.class,1,1,false));
  dbAccessor.addColumn("users",new DBColumnInfo("principal_id",Long.class,1,1,false));
  dbAccessor.addColumn("viewmain",new DBColumnInfo("resource_type_id",Integer.class,1,1,false));
  dbAccessor.addColumn("viewinstance",new DBColumnInfo("resource_id",Long.class,1,1,false));
  dbAccessor.addColumn("clusters",new DBColumnInfo("resource_id",Long.class,1,1,false));
  dbAccessor.addColumn("host_role_command",new DBColumnInfo("output_log",String.class,255,null,true));
  dbAccessor.addColumn("host_role_command",new DBColumnInfo("error_log",String.class,255,null,true));
  if (dbType.equals(Configuration.POSTGRES_DB_NAME) || dbType.equals(Configuration.ORACLE_DB_NAME)) {
    dbAccessor.executeQuery("UPDATE host_role_command SET output_log = ('/var/lib/ambari-agent/data/output-' || CAST(task_id AS VARCHAR(20)) || '.txt') WHERE task_id IN (SELECT task_id FROM host_role_command WHERE output_log IS NULL OR output_log = '' ORDER BY task_id DESC LIMIT 1000);");
    dbAccessor.executeQuery("UPDATE host_role_command SET error_log = ('/var/lib/ambari-agent/data/errors-' || CAST(task_id AS VARCHAR(20)) || '.txt') WHERE task_id IN (SELECT task_id FROM host_role_command WHERE error_log IS NULL OR error_log = '' ORDER BY task_id DESC LIMIT 1000);");
  }
 else   if (dbType.equals(Configuration.MYSQL_DB_NAME)) {
    dbAccessor.executeQuery("UPDATE host_role_command SET output_log = CONCAT('/var/lib/ambari-agent/data/output-', task_id, '.txt') WHERE task_id IN (SELECT task_id FROM host_role_command WHERE output_log IS NULL OR output_log = '' ORDER BY task_id DESC LIMIT 1000);");
    dbAccessor.executeQuery("UPDATE host_role_command SET error_log = CONCAT('/var/lib/ambari-agent/data/errors-', task_id, '.txt') WHERE task_id IN (SELECT task_id FROM host_role_command WHERE error_log IS NULL OR error_log = '' ORDER BY task_id DESC LIMIT 1000);");
  }
  addAlertingFrameworkDDL();
}
