{
  DirContextOperations user=super.authenticate(authentication);
  LdapServerProperties ldapServerProperties=configuration.getLdapServerProperties();
  if (StringUtils.isNotEmpty(ldapServerProperties.getAdminGroupMappingRules())) {
    setAmbariAdminAttr(user,ldapServerProperties);
  }
  String ldapUserName=user.getStringAttribute(ldapServerProperties.getUsernameAttribute());
  String loginName=authentication.getName();
  if (!ldapUserName.equals(loginName)) {
    LOG.info("User with {}='{}' logged in with login alias '{}'",ldapServerProperties.getUsernameAttribute(),ldapUserName,loginName);
    String processedLdapUserName;
    if (ldapServerProperties.isForceUsernameToLowercase()) {
      processedLdapUserName=ldapUserName.toLowerCase();
      LOG.info("Forcing ldap username to be lowercase characters: {} ==> {}",ldapUserName,processedLdapUserName);
    }
 else {
      processedLdapUserName=ldapUserName;
    }
    AuthorizationHelper.addLoginNameAlias(processedLdapUserName,loginName);
  }
  return user;
}
