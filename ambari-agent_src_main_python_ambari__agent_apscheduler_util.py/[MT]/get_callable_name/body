def get_callable_name(func):
    '\n    Returns the best available display name for the given function/callable.\n    '
    f_self = (getattr(func, '__self__', None) or getattr(func, 'im_self', None))
    if (f_self and hasattr(func, '__name__')):
        if isinstance(f_self, type):
            clsname = (getattr(f_self, '__qualname__', None) or f_self.__name__)
            return ('%s.%s' % (clsname, func.__name__))
        return ('%s.%s' % (f_self.__class__.__name__, func.__name__))
    if hasattr(func, '__call__'):
        if hasattr(func, '__name__'):
            return func.__name__
        return func.__class__.__name__
    raise TypeError(('Unable to determine a name for %s -- maybe it is not a callable?' % repr(func)))
