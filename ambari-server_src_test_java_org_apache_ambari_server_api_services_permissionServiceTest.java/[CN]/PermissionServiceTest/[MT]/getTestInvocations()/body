{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  PermissionService service=new TestPermissionService("id");
  Method m=service.getClass().getMethod("getPermission",HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{getHttpHeaders(),getUriInfo(),"id"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestPermissionService(null);
  m=service.getClass().getMethod("getPermissions",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestPermissionService("id");
  m=service.getClass().getMethod("createPermission",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"id"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,service,m,args,"body"));
  service=new TestPermissionService("id");
  m=service.getClass().getMethod("updatePermission",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"id"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,service,m,args,"body"));
  service=new TestPermissionService("id");
  m=service.getClass().getMethod("deletePermission",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"id"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,service,m,args,null));
  return listInvocations;
}
