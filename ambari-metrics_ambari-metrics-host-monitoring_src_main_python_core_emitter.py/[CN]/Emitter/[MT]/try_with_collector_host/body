def try_with_collector_host(self, collector_host, data):
    headers = {'Content-Type': 'application/json', 'Accept': '*/*', }
    connection = self.get_connection(collector_host)
    logger.debug(('message to send: %s' % data))
    retry_count = 0
    while (retry_count < self.MAX_RETRY_COUNT):
        response = self.get_response_from_submission(connection, data, headers)
        if (response and (response.status == 200)):
            return True
        else:
            logger.warn('Retrying after {0} ...'.format(self.RETRY_SLEEP_INTERVAL))
            retry_count += 1
            if (0 == self._stop_handler.wait(self.RETRY_SLEEP_INTERVAL)):
                return True
    pass
    if (retry_count >= self.MAX_RETRY_COUNT):
        self.active_collector_hosts.blacklist(collector_host)
        logger.warn('Metric collector host {0} was blacklisted.'.format(collector_host))
        return False
