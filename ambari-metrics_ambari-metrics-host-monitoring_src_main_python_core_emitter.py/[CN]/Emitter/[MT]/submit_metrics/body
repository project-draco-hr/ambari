def submit_metrics(self):
    retry_count = 0
    json_data = self.application_metric_map.flatten(None, True)
    if (json_data is None):
        logger.info('Nothing to emit, resume waiting.')
        return
    pass
    response = None
    while (retry_count < self.MAX_RETRY_COUNT):
        try:
            response = self.push_metrics(json_data)
        except Exception as e:
            logger.warn(('Error sending metrics to server. %s' % str(e)))
        pass
        if (response and (response.getcode() == 200)):
            retry_count = self.MAX_RETRY_COUNT
        else:
            logger.warn('Retrying after {0} ...'.format(self.RETRY_SLEEP_INTERVAL))
            retry_count += 1
            if (0 == self._stop_handler.wait(self.RETRY_SLEEP_INTERVAL)):
                return
        pass
    pass
