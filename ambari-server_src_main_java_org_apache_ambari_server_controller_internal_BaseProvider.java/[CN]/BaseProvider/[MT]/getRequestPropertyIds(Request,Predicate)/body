{
  Set<String> propertyIds=request.getPropertyIds();
  if (propertyIds == null || propertyIds.isEmpty()) {
    return new HashSet<String>(this.propertyIds);
  }
  propertyIds=new HashSet<String>(propertyIds);
  if (predicate != null) {
    propertyIds.addAll(PredicateHelper.getPropertyIds(predicate));
  }
  if (!this.combinedIds.containsAll(propertyIds)) {
    Set<String> keepers=new HashSet<String>();
    Set<String> unsupportedPropertyIds=new HashSet<String>(propertyIds);
    unsupportedPropertyIds.removeAll(this.combinedIds);
    for (    String unsupportedPropertyId : unsupportedPropertyIds) {
      String category=PropertyHelper.getPropertyCategory(unsupportedPropertyId);
      while (category != null) {
        if (this.propertyIds.contains(category)) {
          keepers.add(unsupportedPropertyId);
          break;
        }
        category=PropertyHelper.getPropertyCategory(category);
      }
    }
    propertyIds.retainAll(this.combinedIds);
    propertyIds.addAll(keepers);
  }
  return propertyIds;
}
