{
  int identitiesAdded=0;
  if (identities != null) {
    for (    KerberosIdentityDescriptor identity : identities) {
      KerberosPrincipalDescriptor principalDescriptor=identity.getPrincipalDescriptor();
      String principal=null;
      String principalType=null;
      String principalConfiguration=null;
      if (principalDescriptor != null) {
        principal=KerberosDescriptor.replaceVariables(principalDescriptor.getValue(),configurations);
        principalType=principalDescriptor.getType().name().toLowerCase();
        principalConfiguration=KerberosDescriptor.replaceVariables(principalDescriptor.getConfiguration(),configurations);
      }
      if (principal != null) {
        KerberosKeytabDescriptor keytabDescriptor=identity.getKeytabDescriptor();
        String keytabFilePath=null;
        String keytabFileOwnerName=null;
        String keytabFileOwnerAccess=null;
        String keytabFileGroupName=null;
        String keytabFileGroupAccess=null;
        String keytabFileConfiguration=null;
        if (keytabDescriptor != null) {
          keytabFilePath=KerberosDescriptor.replaceVariables(keytabDescriptor.getFile(),configurations);
          keytabFileOwnerName=KerberosDescriptor.replaceVariables(keytabDescriptor.getOwnerName(),configurations);
          keytabFileOwnerAccess=KerberosDescriptor.replaceVariables(keytabDescriptor.getOwnerAccess(),configurations);
          keytabFileGroupName=KerberosDescriptor.replaceVariables(keytabDescriptor.getGroupName(),configurations);
          keytabFileGroupAccess=KerberosDescriptor.replaceVariables(keytabDescriptor.getGroupAccess(),configurations);
          keytabFileConfiguration=KerberosDescriptor.replaceVariables(keytabDescriptor.getConfiguration(),configurations);
        }
        kerberosActionDataFileBuilder.addRecord(sch.getHostName(),sch.getServiceName(),sch.getServiceComponentName(),principal,principalType,principalConfiguration,keytabFilePath,keytabFileOwnerName,keytabFileOwnerAccess,keytabFileGroupName,keytabFileGroupAccess,keytabFileConfiguration);
        identitiesAdded++;
      }
    }
  }
  return identitiesAdded;
}
