{
  parseCommandLine();
  ClientConfig config=new DefaultClientConfig();
  Client client=Client.create(config);
  WebResource service=client.resource(getBaseURI());
  String blueprintName=line.getOptionValue("name");
  String file_path=line.getOptionValue("file");
  ClientResponse response;
  if (line.hasOption("revision")) {
    response=service.path("blueprints/" + blueprintName).queryParam("revision",line.getOptionValue("revision")).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  }
 else {
    response=service.path("blueprints/" + blueprintName).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  }
  if (response.getStatus() != 200) {
    System.err.println("Stack get command failed. Reason [Code: <" + response.getStatus() + ">, Message: <"+ response.getHeaders().getFirst("ErrorMessage")+ ">]");
    System.exit(-1);
  }
  Stack bp=response.getEntity(Stack.class);
  printStack(bp,file_path);
}
