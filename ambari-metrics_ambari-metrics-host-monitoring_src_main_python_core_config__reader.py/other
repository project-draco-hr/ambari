'\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n"License"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'
import ConfigParser
import StringIO
import json
import os
import ast
from ambari_commons import OSConst
from ambari_commons.os_family_impl import OsFamilyImpl
configDefaults = ConfigDefaults()
config = ConfigParser.RawConfigParser()
CONFIG_FILE_PATH = configDefaults.get_config_file_path()
METRIC_FILE_PATH = configDefaults.get_metric_file_path()
CA_CERTS_FILE_PATH = configDefaults.get_ca_certs_file_path()
OUT_DIR = os.path.join(os.sep, 'var', 'log', 'ambari-metrics-host-monitoring')
SERVER_OUT_FILE = ((OUT_DIR + os.sep) + 'ambari-metrics-host-monitoring.out')
SERVER_LOG_FILE = ((OUT_DIR + os.sep) + 'ambari-metrics-host-monitoring.log')
PID_DIR = os.path.join(os.sep, 'var', 'run', 'ambari-metrics-host-monitoring')
PID_OUT_FILE = ((PID_DIR + os.sep) + 'ambari-metrics-host-monitoring.pid')
EXITCODE_OUT_FILE = ((PID_DIR + os.sep) + 'ambari-metrics-host-monitoring.exitcode')
SERVICE_USERNAME_KEY = 'TMP_AMHM_USERNAME'
SERVICE_PASSWORD_KEY = 'TMP_AMHM_PASSWORD'
ROUND_ROBIN_FAILOVER_STRATEGY = 'round-robin'
SETUP_ACTION = 'setup'
START_ACTION = 'start'
STOP_ACTION = 'stop'
RESTART_ACTION = 'restart'
STATUS_ACTION = 'status'
AMBARI_AGENT_CONF = '/etc/ambari-agent/conf/ambari-agent.ini'
config_content = "\n[default]\ndebug_level = INFO\nhostname = localhost\nmetrics_servers = ['localhost','host1','host2']\nenable_time_threshold = false\nenable_value_threshold = false\n\n[emitter]\nsend_interval = 60\nkinit_cmd = /usr/bin/kinit -kt /etc/security/keytabs/ams.monitor.keytab amsmon/localhost\nklist_cmd = /usr/bin/klist\n\n[collector]\ncollector_sleep_interval = 5\nmax_queue_size = 5000\nfailover_strategy = round-robin\nfailover_strategy_blacklisted_interval_seconds = 60\nhost = localhost\nport = 6188\nhttps_enabled = false\n"
metric_group_info = '\n{\n   "host_metric_groups": {\n      "cpu_info": {\n         "collect_every": "15",\n         "metrics": [\n            {\n               "name": "cpu_user",\n               "value_threshold": "1.0"\n            }\n         ]\n      },\n      "disk_info": {\n         "collect_every": "30",\n         "metrics": [\n            {\n               "name": "disk_free",\n               "value_threshold": "5.0"\n            }\n         ]\n      },\n      "network_info": {\n         "collect_every": "20",\n         "metrics": [\n            {\n               "name": "bytes_out",\n               "value_threshold": "128"\n            }\n         ]\n      }\n   },\n   "process_metric_groups": {\n      "": {\n         "collect_every": "15",\n         "metrics": []\n      }\n   }\n}\n'
