def __init__(self):
    global config_content
    self.config = ConfigParser.RawConfigParser()
    if os.path.exists(CONFIG_FILE_PATH):
        self.config.read(CONFIG_FILE_PATH)
    else:
        self.config.readfp(StringIO.StringIO(config_content))
    pass
    if os.path.exists(METRIC_FILE_PATH):
        self.metric_groups = json.load(open(METRIC_FILE_PATH))
    else:
        print 'No metric configs found at {0}'.format(METRIC_FILE_PATH)
        self.metric_groups = {'host_metric_groups': [], 'process_metric_groups': [], }
    pass
    self.hostname_script = None
    ambari_agent_config = ConfigParser.RawConfigParser()
    if os.path.exists(AMBARI_AGENT_CONF):
        ambari_agent_config.read(AMBARI_AGENT_CONF)
        self.hostname_script = ambari_agent_config.get('agent', 'hostname_script')
    pass
