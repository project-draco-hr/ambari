def request_GCE_cluster(self, vms_num, docker_num, cluster_name):
    config = Config()
    config.load()
    gce_key = config.ATTRIBUTES['GCE_controller_key_file']
    gce_login = ((config.ATTRIBUTES['GCE_controller_user'] + '@') + config.ATTRIBUTES['GCE_controller_IP'])
    gce_up_cmd = ((((((('gce up ' + cluster_name) + ' ') + str(vms_num)) + ' ') + config.ATTRIBUTES['GCE_VM_type']) + ' ') + config.ATTRIBUTES['GCE_VM_OS'])
    subprocess.call(['ssh', '-o', 'StrictHostKeyChecking=no', '-i', gce_key, gce_login, gce_up_cmd])
    print 'cluster launched successufully, wait 5 seconds for cluster info ... ...'
    time.sleep(5)
    gce_info_output_file = open(config.ATTRIBUTES['GCE_info_output'], 'w')
    gce_info_cmd = ('gce info ' + cluster_name)
    subprocess.call(['ssh', '-o', 'StrictHostKeyChecking=no', '-i', gce_key, gce_login, gce_info_cmd], stdout=gce_info_output_file)
    gce_info_output_file.close()
    print ('cluster info is saved to file ' + config.ATTRIBUTES['GCE_info_output'])
    VM_IP_list = self.__extract_VM_IP__(config.ATTRIBUTES['GCE_info_output'])
    self.generate_cluster_info(VM_IP_list, cluster_name, docker_num)
    self.overwrite_to_file(config.ATTRIBUTES['cluster_info_file'])
    self.export_hostnames(config.ATTRIBUTES['Docker_hostname_info'])
