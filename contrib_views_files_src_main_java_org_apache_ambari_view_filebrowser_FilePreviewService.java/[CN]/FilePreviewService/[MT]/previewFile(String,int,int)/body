{
  LOG.info("previewing file {}, from start {}, till end {}",path,start,end);
  try {
    HdfsApi api=getApi(context);
    FileStatus status=api.getFileStatus(path);
    CompressionCodec codec=compressionCodecFactory.getCodec(status.getPath());
    InputStream stream=(codec != null) ? codec.createInputStream(api.open(path)) : api.open(path);
    int length=end - start;
    byte[] bytes=new byte[length];
    if (start != 0)     IOUtils.skip(stream,start);
    int readBytes=IOUtils.read(stream,bytes);
    boolean isFileEnd=false;
    if (readBytes < length)     isFileEnd=true;
    JSONObject response=new JSONObject();
    response.put("data",new String(bytes));
    response.put("readbytes",readBytes);
    response.put("isFileEnd",isFileEnd);
    return Response.ok(response).build();
  }
 catch (  WebApplicationException ex) {
    LOG.error("Error occurred while previewing {} : ",path,ex);
    throw ex;
  }
catch (  FileNotFoundException ex) {
    LOG.error("Error occurred while previewing {} : ",path,ex);
    throw new NotFoundFormattedException(ex.getMessage(),ex);
  }
catch (  Exception ex) {
    LOG.error("Error occurred while previewing {} : ",path,ex);
    throw new ServiceFormattedException(ex.getMessage(),ex);
  }
}
