{
  URLStreamProvider urlStreamProvider=new URLStreamProvider(URL_CONNECT_TIMEOUT,URL_READ_TIMEOUT,null,null,null);
  String query=ui.getRequestUri().getQuery();
  if (query != null && query.indexOf(QUERY_PARAMETER_URL) != -1) {
    String url=query.replaceFirst(QUERY_PARAMETER_URL,"");
    MultivaluedMap<String,String> m=ui.getQueryParameters();
    if (m.containsKey(ImpersonatorSettingImpl.DEFAULT_DO_AS_PARAM)) {
      LOG.error(INVALID_PARAM_IN_URL + url);
      return Response.status(Response.Status.BAD_REQUEST.getStatusCode()).type(MediaType.TEXT_PLAIN).entity(INVALID_PARAM_IN_URL).build();
    }
    try {
      HttpURLConnection connection=urlStreamProvider.processURL(url,requestType,body,getHeaderParamsToForward(headers));
      int responseCode=connection.getResponseCode();
      InputStream resultInputStream=null;
      if (responseCode >= HTTP_ERROR_RANGE_START) {
        resultInputStream=connection.getErrorStream();
      }
 else {
        resultInputStream=connection.getInputStream();
      }
      String contentType=connection.getContentType();
      Response.ResponseBuilder rb=Response.status(responseCode);
      if (contentType.indexOf(APPLICATION_JSON) != -1) {
        rb.entity(new Gson().fromJson(new InputStreamReader(resultInputStream),Map.class));
      }
 else {
        rb.entity(resultInputStream);
      }
      return rb.type(contentType).build();
    }
 catch (    IOException e) {
      LOG.error(ERROR_PROCESSING_URL + url,e);
      return Response.status(Response.Status.BAD_REQUEST.getStatusCode()).type(MediaType.TEXT_PLAIN).entity(e.getMessage()).build();
    }
  }
  return null;
}
