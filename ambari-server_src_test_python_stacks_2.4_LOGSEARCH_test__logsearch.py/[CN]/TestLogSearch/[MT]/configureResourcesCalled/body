def configureResourcesCalled(self):
    self.assertResourceCalled('Directory', '/var/log/ambari-logsearch-portal', owner='logsearch', group='logsearch', create_parents=True, cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/var/run/ambari-logsearch-portal', owner='logsearch', group='logsearch', create_parents=True, cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/usr/lib/ambari-logsearch-portal', owner='logsearch', group='logsearch', create_parents=True, cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/etc/ambari-logsearch-portal/conf', owner='logsearch', group='logsearch', create_parents=True, cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/etc/ambari-logsearch-portal/conf/solr_configsets', owner='logsearch', group='logsearch', create_parents=True, cd_access='a', mode=493)
    self.assertResourceCalled('File', '/var/log/ambari-logsearch-portal/logsearch.out', owner='logsearch', group='logsearch', mode=420, content='')
    self.assertResourceCalled('File', '/etc/ambari-logsearch-portal/conf/logsearch.properties', owner='logsearch', content=Template('logsearch.properties.j2'))
    self.assertResourceCalled('File', '/etc/ambari-logsearch-portal/conf/log4j.xml', owner='logsearch', content=InlineTemplate(self.getConfig()['configurations']['logsearch-log4j']['content']))
    self.assertResourceCalled('File', '/etc/ambari-logsearch-portal/conf/logsearch-env.sh', content=InlineTemplate(self.getConfig()['configurations']['logsearch-env']['content']), mode=493, owner='logsearch')
    self.assertResourceCalled('File', '/etc/ambari-logsearch-portal/conf/user_pass.json', owner='logsearch', content=InlineTemplate(self.getConfig()['configurations']['logsearch-admin-properties']['content']))
    self.assertResourceCalled('File', '/etc/ambari-logsearch-portal/conf/solr_configsets/hadoop_logs/conf/solrconfig.xml', owner='logsearch', content=InlineTemplate(self.getConfig()['configurations']['logsearch-service_logs-solrconfig']['content']))
    self.assertResourceCalled('File', '/etc/ambari-logsearch-portal/conf/solr_configsets/audit_logs/conf/solrconfig.xml', owner='logsearch', content=InlineTemplate(self.getConfig()['configurations']['logsearch-audit_logs-solrconfig']['content']))
    self.assertResourceCalledRegexp('^Execute$', '^export JAVA_HOME=/usr/jdk64/jdk1.7.0_45 ; /usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh -z c6401.ambari.apache.org/logsearch --download-config -d /tmp/solr_config_hadoop_logs_0.[0-9]* -cs hadoop_logs -rt 5 -i 10')
    self.assertResourceCalledRegexp('^Execute$', '^export JAVA_HOME=/usr/jdk64/jdk1.7.0_45 ; /usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh -z c6401.ambari.apache.org/logsearch --upload-config -d /etc/ambari-logsearch-portal/conf/solr_configsets/hadoop_logs/conf -cs hadoop_logs -rt 5 -i 10')
    self.assertResourceCalledRegexp('^Execute$', '^export JAVA_HOME=/usr/jdk64/jdk1.7.0_45 ; /usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh -z c6401.ambari.apache.org/logsearch --download-config -d /tmp/solr_config_history_0.[0-9]* -cs history -rt 5 -i 10')
    self.assertResourceCalledRegexp('^Execute$', '^export JAVA_HOME=/usr/jdk64/jdk1.7.0_45 ; /usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh -z c6401.ambari.apache.org/logsearch --upload-config -d /etc/ambari-logsearch-portal/conf/solr_configsets/history/conf -cs history -rt 5 -i 10')
    self.assertResourceCalledRegexp('^Execute$', '^export JAVA_HOME=/usr/jdk64/jdk1.7.0_45 ; /usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh -z c6401.ambari.apache.org/logsearch --download-config -d /tmp/solr_config_audit_logs_0.[0-9]* -cs audit_logs -rt 5 -i 10')
    self.assertResourceCalledRegexp('^Execute$', '^export JAVA_HOME=/usr/jdk64/jdk1.7.0_45 ; /usr/lib/ambari-logsearch-solr-client/solrCloudCli.sh -z c6401.ambari.apache.org/logsearch --upload-config -d /etc/ambari-logsearch-portal/conf/solr_configsets/audit_logs/conf -cs audit_logs -rt 5 -i 10')
    self.assertResourceCalled('Execute', ('chmod', '-R', 'ugo+r', '/etc/ambari-logsearch-portal/conf/solr_configsets'), sudo=True)
