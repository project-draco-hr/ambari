def initiate_safe_zkfc_failover():
    '\n  If this is the active namenode, initiate a safe failover and wait for it to become the standby.\n\n  If an error occurs, force a failover to happen by killing zkfc on this host. In this case, during the Restart,\n  will also have to start ZKFC manually.\n  '
    import params
    if params.security_enabled:
        Execute(format('{kinit_path_local} -kt {hdfs_user_keytab} {hdfs_principal_name}'), user=params.hdfs_user)
    active_namenode_id = None
    standby_namenode_id = None
    (active_namenodes, standby_namenodes, unknown_namenodes) = get_namenode_states(params.hdfs_site, params.security_enabled, params.hdfs_user)
    if active_namenodes:
        active_namenode_id = active_namenodes[0][0]
    if standby_namenodes:
        standby_namenode_id = standby_namenodes[0][0]
    if active_namenode_id:
        Logger.info(format('Active NameNode id: {active_namenode_id}'))
    if standby_namenode_id:
        Logger.info(format('Standby NameNode id: {standby_namenode_id}'))
    if unknown_namenodes:
        for unknown_namenode in unknown_namenodes:
            Logger.info('NameNode HA state for {0} is unknown'.format(unknown_namenode[0]))
    if ((params.namenode_id == active_namenode_id) and (params.other_namenode_id == standby_namenode_id)):
        Logger.info(format('NameNode {namenode_id} is active and NameNode {other_namenode_id} is in standby'))
        failover_command = format('hdfs haadmin -failover {namenode_id} {other_namenode_id}')
        check_standby_cmd = format('hdfs haadmin -getServiceState {namenode_id} | grep standby')
        msg = 'Rolling Upgrade - Initiating a ZKFC failover on active NameNode host {0}.'.format(params.hostname)
        Logger.info(msg)
        (code, out) = shell.call(failover_command, user=params.hdfs_user, logoutput=True)
        Logger.info(format('Rolling Upgrade - failover command returned {code}'))
        wait_for_standby = False
        if (code == 0):
            wait_for_standby = True
        else:
            was_zkfc_killed = kill_zkfc(params.hdfs_user)
            (code, out) = shell.call(check_standby_cmd, user=params.hdfs_user, logoutput=True)
            Logger.info(format('Rolling Upgrade - check for standby returned {code}'))
            if ((code == 255) and out):
                Logger.info('Rolling Upgrade - NameNode is already down.')
            elif was_zkfc_killed:
                wait_for_standby = True
        if wait_for_standby:
            Logger.info('Waiting for this NameNode to become the standby one.')
            Execute(check_standby_cmd, user=params.hdfs_user, tries=50, try_sleep=6, logoutput=True)
    else:
        msg = 'Rolling Upgrade - Skipping ZKFC failover on NameNode host {0}.'.format(params.hostname)
        Logger.info(msg)
