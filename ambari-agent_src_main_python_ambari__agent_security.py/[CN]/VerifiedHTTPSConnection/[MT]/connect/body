def connect(self):
    if (not self.two_way_ssl_required):
        try:
            sock = self.create_connection()
            self.sock = ssl.wrap_socket(sock, cert_reqs=ssl.CERT_NONE)
            logger.info('SSL connection established. Two-way SSL authentication is turned off on the server.')
        except (ssl.SSLError, AttributeError):
            self.two_way_ssl_required = True
            logger.info((((('Insecure connection to https://' + self.host) + ':') + self.port) + '/ failed. Reconnecting using two-way SSL authentication..'))
    if self.two_way_ssl_required:
        self.certMan = CertificateManager(self.config)
        self.certMan.initSecurity()
        agent_key = self.certMan.getAgentKeyName()
        agent_crt = self.certMan.getAgentCrtName()
        server_crt = self.certMan.getSrvrCrtName()
        sock = self.create_connection()
        try:
            self.sock = ssl.wrap_socket(sock, keyfile=agent_key, certfile=agent_crt, cert_reqs=ssl.CERT_REQUIRED, ca_certs=server_crt)
            logger.info('SSL connection established. Two-way SSL authentication completed successfully.')
        except ssl.SSLError as err:
            logger.error('Two-way SSL authentication failed. Ensure that server and agent certificates were signed by the same CA and restart the agent. \nIn order to receive a new agent certificate, remove existing certificate file from keys directory. As a workaround you can turn off two-way SSL authentication in server configuration(ambari.properties) \nExiting..')
            raise err
