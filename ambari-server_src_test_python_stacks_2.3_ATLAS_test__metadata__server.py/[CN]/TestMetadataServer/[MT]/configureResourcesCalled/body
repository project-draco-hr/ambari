def configureResourcesCalled(self):
    self.assertResourceCalled('Directory', '/var/run/atlas', owner='atlas', group='hadoop', recursive=True, cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/etc/atlas/conf', owner='atlas', group='hadoop', recursive=True, cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/var/log/atlas', owner='atlas', group='hadoop', recursive=True, cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/var/lib/atlas/data', owner='atlas', group='hadoop', recursive=True, cd_access='a', mode=420)
    self.assertResourceCalled('Directory', '/var/lib/atlas/server/webapp', owner='atlas', group='hadoop', recursive=True, cd_access='a', mode=420)
    appprops = dict(self.getConfig()['configurations']['application-properties'])
    appprops['metadata.http.authentication.kerberos.name.rules'] = ' \\ \n'.join(appprops['metadata.http.authentication.kerberos.name.rules'].splitlines())
    appprops['metadata.server.bind.address'] = 'c6401.ambari.apache.org'
    self.assertResourceCalled('PropertiesFile', '/etc/atlas/conf/application.properties', properties=appprops, owner='atlas', group='hadoop', mode=420)
    self.assertResourceCalled('File', '/etc/atlas/conf/metadata-env.sh', content=InlineTemplate(self.getConfig()['configurations']['metadata-env']['content']), owner='atlas', group='hadoop', mode=493)
    self.assertResourceCalled('File', '/etc/atlas/conf/log4j.xml', content=StaticFile('log4j.xml'), owner='atlas', group='hadoop', mode=420)
