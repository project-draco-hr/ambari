{
  Resource.Type type=Resource.Type.Cluster;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  Clusters clusters=createMock(Clusters.class);
  RequestStatusResponse response=createNiceMock(RequestStatusResponse.class);
  managementController.deleteCluster(AbstractResourceProviderTest.Matcher.getClusterRequest(null,"Cluster102",null,null));
  managementController.deleteCluster(AbstractResourceProviderTest.Matcher.getClusterRequest(103L,null,null,null));
  expect(managementController.getClusters()).andReturn(clusters).anyTimes();
  replay(managementController,response,clusters);
  SecurityContextHolder.getContext().setAuthentication(authentication);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  AbstractResourceProviderTest.TestObserver observer=new AbstractResourceProviderTest.TestObserver();
  ((ObservableResourceProvider)provider).addObserver(observer);
  Predicate predicate=new PredicateBuilder().property(ClusterResourceProvider.CLUSTER_NAME_PROPERTY_ID).equals("Cluster102").toPredicate();
  provider.deleteResources(new RequestImpl(null,null,null,null),predicate);
  predicate=new PredicateBuilder().property(ClusterResourceProvider.CLUSTER_ID_PROPERTY_ID).equals(103L).toPredicate();
  provider.deleteResources(new RequestImpl(null,null,null,null),predicate);
  ResourceProviderEvent lastEvent=observer.getLastEvent();
  Assert.assertNotNull(lastEvent);
  Assert.assertEquals(Resource.Type.Cluster,lastEvent.getResourceType());
  Assert.assertEquals(ResourceProviderEvent.Type.Delete,lastEvent.getType());
  Assert.assertEquals(predicate,lastEvent.getPredicate());
  Assert.assertNull(lastEvent.getRequest());
  verify(managementController,response,clusters);
}
