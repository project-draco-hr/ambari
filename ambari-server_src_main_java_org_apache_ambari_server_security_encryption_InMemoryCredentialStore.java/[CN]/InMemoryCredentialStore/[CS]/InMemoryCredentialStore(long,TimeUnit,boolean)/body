{
  CacheBuilder<Object,Object> builder=CacheBuilder.newBuilder();
  if (retentionDuration > 0) {
    if (activelyPurge) {
      ThreadFactory threadFactory=new ThreadFactory(){
        @Override public Thread newThread(        Runnable runnable){
          Thread t=Executors.defaultThreadFactory().newThread(runnable);
          if (t != null) {
            t.setName(String.format("%s active cleanup timer",InMemoryCredentialStore.class.getSimpleName()));
            t.setDaemon(true);
          }
          return t;
        }
      }
;
      Runnable runnable=new Runnable(){
        @Override public void run(){
          if (LOG.isDebugEnabled()) {
            LOG.debug("Cleaning up cache due to retention timeout of {} milliseconds",units.toMillis(retentionDuration));
          }
          cache.cleanUp();
        }
      }
;
      Executors.newSingleThreadScheduledExecutor(threadFactory).schedule(runnable,1,TimeUnit.MINUTES);
    }
    builder.expireAfterWrite(retentionDuration,units);
  }
  cache=builder.build();
}
