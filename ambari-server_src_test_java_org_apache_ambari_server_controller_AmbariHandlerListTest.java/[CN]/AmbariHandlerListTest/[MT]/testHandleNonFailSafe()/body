{
  TestHandler handler=new TestHandler();
  AmbariHandlerList.HandlerFactory handlerFactory=createNiceMock(AmbariHandlerList.HandlerFactory.class);
  ViewRegistry viewRegistry=createNiceMock(ViewRegistry.class);
  ViewEntity viewEntity=createNiceMock(ViewEntity.class);
  ClassLoader classLoader=createNiceMock(ClassLoader.class);
  Request baseRequest=createNiceMock(Request.class);
  HttpServletRequest request=createNiceMock(HttpServletRequest.class);
  HttpServletResponse response=createNiceMock(HttpServletResponse.class);
  List<Handler> handlers=new LinkedList<Handler>();
  handlers.add(handler);
  expect(viewRegistry.getDefinition("TEST","1.0.0")).andReturn(viewEntity).anyTimes();
  expect(viewEntity.getClassLoader()).andReturn(classLoader).anyTimes();
  replay(viewRegistry,viewEntity);
  AmbariHandlerList handlerList=new AmbariHandlerList(handlerFactory);
  handlerList.viewRegistry=viewRegistry;
  handlerList.handleNonFailSafe("/api/v1/views/TEST/versions/1.0.0/instances/INSTANCE_1/resources/test",baseRequest,request,response,handlers);
  Assert.assertEquals("/api/v1/views/TEST/versions/1.0.0/instances/INSTANCE_1/resources/test",handler.getTarget());
  Assert.assertEquals(classLoader,handler.getClassLoader());
  verify(viewRegistry,viewEntity);
}
