@patch.object(OSCheck, 'is_suse_family')
@patch.object(OSCheck, 'is_ubuntu_family')
@patch.object(OSCheck, 'is_redhat_family')
@patch.object(System, 'os_family', new='suse')
def test_setup_suse(self, is_redhat_family, is_ubuntu_family, is_suse_family):
    is_redhat_family.return_value = False
    is_ubuntu_family.return_value = False
    is_suse_family.return_value = True
    with Environment(test_mode=True) as env:
        MonitorWebserverProvider(MonitorWebserver('start')).action_start()
    defined_resources = env.resource_list
    expected_resources = "[MonitorWebserver['start'], Execute['grep -E 'KeepAlive (On|Off)' /etc/apache2/httpd.conf && ambari-sudo.sh [RMF_ENV_PLACEHOLDER] -H -E sed -i 's/KeepAlive Off/KeepAlive On/' /etc/apache2/httpd.conf || echo 'KeepAlive On' | ambari-sudo.sh [RMF_ENV_PLACEHOLDER] -H -E tee --append /etc/apache2/httpd.conf > /dev/null'], Execute['('/etc/init.d/apache2', 'start')']]"
    self.assertEqual(str(defined_resources), expected_resources)
