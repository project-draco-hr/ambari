def setup_component_https(component, command, property, alias):
    if (not SILENT):
        jdk_path = find_jdk()
        if (jdk_path is None):
            err = ('No JDK found, please run the "ambari-server setup" command to install a JDK automatically or install any JDK manually to ' + configDefaults.JDK_INSTALL_DIR)
            raise FatalException(1, err)
        properties = get_ambari_properties()
        use_https = (properties.get_property(property) in ['true'])
        if use_https:
            if get_YN_input((('Do you want to disable HTTPS for ' + component) + ' [y/n] (n)? '), False):
                truststore_path = get_truststore_path(properties)
                truststore_password = get_truststore_password(properties)
                run_component_https_cmd(get_delete_cert_command(jdk_path, alias, truststore_path, truststore_password))
                properties.process_pair(property, 'false')
            else:
                return
        elif get_YN_input((('Do you want to configure HTTPS for ' + component) + ' [y/n] (y)? '), True):
            truststore_type = get_truststore_type(properties)
            truststore_path = get_truststore_path(properties)
            truststore_password = get_truststore_password(properties)
            run_os_command(get_delete_cert_command(jdk_path, alias, truststore_path, truststore_password))
            import_cert_path = get_validated_filepath_input((('Enter path to ' + component) + ' Certificate: '), 'Certificate not found')
            run_component_https_cmd(get_import_cert_command(jdk_path, alias, truststore_type, import_cert_path, truststore_path, truststore_password))
            properties.process_pair(property, 'true')
        else:
            return
        conf_file = find_properties_file()
        f = open(conf_file, 'w')
        properties.store(f, (("Changed by 'ambari-server " + command) + "' command"))
    else:
        print (command + ' is not enabled in silent mode.')
