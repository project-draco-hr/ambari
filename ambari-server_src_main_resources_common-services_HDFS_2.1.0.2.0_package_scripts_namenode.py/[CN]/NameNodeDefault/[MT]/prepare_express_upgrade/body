def prepare_express_upgrade(self, env):
    '\n    During an Express Upgrade.\n    If in HA, on the Active NameNode only, examine the directory dfs.namenode.name.dir and\n    make sure that there is no "/previous" directory.\n\n    Create a list of all the DataNodes in the cluster.\n    hdfs dfsadmin -report > dfs-old-report-1.log\n\n    hdfs dfsadmin -safemode enter\n    hdfs dfsadmin -saveNamespace\n\n    Copy the checkpoint files located in ${dfs.namenode.name.dir}/current into a backup directory.\n\n    Finalize any prior HDFS upgrade,\n    hdfs dfsadmin -finalizeUpgrade\n\n    Prepare for a NameNode rolling upgrade in order to not lose any data.\n    hdfs dfsadmin -rollingUpgrade prepare\n    '
    import params
    Logger.info('Preparing the NameNodes for a NonRolling (aka Express) Upgrade.')
    if params.security_enabled:
        kinit_command = format('{params.kinit_path_local} -kt {params.hdfs_user_keytab} {params.hdfs_principal_name}')
        Execute(kinit_command, user=params.hdfs_user, logoutput=True)
    hdfs_binary = self.get_hdfs_binary()
    namenode_upgrade.prepare_upgrade_check_for_previous_dir()
    namenode_upgrade.prepare_upgrade_enter_safe_mode(hdfs_binary)
    namenode_upgrade.prepare_upgrade_save_namespace(hdfs_binary)
    namenode_upgrade.prepare_upgrade_backup_namenode_dir()
    namenode_upgrade.prepare_upgrade_finalize_previous_upgrades(hdfs_binary)
    namenode_upgrade.prepare_rolling_upgrade(hdfs_binary)
