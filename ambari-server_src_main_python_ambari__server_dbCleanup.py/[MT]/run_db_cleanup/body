def run_db_cleanup(options):
    if validate_args(options):
        return 1
    db_title = get_db_type(get_ambari_properties()).title
    confirmBackup = get_YN_input('Ambari Server configured for {0}. Confirm you have made a backup of the Ambari Server database [y/n]'.format(db_title), True)
    if (not confirmBackup):
        print_info_msg('Ambari Server Database cleanup aborted')
        return 0
    (status, stateDesc) = is_server_runing()
    if status:
        print_error_msg('The database cleanup cannot proceed while Ambari Server is running. Please shut down Ambari first.')
        return 1
    confirm = get_YN_input('Ambari server is using db type {0}. Cleanable database entries older than {1} will be cleaned up. Proceed [y/n]'.format(db_title, options.cleanup_from_date), True)
    if (not confirm):
        print_info_msg('Ambari Server Database cleanup aborted')
        return 0
    jdk_path = get_java_exe_path()
    if (jdk_path is None):
        print_error_msg('No JDK found, please run the "setup" command to install a JDK automatically or install any JDK manually to {0}'.format(configDefaults.JDK_INSTALL_DIR))
        return 1
    ensure_jdbc_driver_is_installed(options, get_ambari_properties())
    serverClassPath = ServerClassPath(get_ambari_properties(), options)
    class_path = serverClassPath.get_full_ambari_classpath_escaped_for_shell()
    ambari_user = read_ambari_user()
    current_user = ensure_can_start_under_current_user(ambari_user)
    environ = generate_env(options, ambari_user, current_user)
    print 'Cleaning up the database ...'
    command = DB_CLEANUP_CMD.format(jdk_path, class_path, options.cluster_name, options.cleanup_from_date)
    (retcode, stdout, stderr) = run_os_command(command, env=environ)
    print_info_msg(('Return code from database cleanup command, retcode = ' + str(retcode)))
    if stdout:
        print 'Console output from database cleanup command:'
        print stdout
        print 
    if stderr:
        print 'Error output from database cleanup command:'
        print stderr
        print 
    if (retcode > 0):
        print_error_msg('Error wncountered while cleaning up the Ambari Server Database. Check the ambari-server.log for details.')
    else:
        print 'Cleanup completed. Check the ambari-server.log for details.'
    return retcode
