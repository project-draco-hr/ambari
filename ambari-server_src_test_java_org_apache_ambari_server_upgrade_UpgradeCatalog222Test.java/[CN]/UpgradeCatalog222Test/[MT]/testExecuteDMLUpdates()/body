{
  Method addNewConfigurationsFromXml=AbstractUpgradeCatalog.class.getDeclaredMethod("addNewConfigurationsFromXml");
  Method updateAlerts=UpgradeCatalog222.class.getDeclaredMethod("updateAlerts");
  Method updateStormConfigs=UpgradeCatalog222.class.getDeclaredMethod("updateStormConfigs");
  Method updateAMSConfigs=UpgradeCatalog222.class.getDeclaredMethod("updateAMSConfigs");
  Method updateHiveConfigs=UpgradeCatalog222.class.getDeclaredMethod("updateHiveConfig");
  Method updateHostRoleCommands=UpgradeCatalog222.class.getDeclaredMethod("updateHostRoleCommands");
  Method updateHDFSWidget=UpgradeCatalog222.class.getDeclaredMethod("updateHDFSWidgetDefinition");
  Method updateYARNWidget=UpgradeCatalog222.class.getDeclaredMethod("updateYARNWidgetDefinition");
  Method updateHBASEWidget=UpgradeCatalog222.class.getDeclaredMethod("updateHBASEWidgetDefinition");
  Method updateCorruptedReplicaWidget=UpgradeCatalog222.class.getDeclaredMethod("updateCorruptedReplicaWidget");
  Method createNewSliderConfigVersion=UpgradeCatalog222.class.getDeclaredMethod("createNewSliderConfigVersion");
  Method updateZookeeperConfigs=UpgradeCatalog222.class.getDeclaredMethod("updateZookeeperConfigs");
  Method initializeStromAnsKafkaWidgets=UpgradeCatalog222.class.getDeclaredMethod("initializeStromAndKafkaWidgets");
  UpgradeCatalog222 upgradeCatalog222=createMockBuilder(UpgradeCatalog222.class).addMockedMethod(addNewConfigurationsFromXml).addMockedMethod(updateAlerts).addMockedMethod(updateStormConfigs).addMockedMethod(updateAMSConfigs).addMockedMethod(updateHiveConfigs).addMockedMethod(updateHostRoleCommands).addMockedMethod(updateHDFSWidget).addMockedMethod(updateYARNWidget).addMockedMethod(updateHBASEWidget).addMockedMethod(updateCorruptedReplicaWidget).addMockedMethod(createNewSliderConfigVersion).addMockedMethod(updateZookeeperConfigs).addMockedMethod(initializeStromAnsKafkaWidgets).createMock();
  upgradeCatalog222.addNewConfigurationsFromXml();
  expectLastCall().once();
  upgradeCatalog222.updateAlerts();
  expectLastCall().once();
  upgradeCatalog222.updateStormConfigs();
  expectLastCall().once();
  upgradeCatalog222.updateAMSConfigs();
  expectLastCall().once();
  upgradeCatalog222.updateHostRoleCommands();
  expectLastCall().once();
  upgradeCatalog222.updateHiveConfig();
  expectLastCall().once();
  upgradeCatalog222.updateHDFSWidgetDefinition();
  expectLastCall().once();
  upgradeCatalog222.updateYARNWidgetDefinition();
  expectLastCall().once();
  upgradeCatalog222.updateHBASEWidgetDefinition();
  expectLastCall().once();
  upgradeCatalog222.updateCorruptedReplicaWidget();
  expectLastCall().once();
  upgradeCatalog222.updateZookeeperConfigs();
  expectLastCall().once();
  upgradeCatalog222.createNewSliderConfigVersion();
  expectLastCall().once();
  upgradeCatalog222.initializeStromAndKafkaWidgets();
  expectLastCall().once();
  replay(upgradeCatalog222);
  upgradeCatalog222.executeDMLUpdates();
  verify(upgradeCatalog222);
}
