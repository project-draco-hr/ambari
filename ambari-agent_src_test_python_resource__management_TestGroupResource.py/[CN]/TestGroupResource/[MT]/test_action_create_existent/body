@patch.object(grp, 'getgrnam')
@patch.object(subprocess, 'Popen')
def test_action_create_existent(self, popen_mock, getgrnam_mock):
    subproc_mock = MagicMock()
    subproc_mock.returncode = 0
    subproc_mock.stdout.readline = MagicMock(side_effect=['OK'])
    popen_mock.return_value = subproc_mock
    getgrnam_mock.return_value = 'mapred'
    with Environment('/') as env:
        Group('mapred', action='create', gid=2, password='secure')
    self.assertEqual(popen_mock.call_count, 1)
    popen_mock.assert_called_with(['/bin/bash', '--login', '--noprofile', '-c', 'ambari-sudo.sh  PATH=/bin -H -E groupmod -p secure -g 2 mapred'], shell=False, preexec_fn=None, stderr=(-2), stdout=5, bufsize=1, env={'PATH': '/bin', }, cwd=None)
    getgrnam_mock.assert_called_with('mapred')
