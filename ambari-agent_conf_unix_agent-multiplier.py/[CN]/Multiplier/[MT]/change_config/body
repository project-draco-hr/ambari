def change_config(self, config_file, config_dict):
    '\n    Change existing configs. Will not append new configs.\n    :param config_file: Config file to modify\n    :param config_dict: Dictionary of config,value pairs to change.\n    '
    if (not os.path.exists(config_file)):
        print ('ERROR. Did not file config file: %s' % config_file)
        return
    lines = []
    with open(config_file, 'r') as f:
        lines = f.readlines()
    new_lines = []
    configs_found = set()
    configs_changed = set()
    for line in lines:
        for (config, value) in config_dict.iteritems():
            p = re.compile((config + '\\s?='))
            if p.match(line):
                configs_found.add(config)
                new_value = (((config + '=') + str(value)) + '\n')
                if (line != new_value):
                    line = new_value
                    configs_changed.add(config)
                continue
        new_lines.append(line)
    if (len(configs_found) < len(config_dict.keys())):
        missing_configs = (set(config_dict.keys()) - configs_found)
        print ('ERROR: Did not find all required configs. Missing: %s' % ', '.join(missing_configs))
        sys.exit((-1))
    if (len(configs_changed) > 0):
        print ('Making changes to file %s' % config_file)
        with open(config_file, 'w') as f:
            f.writelines(new_lines)
