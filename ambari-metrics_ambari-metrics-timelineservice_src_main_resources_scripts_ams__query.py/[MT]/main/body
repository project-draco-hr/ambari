def main(argv=None):
    signal.signal(signal.SIGINT, signal_handler)
    parser = optparse.OptionParser()
    parser.add_option('-H', '--host', dest='host', help='Ambari Metrics host')
    parser.add_option('-t', '--starttime', dest='start_time_secs', default=int(time.time()), help='start time in seconds, default value is current time')
    parser.add_option('-n', '--nodes', dest='node_names', help='nodes from cluster, used as a param to query for')
    (options, args) = parser.parse_args()
    if (options.host is None):
        print 'Ambari Metrics host name is required (--host or -h)'
        exit((-1))
    if (options.node_names is None):
        print 'cluster nodes are required (--nodes or -n)'
        exit(3)
    global start_time_secs, metrics_test_host, hostnames
    metrics_test_host = options.host
    start_time_secs = int(options.start_time_secs)
    hostnames = [options.node_names]
    while True:
        run()
        time.sleep(15)
        start_time_secs += 15
