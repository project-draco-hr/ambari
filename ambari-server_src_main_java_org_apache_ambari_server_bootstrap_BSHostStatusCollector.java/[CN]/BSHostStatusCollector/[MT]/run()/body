{
  LOG.info("Request directory " + requestIdDir);
  hostStatus=new ArrayList<BSHostStatus>();
  if (hosts == null) {
    return;
  }
  File done;
  File log;
  LOG.info("HostList for polling on " + hosts);
  for (  String host : hosts) {
    BSHostStatus status=new BSHostStatus();
    status.setHostName(host);
    done=new File(requestIdDir,host + doneFileFilter);
    log=new File(requestIdDir,host + logFileFilter);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Polling bootstrap status for host" + ", requestDir=" + requestIdDir + ", host="+ host+ ", doneFileExists="+ done.exists()+ ", logFileExists="+ log.exists());
    }
    if (!done.exists()) {
      status.setStatus("RUNNING");
    }
 else {
      status.setStatus("FAILED");
      try {
        String statusCode=FileUtils.readFileToString(done).trim();
        if (statusCode.equals("0")) {
          status.setStatus("DONE");
        }
        updateStatus(status,statusCode);
      }
 catch (      IOException e) {
        LOG.info("Error reading done file " + done);
      }
    }
    if (!log.exists()) {
      status.setLog("");
    }
 else {
      String logString="";
      try {
        logString=FileUtils.readFileToString(log);
      }
 catch (      IOException e) {
        LOG.info("Error reading log file " + log);
      }
      status.setLog(logString);
    }
    hostStatus.add(status);
  }
}
