{
  Resource.Type type=Resource.Type.Request;
  Capture<ExecuteActionRequest> actionRequest=new Capture<ExecuteActionRequest>();
  Capture<HashMap<String,String>> propertyMap=new Capture<HashMap<String,String>>();
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  RequestStatusResponse response=createNiceMock(RequestStatusResponse.class);
  expect(managementController.createAction(capture(actionRequest),capture(propertyMap))).andReturn(response).anyTimes();
  replay(managementController);
  Set<Map<String,Object>> propertySet=new LinkedHashSet<Map<String,Object>>();
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put(RequestResourceProvider.REQUEST_CLUSTER_NAME_PROPERTY_ID,"c1");
  propertySet.add(properties);
  Map<String,String> requestInfoProperties=new HashMap<String,String>();
  requestInfoProperties.put(RequestResourceProvider.SERVICE_NAME_ID,"HDFS");
  requestInfoProperties.put("/parameters/param1","value1");
  requestInfoProperties.put("/parameters/param2","value2");
  requestInfoProperties.put(RequestResourceProvider.HOSTS_ID,"host1 ,host2, host3 ");
  String[] expectedHosts=new String[]{"host1","host2","host3"};
  Map<String,String> expectedParams=new HashMap<String,String>(){
{
      put("param1","value1");
      put("param2","value2");
    }
  }
;
  Request request=PropertyHelper.getCreateRequest(propertySet,requestInfoProperties);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  try {
    provider.createResources(request);
  }
 catch (  UnsupportedOperationException ex) {
    Assert.assertTrue(ex.getMessage().contains("Either command or action must be specified"));
  }
  requestInfoProperties.put(RequestResourceProvider.COMMAND_ID,"HDFS_SERVICE_CHECK");
  requestInfoProperties.put(RequestResourceProvider.ACTION_ID,"a1");
  try {
    provider.createResources(request);
  }
 catch (  UnsupportedOperationException ex) {
    Assert.assertTrue(ex.getMessage().contains("Both command and action cannot be specified"));
  }
  requestInfoProperties.remove(RequestResourceProvider.ACTION_ID);
  provider.createResources(request);
  Assert.assertTrue(actionRequest.hasCaptured());
  Assert.assertTrue(actionRequest.getValue().isCommand());
  Assert.assertEquals(null,actionRequest.getValue().getActionName());
  Assert.assertEquals("HDFS_SERVICE_CHECK",actionRequest.getValue().getCommandName());
  Assert.assertEquals("HDFS",actionRequest.getValue().getServiceName());
  Assert.assertEquals(null,actionRequest.getValue().getComponentName());
  Assert.assertEquals(3,actionRequest.getValue().getHosts().size());
  Assert.assertArrayEquals(expectedHosts,actionRequest.getValue().getHosts().toArray());
  Assert.assertEquals(2,actionRequest.getValue().getParameters().size());
  for (  String key : expectedParams.keySet()) {
    Assert.assertEquals(expectedParams.get(key),actionRequest.getValue().getParameters().get(key));
  }
}
