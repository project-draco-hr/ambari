def startProcess(self, clusterId, clusterDefinitionRevision, component, role, script, user, result):
    global serverTracker
    oldDir = os.getcwd()
    try:
        os.chdir(self.getWorkDir(clusterId, role))
    except Exception:
        logger.warn(('%s %s %s can not switch dir for START_ACTION.' % (clusterId, component, role)))
    oldUid = os.getuid()
    try:
        if (user is not None):
            user = getpwnam(user)[2]
        else:
            user = os.getuid()
        threadLocal.uid = user
    except Exception:
        logger.warn(('%s %s %s can not switch user for START_ACTION.' % (clusterId, component, role)))
    code = 0
    commandResult = {}
    process = self.getServerKey(clusterId, clusterDefinitionRevision, component, role)
    if (not (process in serverTracker)):
        try:
            plauncher = processlauncher(script, user)
            plauncher.start()
            plauncher.blockUntilProcessCreation()
        except Exception:
            traceback.print_exc()
            logger.warn(('Can not launch process for %s %s %s' % (clusterId, component, role)))
            code = (-1)
        serverTracker[process] = plauncher
        commandResult['exitCode'] = code
        result['commandResult'] = commandResult
    try:
        os.chdir(oldDir)
    except Exception:
        logger.warn(('%s %s %s can not restore environment for START_ACTION.' % (clusterId, component, role)))
    return result
