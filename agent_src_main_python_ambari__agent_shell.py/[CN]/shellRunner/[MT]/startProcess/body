def startProcess(self, clusterId, bluePrintName, bluePrintRevision, component, role, script, user, result):
    global serverTracker
    code = 0
    commandResult = {}
    process = ((((((((clusterId + '/') + bluePrintName) + '/') + bluePrintRevision) + '/') + component) + '/') + role)
    if (not (process in serverTracker)):
        cmd = sys.executable
        tempfilename = tempfile.mktemp()
        tmp = open(tempfilename, 'w')
        tmp.write(script['script'])
        tmp.close()
        cmd = ('%s %s %s' % (cmd, tempfilename, ' '.join(script['param'])))
        child_pid = os.fork()
        if (child_pid == 0):
            p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True, close_fds=True)
            (out, err) = p.communicate()
            code = p.wait()
            os.unlink(tempfilename)
            serverTracker[process] = None
        else:
            serverTracker[process] = child_pid
            commandResult['exitCode'] = 0
        result['commandResult'] = commandResult
    return result
