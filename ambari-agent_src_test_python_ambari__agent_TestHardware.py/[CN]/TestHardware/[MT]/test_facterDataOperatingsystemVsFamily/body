@patch.object(OSCheck, 'get_os_type')
@patch.object(OSCheck, 'get_os_family')
@patch.object(OSCheck, 'get_os_version')
def test_facterDataOperatingsystemVsFamily(self, get_os_version_mock, get_os_family_mock, get_os_type_mock):
    get_os_type_mock.return_value = 'some_type_of_os'
    get_os_version_mock.return_value = '11'
    get_os_family_mock.return_value = 'redhat'
    result = Facter().facterInfo()
    self.assertEquals(result['operatingsystem'], 'some_type_of_os')
    self.assertEquals(result['osfamily'], 'redhat')
    get_os_family_mock.return_value = 'debian'
    result = Facter().facterInfo()
    self.assertEquals(result['operatingsystem'], 'some_type_of_os')
    self.assertEquals(result['osfamily'], 'debian')
    get_os_family_mock.return_value = 'suse'
    result = Facter().facterInfo()
    self.assertEquals(result['operatingsystem'], 'some_type_of_os')
    self.assertEquals(result['osfamily'], 'suse')
    get_os_family_mock.return_value = 'My_new_family'
    result = Facter().facterInfo()
    self.assertEquals(result['operatingsystem'], 'some_type_of_os')
    self.assertEquals(result['osfamily'], 'My_new_family')
