@patch.object(Hardware, '_chk_mount', new=MagicMock(return_value=True))
@patch.object(OSCheck, 'get_os_type')
@patch.object(OSCheck, 'get_os_version')
def test_build(self, get_os_version_mock, get_os_type_mock):
    get_os_type_mock.return_value = 'suse'
    get_os_version_mock.return_value = '11'
    hardware = Hardware()
    result = hardware.get()
    osdisks = hardware.osdisks()
    for dev_item in result['mounts']:
        self.assertTrue((dev_item['available'] >= 0))
        self.assertTrue((dev_item['used'] >= 0))
        self.assertTrue((dev_item['percent'] != None))
        self.assertTrue((dev_item['device'] != None))
        self.assertTrue((dev_item['mountpoint'] != None))
        self.assertTrue((dev_item['type'] != None))
        self.assertTrue((dev_item['size'] > 0))
    for os_disk_item in osdisks:
        self.assertTrue((os_disk_item['available'] >= 0))
        self.assertTrue((os_disk_item['used'] >= 0))
        self.assertTrue((os_disk_item['percent'] != None))
        self.assertTrue((os_disk_item['device'] != None))
        self.assertTrue((os_disk_item['mountpoint'] != None))
        self.assertTrue((os_disk_item['type'] != None))
        self.assertTrue((os_disk_item['size'] > 0))
    self.assertTrue((len(result['mounts']) == len(osdisks)))
