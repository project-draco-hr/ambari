@patch('fcntl.ioctl')
@patch('socket.socket')
@patch('struct.pack')
@patch('socket.inet_ntoa')
@patch.object(FacterLinux, 'get_ip_address_by_ifname')
@patch.object(Facter, 'getIpAddress')
@patch.object(FacterLinux, 'setDataIfConfigOutput')
@patch.object(OSCheck, 'get_os_type')
@patch.object(OSCheck, 'get_os_version')
def test_facterDataIfConfigOutputNone(self, get_os_version_mock, get_os_type_mock, facter_setDataIfConfigOutput_mock, getIpAddress_mock, get_ip_address_by_ifname_mock, inet_ntoa_mock, struct_pack_mock, socket_socket_mock, fcntl_ioctl_mock):
    getIpAddress_mock.return_value = '10.0.2.15'
    get_ip_address_by_ifname_mock.return_value = ''
    inet_ntoa_mock.return_value = '255.255.255.0'
    facter_setDataIfConfigOutput_mock.return_value = '\neth0      Link encap:Ethernet  HWaddr 08:00:27:C9:39:9E\n          inet6 addr: fe80::a00:27ff:fec9:399e/64 Scope:Link\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:7575 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:3463 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:9383574 (8.9 MiB)  TX bytes:231609 (226.1 KiB)\n\neth1      Link encap:Ethernet  HWaddr 08:00:27:C9:39:9E\n          inet addr:10.0.2.15  Bcast:10.0.2.255  Mask:255.255.255.0\n          inet6 addr: fe80::a00:27ff:fec9:399e/64 Scope:Link\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:7575 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:3463 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:9383574 (8.9 MiB)  TX bytes:231609 (226.1 KiB)\n\neth2      Link encap:Ethernet  HWaddr 08:00:27:9A:9A:45\n          inet addr:192.168.64.101  Bcast:192.168.64.255  Mask:255.255.255.0\n          inet6 addr: fe80::a00:27ff:fe9a:9a45/64 Scope:Link\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:180 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:89 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:18404 (17.9 KiB)  TX bytes:17483 (17.0 KiB)\n\nlo        Link encap:Local Loopback\n          inet addr:127.0.0.1  Mask:255.0.0.0\n          inet6 addr: ::1/128 Scope:Host\n          UP LOOPBACK RUNNING  MTU:16436  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0\n          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)\n    '
    get_os_type_mock.return_value = 'suse'
    get_os_version_mock.return_value = '11'
    result = Facter().facterInfo()
    self.assertTrue(get_ip_address_by_ifname_mock.called)
    self.assertEquals(result['netmask'], None)
