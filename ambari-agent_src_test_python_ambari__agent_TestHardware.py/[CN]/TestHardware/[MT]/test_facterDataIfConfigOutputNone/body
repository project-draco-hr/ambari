@patch('fcntl.ioctl')
@patch('socket.socket')
@patch('struct.pack')
@patch('socket.inet_ntoa')
@patch.object(FacterLinux, 'get_ip_address_by_ifname')
@patch.object(Facter, 'getIpAddress')
@patch.object(OSCheck, 'get_os_type')
@patch.object(OSCheck, 'get_os_version')
def test_facterDataIfConfigOutputNone(self, get_os_version_mock, get_os_type_mock, getIpAddress_mock, get_ip_address_by_ifname_mock, inet_ntoa_mock, struct_pack_mock, socket_socket_mock, fcntl_ioctl_mock):
    getIpAddress_mock.return_value = '10.0.2.15'
    get_ip_address_by_ifname_mock.return_value = ''
    inet_ntoa_mock.return_value = '255.255.255.0'
    get_os_type_mock.return_value = 'suse'
    get_os_version_mock.return_value = '11'
    result = Facter().facterInfo()
    self.assertTrue(get_ip_address_by_ifname_mock.called)
    self.assertEquals(result['netmask'], None)
