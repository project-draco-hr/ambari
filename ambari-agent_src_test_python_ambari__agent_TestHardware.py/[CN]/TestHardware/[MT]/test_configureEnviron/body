@patch('os.path.exists')
@patch.dict('os.environ', {'PATH': '', })
@patch.object(subprocess, 'Popen')
@patch.object(Hardware, 'facterInfo')
def test_configureEnviron(self, hrdware_facterinfo_mock, subproc_popen, os_path_exists_mock):
    config = AmbariConfig().getConfig()
    tmpdir = tempfile.gettempdir()
    config.set('puppet', 'ruby_home', tmpdir)
    hardware = Hardware(config)
    os_path_exists_mock.return_value = True
    result = hardware.configureEnviron({'PATH': '', })
    self.assertEquals(result['PATH'], (tmpdir + '/bin:'))
    self.assertEquals(result['MY_RUBY_HOME'], tmpdir)
    config.remove_option('puppet', 'ruby_home')
