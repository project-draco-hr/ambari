@patch.object(OSCheck, 'get_os_type')
@patch.object(OSCheck, 'get_os_version')
@patch('subprocess.Popen')
@patch('subprocess.Popen.communicate')
def test_osdisks_remote(self, communicate_mock, popen_mock, get_os_version_mock, get_os_type_mock):
    get_os_type_mock.return_value = 'suse'
    get_os_version_mock.return_value = '11'
    Hardware.osdisks()
    popen_mock.assert_called_with(['df', '-kPT'], stdout=(-1))
    config = AmbariConfig()
    Hardware.osdisks(config)
    popen_mock.assert_called_with(['df', '-kPT'], stdout=(-1))
    config.add_section(AmbariConfig.AMBARI_PROPERTIES_CATEGORY)
    config.set(AmbariConfig.AMBARI_PROPERTIES_CATEGORY, Hardware.CHECK_REMOTE_MOUNTS_KEY, 'true')
    Hardware.osdisks(config)
    popen_mock.assert_called_with(['df', '-kPT'], stdout=(-1))
    config.set(AmbariConfig.AMBARI_PROPERTIES_CATEGORY, Hardware.CHECK_REMOTE_MOUNTS_KEY, 'false')
    Hardware.osdisks(config)
    popen_mock.assert_called_with(['df', '-kPT', '-l'], stdout=(-1))
