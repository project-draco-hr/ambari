def invalidate_directory(self, directory):
    '\n    Recursively removes directory content (if any). Also, creates\n    directory and any parent directories if needed. May throw exceptions\n    on permission problems\n    '
    logger.debug('Invalidating directory {0}'.format(directory))
    try:
        if os.path.isfile(directory):
            os.unlink(directory)
        elif os.path.isdir(directory):
            shutil.rmtree(directory)
        os.makedirs(directory)
    except Exception as err:
        raise CachingException('Can not invalidate cache directory {0}: {1}', directory, str(err))
