{
  final Set<RequestScheduleRequest> requests=new HashSet<RequestScheduleRequest>();
  for (  Map<String,Object> propertyMap : request.getProperties()) {
    requests.add(getRequestScheduleRequest(propertyMap));
  }
  Set<RequestScheduleResponse> responses=createResources(new Command<Set<RequestScheduleResponse>>(){
    @Override public Set<RequestScheduleResponse> invoke() throws AmbariException {
      return createRequestSchedules(requests);
    }
  }
);
  notifyCreate(Resource.Type.RequestSchedule,request);
  Set<Resource> associatedResources=new HashSet<Resource>();
  for (  RequestScheduleResponse response : responses) {
    Resource resource=new ResourceImpl(Resource.Type.RequestSchedule);
    resource.setProperty(REQUEST_SCHEDULE_ID_PROPERTY_ID,response.getId());
    associatedResources.add(resource);
  }
  return getRequestStatus(null,associatedResources);
}
