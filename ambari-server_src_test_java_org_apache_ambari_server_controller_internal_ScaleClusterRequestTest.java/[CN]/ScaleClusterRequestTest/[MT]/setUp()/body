{
  ScaleClusterRequest.init(blueprintFactory);
  Class clazz=BaseClusterRequest.class;
  Field f=clazz.getDeclaredField("hostResourceProvider");
  f.setAccessible(true);
  f.set(null,hostResourceProvider);
  expect(blueprintFactory.getBlueprint(BLUEPRINT_NAME)).andReturn(blueprint).anyTimes();
  expect(blueprint.getConfiguration()).andReturn(blueprintConfig).anyTimes();
  expect(blueprint.getHostGroup(GROUP1_NAME)).andReturn(hostGroup1).anyTimes();
  expect(blueprint.getHostGroup(GROUP2_NAME)).andReturn(hostGroup1).anyTimes();
  expect(blueprint.getHostGroup(GROUP3_NAME)).andReturn(hostGroup1).anyTimes();
  expect(blueprint.getName()).andReturn(BLUEPRINT_NAME).anyTimes();
  expect(hostResourceProvider.checkPropertyIds(Collections.singleton("test/prop"))).andReturn(Collections.<String>emptySet()).once();
  replay(blueprintFactory,blueprint,hostResourceProvider,hostGroup1);
}
