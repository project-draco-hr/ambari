{
  reset(hostResourceProvider);
  replay(hostResourceProvider);
  ScaleClusterRequest scaleClusterRequest=new ScaleClusterRequest(Collections.singleton(createScaleClusterPropertiesGroup1_HostCount(CLUSTER_NAME,BLUEPRINT_NAME)));
  assertEquals(TopologyRequest.Type.SCALE,scaleClusterRequest.getType());
  assertEquals(String.format("Scale Cluster '%s' (+%s hosts)",CLUSTER_NAME,"1"),scaleClusterRequest.getDescription());
  assertEquals(CLUSTER_NAME,scaleClusterRequest.getClusterName());
  assertSame(blueprint,scaleClusterRequest.getBlueprint());
  Map<String,HostGroupInfo> hostGroupInfo=scaleClusterRequest.getHostGroupInfo();
  assertEquals(1,hostGroupInfo.size());
  assertEquals(0,scaleClusterRequest.getTopologyValidators().size());
  HostGroupInfo group2Info=hostGroupInfo.get(GROUP2_NAME);
  assertEquals(GROUP2_NAME,group2Info.getHostGroupName());
  assertEquals(0,group2Info.getHostNames().size());
  assertEquals(1,group2Info.getRequestedHostCount());
  assertNull(group2Info.getPredicate());
}
