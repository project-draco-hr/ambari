def test_closure_scoping(self):
    t = env.from_string('\n        {%- set wrapper = "<FOO>" %}\n        {%- for item in (1, 2, 3, 4) %}\n            {%- macro wrapper() %}[{{ item }}]{% endmacro %}\n            {{- wrapper() }}\n        {%- endfor %}\n        {{- wrapper -}}\n        ')
    assert (t.render() == '[1][2][3][4]<FOO>')
    t = env.from_string('\n        {%- for item in (1, 2, 3, 4) %}\n            {%- macro wrapper() %}[{{ item }}]{% endmacro %}\n            {{- wrapper() }}\n        {%- endfor %}\n        {%- set wrapper = "<FOO>" %}\n        {{- wrapper -}}\n        ')
    assert (t.render() == '[1][2][3][4]<FOO>')
    t = env.from_string('\n        {%- for item in (1, 2, 3, 4) %}\n            {%- macro wrapper() %}[{{ item }}]{% endmacro %}\n            {{- wrapper() }}\n        {%- endfor %}\n        {{- wrapper -}}\n        ')
    assert (t.render(wrapper=23) == '[1][2][3][4]23')
