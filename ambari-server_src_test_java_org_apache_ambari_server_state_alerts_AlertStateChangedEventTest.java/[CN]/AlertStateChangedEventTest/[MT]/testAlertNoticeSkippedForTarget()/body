{
  AlertTargetEntity alertTarget=EasyMock.createMock(AlertTargetEntity.class);
  AlertGroupEntity alertGroup=EasyMock.createMock(AlertGroupEntity.class);
  List<AlertGroupEntity> groups=new ArrayList<AlertGroupEntity>();
  Set<AlertTargetEntity> targets=new HashSet<AlertTargetEntity>();
  targets.add(alertTarget);
  groups.add(alertGroup);
  EasyMock.expect(alertGroup.getAlertTargets()).andReturn(targets).once();
  EasyMock.expect(alertTarget.getAlertStates()).andReturn(EnumSet.of(AlertState.OK,AlertState.CRITICAL)).atLeastOnce();
  EasyMock.expect(dispatchDao.findGroupsByDefinition(EasyMock.anyObject(AlertDefinitionEntity.class))).andReturn(groups).once();
  EasyMock.replay(alertTarget,alertGroup,dispatchDao);
  AlertHistoryEntity history=EasyMock.createNiceMock(AlertHistoryEntity.class);
  AlertStateChangeEvent event=EasyMock.createNiceMock(AlertStateChangeEvent.class);
  EasyMock.expect(history.getAlertState()).andReturn(AlertState.WARNING).atLeastOnce();
  EasyMock.expect(event.getNewHistoricalEntry()).andReturn(history).atLeastOnce();
  EasyMock.replay(history,event);
  eventPublisher.publish(event);
  EasyMock.verify(dispatchDao,history,event);
}
