{
  logStartup();
  Injector injector=Guice.createInjector(new ControllerModule(),new AuditLoggerModule());
  AmbariServer server=null;
  try {
    LOG.info("Getting the controller");
    Configuration config=injector.getInstance(Configuration.class);
    if (!config.isActiveInstance()) {
      String errMsg="This instance of ambari server is not designated as active. Cannot start ambari server." + "The property active.instance is set to false in ambari.properties";
      throw new AmbariException(errMsg);
    }
    setupProxyAuth();
    injector.getInstance(GuiceJpaInitializer.class);
    DatabaseConsistencyCheckHelper.checkDBVersionCompatible();
    server=injector.getInstance(AmbariServer.class);
    injector.getInstance(UpdateActiveRepoVersionOnStartup.class).process();
    CertificateManager certMan=injector.getInstance(CertificateManager.class);
    certMan.initRootCert();
    KerberosChecker.checkJaasConfiguration();
    ViewRegistry.initInstance(server.viewRegistry);
    ComponentSSLConfiguration.instance().init(server.configs);
    server.run();
  }
 catch (  Throwable t) {
    LOG.error("Failed to run the Ambari Server",t);
    if (server != null) {
      server.stop();
    }
    System.exit(-1);
  }
}
