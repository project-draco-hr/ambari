{
  AgentResource.init(injector.getInstance(HeartBeatHandler.class));
  CertificateDownload.init(injector.getInstance(CertificateManager.class));
  ConnectionInfo.init(injector.getInstance(Configuration.class));
  CertificateSign.init(injector.getInstance(CertificateManager.class));
  GetResource.init(injector.getInstance(ResourceManager.class));
  PersistKeyValueService.init(injector.getInstance(PersistKeyValueImpl.class));
  KeyService.init(injector.getInstance(PersistKeyValueImpl.class));
  BootStrapResource.init(injector.getInstance(BootStrapImpl.class));
  StackAdvisorResourceProvider.init(injector.getInstance(StackAdvisorHelper.class));
  StageUtils.setGson(injector.getInstance(Gson.class));
  StageUtils.setTopologyManager(injector.getInstance(TopologyManager.class));
  WorkflowJsonService.setDBProperties(injector.getInstance(Configuration.class));
  SecurityFilter.init(injector.getInstance(Configuration.class));
  StackDefinedPropertyProvider.init(injector);
  AbstractControllerResourceProvider.init(injector.getInstance(ResourceProviderFactory.class));
  BlueprintResourceProvider.init(injector.getInstance(BlueprintFactory.class),injector.getInstance(BlueprintDAO.class),injector.getInstance(SecurityConfigurationFactory.class),injector.getInstance(Gson.class));
  StackDependencyResourceProvider.init(ambariMetaInfo);
  ClusterResourceProvider.init(injector.getInstance(TopologyManager.class),injector.getInstance(TopologyRequestFactoryImpl.class),injector.getInstance(SecurityConfigurationFactory.class),injector.getInstance(Gson.class));
  HostResourceProvider.setTopologyManager(injector.getInstance(TopologyManager.class));
  BlueprintFactory.init(injector.getInstance(BlueprintDAO.class));
  BaseClusterRequest.init(injector.getInstance(BlueprintFactory.class));
  AmbariContext.init(injector.getInstance(HostRoleCommandFactory.class));
  PermissionResourceProvider.init(injector.getInstance(PermissionDAO.class));
  ViewPermissionResourceProvider.init(injector.getInstance(PermissionDAO.class));
  PrivilegeResourceProvider.init(injector.getInstance(PrivilegeDAO.class),injector.getInstance(UserDAO.class),injector.getInstance(GroupDAO.class),injector.getInstance(PrincipalDAO.class),injector.getInstance(PermissionDAO.class),injector.getInstance(ResourceDAO.class));
  UserPrivilegeResourceProvider.init(injector.getInstance(UserDAO.class),injector.getInstance(ClusterDAO.class),injector.getInstance(GroupDAO.class),injector.getInstance(ViewInstanceDAO.class));
  ClusterPrivilegeResourceProvider.init(injector.getInstance(ClusterDAO.class));
  AmbariPrivilegeResourceProvider.init(injector.getInstance(ClusterDAO.class));
  ActionManager.setTopologyManager(injector.getInstance(TopologyManager.class));
  TopologyManager.init(injector.getInstance(StackAdvisorBlueprintProcessor.class));
  StackAdvisorBlueprintProcessor.init(injector.getInstance(StackAdvisorHelper.class));
}
