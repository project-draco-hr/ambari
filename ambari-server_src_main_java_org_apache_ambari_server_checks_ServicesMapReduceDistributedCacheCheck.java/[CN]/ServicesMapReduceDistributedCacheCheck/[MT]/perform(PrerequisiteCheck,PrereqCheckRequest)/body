{
  final String clusterName=request.getClusterName();
  final Cluster cluster=clustersProvider.get().getCluster(clusterName);
  final String configType="mapred-site";
  final Map<String,DesiredConfig> desiredConfigs=cluster.getDesiredConfigs();
  final DesiredConfig desiredConfig=desiredConfigs.get(configType);
  final Config config=cluster.getConfig(configType,desiredConfig.getTag());
  final String frameworkPath=config.getProperties().get("mapreduce.application.framework.path");
  final String applicationClasspath=config.getProperties().get("mapreduce.application.classpath");
  if (frameworkPath == null || applicationClasspath == null || !frameworkPath.startsWith("hdfs:/")) {
    prerequisiteCheck.getFailedOn().add("MAP_REDUCE");
    prerequisiteCheck.setStatus(PrereqCheckStatus.FAIL);
    prerequisiteCheck.setFailReason("MapReduce should reference hadoop libraries from the distributed cache. Make sure that " + "mapreduce.application.framework.path and mapreduce.application.classpath properties are present in mapred.site.xml " + "and point to hdfs:/... urls");
  }
}
