{
  final String clusterName=request.getClusterName();
  final Cluster cluster=clustersProvider.get().getCluster(clusterName);
  final String mrConfigType="mapred-site";
  final String coreSiteConfigType="core-site";
  final Map<String,DesiredConfig> desiredConfigs=cluster.getDesiredConfigs();
  final DesiredConfig mrDesiredConfig=desiredConfigs.get(mrConfigType);
  final DesiredConfig coreSiteDesiredConfig=desiredConfigs.get(coreSiteConfigType);
  final Config mrConfig=cluster.getConfig(mrConfigType,mrDesiredConfig.getTag());
  final Config coreSiteConfig=cluster.getConfig(coreSiteConfigType,coreSiteDesiredConfig.getTag());
  final String applicationClasspath=mrConfig.getProperties().get("mapreduce.application.classpath");
  final String frameworkPath=mrConfig.getProperties().get("mapreduce.application.framework.path");
  final String defaultFS=coreSiteConfig.getProperties().get("fs.defaultFS");
  List<String> errorMessages=new ArrayList<String>();
  if (applicationClasspath == null || applicationClasspath.isEmpty()) {
    errorMessages.add(getFailReason("app_classpath",prerequisiteCheck,request));
  }
  if (frameworkPath == null || frameworkPath.isEmpty()) {
    errorMessages.add(getFailReason("framework_path",prerequisiteCheck,request));
  }
  if (!errorMessages.isEmpty()) {
    prerequisiteCheck.getFailedOn().add("MAPREDUCE2");
    prerequisiteCheck.setStatus(PrereqCheckStatus.FAIL);
    prerequisiteCheck.setFailReason(StringUtils.join(errorMessages," "));
    return;
  }
  if (!frameworkPath.matches("^[^:]*dfs:.*") && (defaultFS == null || !defaultFS.matches("^[^:]*dfs:.*"))) {
    prerequisiteCheck.getFailedOn().add("MAPREDUCE2");
    prerequisiteCheck.setStatus(PrereqCheckStatus.FAIL);
    prerequisiteCheck.setFailReason(getFailReason("not_dfs",prerequisiteCheck,request));
  }
}
