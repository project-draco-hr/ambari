{
  StackEntity stackEntity=stackDAO.find("HDP","2.2.0");
  RepositoryVersionEntity repoVersionEntity=new RepositoryVersionEntity();
  repoVersionEntity.setDisplayName("For Stack Version 2.2.0");
  repoVersionEntity.setOperatingSystems("");
  repoVersionEntity.setStack(stackEntity);
  repoVersionEntity.setVersion("2.2.0.0");
  repoVersionDAO.create(repoVersionEntity);
  clusters=injector.getInstance(Clusters.class);
  StackId stackId=new StackId("HDP-2.2.0");
  clusters.addCluster(clusterName,stackId);
  Cluster cluster=clusters.getCluster("c1");
  helper.getOrCreateRepositoryVersion(stackId,stackId.getStackVersion());
  cluster.createClusterVersion(stackId,stackId.getStackVersion(),"admin",RepositoryVersionState.INSTALLING);
  clusters.addHost("h1");
  Host host=clusters.getHost("h1");
  Map<String,String> hostAttributes=new HashMap<String,String>();
  hostAttributes.put("os_family","redhat");
  hostAttributes.put("os_release_version","6.4");
  host.setHostAttributes(hostAttributes);
  host.setState(HostState.HEALTHY);
  clusters.mapHostToCluster("h1","c1");
  Service service=cluster.addService("ZOOKEEPER");
  service.setDesiredStackVersion(cluster.getDesiredStackVersion());
  service.persist();
  ServiceComponent component=service.addServiceComponent("ZOOKEEPER_SERVER");
  ServiceComponentHost sch=component.addServiceComponentHost("h1");
  sch.setVersion("2.2.0.0");
  component=service.addServiceComponent("ZOOKEEPER_CLIENT");
  sch=component.addServiceComponentHost("h1");
  sch.setVersion("2.2.0.0");
}
