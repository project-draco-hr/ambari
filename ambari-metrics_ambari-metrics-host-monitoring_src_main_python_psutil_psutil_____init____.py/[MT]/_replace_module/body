def _replace_module():
    'Dirty hack to replace the module object in order to access\n    deprecated module constants, see:\n    http://www.dr-josiah.com/2013/12/properties-on-python-modules.html\n    '


    class ModuleWrapper(object):

        def __repr__(self):
            return repr(self._module)
        __str__ = __repr__

        @property
        def NUM_CPUS(self):
            msg = 'NUM_CPUS constant is deprecated; use cpu_count() instead'
            warnings.warn(msg, category=DeprecationWarning, stacklevel=2)
            return cpu_count()

        @property
        def BOOT_TIME(self):
            msg = 'BOOT_TIME constant is deprecated; use boot_time() instead'
            warnings.warn(msg, category=DeprecationWarning, stacklevel=2)
            return boot_time()

        @property
        def TOTAL_PHYMEM(self):
            msg = 'TOTAL_PHYMEM constant is deprecated; use virtual_memory().total instead'
            warnings.warn(msg, category=DeprecationWarning, stacklevel=2)
            return virtual_memory().total
    mod = ModuleWrapper()
    mod.__dict__ = globals()
    mod._module = sys.modules[__name__]
    sys.modules[__name__] = mod
