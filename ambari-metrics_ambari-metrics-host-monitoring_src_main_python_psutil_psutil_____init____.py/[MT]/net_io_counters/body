def net_io_counters(pernic=False):
    'Return network I/O statistics as a namedtuple including\n    the following fields:\n\n     - bytes_sent:   number of bytes sent\n     - bytes_recv:   number of bytes received\n     - packets_sent: number of packets sent\n     - packets_recv: number of packets received\n     - errin:        total number of errors while receiving\n     - errout:       total number of errors while sending\n     - dropin:       total number of incoming packets which were dropped\n     - dropout:      total number of outgoing packets which were dropped\n                     (always 0 on OSX and BSD)\n\n    If pernic is True return the same information for every\n    network interface installed on the system as a dictionary\n    with network interface names as the keys and the namedtuple\n    described above as the values.\n    '
    rawdict = _psplatform.net_io_counters()
    if (not rawdict):
        raise RuntimeError("couldn't find any network interface")
    if pernic:
        for (nic, fields) in rawdict.items():
            rawdict[nic] = _nt_sys_netio(*fields)
        return rawdict
    else:
        return _nt_sys_netio(*[sum(x) for x in zip(*rawdict.values())])
