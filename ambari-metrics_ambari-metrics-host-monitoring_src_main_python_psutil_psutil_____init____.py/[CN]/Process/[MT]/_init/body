def _init(self, pid, _ignore_nsp=False):
    if (pid is None):
        pid = os.getpid()
    else:
        if ((not _PY3) and (not isinstance(pid, (int, long)))):
            raise TypeError(('pid must be an integer (got %r)' % pid))
        if (pid < 0):
            raise ValueError(('pid must be a positive integer (got %s)' % pid))
    self._pid = pid
    self._name = None
    self._exe = None
    self._create_time = None
    self._gone = False
    self._hash = None
    self._ppid = None
    self._proc = _psplatform.Process(pid)
    self._last_sys_cpu_times = None
    self._last_proc_cpu_times = None
    try:
        self.create_time()
    except AccessDenied:
        pass
    except NoSuchProcess:
        if (not _ignore_nsp):
            msg = ('no process found with pid %s' % pid)
            raise NoSuchProcess(pid, None, msg)
        else:
            self._gone = True
    self._ident = (self.pid, self._create_time)
