{
  final Set<ServiceComponentHostRequest> requests=new HashSet<ServiceComponentHostRequest>();
  for (  Map<String,Object> propertyMap : getPropertyMaps(predicate)) {
    requests.add(getRequest(propertyMap));
  }
  Set<Resource> resources=new HashSet<Resource>();
  Set<String> requestedIds=getRequestPropertyIds(request,predicate);
  Set<ServiceComponentHostResponse> responses=getResources(new Command<Set<ServiceComponentHostResponse>>(){
    @Override public Set<ServiceComponentHostResponse> invoke() throws AmbariException {
      return getManagementController().getHostComponents(requests);
    }
  }
);
  for (  ServiceComponentHostResponse response : responses) {
    Resource resource=new ResourceImpl(Resource.Type.HostComponent);
    setResourceProperty(resource,HOST_COMPONENT_CLUSTER_NAME_PROPERTY_ID,response.getClusterName(),requestedIds);
    setResourceProperty(resource,HOST_COMPONENT_SERVICE_NAME_PROPERTY_ID,response.getServiceName(),requestedIds);
    setResourceProperty(resource,HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID,response.getComponentName(),requestedIds);
    setResourceProperty(resource,HOST_COMPONENT_HOST_NAME_PROPERTY_ID,response.getHostname(),requestedIds);
    setResourceProperty(resource,HOST_COMPONENT_STATE_PROPERTY_ID,response.getLiveState(),requestedIds);
    setResourceProperty(resource,HOST_COMPONENT_DESIRED_STATE_PROPERTY_ID,response.getDesiredState(),requestedIds);
    setResourceProperty(resource,HOST_COMPONENT_CONFIGS_PROPERTY_ID,response.getConfigs(),requestedIds);
    setResourceProperty(resource,HOST_COMPONENT_DESIRED_CONFIGS_PROPERTY_ID,response.getDesiredConfigs(),requestedIds);
    resources.add(resource);
  }
  return resources;
}
