{
  Configuration configuration=createNiceMock(Configuration.class);
  expect(configuration.getMetricCacheMaxEntries()).andReturn(1000);
  expect(configuration.getMetricCacheTTLSeconds()).andReturn(3600);
  expect(configuration.getMetricCacheIdleSeconds()).andReturn(100);
  final long now=System.currentTimeMillis();
  Map<String,TimelineMetric> valueMap=new HashMap<String,TimelineMetric>();
  TimelineMetric timelineMetric=new TimelineMetric();
  timelineMetric.setMetricName("cpu_user");
  timelineMetric.setAppId("app1");
  Map<Long,Double> metricValues=new HashMap<Long,Double>();
  metricValues.put(now + 100,1.0);
  metricValues.put(now + 200,2.0);
  metricValues.put(now + 300,3.0);
  timelineMetric.setMetricValues(metricValues);
  valueMap.put("cpu_user",timelineMetric);
  TimelineMetricCacheEntryFactory cacheEntryFactory=createMock(TimelineMetricCacheEntryFactory.class);
  TimelineAppMetricCacheKey queryKey=new TimelineAppMetricCacheKey(Collections.singleton("cpu_user"),"app1",new TemporalInfoImpl(now,now + 1000,1));
  TimelineMetricsCacheValue value=new TimelineMetricsCacheValue(now,now + 1000,valueMap);
  TimelineAppMetricCacheKey testKey=new TimelineAppMetricCacheKey(Collections.singleton("cpu_user"),"app1",new TemporalInfoImpl(now,now + 2000,1));
  expect(cacheEntryFactory.createEntry(anyObject())).andReturn(value);
  cacheEntryFactory.updateEntryValue(testKey,value);
  expectLastCall().once();
  replay(configuration,cacheEntryFactory);
  TimelineMetricCacheProvider cacheProvider=getMetricCacheProvider(configuration,cacheEntryFactory);
  TimelineMetricCache cache=cacheProvider.getTimelineMetricsCache();
  TimelineMetrics metrics=cache.getAppTimelineMetricsFromCache(queryKey);
  List<TimelineMetric> metricsList=metrics.getMetrics();
  Assert.assertEquals(1,metricsList.size());
  TimelineMetric metric=metricsList.iterator().next();
  Assert.assertEquals("cpu_user",metric.getMetricName());
  Assert.assertEquals("app1",metric.getAppId());
  Assert.assertSame(metricValues,metric.getMetricValues());
  metrics=cache.getAppTimelineMetricsFromCache(testKey);
  metricsList=metrics.getMetrics();
  Assert.assertEquals(1,metricsList.size());
  Assert.assertEquals("cpu_user",metric.getMetricName());
  Assert.assertEquals("app1",metric.getAppId());
  Assert.assertSame(metricValues,metric.getMetricValues());
  verify(configuration,cacheEntryFactory);
}
