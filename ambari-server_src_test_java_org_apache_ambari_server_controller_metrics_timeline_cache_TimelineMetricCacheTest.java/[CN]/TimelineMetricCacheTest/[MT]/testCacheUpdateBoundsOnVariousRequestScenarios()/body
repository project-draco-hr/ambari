{
  Configuration configuration=createNiceMock(Configuration.class);
  expect(configuration.getMetricsRequestConnectTimeoutMillis()).andReturn(10000);
  expect(configuration.getMetricsRequestReadTimeoutMillis()).andReturn(10000);
  expect(configuration.getMetricsRequestIntervalReadTimeoutMillis()).andReturn(10000);
  expect(configuration.getMetricRequestBufferTimeCatchupInterval()).andReturn(0l);
  replay(configuration);
  TimelineMetricCacheEntryFactory factory=createMockBuilder(TimelineMetricCacheEntryFactory.class).withConstructor(configuration).createMock();
  replay(factory);
  long now=System.currentTimeMillis();
  final long existingSeriesStartTime=now - (3600 * 1000);
  final long existingSeriesEndTime=now;
  long requestedStartTime=existingSeriesStartTime + 60000;
  long requestedEndTime=existingSeriesEndTime + 60000;
  long newStartTime=factory.getRefreshRequestStartTime(existingSeriesStartTime,existingSeriesEndTime,requestedStartTime);
  long newEndTime=factory.getRefreshRequestEndTime(existingSeriesStartTime,existingSeriesEndTime,requestedEndTime);
  Assert.assertEquals(existingSeriesEndTime,newStartTime);
  Assert.assertEquals(requestedEndTime,newEndTime);
  requestedStartTime=existingSeriesEndTime + 60000;
  requestedEndTime=existingSeriesEndTime + 60000 + 3600000;
  newStartTime=factory.getRefreshRequestStartTime(existingSeriesStartTime,existingSeriesEndTime,requestedStartTime);
  newEndTime=factory.getRefreshRequestEndTime(existingSeriesStartTime,existingSeriesEndTime,requestedEndTime);
  Assert.assertEquals(requestedStartTime,newStartTime);
  Assert.assertEquals(requestedEndTime,newEndTime);
  requestedStartTime=existingSeriesStartTime - 60000;
  requestedEndTime=existingSeriesEndTime + 60000;
  newStartTime=factory.getRefreshRequestStartTime(existingSeriesStartTime,existingSeriesEndTime,requestedStartTime);
  newEndTime=factory.getRefreshRequestEndTime(existingSeriesStartTime,existingSeriesEndTime,requestedEndTime);
  Assert.assertEquals(requestedStartTime,newStartTime);
  Assert.assertEquals(requestedEndTime,newEndTime);
  requestedStartTime=existingSeriesStartTime - 3600000 - 60000;
  requestedEndTime=existingSeriesStartTime - 60000;
  newStartTime=factory.getRefreshRequestStartTime(existingSeriesStartTime,existingSeriesEndTime,requestedStartTime);
  newEndTime=factory.getRefreshRequestEndTime(existingSeriesStartTime,existingSeriesEndTime,requestedEndTime);
  Assert.assertEquals(requestedStartTime,newStartTime);
  Assert.assertEquals(requestedEndTime,newEndTime);
  requestedStartTime=existingSeriesStartTime + 60000;
  requestedEndTime=existingSeriesEndTime - 60000;
  newStartTime=factory.getRefreshRequestStartTime(existingSeriesStartTime,existingSeriesEndTime,requestedStartTime);
  newEndTime=factory.getRefreshRequestEndTime(existingSeriesStartTime,existingSeriesEndTime,requestedEndTime);
  Assert.assertEquals(newStartTime,existingSeriesEndTime);
  Assert.assertEquals(newEndTime,existingSeriesStartTime);
  verify(configuration,factory);
}
