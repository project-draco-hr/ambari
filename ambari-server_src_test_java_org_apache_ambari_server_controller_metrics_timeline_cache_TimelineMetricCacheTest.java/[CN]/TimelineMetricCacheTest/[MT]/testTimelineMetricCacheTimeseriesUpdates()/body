{
  Configuration configuration=createNiceMock(Configuration.class);
  expect(configuration.getMetricsRequestConnectTimeoutMillis()).andReturn(10000);
  expect(configuration.getMetricsRequestReadTimeoutMillis()).andReturn(10000);
  expect(configuration.getMetricsRequestIntervalReadTimeoutMillis()).andReturn(10000);
  expect(configuration.getMetricRequestBufferTimeCatchupInterval()).andReturn(0l);
  replay(configuration);
  TimelineMetricCacheEntryFactory factory=createMockBuilder(TimelineMetricCacheEntryFactory.class).withConstructor(configuration).createMock();
  replay(factory);
  long now=System.currentTimeMillis();
  final TimelineMetric timelineMetric1=new TimelineMetric();
  timelineMetric1.setMetricName("cpu_user");
  timelineMetric1.setAppId("app1");
  TreeMap<Long,Double> metricValues=new TreeMap<Long,Double>();
  metricValues.put(now - 100,1.0);
  metricValues.put(now - 200,2.0);
  metricValues.put(now - 300,3.0);
  timelineMetric1.setMetricValues(metricValues);
  final TimelineMetric timelineMetric2=new TimelineMetric();
  timelineMetric2.setMetricName("cpu_nice");
  timelineMetric2.setAppId("app1");
  metricValues=new TreeMap<Long,Double>();
  metricValues.put(now + 400,1.0);
  metricValues.put(now + 500,2.0);
  metricValues.put(now + 600,3.0);
  timelineMetric2.setMetricValues(metricValues);
  TimelineMetrics existingMetrics=new TimelineMetrics();
  existingMetrics.getMetrics().add(timelineMetric1);
  existingMetrics.getMetrics().add(timelineMetric2);
  TimelineMetricsCacheValue existingMetricValue=new TimelineMetricsCacheValue(now - 1000,now + 1000,existingMetrics,null);
  TimelineMetrics newMetrics=new TimelineMetrics();
  TimelineMetric timelineMetric3=new TimelineMetric();
  timelineMetric3.setMetricName("cpu_user");
  timelineMetric3.setAppId("app1");
  metricValues=new TreeMap<Long,Double>();
  metricValues.put(now + 1400,1.0);
  metricValues.put(now + 1500,2.0);
  metricValues.put(now + 1600,3.0);
  timelineMetric3.setMetricValues(metricValues);
  newMetrics.getMetrics().add(timelineMetric3);
  factory.updateTimelineMetricsInCache(newMetrics,existingMetricValue,now,now + 2000,false);
  Assert.assertEquals(2,existingMetricValue.getTimelineMetrics().getMetrics().size());
  TimelineMetric newMetric1=null;
  TimelineMetric newMetric2=null;
  for (  TimelineMetric metric : existingMetricValue.getTimelineMetrics().getMetrics()) {
    if (metric.getMetricName().equals("cpu_user")) {
      newMetric1=metric;
    }
    if (metric.getMetricName().equals("cpu_nice")) {
      newMetric2=metric;
    }
  }
  Assert.assertNotNull(newMetric1);
  Assert.assertNotNull(newMetric2);
  Assert.assertEquals(3,newMetric1.getMetricValues().size());
  Assert.assertEquals(3,newMetric2.getMetricValues().size());
  Map<Long,Double> newMetricsMap=newMetric1.getMetricValues();
  Iterator<Long> metricKeyIterator=newMetricsMap.keySet().iterator();
  Assert.assertEquals(now + 1400,metricKeyIterator.next().longValue());
  Assert.assertEquals(now + 1500,metricKeyIterator.next().longValue());
  Assert.assertEquals(now + 1600,metricKeyIterator.next().longValue());
  verify(configuration,factory);
}
