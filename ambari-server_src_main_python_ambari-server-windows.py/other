'\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n"License"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'
import optparse
from ambari_commons.ambari_service import AmbariService
from ambari_commons.logging_utils import *
from ambari_commons.os_utils import remove_file
from ambari_commons.os_windows import SvcStatusCallback
from ambari_server import utils
from ambari_server.dbConfiguration import DBMSConfig
from ambari_server.resourceFilesKeeper import ResourceFilesKeeper, KeeperException
from ambari_server.serverConfiguration import *
from ambari_server.serverSetup import setup, reset, is_server_running, upgrade
from ambari_server.setupActions import *
from ambari_server.setupSecurity import *
from ambari_server.serverSetup_windows import SERVICE_PASSWORD_KEY, SERVICE_USERNAME_KEY
SERVER_START_DEBUG = False
SUSPEND_START_MODE = False
ambari_provider_module_option = ''
ambari_provider_module = os.environ.get('AMBARI_PROVIDER_MODULE')
SETUP_OR_UPGRADE_MSG = '- If this is a new setup, then run the "ambari-server setup" command to create the user\n- If this is an upgrade of an existing setup, run the "ambari-server upgrade" command.\nRefer to the Ambari documentation for more information on setup and upgrade.'
AMBARI_SERVER_DIE_MSG = 'Ambari Server java process died with exitcode {0}. Check {1} for more information.'
if (ambari_provider_module is not None):
    ambari_provider_module_option = (('-Dprovider.module.class=' + ambari_provider_module) + ' ')
SERVER_START_CMD = ((((('-server -XX:NewRatio=3 -XX:+UseConcMarkSweepGC ' + '-XX:-UseGCOverheadLimit -XX:CMSInitiatingOccupancyFraction=60 ') + ambari_provider_module_option) + os.getenv('AMBARI_JVM_ARGS', '-Xms512m -Xmx2048m')) + ' -cp {0}') + ' org.apache.ambari.server.controller.AmbariServer')
SERVER_START_CMD_DEBUG = (((('-server -XX:NewRatio=2 -XX:+UseConcMarkSweepGC ' + ambari_provider_module_option) + os.getenv('AMBARI_JVM_ARGS', '-Xms512m -Xmx2048m')) + ' -Xdebug -Xrunjdwp:transport=dt_socket,address=5005,server=y,suspend={1} -cp {0}') + ' org.apache.ambari.server.controller.AmbariServer')
SERVER_SEARCH_PATTERN = 'org.apache.ambari.server.controller.AmbariServer'
SERVER_INIT_TIMEOUT = 5
SERVER_START_TIMEOUT = 10
PID_NAME = 'ambari-server.pid'
EXITCODE_NAME = 'ambari-server.exitcode'
SERVER_VERSION_FILE_PATH = 'server.version.file'
ULIMIT_OPEN_FILES_KEY = 'ulimit.open.files'
ULIMIT_OPEN_FILES_DEFAULT = 10000
if (__name__ == '__main__'):
    try:
        main()
    except (KeyboardInterrupt, EOFError):
        print '\nAborting ... Keyboard Interrupt.'
        sys.exit(1)
