@patch('resource_management.libraries.functions.list_ambari_managed_repos.list_ambari_managed_repos')
@patch('resource_management.libraries.functions.packages_analyzer.allInstalledPackages')
@patch('resource_management.libraries.script.Script.put_structured_out')
@patch('resource_management.libraries.functions.stack_select.get_stack_versions')
@patch('resource_management.libraries.functions.repo_version_history.read_actual_version_from_history_file')
@patch('resource_management.libraries.functions.repo_version_history.write_actual_version_to_history_file')
@patch('resource_management.libraries.functions.stack_tools.get_stack_tool_package', new=MagicMock(return_value='hdp-select'))
@patch('os.listdir', new=MagicMock(return_value=[('somefile' + OLD_VERSION_STUB)]))
def test_symlink_exist(self, write_actual_version_to_history_file_mock, read_actual_version_from_history_file_mock, stack_versions_mock, put_structured_out_mock, allInstalledPackages_mock, list_ambari_managed_repos_mock):
    stack_versions_mock.return_value = [VERSION_STUB, OLD_VERSION_STUB]
    allInstalledPackages_mock.side_effect = TestRemoveStackVersion._add_packages
    list_ambari_managed_repos_mock.return_value = []
    try:
        self.executeScript('scripts/remove_previous_stacks.py', classname='RemovePreviousStacks', command='actionexecute', config_file='remove_previous_stacks.json', target=RMFTestCase.TARGET_CUSTOM_ACTIONS, os_type=('Redhat', '6.4', 'Final'))
        self.fail('Should throw exception')
    except Fail as e:
        self.assertEquals(str(e), '/usr/hdp/current/ contains symlink to version for remove! 2.1.0.0-400')
        pass
    self.assertTrue(stack_versions_mock.called)
    self.assertEquals(stack_versions_mock.call_args[0][0], '/usr/hdp')
    self.assertNoMoreResources()
