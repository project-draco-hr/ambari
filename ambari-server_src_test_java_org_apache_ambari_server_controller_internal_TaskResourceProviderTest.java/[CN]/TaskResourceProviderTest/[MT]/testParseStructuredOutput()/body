{
  Resource.Type type=Resource.Type.Task;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  TaskResourceProvider taskResourceProvider=new TaskResourceProvider(PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  replay(managementController);
  Map<?,?> result=taskResourceProvider.parseStructuredOutput("{\"a\":\"b\", \"c\": {\"d\":\"e\",\"f\": [\"g\",\"h\"],\"i\": {\"k\":\"l\"}}}");
  assertEquals(result.size(),2);
  Map<?,?> submap=(Map<?,?>)result.get("c");
  assertEquals(submap.size(),3);
  List sublist=(List)submap.get("f");
  assertEquals(sublist.size(),2);
  Map<?,?> subsubmap=(Map<?,?>)submap.get("i");
  assertEquals(subsubmap.size(),1);
  assertEquals(subsubmap.get("k"),"l");
  result=taskResourceProvider.parseStructuredOutput("{\"a\": invalid JSON}");
  assertNull(result);
  result=taskResourceProvider.parseStructuredOutput("{\"a\": 5}");
  assertEquals(result.get("a"),5);
  verify(managementController);
}
