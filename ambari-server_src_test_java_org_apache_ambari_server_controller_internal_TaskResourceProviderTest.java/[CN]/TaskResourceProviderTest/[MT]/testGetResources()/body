{
  Resource.Type type=Resource.Type.Task;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  Set<TaskStatusResponse> allResponse=new HashSet<TaskStatusResponse>();
  allResponse.add(new TaskStatusResponse(100L,100,100L,"HostName100","","","",0,"","",0L,(short)0));
  expect(managementController.getTaskStatus(AbstractResourceProviderTest.Matcher.getTaskRequestSet(100L,100L))).andReturn(allResponse).once();
  replay(managementController);
  ResourceProvider provider=AbstractResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  Set<String> propertyIds=new HashSet<String>();
  propertyIds.add(TaskResourceProvider.TASK_ID_PROPERTY_ID);
  propertyIds.add(TaskResourceProvider.TASK_REQUEST_ID_PROPERTY_ID);
  Predicate predicate=new PredicateBuilder().property(TaskResourceProvider.TASK_ID_PROPERTY_ID).equals("100").and().property(TaskResourceProvider.TASK_REQUEST_ID_PROPERTY_ID).equals("100").toPredicate();
  Request request=PropertyHelper.getReadRequest(propertyIds);
  Set<Resource> resources=provider.getResources(request,predicate);
  Assert.assertEquals(1,resources.size());
  for (  Resource resource : resources) {
    long taskId=(Long)resource.getPropertyValue(TaskResourceProvider.TASK_ID_PROPERTY_ID);
    Assert.assertEquals(100L,taskId);
  }
  verify(managementController);
}
