def create_ranger_repository(self, component, repo_name, repo_properties, ambari_ranger_admin, ambari_ranger_password, admin_uname, admin_password, policy_user):
    '\n    param component: name of the component, from which it will get or create repository\n    param repo_name: name of the repository to be get or create\n    param repo_properties: dict of repository to be create if not exist\n    param ambari_ranger_admin: ambari admin user creation username\n    param ambari_ranger_password: ambari admin user creation password\n    param admin_uname: ranger admin username\n    param admin_password: ranger admin password\n    param policy_user: use this policy user for policies that will be used during repository creation\n    '
    response_code = self.check_ranger_login_urllib2(self.baseUrl)
    repo_data = json.dumps(repo_properties)
    ambari_ranger_password = unicode(ambari_ranger_password)
    admin_password = unicode(admin_password)
    ambari_username_password_for_ranger = format('{ambari_ranger_admin}:{ambari_ranger_password}')
    if ((response_code is not None) and (response_code == 200)):
        user_resp_code = self.create_ambari_admin_user(ambari_ranger_admin, ambari_ranger_password, format('{admin_uname}:{admin_password}'))
        if ((user_resp_code is not None) and (user_resp_code == 200)):
            retryCount = 0
            while (retryCount <= 5):
                repo = self.get_repository_by_name_urllib2(repo_name, component, 'true', ambari_username_password_for_ranger)
                if (repo is not None):
                    Logger.info('{0} Repository {1} exist'.format(component.title(), repo['name']))
                    break
                else:
                    response = self.create_repository_urllib2(repo_data, ambari_username_password_for_ranger, policy_user)
                    if (response is not None):
                        Logger.info('{0} Repository created in Ranger admin'.format(component.title()))
                        break
                    elif (retryCount < 5):
                        Logger.info('Retry Repository Creation is being called')
                        time.sleep(15)
                        retryCount += 1
                    else:
                        Logger.error('{0} Repository creation failed in Ranger admin'.format(component.title()))
                        break
        else:
            Logger.error('Ambari admin user creation failed')
    elif (not self.skip_if_rangeradmin_down):
        Logger.error('Connection failed to Ranger Admin !')
