def recommendAtlasConfigurations(self, configurations, clusterData, services, hosts):
    putAtlasApplicationProperty = self.putProperty(configurations, 'application-properties', services)
    putAtlasRangerPluginProperty = self.putProperty(configurations, 'ranger-atlas-plugin-properties', services)
    servicesList = [service['StackServices']['service_name'] for service in services['services']]
    atlas_hosts = self.getHostNamesWithComponent('ATLAS', 'ATLAS_SERVER', services)
    if ('atlas.enableTLS' in services['configurations']['application-properties']['properties']):
        ssl_enabled = services['configurations']['application-properties']['properties']['atlas.enableTLS']
    else:
        ssl_enabled = 'false'
    if (ssl_enabled.lower == 'true'):
        if ('atlas.server.https.port' in services['configurations']['application-properties']['properties']):
            metadata_port = services['configurations']['application-properties']['properties']['atlas.server.https.port']
        else:
            metadata_port = '21443'
    elif ('atlas.server.http.port' in services['configurations']['application-properties']['properties']):
        metadata_port = services['configurations']['application-properties']['properties']['atlas.server.http.port']
    else:
        metadata_port = '21000'
    id = 1
    server_ids = ''
    server_hosts = ''
    for host in atlas_hosts:
        server_id = ('id' + str(id))
        server_host = ((host + ':') + metadata_port)
        if (id > 1):
            server_ids += ','
            server_hosts += ((('\n' + 'atlas.server.address.') + server_id) + '=')
        server_ids += server_id
        server_hosts += server_host
        id += 1
    putAtlasApplicationProperty('atlas.server.ids', server_ids)
    putAtlasApplicationProperty('atlas.server.address.id1', server_hosts)
    if ('LOGSEARCH' in servicesList):
        if ('logsearch_solr_znode' in services['configurations']['logsearch-solr-env']['properties']):
            logsearch_solr_znode = services['configurations']['logsearch-solr-env']['properties']['logsearch_solr_znode']
        else:
            logsearch_solr_znode = None
        zookeeper_hosts = self.getHostNamesWithComponent('ZOOKEEPER', 'ZOOKEEPER_SERVER', services)
        zookeeper_host_arr = []
        zookeeper_port = self.getZKPort(services)
        for i in range(len(zookeeper_hosts)):
            zookeeper_host = ((zookeeper_hosts[i] + ':') + zookeeper_port)
            if (logsearch_solr_znode is not None):
                zookeeper_host += logsearch_solr_znode
            zookeeper_host_arr.append(zookeeper_host)
        solr_zookeeper_url = ','.join(zookeeper_host_arr)
        putAtlasApplicationProperty('atlas.graph.index.search.solr.zookeeper-url', solr_zookeeper_url)
    else:
        putAtlasApplicationProperty('atlas.graph.index.search.solr.zookeeper-url', '')
    if ('KAFKA' in servicesList):
        kafka_hosts = self.getHostNamesWithComponent('KAFKA', 'KAFKA_BROKER', services)
        if ('port' in services['configurations']['kafka-broker']['properties']):
            kafka_broker_port = services['configurations']['kafka-broker']['properties']['port']
        else:
            kafka_broker_port = '6667'
        kafka_host_arr = []
        for i in range(len(kafka_hosts)):
            kafka_host_arr.append(((kafka_hosts[i] + ':') + kafka_broker_port))
        kafka_bootstrap_servers = ','.join(kafka_host_arr)
        if ('zookeeper.connect' in services['configurations']['kafka-broker']['properties']):
            kafka_zookeeper_connect = services['configurations']['kafka-broker']['properties']['zookeeper.connect']
        else:
            kafka_zookeeper_connect = None
        putAtlasApplicationProperty('atlas.kafka.bootstrap.servers', kafka_bootstrap_servers)
        putAtlasApplicationProperty('atlas.kafka.zookeeper.connect', kafka_zookeeper_connect)
    else:
        putAtlasApplicationProperty('atlas.kafka.bootstrap.servers', '')
        putAtlasApplicationProperty('atlas.kafka.zookeeper.connect', '')
    if ('HBASE' in servicesList):
        hbase_zookeeper_quorum = services['configurations']['hbase-site']['properties']['hbase.zookeeper.quorum']
        putAtlasApplicationProperty('atlas.graph.storage.hostname', hbase_zookeeper_quorum)
        putAtlasApplicationProperty('atlas.audit.hbase.zookeeper.quorum', hbase_zookeeper_quorum)
    else:
        putAtlasApplicationProperty('atlas.graph.storage.hostname', '')
        putAtlasApplicationProperty('atlas.audit.hbase.zookeeper.quorum', '')
    if (('ranger-env' in services['configurations']) and ('ranger-atlas-plugin-properties' in services['configurations']) and ('ranger-atlas-plugin-enabled' in services['configurations']['ranger-env']['properties'])):
        ranger_atlas_plugin_enabled = services['configurations']['ranger-env']['properties']['ranger-atlas-plugin-enabled']
        putAtlasRangerPluginProperty('ranger-atlas-plugin-enabled', ranger_atlas_plugin_enabled)
    ranger_atlas_plugin_enabled = ''
    if (('ranger-atlas-plugin-properties' in configurations) and ('ranger-atlas-plugin-enabled' in configurations['ranger-atlas-plugin-properties']['properties'])):
        ranger_atlas_plugin_enabled = configurations['ranger-atlas-plugin-properties']['properties']['ranger-atlas-plugin-enabled']
    elif (('ranger-atlas-plugin-properties' in services['configurations']) and ('ranger-atlas-plugin-enabled' in services['configurations']['ranger-atlas-plugin-properties']['properties'])):
        ranger_atlas_plugin_enabled = services['configurations']['ranger-atlas-plugin-properties']['properties']['ranger-atlas-plugin-enabled']
    if (ranger_atlas_plugin_enabled and (ranger_atlas_plugin_enabled.lower() == 'Yes'.lower())):
        putAtlasApplicationProperty('atlas.authorizer.impl', 'ranger')
    else:
        putAtlasApplicationProperty('atlas.authorizer.impl', 'simple')
