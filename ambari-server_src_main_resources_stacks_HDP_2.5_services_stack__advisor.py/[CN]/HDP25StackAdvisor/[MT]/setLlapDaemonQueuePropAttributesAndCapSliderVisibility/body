def setLlapDaemonQueuePropAttributesAndCapSliderVisibility(self, services, configurations):
    Logger.info("Determining 'hive.llap.daemon.queue.name' config Property Attributes.")
    putHiveInteractiveSitePropertyAttribute = self.putPropertyAttribute(configurations, self.HIVE_INTERACTIVE_SITE)
    putHiveInteractiveEnvPropertyAttribute = self.putPropertyAttribute(configurations, 'hive-interactive-env')
    capacity_scheduler_properties = dict()
    if ('capacity-scheduler' in configurations):
        cap_sched_props_as_dict = configurations['capacity-scheduler']['properties']
        if ('capacity-scheduler' in cap_sched_props_as_dict):
            cap_sched_props_as_str = configurations['capacity-scheduler']['properties']['capacity-scheduler']
            if cap_sched_props_as_str:
                cap_sched_props_as_str = str(cap_sched_props_as_str).split('\n')
                if ((len(cap_sched_props_as_str) > 0) and (cap_sched_props_as_str[0] != 'null')):
                    for property in cap_sched_props_as_str:
                        (key, sep, value) = property.partition('=')
                        capacity_scheduler_properties[key] = value
                    Logger.info("'capacity-scheduler' configs is set as a single '\\n' separated string in current invocation. count(configurations['capacity-scheduler']['properties']['capacity-scheduler']) = {0}".format(len(capacity_scheduler_properties)))
                else:
                    Logger.info("Read configurations['capacity-scheduler']['properties']['capacity-scheduler'] is : {0}".format(cap_sched_props_as_str))
            else:
                Logger.info("configurations['capacity-scheduler']['properties']['capacity-scheduler'] : {0}.".format(cap_sched_props_as_str))
        if (not capacity_scheduler_properties):
            if (isinstance(cap_sched_props_as_dict, dict) and (len(cap_sched_props_as_dict) > 1)):
                capacity_scheduler_properties = cap_sched_props_as_dict
                Logger.info("'capacity-scheduler' changed in current Stack Advisor invocation. Retrieved the configs as dictionary from configurations.")
            else:
                Logger.info("Read configurations['capacity-scheduler']['properties'] is : {0}".format(cap_sched_props_as_dict))
    else:
        Logger.info("'capacity-scheduler' not modified in the current Stack Advisor invocation.")
    if (not capacity_scheduler_properties):
        (capacity_scheduler_properties, received_as_key_value_pair) = self.getCapacitySchedulerProperties(services)
        Logger.info("'capacity-scheduler' not changed in current Stack Advisor invocation. Retrieved the configs from services.")
    leafQueueNames = self.getAllYarnLeafQueues(capacity_scheduler_properties)
    if leafQueueNames:
        leafQueues = [{'label': str(queueName), 'value': queueName, } for queueName in leafQueueNames]
        leafQueues = sorted(leafQueues, key=(lambda q: q['value']))
        putHiveInteractiveSitePropertyAttribute('hive.llap.daemon.queue.name', 'entries', leafQueues)
        Logger.info("'hive.llap.daemon.queue.name' config Property Attributes set to : {0}".format(leafQueues))
        llap_daemon_selected_queue_name = None
        llap_queue_selected_in_current_call = None
        if ((self.HIVE_INTERACTIVE_SITE in services['configurations']) and ('hive.llap.daemon.queue.name' in services['configurations'][self.HIVE_INTERACTIVE_SITE]['properties'])):
            llap_daemon_selected_queue_name = services['configurations'][self.HIVE_INTERACTIVE_SITE]['properties']['hive.llap.daemon.queue.name']
        if ((self.HIVE_INTERACTIVE_SITE in configurations) and ('hive.llap.daemon.queue.name' in configurations[self.HIVE_INTERACTIVE_SITE]['properties'])):
            llap_queue_selected_in_current_call = configurations[self.HIVE_INTERACTIVE_SITE]['properties']['hive.llap.daemon.queue.name']
        if ((len(leafQueueNames) == 2) and (((llap_daemon_selected_queue_name != None) and (llap_daemon_selected_queue_name == 'llap')) or ((llap_queue_selected_in_current_call != None) and (llap_queue_selected_in_current_call == 'llap')))):
            putHiveInteractiveEnvPropertyAttribute('llap_queue_capacity', 'visible', 'true')
            Logger.info("Setting LLAP queue capacity slider visibility to 'True'.")
        else:
            putHiveInteractiveEnvPropertyAttribute('llap_queue_capacity', 'visible', 'false')
            Logger.info("Setting LLAP queue capacity slider visibility to 'False'.")
    else:
        Logger.error("Problem retrieving YARN queues. Skipping updating HIVE Server Interactve 'hive.server2.tez.default.queues' property attributes.")
