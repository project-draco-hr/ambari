def recommendYARNConfigurations(self, configurations, clusterData, services, hosts):
    super(HDP25StackAdvisor, self).recommendYARNConfigurations(configurations, clusterData, services, hosts)
    if (('hive-interactive-env' in services['configurations']) and ('enable_hive_interactive' in services['configurations']['hive-interactive-env']['properties'])):
        enable_hive_interactive = services['configurations']['hive-interactive-env']['properties']['enable_hive_interactive']
        LLAP_QUEUE_NAME = 'llap'
        if (enable_hive_interactive == 'true'):
            self.checkAndManageLlapQueue(services, configurations, hosts, LLAP_QUEUE_NAME)
            self.updateLlapConfigs(configurations, services, hosts, LLAP_QUEUE_NAME)
        else:
            self.checkAndStopLlapQueue(services, configurations, LLAP_QUEUE_NAME)
    putYarnSiteProperty = self.putProperty(configurations, 'yarn-site', services)
    stack_root = '/usr/hdp'
    if (('cluster-env' in services['configurations']) and ('stack_root' in services['configurations']['cluster-env']['properties'])):
        stack_root = services['configurations']['cluster-env']['properties']['stack_root']
    timeline_plugin_classes_values = []
    timeline_plugin_classpath_values = []
    if self.__isServiceDeployed(services, 'TEZ'):
        timeline_plugin_classes_values.append('org.apache.tez.dag.history.logging.ats.TimelineCachePluginImpl')
    if self.__isServiceDeployed(services, 'SPARK'):
        timeline_plugin_classes_values.append('org.apache.spark.deploy.history.yarn.plugin.SparkATSPlugin')
        timeline_plugin_classpath_values.append((stack_root + '/${hdp.version}/spark/hdpLib/*'))
    putYarnSiteProperty('yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes', ','.join(timeline_plugin_classes_values))
    putYarnSiteProperty('yarn.timeline-service.entity-group-fs-store.group-id-plugin-classpath', ':'.join(timeline_plugin_classpath_values))
