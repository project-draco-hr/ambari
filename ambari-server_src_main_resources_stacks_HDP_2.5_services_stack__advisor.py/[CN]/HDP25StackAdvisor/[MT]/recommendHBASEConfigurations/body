def recommendHBASEConfigurations(self, configurations, clusterData, services, hosts):
    super(HDP25StackAdvisor, self).recommendHBASEConfigurations(configurations, clusterData, services, hosts)
    putHbaseSiteProperty = self.putProperty(configurations, 'hbase-site', services)
    appendCoreSiteProperty = self.updateProperty(configurations, 'core-site', services)
    if (('cluster-env' in services['configurations']) and ('security_enabled' in services['configurations']['cluster-env']['properties']) and (services['configurations']['cluster-env']['properties']['security_enabled'].lower() == 'true')):
        putHbaseSiteProperty('hbase.master.ui.readonly', 'true')
        phoenix_query_server_hosts = self.get_phoenix_query_server_hosts(services, hosts)
        Logger.debug(('Calculated Phoenix Query Server hosts: %s' % str(phoenix_query_server_hosts)))
        if phoenix_query_server_hosts:
            Logger.debug(('Attempting to update hadoop.proxyuser.HTTP.hosts with %s' % str(phoenix_query_server_hosts)))
            new_value = ','.join(phoenix_query_server_hosts)

            def updateCallback(originalValue, newValue):
                Logger.debug(('Original hadoop.proxyuser.HTTP.hosts value %s, appending %s' % (originalValue, newValue)))
                if (originalValue and (not originalValue.isspace())):
                    hosts = originalValue.split(',')
                    if (newValue and (not newValue.isspace())):
                        hosts.extend(newValue.split(','))
                    result = ','.join(set(hosts))
                    Logger.debug(('Setting final to %s' % result))
                    return result
                else:
                    Logger.debug(('Setting final value to %s' % newValue))
                    return newValue
            appendCoreSiteProperty('hadoop.proxyuser.HTTP.hosts', new_value, updateCallback)
        else:
            Logger.debug('No phoenix query server hosts to update')
    else:
        putHbaseSiteProperty('hbase.master.ui.readonly', 'false')
