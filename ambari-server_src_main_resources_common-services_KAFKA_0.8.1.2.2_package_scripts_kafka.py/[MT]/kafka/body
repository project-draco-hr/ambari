def kafka():
    import params
    Directory([params.kafka_log_dir, params.kafka_pid_dir, params.conf_dir], mode=493, cd_access='a', owner=params.kafka_user, group=params.user_group, recursive=True)
    kafka_server_config = mutable_config_dict(params.config['configurations']['kafka-broker'])
    if ((params.hdp_stack_version != '') and (compare_versions(params.hdp_stack_version, '2.2.0.0') >= 0) and (compare_versions(params.hdp_stack_version, '2.3.0.0') < 0)):
        brokerid = str(sorted(params.kafka_hosts).index(params.hostname))
        kafka_server_config['broker.id'] = brokerid
    if ((params.hdp_stack_version != '') and (compare_versions(params.hdp_stack_version, '2.3.0.0') >= 0)):
        if (params.security_enabled and params.kafka_kerberos_enabled):
            listeners = kafka_server_config['listeners'].replace('localhost', params.hostname).replace('PLAINTEXT', 'PLAINTEXTSASL')
            kafka_server_config['listeners'] = listeners
            kafka_server_config['advertised.listeners'] = listeners
        else:
            listeners = kafka_server_config['listeners'].replace('localhost', params.hostname)
            kafka_server_config['listeners'] = listeners
            if ('advertised.listeners' in kafka_server_config):
                advertised_listeners = kafka_server_config['advertised.listeners'].replace('localhost', params.hostname)
                kafka_server_config['advertised.listeners'] = advertised_listeners
    else:
        kafka_server_config['host.name'] = params.hostname
    if params.has_metric_collector:
        kafka_server_config['kafka.timeline.metrics.host'] = params.metric_collector_host
        kafka_server_config['kafka.timeline.metrics.port'] = params.metric_collector_port
    kafka_data_dir = kafka_server_config['log.dirs']
    Directory(filter(None, kafka_data_dir.split(',')), mode=493, cd_access='a', owner=params.kafka_user, group=params.user_group, recursive=True)
    PropertiesFile('server.properties', dir=params.conf_dir, properties=kafka_server_config, owner=params.kafka_user, group=params.user_group)
    File(format('{conf_dir}/kafka-env.sh'), owner=params.kafka_user, content=InlineTemplate(params.kafka_env_sh_template))
    if (params.log4j_props != None):
        File(format('{conf_dir}/log4j.properties'), mode=420, group=params.user_group, owner=params.kafka_user, content=params.log4j_props)
    if (params.security_enabled and params.kafka_kerberos_enabled):
        TemplateConfig(format('{conf_dir}/kafka_jaas.conf'), owner=params.kafka_user)
        TemplateConfig(format('{conf_dir}/kafka_client_jaas.conf'), owner=params.kafka_user)
    Directory(params.limits_conf_dir, recursive=True, owner='root', group='root')
    File(os.path.join(params.limits_conf_dir, 'kafka.conf'), owner='root', group='root', mode=420, content=Template('kafka.conf.j2'))
    setup_symlink(params.kafka_managed_pid_dir, params.kafka_pid_dir)
    setup_symlink(params.kafka_managed_log_dir, params.kafka_log_dir)
