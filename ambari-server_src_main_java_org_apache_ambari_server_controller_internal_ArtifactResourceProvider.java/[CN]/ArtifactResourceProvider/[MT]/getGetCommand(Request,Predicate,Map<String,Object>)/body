{
  return new Command<Set<Resource>>(){
    @Override public Set<Resource> invoke() throws AmbariException {
      String name=(String)properties.get(ARTIFACT_NAME_PROPERTY);
      validateParent(properties);
      Set<Resource> matchingResources=new HashSet<Resource>();
      TreeMap<String,String> foreignKeys=createForeignKeyMap(properties);
      Set<String> requestPropertyIds=getRequestPropertyIds(request,predicate);
      if (name != null) {
        ArtifactEntity entity=artifactDAO.findByNameAndForeignKeys(name,foreignKeys);
        if (entity != null) {
          Resource instance=(toResource(entity,requestPropertyIds));
          if (predicate.evaluate(instance)) {
            matchingResources.add(instance);
          }
        }
      }
 else {
        List<ArtifactEntity> results=artifactDAO.findByForeignKeys(foreignKeys);
        for (        ArtifactEntity entity : results) {
          Resource resource=toResource(entity,requestPropertyIds);
          if (predicate.evaluate(resource)) {
            matchingResources.add(resource);
          }
        }
      }
      return matchingResources;
    }
  }
;
}
