{
  return new Command<Void>(){
    @Override public Void invoke() throws AmbariException {
      Map<String,Object> keyProperties=new HashMap<String,Object>();
      for (      Map.Entry<String,Object> entry : resource.getPropertiesMap().get("Artifacts").entrySet()) {
        keyProperties.put(String.format("Artifacts/%s",entry.getKey()),entry.getValue());
      }
      String artifactName=String.valueOf(resource.getPropertyValue(ARTIFACT_NAME_PROPERTY));
      TreeMap<String,String> artifactForeignKeys=createForeignKeyMap(keyProperties);
      ArtifactEntity entity=artifactDAO.findByNameAndForeignKeys(artifactName,artifactForeignKeys);
      if (entity != null) {
        LOG.info("Deleting Artifact: name = {}, foreign keys = {}",entity.getArtifactName(),entity.getForeignKeys());
        artifactDAO.remove(entity);
      }
 else {
        LOG.info("Cannot find Artifact to delete, ignoring: name = {}, foreign keys = {}",artifactName,artifactForeignKeys);
      }
      return null;
    }
  }
;
}
