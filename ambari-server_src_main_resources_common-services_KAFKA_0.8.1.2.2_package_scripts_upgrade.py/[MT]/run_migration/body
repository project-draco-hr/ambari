def run_migration(env, upgrade_type):
    '\n  If the acl migration script is present, then run it for either upgrade or downgrade.\n  That script was introduced in HDP 2.3.4.0 and requires stopping all Kafka brokers first.\n  Requires configs to be present.\n  :param env: Environment.\n  :param upgrade_type: "rolling" or "nonrolling\n  '
    import params
    if (upgrade_type is None):
        raise Fail('Parameter "upgrade_type" is missing.')
    if (params.upgrade_direction is None):
        raise Fail('Parameter "upgrade_direction" is missing.')
    if ((params.upgrade_direction == Direction.DOWNGRADE) and (params.downgrade_from_version is None)):
        raise Fail('Parameter "downgrade_from_version" is missing.')
    Logger.info('Upgrade type: {0}, direction: {1}'.format(str(upgrade_type), params.upgrade_direction))
    kafka_acls_script = None
    command_suffix = ''
    if (params.upgrade_direction == Direction.UPGRADE):
        kafka_acls_script = format('/usr/hdp/{version}/kafka/bin/kafka-acls.sh')
        command_suffix = '--upgradeAcls'
    elif (params.upgrade_direction == Direction.DOWNGRADE):
        kafka_acls_script = format('/usr/hdp/{downgrade_from_version}/kafka/bin/kafka-acls.sh')
        command_suffix = '--downgradeAcls'
    if (kafka_acls_script is not None):
        if os.path.exists(kafka_acls_script):
            Logger.info('Found Kafka acls script: {0}'.format(kafka_acls_script))
            if (params.zookeeper_port is None):
                raise Fail('Could not retrieve Zookeeper Port number for localhost from property kafka-broker/zookeeper.connect')
            zookeeper_localhost_port = ('localhost:' + params.zookeeper_port)
            acls_command = '{0} --authorizer kafka.security.auth.SimpleAclAuthorizer --authorizer-properties zookeeper.connect={1} {2}'.format(kafka_acls_script, zookeeper_localhost_port, command_suffix)
            Execute(acls_command, user=params.kafka_user, logoutput=True)
        else:
            Logger.info('Did not find Kafka acls script: {0}'.format(kafka_acls_script))
