@patch('socket.getfqdn', side_effect=fqdn_mock_result)
def test_getComponentLayoutValidations_hawq_3_Hosts(self, socket_mock):
    ' Test layout validations for HAWQ components on a 3-node cluster '
    services = self.load_json('services-normal-hawq-3-hosts.json')
    componentsList = self.getComponentsListFromServices(services)
    hawqMasterHosts = self.getHosts(componentsList, 'HAWQMASTER')['hostnames']
    hawqStandbyHosts = self.getHosts(componentsList, 'HAWQSTANDBY')['hostnames']
    self.assertEquals(len(hawqMasterHosts), 1)
    self.assertEquals(len(hawqStandbyHosts), 1)
    self.assertNotEquals(hawqMasterHosts[0], hawqStandbyHosts[0])
    hosts = self.load_json('hosts-3-hosts.json')
    hostsList = [host['Hosts']['host_name'] for host in hosts['items']]
    self.assertEquals(len(hostsList), 3)
    self.insertHAWQServiceAdvisorInfo(services)
    validations = self.serviceAdvisor.getComponentLayoutValidations(services, hosts)
    self.assertEquals(len(validations), 0)
    services = self.load_json('services-master_standby_colo-3-hosts.json')
    componentsList = self.getComponentsListFromServices(services)
    hawqMasterHosts = self.getHosts(componentsList, 'HAWQMASTER')['hostnames']
    hawqStandbyHosts = self.getHosts(componentsList, 'HAWQSTANDBY')['hostnames']
    self.assertEquals(len(hawqMasterHosts), 1)
    self.assertEquals(len(hawqStandbyHosts), 1)
    self.assertEquals(hawqMasterHosts[0], hawqStandbyHosts[0])
    self.insertHAWQServiceAdvisorInfo(services)
    validations = self.serviceAdvisor.getComponentLayoutValidations(services, hosts)
    self.assertEquals(len(validations), 1)
    expected = {'component-name': 'HAWQSTANDBY', 'message': 'HAWQ Master and HAWQ Standby Master cannot be deployed on the same host.', 'type': 'host-component', 'host': 'c6403.ambari.apache.org', 'level': 'ERROR', }
    self.assertEquals(validations[0], expected)
    services = self.load_json('services-master_ambari_colo-3-hosts.json')
    componentsList = self.getComponentsListFromServices(services)
    hawqMasterHosts = self.getHosts(componentsList, 'HAWQMASTER')['hostnames']
    hawqStandbyHosts = self.getHosts(componentsList, 'HAWQSTANDBY')['hostnames']
    self.assertEquals(len(hawqMasterHosts), 1)
    self.assertEquals(len(hawqStandbyHosts), 1)
    self.assertNotEquals(hawqMasterHosts[0], hawqStandbyHosts[0])
    self.assertEquals(hawqMasterHosts[0], 'c6401.ambari.apache.org')
    self.insertHAWQServiceAdvisorInfo(services)
    validations = self.serviceAdvisor.getComponentLayoutValidations(services, hosts)
    self.assertEquals(len(validations), 1)
    expected = {'component-name': 'HAWQMASTER', 'message': (('The default Postgres port (5432) on the Ambari Server conflicts with the default HAWQ Masters port. ' + 'If you are using port 5432 for Postgres, you must either deploy the HAWQ Master on a different host ') + 'or configure a different port for the HAWQ Masters in the HAWQ Configuration page.'), 'type': 'host-component', 'host': 'c6401.ambari.apache.org', 'level': 'WARN', }
    self.assertEquals(validations[0], expected)
    services = self.load_json('services-standby_ambari_colo-3-hosts.json')
    componentsList = self.getComponentsListFromServices(services)
    hawqMasterHosts = self.getHosts(componentsList, 'HAWQMASTER')['hostnames']
    hawqStandbyHosts = self.getHosts(componentsList, 'HAWQSTANDBY')['hostnames']
    self.assertEquals(len(hawqMasterHosts), 1)
    self.assertEquals(len(hawqStandbyHosts), 1)
    self.assertNotEquals(hawqMasterHosts[0], hawqStandbyHosts[0])
    self.assertEquals(hawqStandbyHosts[0], 'c6401.ambari.apache.org')
    self.insertHAWQServiceAdvisorInfo(services)
    validations = self.serviceAdvisor.getComponentLayoutValidations(services, hosts)
    self.assertEquals(len(validations), 1)
    expected = {'component-name': 'HAWQSTANDBY', 'message': (('The default Postgres port (5432) on the Ambari Server conflicts with the default HAWQ Masters port. ' + 'If you are using port 5432 for Postgres, you must either deploy the HAWQ Standby Master on a different host ') + 'or configure a different port for the HAWQ Masters in the HAWQ Configuration page.'), 'type': 'host-component', 'host': 'c6401.ambari.apache.org', 'level': 'WARN', }
    self.assertEquals(validations[0], expected)
