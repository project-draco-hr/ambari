def test_createComponentLayoutRecommendations_hawq_3_Hosts(self):
    ' Test that HAWQSTANDBY is recommended on a 3-node cluster '
    services = self.load_json('services-hawq-3-hosts.json')
    componentNames = self.getComponentsFromServices(services)
    self.assertTrue(('HAWQSTANDBY' in componentNames))
    hosts = self.load_json('hosts-3-hosts.json')
    hostsList = [host['Hosts']['host_name'] for host in hosts['items']]
    self.assertEquals(len(hostsList), 3)
    self.insertHAWQServiceAdvisorInfo(services)
    recommendations = self.serviceAdvisor.recommendComponentLayout(services, hosts)
    recommendedComponents = self.getComponentsFromRecommendations(recommendations)
    self.assertTrue(('HAWQMASTER' in recommendedComponents))
    self.assertTrue(('HAWQSTANDBY' in recommendedComponents))
    self.assertTrue(('HAWQSEGMENT' in recommendedComponents))
    componentsListList = [hostgroup['components'] for hostgroup in recommendations['recommendations']['blueprint']['host_groups']]
    for sublist in componentsListList:
        hostComponents = [item['name'] for item in sublist]
        self.assertFalse({'HAWQMASTER', 'HAWQSTANDBY'}.issubset(hostComponents))
