def test_recommendHAWQConfigurations(self):
    hosts = {'items': [{'Hosts': {'host_name': 'c6401.ambari.apache.org', 'cpu_count': 2, 'total_mem': 33554432, }, }, {'Hosts': {'host_name': 'c6402.ambari.apache.org', 'cpu_count': 4, 'total_mem': 33554433, }, }, {'Hosts': {'host_name': 'c6403.ambari.apache.org', 'cpu_count': 1, 'total_mem': 33554434, }, }, {'Hosts': {'host_name': 'c6404.ambari.apache.org', 'cpu_count': 2, 'total_mem': 33554435, }, }], }
    services = self.load_json('services-normal-hawq-3-hosts.json')
    componentsList = self.getComponentsListFromServices(services)
    hawqSegmentComponent = self.getHosts(componentsList, 'HAWQSEGMENT')
    services['configurations']['hawq-site'] = {'properties': {'default_hash_table_bucket_number': '24', 'hawq_rm_nvseg_perquery_limit': '512', 'hawq_rm_yarn_address': 'localhost:8032', 'hawq_rm_yarn_scheduler_address': 'localhost:8030', 'hawq_global_rm_type': 'none', 'hawq_rm_nvseg_perquery_perseg_limit': '6', }, }
    services['configurations']['hdfs-client'] = {'properties': {'output.replace-datanode-on-failure': 'true', }, }
    services['configurations']['hawq-sysctl-env'] = {'properties': {}, }
    services['configurations']['yarn-site'] = {'properties': {'yarn.resourcemanager.address': 'host1:8050', 'yarn.resourcemanager.scheduler.address': 'host1:8030', }, }
    services['services'].append({'StackServices': {'service_name': 'YARN', }, 'components': [], })
    configurations = {}
    clusterData = {}
    self.insertHAWQServiceAdvisorInfo(services)
    self.assertEquals(len(hawqSegmentComponent['hostnames']), 3)
    self.serviceAdvisor.getServiceConfigurationRecommendations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations['hawq-site']['properties']['default_hash_table_bucket_number'], str((3 * 6)))
    self.assertEquals(configurations['hdfs-client']['properties']['output.replace-datanode-on-failure'], 'false')
    self.assertEquals(configurations['hawq-site']['properties']['hawq_rm_yarn_address'], 'host1:8050')
    self.assertEquals(configurations['hawq-site']['properties']['hawq_rm_yarn_scheduler_address'], 'host1:8030')
    hawqSegmentComponent['hostnames'] = [('host' + str(i)) for i in range(100)]
    self.serviceAdvisor.getServiceConfigurationRecommendations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations['hawq-site']['properties']['default_hash_table_bucket_number'], str((100 * 5)))
    self.assertEquals(configurations['hdfs-client']['properties']['output.replace-datanode-on-failure'], 'true')
    hawqSegmentComponent['hostnames'] = [('host' + str(i)) for i in range(512)]
    self.serviceAdvisor.getServiceConfigurationRecommendations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations['hawq-site']['properties']['default_hash_table_bucket_number'], '512')
    self.assertEquals(configurations['hdfs-client']['properties']['output.replace-datanode-on-failure'], 'true')
    hawqSegmentComponent['hostnames'] = [('host' + str(i)) for i in range(513)]
    self.serviceAdvisor.getServiceConfigurationRecommendations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations['hawq-site']['properties']['default_hash_table_bucket_number'], '512')
    self.assertEquals(configurations['hdfs-client']['properties']['output.replace-datanode-on-failure'], 'true')
    configurations = {}
    services['configurations']['hawq-site'] = {'properties': {'hawq_global_rm_type': 'none', }, }
    hawqSegmentComponent['hostnames'] = []
    self.serviceAdvisor.getServiceConfigurationRecommendations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations['hdfs-client']['properties']['output.replace-datanode-on-failure'], 'false')
    self.assertTrue(('default_hash_table_bucket_number' not in configurations['hawq-site']))
