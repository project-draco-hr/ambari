{
  if (LOG.isDebugEnabled()) {
    LOG.debug(event.toString());
  }
  try {
    Cluster cluster=clusters.get().getClusterById(event.getClusterId());
    Set<String> changedRepositoryVersions=new HashSet<String>();
    StackId currentStackId=cluster.getCurrentStackVersion();
    Map<String,ServiceComponent> serviceComponents=cluster.getService(event.getServiceName()).getServiceComponents();
    Set<String> affectedHosts=new HashSet<String>();
    for (    ServiceComponent component : serviceComponents.values()) {
      for (      String hostname : component.getServiceComponentHosts().keySet()) {
        affectedHosts.add(hostname);
      }
    }
    for (    String hostName : affectedHosts) {
      List<HostVersionEntity> hostVersionEntities=hostVersionDAO.get().findByClusterAndHost(cluster.getClusterName(),hostName);
      for (      HostVersionEntity hostVersionEntity : hostVersionEntities) {
        StackEntity hostStackEntity=hostVersionEntity.getRepositoryVersion().getStack();
        StackId hostStackId=new StackId(hostStackEntity.getStackName(),hostStackEntity.getStackVersion());
        if (currentStackId.equals(hostStackId) && hostVersionEntity.getState().equals(RepositoryVersionState.INSTALLED)) {
          hostVersionEntity.setState(RepositoryVersionState.OUT_OF_SYNC);
          hostVersionDAO.get().merge(hostVersionEntity);
          changedRepositoryVersions.add(hostVersionEntity.getRepositoryVersion().getVersion());
        }
      }
    }
    for (    String version : changedRepositoryVersions) {
      cluster.recalculateClusterVersionState(currentStackId,version);
    }
  }
 catch (  AmbariException e) {
    LOG.error("Can not update hosts about out of sync",e);
  }
}
