{
  List<UserModel> userlist=new ArrayList<>();
  Connection conn=null;
  Statement stmt=null;
  conn=DataSourceHueDatabase.getInstance(view.getProperties().get("huedrivername"),view.getProperties().get("huejdbcurl"),view.getProperties().get("huedbusername"),view.getProperties().get("huedbpassword")).getConnection();
  conn.setAutoCommit(false);
  stmt=conn.createStatement();
  UserModel all=new UserModel();
  all.setId(-1);
  all.setUsername("all");
  PreparedStatement prSt;
  userlist.add(all);
  ResultSet rs1=null;
  QuerySet huedatabase=null;
  if (view.getProperties().get("huedrivername").contains("mysql")) {
    huedatabase=new MysqlQuerySet();
  }
 else   if (view.getProperties().get("huedrivername").contains("postgresql")) {
    huedatabase=new PostgressQuerySet();
  }
 else   if (view.getProperties().get("huedrivername").contains("sqlite")) {
    huedatabase=new SqliteQuerySet();
  }
 else   if (view.getProperties().get("huedrivername").contains("oracle")) {
    huedatabase=new OracleQuerySet();
  }
  prSt=huedatabase.getUserDetails(conn);
  rs1=prSt.executeQuery();
  while (rs1.next()) {
    UserModel I=new UserModel();
    I.setUsername(rs1.getString(2));
    I.setId(rs1.getInt(1));
    System.out.println(rs1.getString(2));
    userlist.add(I);
  }
  rs1.close();
  stmt.close();
  return userlist;
}
