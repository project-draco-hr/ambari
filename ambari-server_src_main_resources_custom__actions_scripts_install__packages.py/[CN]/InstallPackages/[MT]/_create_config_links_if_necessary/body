def _create_config_links_if_necessary(self, stack_id, stack_version):
    '\n    Sets up the required structure for /etc/<component>/conf symlinks and <stack-root>/current\n    configuration symlinks IFF the current stack is < HDP 2.3+ and the new stack is >= HDP 2.3\n\n    stack_id:  stack id, ie HDP-2.3\n    stack_version:  version to set, ie 2.3.0.0-1234\n    '
    if (stack_id is None):
        Logger.info('Cannot create config links when stack_id is not defined')
        return
    args = stack_id.upper().split('-')
    if (len(args) != 2):
        Logger.info('Unrecognized stack id {0}, cannot create config links'.format(stack_id))
        return
    if (args[0] != 'HDP'):
        Logger.info('Unrecognized stack name {0}, cannot create config links'.format(args[0]))
    if (compare_versions(format_stack_version(args[1]), '2.3.0.0') < 0):
        Logger.info('Configuration symlinks are not needed for {0}, only HDP-2.3+'.format(stack_version))
        return
    for (package_name, directories) in conf_select.get_package_dirs().iteritems():
        if (self.current_stack_version_formatted and (compare_versions(self.current_stack_version_formatted, '2.3') >= 0)):
            conf_selector_name = stack_tools.get_stack_tool_name(stack_tools.CONF_SELECTOR_NAME)
            Logger.info('The current cluster stack of {0} does not require backing up configurations; only {1} versioned config directories will be created.'.format(stack_version, conf_selector_name))
            conf_select.select('HDP', package_name, stack_version, ignore_errors=True)
        else:
            conf_select.convert_conf_directories_to_symlinks(package_name, stack_version, directories, skip_existing_links=False, link_to='backup')
