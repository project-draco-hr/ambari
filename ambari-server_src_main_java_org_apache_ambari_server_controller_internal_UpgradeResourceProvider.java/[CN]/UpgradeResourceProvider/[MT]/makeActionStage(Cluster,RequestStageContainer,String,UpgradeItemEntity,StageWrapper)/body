{
  if (0 == wrapper.getHosts().size()) {
    throw new AmbariException(String.format("Cannot create action for '%s' with no hosts",wrapper.getText()));
  }
  RequestResourceFilter filter=new RequestResourceFilter("","",new ArrayList<String>(wrapper.getHosts()));
  Map<String,String> params=new HashMap<String,String>();
  params.put("tasks",entity.getTasks());
  ActionExecutionContext actionContext=new ActionExecutionContext(cluster.getClusterName(),"ru_execute_tasks",Collections.singletonList(filter),params);
  actionContext.setTimeout(Short.valueOf((short)60));
  Map<String,String> hostLevelParams=new HashMap<String,String>();
  hostLevelParams.put(JDK_LOCATION,getManagementController().getJdkResourceUrl());
  Stage stage=stageFactory.get().createNew(request.getId().longValue(),"/tmp/ambari",cluster.getClusterName(),cluster.getClusterId(),entity.getText(),"{}","{}",StageUtils.getGson().toJson(hostLevelParams));
  long stageId=request.getLastStageId() + 1;
  if (0L == stageId) {
    stageId=1L;
  }
  stage.setStageId(stageId);
  entity.setStageId(Long.valueOf(stageId));
  actionExecutionHelper.get().addExecutionCommandsToStage(actionContext,stage);
  for (  Map<String,HostRoleCommand> map : stage.getHostRoleCommands().values()) {
    for (    HostRoleCommand hrc : map.values()) {
      hrc.setCommandDetail(entity.getText());
    }
  }
  request.addStages(Collections.singletonList(stage));
}
