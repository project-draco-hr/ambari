{
  RequestResourceFilter filter=new RequestResourceFilter(holder.service,holder.component,new ArrayList<String>(holder.hosts));
  ActionExecutionContext actionContext=new ActionExecutionContext(cluster.getClusterName(),"RESTART",Collections.singletonList(filter),Collections.<String,String>emptyMap());
  actionContext.setTimeout(Short.valueOf((short)-1));
  ExecuteCommandJson jsons=commandExecutionHelper.get().getCommandJson(actionContext,cluster);
  Stage stage=stageFactory.get().createNew(request.getId().longValue(),"/tmp/ambari",cluster.getClusterName(),cluster.getClusterId(),holder.upgradeItemEntity.getText(),jsons.getClusterHostInfo(),jsons.getCommandParamsForStage(),jsons.getHostParamsForStage());
  long stageId=request.getLastStageId() + 1;
  if (0L == stageId) {
    stageId=1L;
  }
  stage.setStageId(stageId);
  Map<String,String> requestParams=new HashMap<String,String>();
  requestParams.put("command","RESTART");
  commandExecutionHelper.get().addExecutionCommandsToStage(actionContext,stage,requestParams);
  request.addStages(Collections.singletonList(stage));
}
