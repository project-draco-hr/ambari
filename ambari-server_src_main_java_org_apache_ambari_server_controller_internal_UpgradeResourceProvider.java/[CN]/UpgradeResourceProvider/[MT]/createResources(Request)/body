{
  Set<Map<String,Object>> requestMaps=request.getProperties();
  if (requestMaps.size() > 1) {
    throw new SystemException("Can only initiate one upgrade per request.");
  }
  final Map<String,Object> requestMap=requestMaps.iterator().next();
  final Map<String,String> requestInfoProps=request.getRequestInfoProperties();
  UpgradeEntity entity=createResources(new Command<UpgradeEntity>(){
    @Override public UpgradeEntity invoke() throws AmbariException, AuthorizationException {
      String forceDowngrade=requestInfoProps.get(UpgradeResourceDefinition.DOWNGRADE_DIRECTIVE);
      String clusterName=(String)requestMap.get(UPGRADE_CLUSTER_NAME);
      if (null == clusterName) {
        throw new AmbariException(String.format("%s is required",UPGRADE_CLUSTER_NAME));
      }
      Cluster cluster=getManagementController().getClusters().getCluster(clusterName);
      Direction direction=Boolean.parseBoolean(forceDowngrade) ? Direction.DOWNGRADE : Direction.UPGRADE;
      UpgradePack up=validateRequest(direction,requestMap);
      try {
        return createUpgrade(cluster,direction,up,requestMap);
      }
 catch (      Exception e) {
        LOG.error("Error appears during upgrade task submitting",e);
        cluster.invalidateData();
        throw e;
      }
    }
  }
);
  if (null == entity) {
    throw new SystemException("Could not load upgrade");
  }
  notifyCreate(Resource.Type.Upgrade,request);
  Resource res=new ResourceImpl(Resource.Type.Upgrade);
  res.setProperty(UPGRADE_REQUEST_ID,entity.getRequestId());
  return new RequestStatusImpl(null,Collections.singleton(res));
}
