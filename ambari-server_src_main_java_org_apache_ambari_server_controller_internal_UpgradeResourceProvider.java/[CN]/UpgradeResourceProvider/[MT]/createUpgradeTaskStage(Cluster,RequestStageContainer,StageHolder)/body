{
  Map<String,String> hostLevelParams=new HashMap<String,String>();
  hostLevelParams.put(JDK_LOCATION,getManagementController().getJdkResourceUrl());
  Stage stage=stageFactory.get().createNew(request.getId().longValue(),"/tmp/ambari",cluster.getClusterName(),cluster.getClusterId(),holder.upgradeItemEntity.getText(),"{}","{}",StageUtils.getGson().toJson(hostLevelParams));
  long stageId=request.getLastStageId() + 1;
  if (0L == stageId) {
    stageId=1L;
  }
  stage.setStageId(stageId);
  RequestResourceFilter filter=new RequestResourceFilter("","",new ArrayList<String>(holder.hosts));
  Map<String,String> params=new HashMap<String,String>();
  params.put("tasks","TheTaskInfo");
  ActionExecutionContext actionContext=new ActionExecutionContext(cluster.getClusterName(),"ru_execute_tasks",Collections.singletonList(filter),params);
  actionContext.setTimeout(Short.valueOf((short)60));
  actionExecutionHelper.get().addExecutionCommandsToStage(actionContext,stage);
  for (  Map<String,HostRoleCommand> map : stage.getHostRoleCommands().values()) {
    for (    HostRoleCommand hrc : map.values()) {
      hrc.setCommandDetail(holder.upgradeItemEntity.getText());
    }
  }
  request.addStages(Collections.singletonList(stage));
}
