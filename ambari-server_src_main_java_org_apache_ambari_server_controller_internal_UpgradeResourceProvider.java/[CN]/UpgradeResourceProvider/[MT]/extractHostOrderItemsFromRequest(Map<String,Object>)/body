{
  Set<Map<String,List<String>>> hostsOrder=(Set<Map<String,List<String>>>)requestMap.get(UPGRADE_HOST_ORDERED_HOSTS);
  if (CollectionUtils.isEmpty(hostsOrder)) {
    throw new AmbariException(String.format("The %s property must be specified when using a %s upgrade type.",UPGRADE_HOST_ORDERED_HOSTS,UpgradeType.HOST_ORDERED));
  }
  List<HostOrderItem> hostOrderItems=new ArrayList<>();
  Iterator<Map<String,List<String>>> iterator=hostsOrder.iterator();
  while (iterator.hasNext()) {
    Map<String,List<String>> grouping=iterator.next();
    List<String> hosts=grouping.get("hosts");
    List<String> serviceChecks=grouping.get("service_checks");
    if (CollectionUtils.isEmpty(hosts) && CollectionUtils.isEmpty(serviceChecks)) {
      throw new AmbariException(String.format("The %s property must contain at least one object with either a %s or %s key",UPGRADE_HOST_ORDERED_HOSTS,"hosts","service_checks"));
    }
    if (CollectionUtils.isNotEmpty(hosts)) {
      hostOrderItems.add(new HostOrderItem(HostOrderActionType.HOST_UPGRADE,hosts));
    }
    if (CollectionUtils.isNotEmpty(serviceChecks)) {
      hostOrderItems.add(new HostOrderItem(HostOrderActionType.SERVICE_CHECK,serviceChecks));
    }
  }
  return hostOrderItems;
}
