{
  String clusterName=(String)requestMap.get(UPGRADE_CLUSTER_NAME);
  if (null == clusterName) {
    throw new AmbariException(String.format("%s is required",UPGRADE_CLUSTER_NAME));
  }
  Cluster cluster=getManagementController().getClusters().getCluster(clusterName);
  ConfigHelper configHelper=getManagementController().getConfigHelper();
  UpgradeHelper helper=new UpgradeHelper();
  List<UpgradeGroupHolder> groups=helper.createUpgrade(cluster,pack);
  List<UpgradeGroupEntity> groupEntities=new ArrayList<UpgradeGroupEntity>();
  final String version=(String)requestMap.get(UPGRADE_VERSION);
  RequestStageContainer req=createRequest(version);
  for (  UpgradeGroupHolder group : groups) {
    UpgradeGroupEntity groupEntity=new UpgradeGroupEntity();
    groupEntity.setName(group.name);
    groupEntity.setTitle(group.title);
    List<UpgradeItemEntity> itemEntities=new ArrayList<UpgradeItemEntity>();
    for (    StageWrapper wrapper : group.items) {
      UpgradeItemEntity itemEntity=new UpgradeItemEntity();
      itemEntity.setText(wrapper.getText());
      itemEntity.setTasks(wrapper.getTasksJson());
      itemEntity.setHosts(wrapper.getHostsJson());
      itemEntities.add(itemEntity);
      injectVariables(configHelper,cluster,itemEntity);
      createStage(cluster,req,version,itemEntity,wrapper);
    }
    groupEntity.setItems(itemEntities);
    groupEntities.add(groupEntity);
  }
  UpgradeEntity entity=new UpgradeEntity();
  entity.setUpgradeGroups(groupEntities);
  entity.setClusterId(Long.valueOf(cluster.getClusterId()));
  req.getRequestStatusResponse();
  entity.setRequestId(req.getId());
  req.persist();
  m_upgradeDAO.create(entity);
  return entity;
}
