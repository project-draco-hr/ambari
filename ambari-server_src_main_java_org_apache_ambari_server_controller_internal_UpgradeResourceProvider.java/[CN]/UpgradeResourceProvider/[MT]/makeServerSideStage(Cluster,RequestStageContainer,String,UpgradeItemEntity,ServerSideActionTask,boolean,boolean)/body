{
  Map<String,String> commandParams=new HashMap<String,String>();
  commandParams.put("clusterName",cluster.getClusterName());
  commandParams.put("version",version);
  String itemDetail=entity.getText();
  String stageText=StringUtils.abbreviate(entity.getText(),255);
switch (task.getType()) {
case MANUAL:
{
      ManualTask mt=(ManualTask)task;
      itemDetail=mt.message;
      if (null != mt.summary) {
        stageText=mt.summary;
      }
      entity.setText(itemDetail);
      break;
    }
case CONFIGURE:
{
    ConfigureTask ct=(ConfigureTask)task;
    commandParams.put("type",ct.configType);
    commandParams.put("key",ct.key);
    commandParams.put("value",ct.value);
    itemDetail=String.format("Updating config %s/%s to %s",ct.configType,ct.key,ct.value);
    if (null != ct.summary) {
      stageText=ct.summary;
    }
 else {
      stageText=String.format("Updating Config %s",ct.configType);
    }
    entity.setText(itemDetail);
    break;
  }
default :
break;
}
ActionExecutionContext actionContext=new ActionExecutionContext(cluster.getClusterName(),Role.AMBARI_SERVER_ACTION.toString(),Collections.<RequestResourceFilter>emptyList(),commandParams);
actionContext.setTimeout(Short.valueOf((short)-1));
ExecuteCommandJson jsons=commandExecutionHelper.get().getCommandJson(actionContext,cluster);
Stage stage=stageFactory.get().createNew(request.getId().longValue(),"/tmp/ambari",cluster.getClusterName(),cluster.getClusterId(),stageText,jsons.getClusterHostInfo(),jsons.getCommandParamsForStage(),jsons.getHostParamsForStage());
stage.setSkippable(skippable);
long stageId=request.getLastStageId() + 1;
if (0L == stageId) {
stageId=1L;
}
stage.setStageId(stageId);
entity.setStageId(Long.valueOf(stageId));
String host=cluster.getAllHostsDesiredConfigs().keySet().iterator().next();
stage.addServerActionCommand(task.getImplementationClass(),Role.AMBARI_SERVER_ACTION,RoleCommand.EXECUTE,cluster.getClusterName(),host,new ServiceComponentHostServerActionEvent(StageUtils.getHostName(),System.currentTimeMillis()),commandParams,itemDetail,null,Integer.valueOf(1200),allowRtery);
request.addStages(Collections.singletonList(stage));
}
