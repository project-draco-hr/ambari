@patch('time.time')
@patch('__builtin__.open')
@patch('time.sleep')
@patch('os.listdir')
@patch('os.path.join')
@patch.object(utils, 'get_symlink_path')
def test_looking_for_pid(self, get_symlink_path_mock, path_join_mock, listdir_mock, sleep_mock, open_mock, time_mock):

    def test_read():
        return 'test args'

    def test_obj():
        pass
    test_obj.read = test_read
    path_join_mock.return_value = '/'
    open_mock.return_value = test_obj
    listdir_mock.return_value = ['1000']
    get_symlink_path_mock.return_value = '/symlinkpath'
    time_mock.side_effect = [0, 0, 2]
    r = utils.looking_for_pid('test args', 1)
    self.assertEquals(len(r), 1)
    self.assertEquals(r[0], {'pid': '1000', 'exe': '/symlinkpath', 'cmd': 'test args', })
