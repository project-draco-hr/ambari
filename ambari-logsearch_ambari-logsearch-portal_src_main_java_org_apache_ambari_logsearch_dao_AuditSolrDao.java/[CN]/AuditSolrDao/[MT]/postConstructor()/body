{
  String solrUrl=solrAuditLogConfig.getSolrUrl();
  String zkConnectString=solrAuditLogConfig.getZkConnectString();
  String collection=solrAuditLogConfig.getCollection();
  String aliasNameIn=solrAuditLogConfig.getAliasNameIn();
  String rangerAuditCollection=solrAuditLogConfig.getRangerCollection();
  String splitInterval=solrAuditLogConfig.getSplitInterval();
  String configName=solrAuditLogConfig.getConfigName();
  int numberOfShards=solrAuditLogConfig.getNumberOfShards();
  int replicationFactor=solrAuditLogConfig.getReplicationFactor();
  try {
    connectToSolr(solrUrl,zkConnectString,collection);
    boolean createAlias=(aliasNameIn != null && !StringUtils.isBlank(rangerAuditCollection));
    boolean needToPopulateSchemaField=!createAlias;
    setupCollections(splitInterval,configName,numberOfShards,replicationFactor,needToPopulateSchemaField);
    if (createAlias) {
      Collection<String> collectionsIn=Arrays.asList(collection,rangerAuditCollection.trim());
      setupAlias(aliasNameIn,collectionsIn);
    }
  }
 catch (  Exception e) {
    logger.error("Error while connecting to Solr for audit logs : solrUrl=" + solrUrl + ", zkConnectString="+ zkConnectString+ ", collection="+ collection,e);
  }
}
