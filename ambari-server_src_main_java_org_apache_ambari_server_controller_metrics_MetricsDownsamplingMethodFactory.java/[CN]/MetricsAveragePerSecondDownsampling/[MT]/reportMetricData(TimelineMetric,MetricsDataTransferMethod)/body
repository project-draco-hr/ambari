{
  ArrayList<Accumulo> cache=new ArrayList<Accumulo>();
  final Iterator<Map.Entry<Long,Double>> ci=metricData.getMetricValues().entrySet().iterator();
  if (ci.hasNext()) {
    Map.Entry<Long,Double> e0=ci.next();
    long t0=e0.getKey() / 1000;
    double s0=e0.getValue();
    int nSamples=1;
    while (ci.hasNext()) {
      e0=ci.next();
      long t=e0.getKey() / 1000;
      if (t != t0) {
        cache.add(new Accumulo(t0,dataTransferMethod.getData(s0 / nSamples)));
        t0=t;
        s0=e0.getValue();
        nSamples=1;
      }
 else {
        s0+=e0.getValue();
        nSamples++;
      }
    }
    cache.add(new Accumulo(t0,dataTransferMethod.getData(s0 / nSamples)));
  }
  Number[][] datapointsArray=new Number[cache.size()][2];
  int cnt=0;
  for (  Accumulo e : cache) {
    datapointsArray[cnt][0]=e.val;
    datapointsArray[cnt][1]=e.ts;
    cnt++;
  }
  return datapointsArray;
}
