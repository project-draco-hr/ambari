{
  Set<String> keysToSkip=new HashSet<String>(Arrays.asList(HOSTS_LIST,PORTS,AMBARI_SERVER_HOST,RACKS,IPV4_ADDRESSES));
  String[] allHosts={};
  if (clusterHostInfo.get(HOSTS_LIST) != null) {
    allHosts=clusterHostInfo.get(HOSTS_LIST).toArray(new String[clusterHostInfo.get(HOSTS_LIST).size()]);
  }
  Set<String> keys=clusterHostInfo.keySet();
  for (  String key : keys) {
    if (keysToSkip.contains(key)) {
      continue;
    }
    Set<String> hosts=new HashSet<String>();
    Set<String> currentHostsIndexes=clusterHostInfo.get(key);
    if (currentHostsIndexes == null) {
      continue;
    }
    for (    String hostIndexRange : currentHostsIndexes) {
      for (      Integer hostIndex : rangeToSet(hostIndexRange)) {
        try {
          hosts.add(allHosts[hostIndex]);
        }
 catch (        ArrayIndexOutOfBoundsException ex) {
          throw new AmbariException("Failed to fill cluster host info  ",ex);
        }
      }
    }
    clusterHostInfo.put(key,hosts);
  }
  return clusterHostInfo;
}
