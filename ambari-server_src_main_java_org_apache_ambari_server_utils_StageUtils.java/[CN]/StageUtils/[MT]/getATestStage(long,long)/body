{
  String hostname;
  try {
    hostname=InetAddress.getLocalHost().getHostName();
  }
 catch (  UnknownHostException e) {
    hostname="host-dummy";
  }
  Stage s=new Stage(requestId,"/tmp","cluster1");
  s.setStageId(stageId);
  HostAction ha=new HostAction(hostname);
  long now=System.currentTimeMillis();
  HostRoleCommand hrc=new HostRoleCommand("HDFS",Role.NAMENODE,new ServiceComponentHostInstallEvent("NAMENODE",hostname,now));
  hrc.setStatus(HostRoleStatus.PENDING);
  ha.addHostRoleCommand(hrc);
  ExecutionCommand execCmd=ha.getCommandToHost();
  execCmd.setCommandId(s.getActionId());
  execCmd.setClusterName("cluster1");
  Map<String,List<String>> clusterHostInfo=new TreeMap<String,List<String>>();
  List<String> slaveHostList=new ArrayList<String>();
  slaveHostList.add(hostname);
  slaveHostList.add("host2");
  clusterHostInfo.put("slave_hosts",slaveHostList);
  execCmd.setClusterHostInfo(clusterHostInfo);
  Map<String,String> hdfsSite=new TreeMap<String,String>();
  hdfsSite.put("dfs.block.size","2560000000");
  Map<String,Map<String,String>> configurations=new TreeMap<String,Map<String,String>>();
  configurations.put("hdfs-site",hdfsSite);
  execCmd.setConfigurations(configurations);
  Map<String,String> params=new TreeMap<String,String>();
  params.put("jdklocation","/x/y/z");
  execCmd.setParams(params);
  Map<String,String> roleParams=new TreeMap<String,String>();
  roleParams.put("format","false");
  execCmd.addRoleCommand("NAMENODE","INSTALL",roleParams);
  try {
    LOG.info("Command string = " + StageUtils.jaxbToString(execCmd));
  }
 catch (  Exception e) {
    throw new RuntimeException("Could not get string from jaxb",e);
  }
  s.addHostAction(hostname,ha);
  return s;
}
