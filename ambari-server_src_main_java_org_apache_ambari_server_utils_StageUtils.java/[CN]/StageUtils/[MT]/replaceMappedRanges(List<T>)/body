{
  Map<T,SortedSet<Integer>> convolutedValues=new HashMap<T,SortedSet<Integer>>();
  int valueIndex=0;
  for (  T value : values) {
    SortedSet<Integer> correspValues=convolutedValues.get(value);
    if (correspValues == null) {
      correspValues=new TreeSet<Integer>();
      convolutedValues.put(value,correspValues);
    }
    correspValues.add(valueIndex);
    valueIndex++;
  }
  Set<String> result=new HashSet<String>();
  for (  Entry<T,SortedSet<Integer>> entry : convolutedValues.entrySet()) {
    Set<String> replacedRanges=replaceRanges(entry.getValue());
    result.add(entry.getKey() + ":" + Joiner.on(",").join(replacedRanges));
  }
  return result;
}
