{
  Option wait=new Option("wait","Optionally wait for cluster to reach desired state");
  Option dry_run=new Option("dry_run","Dry run");
  Option help=new Option("help","Help");
  OptionBuilder.withArgName("cluster_name");
  OptionBuilder.isRequired();
  OptionBuilder.hasArg();
  OptionBuilder.withDescription("Name of the cluster to be created");
  Option name=OptionBuilder.create("name");
  OptionBuilder.withArgName("blueprint_name");
  OptionBuilder.isRequired();
  OptionBuilder.hasArg();
  OptionBuilder.withDescription("Name of the cluster blueprint");
  Option blueprint=OptionBuilder.create("blueprint");
  OptionBuilder.withArgName("\"node_exp1; node_exp2; ...\"");
  OptionBuilder.isRequired();
  OptionBuilder.hasArg();
  OptionBuilder.withDescription("List of node range expressions separated by semicolon (;) and contained in double quotes (\"\")");
  Option nodes=OptionBuilder.create("nodes");
  OptionBuilder.withArgName("blueprint_revision");
  OptionBuilder.isRequired();
  OptionBuilder.hasArg();
  OptionBuilder.withDescription("Blueprint revision, if not specified latest revision is used");
  Option revision=OptionBuilder.create("revision");
  OptionBuilder.withArgName("description");
  OptionBuilder.hasArg();
  OptionBuilder.withDescription("Description to be associated with cluster");
  Option desc=OptionBuilder.create("desc");
  OptionBuilder.withArgName("goalstate");
  OptionBuilder.hasArg();
  OptionBuilder.withDescription("Desired goal state of the cluster");
  Option goalstate=OptionBuilder.create("goalstate");
  OptionBuilder.withArgName("\"component-1; component-2; ...\"");
  OptionBuilder.hasArg();
  OptionBuilder.withDescription("List of components to be active in the cluster. Components are seperated by semicolon \";\"");
  Option services=OptionBuilder.create("services");
  OptionBuilder.withArgName("rolename=\"node_exp1; node_exp2; ... \"");
  OptionBuilder.hasArgs(2);
  OptionBuilder.withValueSeparator();
  OptionBuilder.withDescription("Provide node range expressions for a given rolename separated by semicolon (;) and contained in double quotes (\"\")");
  Option role=OptionBuilder.create("role");
  this.options=new Options();
  options.addOption(wait);
  options.addOption(dry_run);
  options.addOption(name);
  options.addOption(blueprint);
  options.addOption(revision);
  options.addOption(desc);
  options.addOption(role);
  options.addOption(goalstate);
  options.addOption(nodes);
  options.addOption(services);
  options.addOption(help);
}
