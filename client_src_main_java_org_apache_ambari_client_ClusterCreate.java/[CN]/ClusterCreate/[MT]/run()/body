{
  parseCommandLine();
  ClientConfig config=new DefaultClientConfig();
  Client client=Client.create(config);
  WebResource service=client.resource(getBaseURI());
  ClusterDefinition clsDef=new ClusterDefinition();
  clsDef.setName(this.clusterName);
  clsDef.setBlueprintName(this.blueprint);
  clsDef.setNodes(this.nodeRangeExpressions);
  clsDef.setGoalState(this.goalState);
  clsDef.setBlueprintRevision(this.blueprint_revision);
  clsDef.setActiveServices(splitServices(this.activeServices));
  clsDef.setDescription(this.description);
  clsDef.setRoleToNodesMap(getRoleToNodesMap(this.roleToNodeExpressions));
  ClientResponse response=service.path("clusters").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).post(ClientResponse.class,clsDef);
  if (response.getStatus() != 200) {
    System.err.println("Cluster create command failed. Reason [Code: <" + response.getStatus() + ">, Message: <"+ response.getHeaders().getFirst("ErrorMessage")+ ">]");
    System.exit(-1);
  }
  ClusterDefinition def=response.getEntity(ClusterDefinition.class);
  System.out.println("CLUSTER NAME [" + def.getName() + "]");
  System.out.println("CLUSTER NAME [" + def.getDescription() + "]");
}
