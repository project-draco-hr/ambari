{
  final List<TimelineMetric> metricsList=new ArrayList<TimelineMetric>();
  try {
    for (    Entry<MetricName,Metric> entry : metrics) {
      final MetricName metricName=entry.getKey();
      final Metric metric=entry.getValue();
      Context context=new Context(){
        public List<TimelineMetric> getTimelineMetricList(){
          return metricsList;
        }
      }
;
      metric.processWith(this,metricName,context);
    }
  }
 catch (  Throwable t) {
    LOG.error("Exception processing Kafka metric",t);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Metrics List size: " + metricsList.size());
    LOG.debug("Metics Set size: " + metrics.size());
    LOG.debug("Excluded metrics set: " + excludedMetrics);
  }
  if (!metricsList.isEmpty()) {
    TimelineMetrics timelineMetrics=new TimelineMetrics();
    timelineMetrics.setMetrics(metricsList);
    try {
      emitMetrics(timelineMetrics);
    }
 catch (    Throwable t) {
      LOG.error("Exception emitting metrics",t);
    }
  }
}
