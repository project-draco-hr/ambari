def getConfiguration(self):
    'Init Configuration block of result configuration file'
    DOMTree = xml.dom.minidom.parse(self.servicesPath['Configuration'])
    rootElement = DOMTree.documentElement
    hadoopEnvResultStructure = self.configurations.configuration.hadoopEnv
    coreSiteResultStructure = self.configurations.configuration.coreSite
    env = rootElement.getElementsByTagName('hadoop-env')[0]
    confDir = env.getElementsByTagName('conf-dir')[0].childNodes[0].data
    hadoopEnvResultStructure.confDir = confDir
    namenodeJvmOpts = env.getElementsByTagName('namenode-jvm-opts')[0].childNodes[0].data
    hadoopEnvResultStructure.namenodeJvmOpts = namenodeJvmOpts
    clientOpts = env.getElementsByTagName('client-opts')[0].childNodes[0].data
    hadoopEnvResultStructure.clientOpts = clientOpts
    coreSite = rootElement.getElementsByTagName('core-site')
    fsDefaultName = coreSite[0].getElementsByTagName('fs-default-name')[0].childNodes[0].data
    coreSiteResultStructure.fsDefaultName = fsDefaultName
    hadoopSecurityAuthentication = coreSite[0].getElementsByTagName('hadoop-security-authentication')[0].childNodes[0].data
    coreSiteResultStructure.hadoopSecurityAuthentication = hadoopSecurityAuthentication
    DOMTree = xml.dom.minidom.parse(self.servicesPath['Core'])
    rootElement = DOMTree.documentElement
    properties = rootElement.getElementsByTagName('property')
    for property in properties:
        name = property.getElementsByTagName('name')[0].childNodes[0].data
        if (name == 'fs.default.name'):
            self.configurations.configuration.coreSite.fsDefaultName = property.getElementsByTagName('value')[0].childNodes[0].data
        if (name == 'hadoop.security.authentication'):
            self.configurations.configuration.coreSite.hadoopSecurityAuthentication = property.getElementsByTagName('value')[0].childNodes[0].data
