def getStackInformation(self):
    'Init data for Stack block of the result configuration file'
    DOMTree = xml.dom.minidom.parse(self.servicesPath['Configuration'])
    rootElement = DOMTree.documentElement
    stack = rootElement.getElementsByTagName('stack')[0]
    self.configurations.stack.comment = stack.getElementsByTagName('comment')[0].childNodes[0].data
    services = stack.getElementsByTagName('service')
    servicesResultStructure = self.configurations.stack.services
    for service in services:
        serviceStructure = Service()
        serviceStructure.name = service.getElementsByTagName('name')[0].childNodes[0].data
        serviceStructure.version = service.getElementsByTagName('version')[0].childNodes[0].data
        serviceStructure.comment = service.getElementsByTagName('comment')[0].childNodes[0].data
        serviceStructure.user = service.getElementsByTagName('user')[0].childNodes[0].data
        serviceStructure.enabled = service.getElementsByTagName('enabled')[0].childNodes[0].data
        servicesResultStructure.addService(serviceStructure)
    repositories = rootElement.getElementsByTagName('repository')
    for repositiry in repositories:
        self.configurations.stack.repository.comment = repositiry.getElementsByTagName('comment')[0].childNodes[0].data
        infos = repositiry.getElementsByTagName('info')
        for info in infos:
            for key in info.childNodes:
                if (key.nodeType == 1):
                    repositoryStructure = self.configurations.stack.repository
                    repositoryStructure.info.addKey(key.nodeName, key.childNodes[0].data)
