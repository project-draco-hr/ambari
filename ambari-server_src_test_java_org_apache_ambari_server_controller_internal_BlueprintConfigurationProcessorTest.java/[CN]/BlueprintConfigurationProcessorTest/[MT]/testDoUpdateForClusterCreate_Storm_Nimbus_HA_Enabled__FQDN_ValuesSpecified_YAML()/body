{
  final String expectedValue="[c6401.ambari.apache.org, c6402.ambari.apache.org]";
  Map<String,Map<String,String>> properties=new HashMap<String,Map<String,String>>();
  Map<String,String> typeProps=new HashMap<String,String>();
  typeProps.put("nimbus.seeds",expectedValue);
  properties.put("storm-site",typeProps);
  Configuration clusterConfig=new Configuration(properties,Collections.<String,Map<String,Map<String,String>>>emptyMap());
  Collection<String> hgComponents=new HashSet<String>();
  hgComponents.add("NIMBUS");
  TestHostGroup group1=new TestHostGroup("group1",hgComponents,Collections.singleton("testhost"));
  Collection<String> hgComponents2=new HashSet<String>();
  hgComponents2.add("NIMBUS");
  Set<String> hosts2=new HashSet<String>();
  hosts2.add("testhost2");
  TestHostGroup group2=new TestHostGroup("group2",hgComponents2,hosts2);
  Collection<TestHostGroup> hostGroups=new HashSet<TestHostGroup>();
  hostGroups.add(group1);
  hostGroups.add(group2);
  ClusterTopology topology=createClusterTopology(bp,clusterConfig,hostGroups);
  BlueprintConfigurationProcessor updater=new BlueprintConfigurationProcessor(topology);
  updater.doUpdateForClusterCreate();
  String updatedVal=topology.getConfiguration().getFullProperties().get("storm-site").get("nimbus.seeds");
  assertEquals("nimbus.seeds property should not be updated when FQDNs are specified in configuration",expectedValue,updatedVal);
}
