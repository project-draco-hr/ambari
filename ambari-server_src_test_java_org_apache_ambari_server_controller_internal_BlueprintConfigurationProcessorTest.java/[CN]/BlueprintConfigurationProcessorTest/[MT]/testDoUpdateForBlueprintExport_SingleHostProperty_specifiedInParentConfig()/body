{
  Map<String,Map<String,String>> properties=new HashMap<String,Map<String,String>>();
  Map<String,String> yarnSiteProps=new HashMap<String,String>();
  yarnSiteProps.put("yarn.resourcemanager.hostname","testhost");
  properties.put("yarn-site",yarnSiteProps);
  Map<String,Map<String,String>> parentProperties=new HashMap<String,Map<String,String>>();
  Map<String,String> parentYarnSiteProps=new HashMap<String,String>();
  parentYarnSiteProps.put("yarn.resourcemanager.resource-tracker.address","testhost");
  parentProperties.put("yarn-site",parentYarnSiteProps);
  Configuration parentClusterConfig=new Configuration(parentProperties,Collections.<String,Map<String,Map<String,String>>>emptyMap());
  Configuration clusterConfig=new Configuration(properties,Collections.<String,Map<String,Map<String,String>>>emptyMap(),parentClusterConfig);
  Collection<String> hgComponents=new HashSet<String>();
  hgComponents.add("NAMENODE");
  hgComponents.add("SECONDARY_NAMENODE");
  hgComponents.add("RESOURCEMANAGER");
  TestHostGroup group1=new TestHostGroup("group1",hgComponents,Collections.singleton("testhost"));
  Collection<String> hgComponents2=new HashSet<String>();
  hgComponents2.add("DATANODE");
  hgComponents2.add("HDFS_CLIENT");
  TestHostGroup group2=new TestHostGroup("group2",hgComponents2,Collections.singleton("testhost2"));
  Collection<TestHostGroup> hostGroups=new HashSet<TestHostGroup>();
  hostGroups.add(group1);
  hostGroups.add(group2);
  ClusterTopology topology=createClusterTopology(bp,clusterConfig,hostGroups);
  BlueprintConfigurationProcessor configProcessor=new BlueprintConfigurationProcessor(topology);
  configProcessor.doUpdateForBlueprintExport();
  assertEquals("%HOSTGROUP::group1%",clusterConfig.getPropertyValue("yarn-site","yarn.resourcemanager.hostname"));
  assertEquals("%HOSTGROUP::group1%",clusterConfig.getPropertyValue("yarn-site","yarn.resourcemanager.resource-tracker.address"));
}
