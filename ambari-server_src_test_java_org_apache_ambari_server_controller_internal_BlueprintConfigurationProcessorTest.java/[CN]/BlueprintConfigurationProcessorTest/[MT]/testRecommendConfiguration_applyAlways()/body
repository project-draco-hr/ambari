{
  final String expectedHostName="c6401.apache.ambari.org";
  final String expectedPortNum="808080";
  final String expectedHostGroupName="host_group_1";
  Map<String,Map<String,String>> properties=new HashMap<String,Map<String,String>>();
  Map<String,String> coreSiteMap=new HashMap<String,String>();
  properties.put("core-site",coreSiteMap);
  coreSiteMap.put("fs.default.name",expectedHostName + ":" + expectedPortNum);
  coreSiteMap.put("fs.defaultFS","hdfs://" + expectedHostName + ":"+ expectedPortNum);
  coreSiteMap.put("fs.stackDefault.key2","dummyValue");
  Map<String,String> dummySiteMap=new HashMap<String,String>();
  properties.put("dummy-site",dummySiteMap);
  dummySiteMap.put("dummy.prop","dummyValue");
  Map<String,Map<String,String>> parentProperties=new HashMap<String,Map<String,String>>();
  Collection<String> hgComponents=new HashSet<String>();
  hgComponents.add("NAMENODE");
  hgComponents.add("SECONDARY_NAMENODE");
  hgComponents.add("RESOURCEMANAGER");
  TestHostGroup group1=new TestHostGroup("group1",hgComponents,Collections.singleton("testhost"));
  Collection<String> hgComponents2=new HashSet<String>();
  hgComponents2.add("DATANODE");
  hgComponents2.add("HDFS_CLIENT");
  TestHostGroup group2=new TestHostGroup("group2",hgComponents2,Collections.singleton(expectedHostGroupName));
  Collection<TestHostGroup> hostGroups=new HashSet<TestHostGroup>();
  hostGroups.add(group1);
  hostGroups.add(group2);
  Configuration parentClusterConfig=new Configuration(parentProperties,Collections.<String,Map<String,Map<String,String>>>emptyMap(),createStackDefaults());
  Configuration clusterConfig=new Configuration(properties,Collections.<String,Map<String,Map<String,String>>>emptyMap(),parentClusterConfig);
  ClusterTopology topology=createClusterTopology(bp,clusterConfig,hostGroups);
  topology.getAdvisedConfigurations().putAll(createAdvisedConfigMap());
  topology.setConfigRecommendationStrategy(ConfigRecommendationStrategy.ALWAYS_APPLY);
  BlueprintConfigurationProcessor configProcessor=new BlueprintConfigurationProcessor(topology);
  Set<String> configTypes=configProcessor.doUpdateForClusterCreate();
  assertEquals(expectedHostName + ":" + expectedPortNum,clusterConfig.getPropertyValue("core-site","fs.default.name"));
  assertEquals("stackDefaultUpgraded",clusterConfig.getPropertyValue("core-site","fs.stackDefault.key1"));
  assertNull(clusterConfig.getPropertyValue("core-site","fs.stackDefault.key2"));
  assertNotNull(clusterConfig.getPropertyValue("core-site","fs.notStackDefault"));
  assertEquals(2,topology.getAdvisedConfigurations().size());
  assertFalse(configTypes.contains("dummy-site"));
}
