{
  final String expectedHostGroupName="host_group_1";
  final String expectedHostNameOne="c6401.ambari.apache.org";
  final String expectedHostNameTwo="c6402.ambari.apache.org";
  final String expectedPropertyValue="hive.metastore.local=false,hive.metastore.uris=thrift://localhost:9933,hive.metastore.sasl.enabled=false";
  EasyMockSupport mockSupport=new EasyMockSupport();
  Stack mockStack=mockSupport.createMock(Stack.class);
  HostGroup mockHostGroupOne=mockSupport.createMock(HostGroup.class);
  HostGroup mockHostGroupTwo=mockSupport.createMock(HostGroup.class);
  expect(mockHostGroupOne.getComponents()).andReturn(Collections.singleton("HIVE_METASTORE")).atLeastOnce();
  expect(mockHostGroupOne.getHostInfo()).andReturn(Collections.singleton(expectedHostNameOne)).atLeastOnce();
  expect(mockHostGroupTwo.getComponents()).andReturn(Collections.singleton("HIVE_METASTORE")).atLeastOnce();
  expect(mockHostGroupTwo.getHostInfo()).andReturn(Collections.singleton(expectedHostNameTwo)).atLeastOnce();
  mockSupport.replayAll();
  Map<String,Map<String,String>> configProperties=new HashMap<String,Map<String,String>>();
  Map<String,String> webHCatSiteProperties=new HashMap<String,String>();
  configProperties.put("webhcat-site",webHCatSiteProperties);
  webHCatSiteProperties.put("templeton.hive.properties",expectedPropertyValue);
  BlueprintConfigurationProcessor configProcessor=new BlueprintConfigurationProcessor(configProperties);
  Map<String,HostGroup> mapOfHostGroups=new HashMap<String,HostGroup>();
  mapOfHostGroups.put(expectedHostGroupName,mockHostGroupOne);
  mapOfHostGroups.put("host_group_2",mockHostGroupTwo);
  configProcessor.doUpdateForClusterCreate(mapOfHostGroups,mockStack);
  assertEquals("Unexpected config update for templeton.hive.properties","hive.metastore.local=false,hive.metastore.uris=thrift://" + expectedHostNameOne + ":9933\\,"+ "thrift://"+ expectedHostNameTwo+ ":9933"+ ","+ "hive.metastore.sasl.enabled=false",webHCatSiteProperties.get("templeton.hive.properties"));
  mockSupport.verifyAll();
}
