{
  final String expectedHostGroupNameOne="host_group_1";
  final String expectedHostGroupNameTwo="host_group_2";
  final String expectedHostNameOne="c6401.ambari.apache.org";
  final String expectedHostNameTwo="c6402.ambari.apache.org";
  final String inputMetaStoreURIs="thrift://" + createExportedAddress("9083",expectedHostGroupNameOne) + ","+ "thrift://"+ createExportedAddress("9083",expectedHostGroupNameTwo);
  final String expectedMetaStoreURIs="thrift://c6401.ambari.apache.org:9083,thrift://c6402.ambari.apache.org:9083";
  Map<String,Map<String,String>> configProperties=new HashMap<String,Map<String,String>>();
  Map<String,String> hiveEnvProperties=new HashMap<String,String>();
  Map<String,String> hiveSiteProperties=new HashMap<String,String>();
  configProperties.put("hive-env",hiveEnvProperties);
  configProperties.put("hive-site",hiveSiteProperties);
  hiveEnvProperties.put("hive_hostname",expectedHostNameOne);
  hiveSiteProperties.put("hive.server2.support.dynamic.service.discovery","true");
  hiveSiteProperties.put("hive.metastore.uris",inputMetaStoreURIs);
  Configuration clusterConfig=new Configuration(configProperties,Collections.<String,Map<String,Map<String,String>>>emptyMap());
  Collection<String> hgComponents=new HashSet<String>();
  hgComponents.add("HIVE_SERVER");
  hgComponents.add("HIVE_METASTORE");
  TestHostGroup group1=new TestHostGroup(expectedHostGroupNameOne,hgComponents,Collections.singleton(expectedHostNameOne));
  Collection<String> hgComponents2=new HashSet<String>();
  hgComponents2.add("HIVE_SERVER");
  hgComponents2.add("HIVE_METASTORE");
  TestHostGroup group2=new TestHostGroup(expectedHostGroupNameTwo,hgComponents2,Collections.singleton(expectedHostNameTwo));
  Collection<TestHostGroup> hostGroups=new HashSet<TestHostGroup>();
  hostGroups.add(group1);
  hostGroups.add(group2);
  expect(stack.getCardinality("HIVE_SERVER")).andReturn(new Cardinality("1+")).anyTimes();
  ClusterTopology topology=createClusterTopology("c1",bp,clusterConfig,hostGroups);
  BlueprintConfigurationProcessor updater=new BlueprintConfigurationProcessor(topology);
  updater.doUpdateForClusterCreate();
  assertEquals("Unexpected config update for hive_hostname",expectedHostNameOne,hiveEnvProperties.get("hive_hostname"));
  assertEquals("Unexpected config update for hive.metastore.uris",expectedMetaStoreURIs,hiveSiteProperties.get("hive.metastore.uris"));
}
