{
  final String expectedHostName="c6401.apache.ambari.org";
  final String expectedHostGroupName="host_group_1";
  final String expectedPortNumberOne="2112";
  Map<String,Map<String,String>> configProperties=new HashMap<String,Map<String,String>>();
  Map<String,String> kafkaBrokerProperties=new HashMap<String,String>();
  configProperties.put("kafka-broker",kafkaBrokerProperties);
  kafkaBrokerProperties.put("kafka.ganglia.metrics.host",createHostAddress(expectedHostName,expectedPortNumberOne));
  Configuration clusterConfig=new Configuration(configProperties,Collections.<String,Map<String,Map<String,String>>>emptyMap());
  Collection<String> groupComponents=new HashSet<String>();
  groupComponents.add("KAFKA_BROKER");
  Collection<String> hosts=new ArrayList<String>();
  hosts.add(expectedHostName);
  hosts.add("serverTwo");
  TestHostGroup group=new TestHostGroup(expectedHostGroupName,groupComponents,hosts);
  Collection<String> groupComponents2=new HashSet<String>();
  groupComponents2.add("NAMENODE");
  TestHostGroup group2=new TestHostGroup("group2",groupComponents2,Collections.singleton("group2Host"));
  Collection<TestHostGroup> hostGroups=new HashSet<TestHostGroup>();
  hostGroups.add(group);
  hostGroups.add(group2);
  ClusterTopology topology=createClusterTopology(bp,clusterConfig,hostGroups);
  BlueprintConfigurationProcessor configProcessor=new BlueprintConfigurationProcessor(topology);
  configProcessor.doUpdateForBlueprintExport();
  assertEquals("kafka Ganglia config not properly exported",createExportedHostName(expectedHostGroupName,expectedPortNumberOne),kafkaBrokerProperties.get("kafka.ganglia.metrics.host"));
}
