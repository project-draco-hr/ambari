{
  final String expectedHostName="c6401.apache.ambari.org";
  final String expectedHostGroupName="host_group_1";
  final String expectedPortNumberOne="2112";
  EasyMockSupport mockSupport=new EasyMockSupport();
  HostGroup mockHostGroupOne=mockSupport.createMock(HostGroup.class);
  HostGroup mockHostGroupTwo=mockSupport.createMock(HostGroup.class);
  expect(mockHostGroupOne.getHostInfo()).andReturn(Arrays.asList(expectedHostName,"serverTwo")).atLeastOnce();
  expect(mockHostGroupOne.getName()).andReturn(expectedHostGroupName).atLeastOnce();
  mockSupport.replayAll();
  Map<String,Map<String,String>> configProperties=new HashMap<String,Map<String,String>>();
  Map<String,String> kafkaBrokerProperties=new HashMap<String,String>();
  configProperties.put("kafka-broker",kafkaBrokerProperties);
  kafkaBrokerProperties.put("kafka.ganglia.metrics.host",createHostAddress(expectedHostName,expectedPortNumberOne));
  BlueprintConfigurationProcessor configProcessor=new BlueprintConfigurationProcessor(configProperties);
  configProcessor.doUpdateForBlueprintExport(Arrays.asList(mockHostGroupOne,mockHostGroupTwo));
  assertEquals("kafka Ganglia config not properly exported",createExportedHostName(expectedHostGroupName,expectedPortNumberOne),kafkaBrokerProperties.get("kafka.ganglia.metrics.host"));
  mockSupport.verifyAll();
}
