{
  final String expectedHostName="c6401.apache.ambari.org";
  final String expectedHostNameTwo="c6402.ambari.apache.org";
  final String expectedHostGroupName="host_group_1";
  final String expectedHostGroupNameTwo="host_group_2";
  EasyMockSupport mockSupport=new EasyMockSupport();
  HostGroup mockHostGroupOne=mockSupport.createMock(HostGroup.class);
  HostGroup mockHostGroupTwo=mockSupport.createMock(HostGroup.class);
  expect(mockHostGroupOne.getHostInfo()).andReturn(Arrays.asList(expectedHostName,"serverTwo")).atLeastOnce();
  expect(mockHostGroupTwo.getHostInfo()).andReturn(Arrays.asList(expectedHostNameTwo,"serverTwo")).atLeastOnce();
  expect(mockHostGroupOne.getName()).andReturn(expectedHostGroupName).atLeastOnce();
  expect(mockHostGroupTwo.getName()).andReturn(expectedHostGroupNameTwo).atLeastOnce();
  mockSupport.replayAll();
  Map<String,Map<String,String>> configProperties=new HashMap<String,Map<String,String>>();
  Map<String,String> coreSiteProperties=new HashMap<String,String>();
  Map<String,String> webHCatSiteProperties=new HashMap<String,String>();
  Map<String,String> oozieSiteProperties=new HashMap<String,String>();
  configProperties.put("core-site",coreSiteProperties);
  configProperties.put("webhcat-site",webHCatSiteProperties);
  configProperties.put("oozie-site",oozieSiteProperties);
  coreSiteProperties.put("hadoop.proxyuser.knox.hosts",expectedHostName + "," + expectedHostNameTwo);
  webHCatSiteProperties.put("webhcat.proxyuser.knox.hosts",expectedHostName + "," + expectedHostNameTwo);
  oozieSiteProperties.put("hadoop.proxyuser.knox.hosts",expectedHostName + "," + expectedHostNameTwo);
  BlueprintConfigurationProcessor configProcessor=new BlueprintConfigurationProcessor(configProperties);
  configProcessor.doUpdateForBlueprintExport(Arrays.asList(mockHostGroupOne,mockHostGroupTwo));
  assertEquals("Knox for core-site config not properly exported",createExportedHostName(expectedHostGroupName) + "," + createExportedHostName(expectedHostGroupNameTwo),coreSiteProperties.get("hadoop.proxyuser.knox.hosts"));
  assertEquals("Knox config for WebHCat not properly exported",createExportedHostName(expectedHostGroupName) + "," + createExportedHostName(expectedHostGroupNameTwo),webHCatSiteProperties.get("webhcat.proxyuser.knox.hosts"));
  assertEquals("Knox config for Oozie not properly exported",createExportedHostName(expectedHostGroupName) + "," + createExportedHostName(expectedHostGroupNameTwo),oozieSiteProperties.get("hadoop.proxyuser.knox.hosts"));
  mockSupport.verifyAll();
}
