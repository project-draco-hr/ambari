{
  Map<String,Map<String,String>> properties=new HashMap<String,Map<String,String>>();
  Map<String,String> stormSite=new HashMap<String,String>();
  stormSite.put("metrics.reporter.register","user.Reporter");
  properties.put("storm-site",stormSite);
  Map<String,Map<String,String>> parentProperties=new HashMap<String,Map<String,String>>();
  Configuration parentClusterConfig=new Configuration(parentProperties,Collections.<String,Map<String,Map<String,String>>>emptyMap());
  Configuration clusterConfig=new Configuration(properties,Collections.<String,Map<String,Map<String,String>>>emptyMap(),parentClusterConfig);
  Collection<String> hgComponents1=new HashSet<String>();
  hgComponents1.add("METRICS_COLLECTOR");
  hgComponents1.add("NIMBUS");
  TestHostGroup group1=new TestHostGroup("group1",hgComponents1,Collections.singleton("host1"));
  Collection<TestHostGroup> hostGroups=Collections.singletonList(group1);
  ClusterTopology topology=createClusterTopology(bp,clusterConfig,hostGroups);
  BlueprintConfigurationProcessor configProcessor=new BlueprintConfigurationProcessor(topology);
  configProcessor.doUpdateForClusterCreate();
  assertEquals("user.Reporter",clusterConfig.getPropertyValue("storm-site","metrics.reporter.register"));
}
