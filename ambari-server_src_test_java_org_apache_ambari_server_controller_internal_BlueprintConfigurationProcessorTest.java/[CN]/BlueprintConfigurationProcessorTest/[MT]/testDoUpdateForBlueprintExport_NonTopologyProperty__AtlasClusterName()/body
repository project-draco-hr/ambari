{
  Map<String,Map<String,String>> properties=new HashMap<String,Map<String,String>>();
  Configuration clusterConfig=new Configuration(properties,Collections.<String,Map<String,Map<String,String>>>emptyMap());
  Collection<String> hgComponents=new HashSet<String>();
  hgComponents.add("ATLAS_SERVER");
  TestHostGroup group1=new TestHostGroup("group1",hgComponents,Collections.singleton("testhost"));
  Collection<TestHostGroup> hostGroups=new HashSet<TestHostGroup>();
  hostGroups.add(group1);
  ClusterTopology topology=createClusterTopology(bp,clusterConfig,hostGroups);
  Long clusterId=topology.getClusterId();
  Map<String,String> typeProps=new HashMap<String,String>();
  typeProps.put("atlas.cluster.name",String.valueOf(clusterId));
  properties.put("hive-site",typeProps);
  BlueprintConfigurationProcessor configProcessor=new BlueprintConfigurationProcessor(topology);
  configProcessor.doUpdateForBlueprintExport();
  String updatedVal=properties.get("hive-site").get("atlas.cluster.name");
  assertEquals("primary",updatedVal);
}
