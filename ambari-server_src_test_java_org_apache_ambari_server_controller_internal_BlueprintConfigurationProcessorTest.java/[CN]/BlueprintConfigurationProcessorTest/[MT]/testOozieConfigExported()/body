{
  final String expectedHostName="c6401.apache.ambari.org";
  final String expectedHostNameTwo="c6402.ambari.apache.org";
  final String expectedExternalHost="c6408.ambari.apache.org";
  final String expectedHostGroupName="host_group_1";
  final String expectedHostGroupNameTwo="host_group_2";
  Map<String,Map<String,String>> configProperties=new HashMap<String,Map<String,String>>();
  Map<String,String> oozieSiteProperties=new HashMap<String,String>();
  Map<String,String> oozieEnvProperties=new HashMap<String,String>();
  Map<String,String> coreSiteProperties=new HashMap<String,String>();
  configProperties.put("oozie-site",oozieSiteProperties);
  configProperties.put("oozie-env",oozieEnvProperties);
  configProperties.put("hive-env",oozieEnvProperties);
  configProperties.put("core-site",coreSiteProperties);
  oozieSiteProperties.put("oozie.base.url",expectedHostName);
  oozieSiteProperties.put("oozie.authentication.kerberos.principal",expectedHostName);
  oozieSiteProperties.put("oozie.service.HadoopAccessorService.kerberos.principal",expectedHostName);
  oozieSiteProperties.put("oozie.service.JPAService.jdbc.url","jdbc:mysql://" + expectedExternalHost + "/ooziedb");
  oozieEnvProperties.put("oozie_hostname",expectedHostName);
  oozieEnvProperties.put("oozie_existing_mysql_host",expectedExternalHost);
  oozieEnvProperties.put("oozie_heapsize","1024m");
  oozieEnvProperties.put("oozie_permsize","2048m");
  coreSiteProperties.put("hadoop.proxyuser.oozie.hosts",expectedHostName + "," + expectedHostNameTwo);
  Configuration clusterConfig=new Configuration(configProperties,Collections.<String,Map<String,Map<String,String>>>emptyMap());
  Collection<String> groupComponents=new HashSet<String>();
  groupComponents.add("OOZIE_SERVER");
  Collection<String> hosts=new ArrayList<String>();
  hosts.add(expectedHostName);
  hosts.add("serverTwo");
  TestHostGroup group=new TestHostGroup(expectedHostGroupName,groupComponents,hosts);
  Collection<String> groupComponents2=new HashSet<String>();
  groupComponents2.add("OOZIE_SERVER");
  Collection<String> hosts2=new ArrayList<String>();
  hosts2.add(expectedHostNameTwo);
  hosts2.add("serverFour");
  TestHostGroup group2=new TestHostGroup(expectedHostGroupNameTwo,groupComponents2,hosts2);
  Collection<TestHostGroup> hostGroups=new HashSet<TestHostGroup>();
  hostGroups.add(group);
  hostGroups.add(group2);
  ClusterTopology topology=createClusterTopology(bp,clusterConfig,hostGroups);
  BlueprintConfigurationProcessor configProcessor=new BlueprintConfigurationProcessor(topology);
  configProcessor.doUpdateForBlueprintExport();
  assertEquals("oozie property not exported correctly",createExportedHostName(expectedHostGroupName),oozieSiteProperties.get("oozie.base.url"));
  assertEquals("oozie property not exported correctly",createExportedHostName(expectedHostGroupName),oozieSiteProperties.get("oozie.authentication.kerberos.principal"));
  assertEquals("oozie property not exported correctly",createExportedHostName(expectedHostGroupName),oozieSiteProperties.get("oozie.service.HadoopAccessorService.kerberos.principal"));
  assertEquals("oozie property not exported correctly",createExportedHostName(expectedHostGroupName),oozieEnvProperties.get("oozie_hostname"));
  assertEquals("oozie property not exported correctly",createExportedHostName(expectedHostGroupName) + "," + createExportedHostName(expectedHostGroupNameTwo),coreSiteProperties.get("hadoop.proxyuser.oozie.hosts"));
  assertFalse("oozie_existing_mysql_host should not have been present in the exported configuration",oozieEnvProperties.containsKey("oozie_existing_mysql_host"));
  assertFalse("oozie.service.JPAService.jdbc.url should not have been present in the exported configuration",oozieSiteProperties.containsKey("oozie.service.JPAService.jdbc.url"));
  assertEquals("oozie_heapsize should have been included in exported configuration","1024m",oozieEnvProperties.get("oozie_heapsize"));
  assertEquals("oozie_permsize should have been included in exported configuration","2048m",oozieEnvProperties.get("oozie_permsize"));
}
