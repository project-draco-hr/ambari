{
  Map<String,Map<String,String>> properties=new HashMap<String,Map<String,String>>();
  Map<String,String> typeProps=new HashMap<String,String>();
  typeProps.put("hbase.zookeeper.quorum","testhost,testhost2,testhost2a,testhost2b");
  properties.put("hbase-site",typeProps);
  Collection<String> hgComponents=new HashSet<String>();
  hgComponents.add("NAMENODE");
  hgComponents.add("SECONDARY_NAMENODE");
  hgComponents.add("ZOOKEEPER_SERVER");
  HostGroup group1=new TestHostGroup("group1",Collections.singleton("testhost"),hgComponents);
  Collection<String> hgComponents2=new HashSet<String>();
  hgComponents2.add("DATANODE");
  hgComponents2.add("HDFS_CLIENT");
  hgComponents2.add("ZOOKEEPER_SERVER");
  Set<String> hosts2=new HashSet<String>();
  hosts2.add("testhost2");
  hosts2.add("testhost2a");
  hosts2.add("testhost2b");
  HostGroup group2=new TestHostGroup("group2",hosts2,hgComponents2);
  Collection<String> hgComponents3=new HashSet<String>();
  hgComponents2.add("HDFS_CLIENT");
  hgComponents2.add("ZOOKEEPER_CLIENT");
  Set<String> hosts3=new HashSet<String>();
  hosts3.add("testhost3");
  hosts3.add("testhost3a");
  HostGroup group3=new TestHostGroup("group3",hosts3,hgComponents3);
  Collection<HostGroup> hostGroups=new HashSet<HostGroup>();
  hostGroups.add(group1);
  hostGroups.add(group2);
  hostGroups.add(group3);
  BlueprintConfigurationProcessor updater=new BlueprintConfigurationProcessor(properties);
  Map<String,Map<String,String>> updatedProperties=updater.doUpdateForBlueprintExport(hostGroups);
  String updatedVal=updatedProperties.get("hbase-site").get("hbase.zookeeper.quorum");
  assertEquals("%HOSTGROUP::group1%,%HOSTGROUP::group2%",updatedVal);
}
