{
  final String expectedHostName="c6401.apache.ambari.org";
  final String expectedHostNameTwo="c6402.ambari.apache.org";
  final String expectedPortNum="808080";
  final String expectedHostGroupName="host_group_1";
  final String expectedHostGroupNameTwo="host_group_2";
  EasyMockSupport mockSupport=new EasyMockSupport();
  HostGroup mockHostGroupOne=mockSupport.createMock(HostGroup.class);
  HostGroup mockHostGroupTwo=mockSupport.createMock(HostGroup.class);
  expect(mockHostGroupOne.getHostInfo()).andReturn(Arrays.asList(expectedHostName,"serverTwo")).atLeastOnce();
  expect(mockHostGroupTwo.getHostInfo()).andReturn(Arrays.asList(expectedHostNameTwo,"serverTwo")).atLeastOnce();
  expect(mockHostGroupOne.getName()).andReturn(expectedHostGroupName).atLeastOnce();
  expect(mockHostGroupTwo.getName()).andReturn(expectedHostGroupNameTwo).atLeastOnce();
  mockSupport.replayAll();
  Map<String,Map<String,String>> configProperties=new HashMap<String,Map<String,String>>();
  Map<String,String> hiveSiteProperties=new HashMap<String,String>();
  Map<String,String> hiveEnvProperties=new HashMap<String,String>();
  Map<String,String> webHCatSiteProperties=new HashMap<String,String>();
  Map<String,String> coreSiteProperties=new HashMap<String,String>();
  configProperties.put("hive-site",hiveSiteProperties);
  configProperties.put("hive-env",hiveEnvProperties);
  configProperties.put("webhcat-site",webHCatSiteProperties);
  configProperties.put("core-site",coreSiteProperties);
  hiveSiteProperties.put("hive.metastore.uris",expectedHostName + ":" + expectedPortNum);
  hiveSiteProperties.put("javax.jdo.option.ConnectionURL",expectedHostName + ":" + expectedPortNum);
  hiveSiteProperties.put("hive.zookeeper.quorum",expectedHostName + ":" + expectedPortNum+ ","+ expectedHostNameTwo+ ":"+ expectedPortNum);
  hiveEnvProperties.put("hive_hostname",expectedHostName);
  webHCatSiteProperties.put("templeton.hive.properties",expectedHostName + "," + expectedHostNameTwo);
  webHCatSiteProperties.put("templeton.kerberos.principal",expectedHostName);
  coreSiteProperties.put("hadoop.proxyuser.hive.hosts",expectedHostName + "," + expectedHostNameTwo);
  coreSiteProperties.put("hadoop.proxyuser.HTTP.hosts",expectedHostName + "," + expectedHostNameTwo);
  coreSiteProperties.put("hadoop.proxyuser.hcat.hosts",expectedHostName + "," + expectedHostNameTwo);
  BlueprintConfigurationProcessor configProcessor=new BlueprintConfigurationProcessor(configProperties);
  configProcessor.doUpdateForBlueprintExport(Arrays.asList(mockHostGroupOne,mockHostGroupTwo));
  assertEquals("hive property not properly exported",createExportedAddress(expectedPortNum,expectedHostGroupName),hiveSiteProperties.get("hive.metastore.uris"));
  assertEquals("hive property not properly exported",createExportedAddress(expectedPortNum,expectedHostGroupName),hiveSiteProperties.get("javax.jdo.option.ConnectionURL"));
  assertEquals("hive property not properly exported",createExportedHostName(expectedHostGroupName),hiveEnvProperties.get("hive_hostname"));
  assertEquals("hive property not properly exported",createExportedHostName(expectedHostGroupName) + "," + createExportedHostName(expectedHostGroupNameTwo),webHCatSiteProperties.get("templeton.hive.properties"));
  assertEquals("hive property not properly exported",createExportedHostName(expectedHostGroupName),webHCatSiteProperties.get("templeton.kerberos.principal"));
  assertEquals("hive property not properly exported",createExportedHostName(expectedHostGroupName) + "," + createExportedHostName(expectedHostGroupNameTwo),coreSiteProperties.get("hadoop.proxyuser.hive.hosts"));
  assertEquals("hive property not properly exported",createExportedHostName(expectedHostGroupName) + "," + createExportedHostName(expectedHostGroupNameTwo),coreSiteProperties.get("hadoop.proxyuser.HTTP.hosts"));
  assertEquals("hive property not properly exported",createExportedHostName(expectedHostGroupName) + "," + createExportedHostName(expectedHostGroupNameTwo),coreSiteProperties.get("hadoop.proxyuser.hcat.hosts"));
  assertEquals("hive zookeeper quorum property not properly exported",createExportedAddress(expectedPortNum,expectedHostGroupName) + "," + createExportedAddress(expectedPortNum,expectedHostGroupNameTwo),hiveSiteProperties.get("hive.zookeeper.quorum"));
  mockSupport.verifyAll();
}
