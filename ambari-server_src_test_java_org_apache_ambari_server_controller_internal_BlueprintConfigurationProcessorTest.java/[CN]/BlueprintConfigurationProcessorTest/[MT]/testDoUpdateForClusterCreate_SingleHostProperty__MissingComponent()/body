{
  EasyMockSupport mockSupport=new EasyMockSupport();
  AmbariManagementController mockMgmtController=mockSupport.createMock(AmbariManagementController.class);
  expect(mockMgmtController.getStackServices(isA(Set.class))).andReturn(Collections.<StackServiceResponse>emptySet());
  Map<String,Map<String,String>> properties=new HashMap<String,Map<String,String>>();
  Map<String,String> typeProps=new HashMap<String,String>();
  typeProps.put("yarn.resourcemanager.hostname","localhost");
  typeProps.put("yarn.timeline-service.address","localhost");
  properties.put("yarn-site",typeProps);
  Collection<String> hgComponents=new HashSet<String>();
  hgComponents.add("NAMENODE");
  hgComponents.add("SECONDARY_NAMENODE");
  hgComponents.add("RESOURCEMANAGER");
  HostGroup group1=new TestHostGroup("group1",Collections.singleton("testhost"),hgComponents);
  Collection<String> hgComponents2=new HashSet<String>();
  hgComponents2.add("DATANODE");
  hgComponents2.add("HDFS_CLIENT");
  HostGroup group2=new TestHostGroup("group2",Collections.singleton("testhost2"),hgComponents2);
  Map<String,HostGroup> hostGroups=new HashMap<String,HostGroup>();
  hostGroups.put(group1.getName(),group1);
  hostGroups.put(group2.getName(),group2);
  mockSupport.replayAll();
  Stack testStackDefinition=new Stack("HDP","2.1",mockMgmtController){
    @Override public Cardinality getCardinality(    String component){
      if (component.equals("APP_TIMELINE_SERVER")) {
        return new Cardinality("1");
      }
      return null;
    }
  }
;
  BlueprintConfigurationProcessor updater=new BlueprintConfigurationProcessor(properties);
  try {
    updater.doUpdateForClusterCreate(hostGroups,testStackDefinition);
    fail("IllegalArgumentException should have been thrown");
  }
 catch (  IllegalArgumentException illegalArgumentException) {
  }
  mockSupport.verifyAll();
}
