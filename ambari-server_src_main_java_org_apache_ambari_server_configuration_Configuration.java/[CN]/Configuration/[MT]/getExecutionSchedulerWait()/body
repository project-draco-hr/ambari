{
  String stringValue=properties.getProperty(EXECUTION_SCHEDULER_WAIT_KEY,DEFAULT_EXECUTION_SCHEDULER_WAIT_SECONDS);
  Long sleepTime=Long.parseLong(DEFAULT_EXECUTION_SCHEDULER_WAIT_SECONDS);
  if (stringValue != null) {
    try {
      sleepTime=Long.valueOf(stringValue);
    }
 catch (    NumberFormatException ignored) {
      LOG.warn("Value of {} ({}) should be a number, " + "falling back to default value ({})",EXECUTION_SCHEDULER_WAIT_KEY,stringValue,DEFAULT_EXECUTION_SCHEDULER_WAIT_SECONDS);
    }
  }
  if (sleepTime > 60) {
    LOG.warn("Value of {} ({}) should be a number between 1 adn 60, " + "falling back to maximum value ({})",EXECUTION_SCHEDULER_WAIT_KEY,sleepTime,60);
    sleepTime=60L;
  }
  return sleepTime * 1000;
}
