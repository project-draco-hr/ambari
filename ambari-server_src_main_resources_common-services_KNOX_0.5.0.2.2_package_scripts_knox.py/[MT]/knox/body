@OsFamilyFuncImpl(os_family=OSConst.WINSRV_FAMILY)
def knox():
    import params
    from service_mapping import knox_geteway_win_service_name
    XmlConfig('gateway-site.xml', conf_dir=params.knox_conf_dir, configurations=params.config['configurations']['gateway-site'], configuration_attributes=params.config['configuration_attributes']['gateway-site'], owner=params.knox_user)
    ServiceConfig(knox_geteway_win_service_name, action='change_user', username=params.knox_user, password=Script.get_password(params.knox_user))
    File(os.path.join(params.knox_conf_dir, 'gateway-log4j.properties'), owner=params.knox_user, content=params.gateway_log4j)
    File(os.path.join(params.knox_conf_dir, 'topologies', 'default.xml'), group=params.knox_group, owner=params.knox_user, content=InlineTemplate(params.topology_template))
    if params.security_enabled:
        TemplateConfig(os.path.join(params.knox_conf_dir, 'krb5JAASLogin.conf'), owner=params.knox_user, template_tag=None)
    if (not os.path.isfile(params.knox_master_secret_path)):
        cmd = format('cmd /C {knox_client_bin} create-master --master {knox_master_secret!p}')
        Execute(cmd)
        cmd = format('cmd /C {knox_client_bin} create-cert --hostname {knox_host_name_in_cluster}')
        Execute(cmd)
