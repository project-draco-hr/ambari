{
  AmbariManagementController ambariManagementController=injector.getInstance(AmbariManagementController.class);
  for (  final Cluster cluster : getCheckedClusterMap(ambariManagementController.getClusters()).values()) {
    Map<String,String> newRangerKmsProps=new HashMap<>();
    Config rangerKmsDbConfigs=cluster.getDesiredConfigByType(RANGER_KMS_PROPERTIES);
    if (rangerKmsDbConfigs != null) {
      String dbFlavor=rangerKmsDbConfigs.getProperties().get(RANGER_KMS_DB_FLAVOR);
      String dbHost=rangerKmsDbConfigs.getProperties().get(RANGER_KMS_DB_HOST);
      String dbName=rangerKmsDbConfigs.getProperties().get(RANGER_KMS_DB_NAME);
      String dbConnectionString=null;
      String dbDriver=null;
      if (dbFlavor != null && dbHost != null && dbName != null) {
        if ("MYSQL".equalsIgnoreCase(dbFlavor)) {
          dbConnectionString="jdbc:mysql://" + dbHost + "/"+ dbName;
          dbDriver="com.mysql.jdbc.Driver";
        }
 else         if ("ORACLE".equalsIgnoreCase(dbFlavor)) {
          dbConnectionString="jdbc:oracle:thin:@//" + dbHost;
          dbDriver="oracle.jdbc.driver.OracleDriver";
        }
 else         if ("POSTGRES".equalsIgnoreCase(dbFlavor)) {
          dbConnectionString="jdbc:postgresql://" + dbHost + "/"+ dbName;
          dbDriver="org.postgresql.Driver";
        }
 else         if ("MSSQL".equalsIgnoreCase(dbFlavor)) {
          dbConnectionString="jdbc:sqlserver://" + dbHost + ";databaseName="+ dbName;
          dbDriver="com.microsoft.sqlserver.jdbc.SQLServerDriver";
        }
 else         if ("SQLA".equalsIgnoreCase(dbFlavor)) {
          dbConnectionString="jdbc:sqlanywhere:database=" + dbName + ";host="+ dbHost;
          dbDriver="sap.jdbc4.sqlanywhere.IDriver";
        }
        newRangerKmsProps.put(RANGER_KMS_JDBC_URL,dbConnectionString);
        newRangerKmsProps.put(RANGER_KMS_JDBC_DRIVER,dbDriver);
        updateConfigurationPropertiesForCluster(cluster,RANGER_KMS_DBKS_CONFIG,newRangerKmsProps,true,false);
      }
    }
  }
}
