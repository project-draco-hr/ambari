{
  final StackDAO stackDAO=injector.getInstance(StackDAO.class);
  final ClusterDAO clusterDAO=injector.getInstance(ClusterDAO.class);
  final ResourceTypeDAO resourceTypeDAO=injector.getInstance(ResourceTypeDAO.class);
  final StackEntity stackEntity=stackDAO.find("HDP","2.2.0");
  ResourceTypeEntity resourceTypeEntity=resourceTypeDAO.findById(ResourceType.CLUSTER.getId());
  if (resourceTypeEntity == null) {
    resourceTypeEntity=new ResourceTypeEntity();
    resourceTypeEntity.setId(ResourceType.CLUSTER.getId());
    resourceTypeEntity.setName(ResourceType.CLUSTER.name());
    resourceTypeEntity=resourceTypeDAO.merge(resourceTypeEntity);
  }
  ResourceEntity resourceEntity=new ResourceEntity();
  resourceEntity.setResourceType(resourceTypeEntity);
  ClusterEntity clusterEntity=new ClusterEntity();
  clusterEntity.setClusterName("cluster1");
  clusterEntity.setResource(resourceEntity);
  clusterEntity.setDesiredStack(stackEntity);
  clusterDAO.create(clusterEntity);
  clusterEntity=clusterDAO.findById(clusterEntity.getClusterId());
  assertEquals("cluster1",clusterEntity.getClusterName());
  Thread thread=new Thread(){
    @Override public void run(){
      ClusterEntity clusterEntity1=clusterDAO.findByName("cluster1");
      clusterEntity1.setClusterName("anotherName");
      clusterDAO.merge(clusterEntity1);
      clusterEntity1=clusterDAO.findById(clusterEntity1.getClusterId());
      assertEquals("anotherName",clusterEntity1.getClusterName());
      injector.getInstance(EntityManager.class).clear();
    }
  }
;
  thread.start();
  thread.join();
  injector.getInstance(EntityManager.class).clear();
  clusterEntity=clusterDAO.findById(clusterEntity.getClusterId());
  assertEquals("anotherName",clusterEntity.getClusterName());
  thread=new Thread(){
    @Override public void run(){
      clusterDAO.removeByName("anotherName");
      injector.getInstance(EntityManager.class).clear();
    }
  }
;
  thread.start();
  thread.join();
  injector.getInstance(EntityManager.class).clear();
  assertNull(clusterDAO.findById(clusterEntity.getClusterId()));
  List<ClusterEntity> result=clusterDAO.findAll();
  final ResourceTypeEntity finalResourceTypeEntity=resourceTypeEntity;
  thread=new Thread(){
    @Override public void run(){
      ResourceEntity resourceEntity=new ResourceEntity();
      resourceEntity.setResourceType(finalResourceTypeEntity);
      ClusterEntity temp=new ClusterEntity();
      temp.setClusterName("temp_cluster");
      temp.setResource(resourceEntity);
      temp.setDesiredStack(stackEntity);
      clusterDAO.create(temp);
    }
  }
;
  thread.start();
  thread.join();
  assertEquals(result.size() + 1,(result=clusterDAO.findAll()).size());
  thread=new Thread(){
    @Override public void run(){
      ResourceEntity resourceEntity=new ResourceEntity();
      resourceEntity.setResourceType(finalResourceTypeEntity);
      ClusterEntity temp=new ClusterEntity();
      temp.setClusterName("temp_cluster2");
      temp.setResource(resourceEntity);
      temp.setDesiredStack(stackEntity);
      clusterDAO.create(temp);
    }
  }
;
  thread.start();
  thread.join();
  assertEquals(result.size() + 1,(clusterDAO.findAll()).size());
}
