{
  Type type=new TypeToken<Map<Object,Object>>(){
  }
.getType();
  for (  String requestedPropertyId : requestedPropertyIds) {
    PropertyInfo propertyInfo=propertyInfos.get(requestedPropertyId);
    String metricsPath=propertyInfo.getPropertyId();
    String documentPath=extractDocumentPath(metricsPath);
    String[] docPath=documentPath.split(DOCUMENT_PATH_SEPARATOR);
    Map<String,String> subMap=jsonMap;
    for (int i=0; i < docPath.length; i++) {
      String pathElement=docPath[i];
      if (!subMap.containsKey(pathElement)) {
        String message=String.format("Can not fetch %dth element of document path (%s) " + "from json. Wrong metrics path: %s",i,pathElement,metricsPath);
        throw new AmbariException(message);
      }
      Object jsonSubElement=jsonMap.get(pathElement);
      if (i == docPath.length - 1) {
        resource.setProperty(requestedPropertyId,jsonSubElement);
      }
 else {
        subMap=gson.fromJson((JsonElement)jsonSubElement,type);
      }
    }
  }
}
