{
  final String expectedClusterName="testclusterone";
  final String expectedPortNumber="61889";
  EasyMockSupport mockSupport=new EasyMockSupport();
  AmbariManagementController controllerMock=mockSupport.createMock(AmbariManagementController.class);
  Clusters clustersMock=mockSupport.createMock(Clusters.class);
  Cluster clusterMock=mockSupport.createMock(Cluster.class);
  Config logSearchSiteConfig=mockSupport.createMock(Config.class);
  Map<String,String> testProperties=new HashMap<String,String>();
  testProperties.put("logsearch.ui.port",expectedPortNumber);
  expect(controllerMock.getClusters()).andReturn(clustersMock).atLeastOnce();
  expect(clustersMock.getCluster(expectedClusterName)).andReturn(clusterMock).atLeastOnce();
  expect(clusterMock.getDesiredConfigByType("logsearch-site")).andReturn(logSearchSiteConfig).atLeastOnce();
  expect(clusterMock.getServiceComponentHosts("LOGSEARCH","LOGSEARCH_SERVER")).andReturn(Collections.<ServiceComponentHost>emptyList()).atLeastOnce();
  mockSupport.replayAll();
  LoggingRequestHelperFactory helperFactory=new LoggingRequestHelperFactoryImpl();
  LoggingRequestHelper helper=helperFactory.getHelper(controllerMock,expectedClusterName);
  assertNull("LoggingRequestHelper object returned by the factory should have been null",helper);
  mockSupport.verifyAll();
}
