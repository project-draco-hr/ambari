{
  final String expectedClusterName="testclusterone";
  EasyMockSupport mockSupport=new EasyMockSupport();
  AmbariManagementController controllerMock=mockSupport.createMock(AmbariManagementController.class);
  Clusters clustersMock=mockSupport.createMock(Clusters.class);
  Cluster clusterMock=mockSupport.createMock(Cluster.class);
  Config logSearchEnvConfig=mockSupport.createMock(Config.class);
  expect(controllerMock.getClusters()).andReturn(clustersMock).atLeastOnce();
  expect(clustersMock.getCluster(expectedClusterName)).andReturn(clusterMock).atLeastOnce();
  expect(clusterMock.getDesiredConfigByType("logsearch-env")).andReturn(logSearchEnvConfig).atLeastOnce();
  expect(clusterMock.getServiceComponentHosts("LOGSEARCH","LOGSEARCH_SERVER")).andReturn(Collections.<ServiceComponentHost>emptyList()).atLeastOnce();
  expect(clusterMock.getServices()).andReturn(Collections.singletonMap("LOGSEARCH",(Service)null)).atLeastOnce();
  mockSupport.replayAll();
  LoggingRequestHelperFactory helperFactory=new LoggingRequestHelperFactoryImpl();
  LoggingRequestHelper helper=helperFactory.getHelper(controllerMock,expectedClusterName);
  assertNull("LoggingRequestHelper object returned by the factory should have been null",helper);
  mockSupport.verifyAll();
}
