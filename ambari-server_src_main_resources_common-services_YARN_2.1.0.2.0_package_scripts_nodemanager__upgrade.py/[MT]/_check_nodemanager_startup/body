@retry(times=30, sleep_time=10, err_class=Fail)
def _check_nodemanager_startup():
    '\n  Checks that a NodeManager is in a RUNNING state in the cluster via\n  "yarn node -list -states=RUNNING" command. Once the NodeManager is found to be\n  alive this method will return, otherwise it will raise a Fail(...) and retry\n  automatically.\n  :return:\n  '
    import params
    import socket
    command = 'yarn node -list -states=RUNNING'
    try:
        (return_code, yarn_output) = shell.call(command, user=params.yarn_user)
    except:
        raise Fail('Unable to determine if the NodeManager has started after upgrade.')
    if (return_code == 0):
        hostname = params.hostname.lower()
        hostname_ip = socket.gethostbyname(params.hostname.lower())
        nodemanager_address = params.nm_address.lower()
        yarn_output = yarn_output.lower()
        if ((hostname in yarn_output) or (nodemanager_address in yarn_output) or (hostname_ip in yarn_output)):
            Logger.info('NodeManager with ID {0} has rejoined the cluster.'.format(nodemanager_address))
            return
        else:
            raise Fail('NodeManager with ID {0} was not found in the list of running NodeManagers'.format(nodemanager_address))
    raise Fail('Unable to determine if the NodeManager has started after upgrade (result code {0})'.format(str(return_code)))
