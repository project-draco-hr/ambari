{
  ResourceProvider artifactProvider=ambariContext.getClusterController().ensureResourceProvider(Resource.Type.Artifact);
  Map<String,Object> properties=new HashMap<>();
  properties.put(ArtifactResourceProvider.ARTIFACT_NAME_PROPERTY,"kerberos_descriptor");
  properties.put("Artifacts/cluster_name",clusterName);
  Map<String,String> requestInfoProps=new HashMap<>();
  requestInfoProps.put(org.apache.ambari.server.controller.spi.Request.REQUEST_INFO_BODY_PROPERTY,"{\"" + ArtifactResourceProvider.ARTIFACT_DATA_PROPERTY + "\": "+ descriptor+ "}");
  org.apache.ambari.server.controller.spi.Request request=new RequestImpl(Collections.<String>emptySet(),Collections.singleton(properties),requestInfoProps,null);
  try {
    RequestStatus status=artifactProvider.createResources(request);
    try {
      while (status.getStatus() != RequestStatus.Status.Complete) {
        LOG.info("Waiting for kerberos_descriptor artifact creation.");
        Thread.sleep(100);
      }
    }
 catch (    InterruptedException e) {
      LOG.info("Wait for resource creation interrupted!");
    }
    if (status.getStatus() != RequestStatus.Status.Complete) {
      throw new RuntimeException("Failed to attach kerberos_descriptor artifact to cluster!");
    }
  }
 catch (  SystemException|UnsupportedPropertyException|NoSuchParentResourceException e) {
    throw new RuntimeException("Failed to attach kerberos_descriptor artifact to cluster: " + e);
  }
catch (  ResourceAlreadyExistsException e) {
    throw new RuntimeException("Failed to attach kerberos_descriptor artifact to cluster as resource already exists.");
  }
}
