{
  final String hostName=host.getHostName();
  try {
    topology.addHostToTopology(response.getHostGroupName(),hostName);
    updateHostWithRackInfo(topology,response,host);
  }
 catch (  InvalidTopologyException e) {
    throw new RuntimeException("An internal error occurred while performing request host registration: " + e,e);
  }
catch (  NoSuchHostGroupException e) {
    throw new RuntimeException("An internal error occurred while performing request host registration: " + e,e);
  }
  try {
    RetryHelper.executeWithRetry(new Callable<Object>(){
      @Override public Object call() throws Exception {
        persistedState.registerHostName(response.getHostRequestId(),hostName);
        persistedState.registerInTopologyHostInfo(host);
        return null;
      }
    }
);
  }
 catch (  AmbariException e) {
    LOG.error("Exception ocurred while registering host name",e);
    throw new RuntimeException(e);
  }
  LOG.info("TopologyManager.processAcceptedHostOffer: queue tasks for host = {} which responded {}",hostName,response.getAnswer());
  if (parallelTaskCreationEnabled) {
    executor.execute(new Runnable(){
      @Override public void run(){
        queueHostTasks(topology,response,hostName);
      }
    }
);
  }
 else {
    queueHostTasks(topology,response,hostName);
  }
}
