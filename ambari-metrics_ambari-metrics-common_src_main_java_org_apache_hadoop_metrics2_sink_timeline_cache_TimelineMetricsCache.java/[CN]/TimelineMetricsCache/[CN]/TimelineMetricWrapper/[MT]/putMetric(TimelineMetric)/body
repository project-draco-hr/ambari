{
  TreeMap<Long,Double> metricValues=this.timelineMetric.getMetricValues();
  if (metricValues.size() > maxRecsPerName) {
    long newEldestTimestamp=oldestTimestamp + maxEvictionTimeInMillis;
    TreeMap<Long,Double> metricsSubSet=new TreeMap<>(metricValues.tailMap(newEldestTimestamp));
    if (metricsSubSet.isEmpty()) {
      oldestTimestamp=metric.getStartTime();
      this.timelineMetric.setStartTime(metric.getStartTime());
    }
 else {
      Long newStartTime=metricsSubSet.firstKey();
      oldestTimestamp=newStartTime;
      this.timelineMetric.setStartTime(newStartTime);
    }
    this.timelineMetric.setMetricValues(metricsSubSet);
    LOG.warn("Metrics cache overflow. Values for metric " + metric.getMetricName() + " older than "+ newEldestTimestamp+ " were removed to clean up the cache.");
  }
  this.timelineMetric.addMetricValues(metric.getMetricValues());
  updateTimeDiff(metric.getStartTime());
}
