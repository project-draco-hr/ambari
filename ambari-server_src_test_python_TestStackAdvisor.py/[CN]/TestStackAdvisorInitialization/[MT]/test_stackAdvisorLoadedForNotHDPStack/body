def test_stackAdvisorLoadedForNotHDPStack(self):
    path_template = os.path.join(self.test_directory, '../resources/stacks/{0}/{1}/services/stack_advisor.py')
    path_template_name = 'STACK_ADVISOR_IMPL_PATH_TEMPLATE'
    setattr(self.stack_advisor, path_template_name, path_template)
    self.assertEquals(path_template, getattr(self.stack_advisor, path_template_name))
    instantiate_stack_advisor_method_name = 'instantiateStackAdvisor'
    instantiate_stack_advisor_method = getattr(self.stack_advisor, instantiate_stack_advisor_method_name)
    stack_advisor = instantiate_stack_advisor_method('XYZ', '1.0.1', ['1.0.0'])
    self.assertEquals('XYZ101StackAdvisor', stack_advisor.__class__.__name__)
    services = {'Versions': {'stack_name': 'XYZ', 'stack_version': '1.0.1', }, 'services': [{'StackServices': {'service_name': 'YARN', }, 'components': [{'StackServiceComponents': {'component_name': 'RESOURCEMANAGER', }, }, {'StackServiceComponents': {'component_name': 'APP_TIMELINE_SERVER', }, }, {'StackServiceComponents': {'component_name': 'YARN_CLIENT', }, }, {'StackServiceComponents': {'component_name': 'NODEMANAGER', }, }], }], }
    hosts = {'items': [{'Hosts': {'host_name': 'host1', }, }, {'Hosts': {'host_name': 'host2', }, }], }
    config_recommendations = stack_advisor.recommendConfigurations(services, hosts)
    yarn_configs = config_recommendations['recommendations']['blueprint']['configurations']['yarn-site']['properties']
    'Check that value is populated from child class, not parent'
    self.assertEquals('-Xmx101m', yarn_configs['yarn.nodemanager.resource.memory-mb'])
