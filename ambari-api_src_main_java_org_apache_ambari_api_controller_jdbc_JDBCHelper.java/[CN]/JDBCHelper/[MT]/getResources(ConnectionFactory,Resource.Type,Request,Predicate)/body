{
  Set<Resource> resources=new HashSet<Resource>();
  Set<PropertyId> propertyIds=new HashSet<PropertyId>(request.getPropertyIds());
  if (predicate != null) {
    propertyIds.addAll(PredicateHelper.getPropertyIds(predicate));
  }
  try {
    Connection connection=connectionFactory.getConnection();
    try {
      Map<PropertyId,PropertyId> joinKeys=getJoins(connection,propertyIds);
      String sql=getSelectSQL(propertyIds,predicate,joinKeys);
      Statement statement=connection.createStatement();
      ResultSet rs=statement.executeQuery(sql);
      while (rs.next()) {
        ResultSetMetaData metaData=rs.getMetaData();
        int columnCount=metaData.getColumnCount();
        final ResourceImpl resource=new ResourceImpl(type);
        for (int i=1; i <= columnCount; ++i) {
          PropertyIdImpl propertyId=new PropertyIdImpl(metaData.getColumnName(i),metaData.getTableName(i),false);
          if (propertyIds.contains(propertyId)) {
            resource.setProperty(propertyId,rs.getString(i));
          }
        }
        resources.add(resource);
      }
    }
  finally {
      connection.close();
    }
  }
 catch (  SQLException e) {
    throw new IllegalStateException("DB error : ",e);
  }
  return resources;
}
