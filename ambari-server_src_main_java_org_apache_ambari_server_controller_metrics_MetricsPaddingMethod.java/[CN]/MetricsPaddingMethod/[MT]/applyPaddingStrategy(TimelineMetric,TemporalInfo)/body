{
  if (strategy.equals(PADDING_STRATEGY.NONE) || temporalInfo == null) {
    return;
  }
  TreeMap<Long,Double> values=new TreeMap<Long,Double>(metric.getMetricValues());
  long dataInterval=getTimelineMetricInterval(values);
  if (dataInterval == -1 || dataInterval < MINIMUM_STEP_INTERVAL) {
    dataInterval=temporalInfo.getStep() != null ? temporalInfo.getStep() : -1;
  }
  if (dataInterval == -1) {
    return;
  }
  long intervalStartTime=longToMillis(temporalInfo.getStartTime());
  long intervalEndTime=longToMillis(temporalInfo.getEndTime());
  long dataStartTime=longToMillis(values.firstKey());
  long dataEndTime=longToMillis(values.lastKey());
  Double paddingValue=0.0d;
  if (strategy.equals(PADDING_STRATEGY.NULLS)) {
    paddingValue=null;
  }
  for (long counter=intervalStartTime; counter < dataStartTime; counter+=dataInterval) {
    values.put(counter,paddingValue);
  }
  for (long counter=dataEndTime + dataInterval; counter <= intervalEndTime; counter+=dataInterval) {
    values.put(counter,paddingValue);
  }
  metric.setMetricValues(values);
}
