{
  ArrayList<String> actionsAvailable=new ArrayList<String>();
  actionsAvailable.add("create");
  actionsAvailable.add("delete");
  ArrayList<String> typesAvailable=new ArrayList<String>();
  typesAvailable.add("file");
  typesAvailable.add("directory");
  if (resource.getTarget() == null)   throw new IllegalArgumentException("Path to resource in HadoopFs must be filled.");
  if (resource.getAction() == null || !actionsAvailable.contains(resource.getAction()))   throw new IllegalArgumentException("Action is not supported.");
  if (resource.getType() == null || !typesAvailable.contains(resource.getType()))   throw new IllegalArgumentException("Type is not supported.");
  if (dfs.isFile(new Path(resource.getTarget())) && !"file".equals(resource.getType()))   throw new IllegalArgumentException("Cannot create a directory " + resource.getTarget() + " because file is present on the given path.");
 else   if (dfs.isDirectory(new Path(resource.getTarget())) && !"directory".equals(resource.getType()))   throw new IllegalArgumentException("Cannot create a file " + resource.getTarget() + " because directory is present on the given path.");
  if (resource.getSource() != null) {
    File source=new File(resource.getSource());
    if (source.isFile() && !"file".equals(resource.getType()))     throw new IllegalArgumentException("Cannot create a directory " + resource.getTarget() + " because source "+ resource.getSource()+ "is a file");
 else     if (source.isDirectory() && !"directory".equals(resource.getType()))     throw new IllegalArgumentException("Cannot create a file " + resource.getTarget() + " because source "+ resource.getSource()+ "is a directory");
  }
}
