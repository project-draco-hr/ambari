{
  Map<String,Map<String,String>> userProvidedProperties=Maps.newHashMap();
  Blueprint blueprint=topology.getBlueprint();
  Configuration stackDefaults=blueprint.getStack().getConfiguration(blueprint.getServices());
  Map<String,Map<String,String>> stackDefaultProps=stackDefaults.getProperties();
  Map<String,Map<String,String>> fullConfig=topology.getConfiguration().getFullProperties();
  for (  Map.Entry<String,Map<String,String>> configGroup : fullConfig.entrySet()) {
    String configType=configGroup.getKey();
    Map<String,String> configsToAdd=Maps.newHashMap();
    for (    Map.Entry<String,String> configProp : configGroup.getValue().entrySet()) {
      if (stackDefaultProps.containsKey(configType) && stackDefaultProps.get(configType).containsKey(configProp.getKey())) {
        String originalValue=stackDefaultProps.get(configType).get(configProp.getKey());
        if (originalValue != null && !originalValue.equals(configProp.getValue())) {
          configsToAdd.put(configProp.getKey(),configProp.getValue());
        }
      }
 else {
        configsToAdd.put(configProp.getKey(),configProp.getValue());
      }
    }
    if (!configsToAdd.isEmpty()) {
      userProvidedProperties.put(configGroup.getKey(),configsToAdd);
    }
  }
  return userProvidedProperties;
}
