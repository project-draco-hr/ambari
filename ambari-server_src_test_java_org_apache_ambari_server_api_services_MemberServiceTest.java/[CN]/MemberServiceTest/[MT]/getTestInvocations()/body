{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  MemberService memberService;
  Method m;
  Object[] args;
  memberService=new TestMemberService("engineering");
  m=memberService.getClass().getMethod("createMember",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,memberService,m,args,"body"));
  memberService=new TestMemberService("engineering");
  m=memberService.getClass().getMethod("createMember",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"joe"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,memberService,m,args,"body"));
  memberService=new TestMemberService("engineering");
  m=memberService.getClass().getMethod("deleteMember",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"joe"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,memberService,m,args,null));
  memberService=new TestMemberService("engineering");
  m=memberService.getClass().getMethod("getMembers",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,memberService,m,args,null));
  memberService=new TestMemberService("engineering");
  m=memberService.getClass().getMethod("getMember",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"joe"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,memberService,m,args,null));
  memberService=new TestMemberService("engineering");
  m=memberService.getClass().getMethod("updateMembers",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,memberService,m,args,"body"));
  return listInvocations;
}
