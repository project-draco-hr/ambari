def __init__(self, url=None, engine=None, tablename='apscheduler_jobs', metadata=None, pickle_protocol=pickle.HIGHEST_PROTOCOL):
    self.jobs = []
    self.pickle_protocol = pickle_protocol
    if engine:
        self.engine = engine
    elif url:
        self.engine = create_engine(url)
    else:
        raise ValueError('Need either "engine" or "url" defined')
    if (sqlalchemy.__version__ < '0.7'):
        pickle_coltype = PickleType(pickle_protocol, mutable=False)
    else:
        pickle_coltype = PickleType(pickle_protocol)
    self.jobs_t = Table(tablename, (metadata or MetaData()), Column('id', Integer, Sequence((tablename + '_id_seq'), optional=True), primary_key=True), Column('trigger', pickle_coltype, nullable=False), Column('func_ref', String(1024), nullable=False), Column('args', pickle_coltype, nullable=False), Column('kwargs', pickle_coltype, nullable=False), Column('name', Unicode(1024)), Column('misfire_grace_time', Integer, nullable=False), Column('coalesce', Boolean, nullable=False), Column('max_runs', Integer), Column('max_instances', Integer), Column('next_run_time', DateTime, nullable=False), Column('runs', BigInteger))
    self.jobs_t.create(self.engine, True)
