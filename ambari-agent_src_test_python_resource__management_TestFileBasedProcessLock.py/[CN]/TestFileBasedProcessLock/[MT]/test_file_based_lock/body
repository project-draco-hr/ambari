@not_for_platform(PLATFORM_WINDOWS)
def test_file_based_lock(self):
    '\n    Test BlockingLock using mkdir atomicity.\n    '
    test_temp_dir = tempfile.mkdtemp(prefix='test_file_based_lock')
    try:
        indicator_dir = os.path.join(test_temp_dir, 'indicator')
        lock_file = os.path.join(test_temp_dir, 'lock')

        def dummy_task(index):
            with FileBasedProcessLock(lock_file):
                os.mkdir(indicator_dir)
                time.sleep(0.1)
                os.rmdir(indicator_dir)
        process_list = []
        for i in range(0, 3):
            p = Process(target=dummy_task, args=(i,))
            p.start()
            process_list.append(p)
        for p in process_list:
            p.join(2)
            self.assertEquals(p.exitcode, 0)
    finally:
        shutil.rmtree(test_temp_dir)
