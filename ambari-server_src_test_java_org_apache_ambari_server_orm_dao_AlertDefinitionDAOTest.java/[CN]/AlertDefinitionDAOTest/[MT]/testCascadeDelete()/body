{
  AlertDefinitionEntity definition=helper.createAlertDefinition(clusterId);
  AlertGroupEntity group=helper.createAlertGroup(clusterId,null);
  group.addAlertDefinition(definition);
  dispatchDao.merge(group);
  AlertHistoryEntity history=new AlertHistoryEntity();
  history.setServiceName(definition.getServiceName());
  history.setClusterId(clusterId);
  history.setAlertDefinition(definition);
  history.setAlertLabel("Label");
  history.setAlertState(AlertState.OK);
  history.setAlertText("Alert Text");
  history.setAlertTimestamp(calendar.getTimeInMillis());
  alertsDao.create(history);
  AlertCurrentEntity current=new AlertCurrentEntity();
  current.setAlertHistory(history);
  current.setLatestTimestamp(new Date().getTime());
  current.setOriginalTimestamp(new Date().getTime() - 10800000);
  current.setMaintenanceState(MaintenanceState.OFF);
  alertsDao.create(current);
  AlertNoticeEntity notice=new AlertNoticeEntity();
  notice.setAlertHistory(history);
  notice.setAlertTarget(helper.createAlertTarget());
  notice.setNotifyState(NotificationState.PENDING);
  dispatchDao.create(notice);
  group=dispatchDao.findGroupById(group.getGroupId());
  assertNotNull(group);
  assertNotNull(group.getAlertDefinitions());
  assertEquals(1,group.getAlertDefinitions().size());
  history=alertsDao.findById(history.getAlertId());
  assertNotNull(history);
  current=alertsDao.findCurrentById(current.getAlertId());
  assertNotNull(current);
  assertNotNull(current.getAlertHistory());
  notice=dispatchDao.findNoticeById(notice.getNotificationId());
  assertNotNull(notice);
  assertNotNull(notice.getAlertHistory());
  assertNotNull(notice.getAlertTarget());
  definition=dao.findById(definition.getDefinitionId());
  dao.refresh(definition);
  dao.remove(definition);
  notice=dispatchDao.findNoticeById(notice.getNotificationId());
  assertNull(notice);
  current=alertsDao.findCurrentById(current.getAlertId());
  assertNull(current);
  history=alertsDao.findById(history.getAlertId());
  assertNull(history);
  group=dispatchDao.findGroupById(group.getGroupId());
  assertNotNull(group);
  assertNotNull(group.getAlertDefinitions());
  assertEquals(0,group.getAlertDefinitions().size());
}
