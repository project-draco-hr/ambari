{
  final KerberosOperationHandlerFactory kerberosOperationHandlerFactory=createNiceMock(KerberosOperationHandlerFactory.class);
  expect(kerberosOperationHandlerFactory.getKerberosOperationHandler(KDCType.MIT_KDC)).andReturn(new KerberosOperationHandler(){
    @Override public void open(    KerberosCredential administratorCredentials,    String defaultRealm) throws KerberosOperationException {
      setAdministratorCredentials(administratorCredentials);
      setDefaultRealm(defaultRealm);
    }
    @Override public void close() throws KerberosOperationException {
    }
    @Override public boolean principalExists(    String principal) throws KerberosOperationException {
      return "principal".equals(principal);
    }
    @Override public Integer createServicePrincipal(    String principal,    String password) throws KerberosOperationException {
      return null;
    }
    @Override public Integer setPrincipalPassword(    String principal,    String password) throws KerberosOperationException {
      return null;
    }
    @Override public boolean removeServicePrincipal(    String principal) throws KerberosOperationException {
      return false;
    }
  }
).anyTimes();
  injector=Guice.createInjector(new AbstractModule(){
    @Override protected void configure(){
      bind(EntityManager.class).toInstance(createNiceMock(EntityManager.class));
      bind(DBAccessor.class).toInstance(createNiceMock(DBAccessor.class));
      bind(ClusterFactory.class).toInstance(createNiceMock(ClusterFactory.class));
      bind(HostFactory.class).toInstance(createNiceMock(HostFactory.class));
      bind(SecurityHelper.class).toInstance(createNiceMock(SecurityHelper.class));
      bind(OsFamily.class).toInstance(createNiceMock(OsFamily.class));
      bind(AmbariCustomCommandExecutionHelper.class).toInstance(createNiceMock(AmbariCustomCommandExecutionHelper.class));
      bind(MaintenanceStateHelper.class).toInstance(createNiceMock(MaintenanceStateHelper.class));
      bind(AmbariManagementController.class).toInstance(createNiceMock(AmbariManagementController.class));
      bind(AmbariMetaInfo.class).toInstance(createNiceMock(AmbariMetaInfo.class));
      bind(ActionManager.class).toInstance(createNiceMock(ActionManager.class));
      bind(RequestFactory.class).toInstance(createNiceMock(RequestFactory.class));
      bind(StageFactory.class).toInstance(createNiceMock(StageFactory.class));
      bind(Clusters.class).toInstance(createNiceMock(ClustersImpl.class));
      bind(ConfigHelper.class).toInstance(createNiceMock(ConfigHelper.class));
      bind(KerberosOperationHandlerFactory.class).toInstance(kerberosOperationHandlerFactory);
    }
  }
);
}
