{
  ResourceProvider resourceProvider=createStrictMock(ResourceProvider.class);
  expect(clusterController.ensureResourceProvider(Resource.Type.Artifact)).andReturn(resourceProvider).once();
  Resource resource=createStrictMock(Resource.class);
  Set<Resource> result=Collections.singleton(resource);
  Capture<Predicate> predicateCapture=newCapture();
  Capture<Request> requestCapture=newCapture();
  expect(resourceProvider.getResources(capture(requestCapture),capture(predicateCapture))).andReturn(result).once();
  Map<String,Map<String,Object>> resourcePropertiesMap=createStrictMock(Map.class);
  expect(resourcePropertiesMap.get(ArtifactResourceProvider.ARTIFACT_DATA_PROPERTY)).andReturn(Collections.<String,Object>emptyMap()).once();
  expect(resourcePropertiesMap.get(ArtifactResourceProvider.ARTIFACT_DATA_PROPERTY + "/properties")).andReturn(Collections.<String,Object>emptyMap()).once();
  expect(resource.getPropertiesMap()).andReturn(resourcePropertiesMap).once();
  expect(kerberosDescriptorFactory.createInstance(anyObject(Map.class))).andReturn(kerberosDescriptor).once();
  expect(metaInfo.getKerberosDescriptor("HDP","2.2")).andReturn(null).once();
}
