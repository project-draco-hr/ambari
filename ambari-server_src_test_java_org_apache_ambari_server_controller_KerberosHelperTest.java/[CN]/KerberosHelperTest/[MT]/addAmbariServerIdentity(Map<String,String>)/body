{
  boolean createAmbariPrincipal=(kerberosEnvProperties == null) || !"false".equalsIgnoreCase(kerberosEnvProperties.get("create_ambari_principal"));
  KerberosHelperImpl kerberosHelper=injector.getInstance(KerberosHelperImpl.class);
  KerberosIdentityDescriptor ambariKerberosIdentity=createMock(KerberosIdentityDescriptor.class);
  KerberosDescriptor kerberosDescriptor=createMock(KerberosDescriptor.class);
  if (createAmbariPrincipal) {
    expect(kerberosDescriptor.getIdentity(KerberosHelper.AMBARI_IDENTITY_NAME)).andReturn(ambariKerberosIdentity).once();
    expect(kerberosDescriptor.getIdentity(KerberosHelper.SPNEGO_IDENTITY_NAME)).andReturn(ambariKerberosIdentity).once();
  }
  List<KerberosIdentityDescriptor> identities=new ArrayList<KerberosIdentityDescriptor>();
  replayAll();
  injector.getInstance(AmbariMetaInfo.class).init();
  kerberosHelper.addAmbariServerIdentities(kerberosEnvProperties,kerberosDescriptor,identities);
  verifyAll();
  if (createAmbariPrincipal) {
    Assert.assertEquals(2,identities.size());
    Assert.assertSame(ambariKerberosIdentity,identities.get(0));
  }
 else {
    Assert.assertTrue(identities.isEmpty());
  }
}
