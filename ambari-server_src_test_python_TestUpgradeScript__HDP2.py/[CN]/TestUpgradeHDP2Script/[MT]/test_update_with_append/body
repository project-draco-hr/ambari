@patch.object(UpgradeHelper_HDP2, 'update_config')
@patch.object(UpgradeHelper_HDP2, 'get_config')
@patch('optparse.Values')
def test_update_with_append(self, optparse_mock, get_config_mock, update_config_mock):
    opm = optparse_mock.return_value
    update_config_mock.return_value = None
    options = MagicMock()
    args = ['save-configs']
    opm.parse_args.return_value = (options, args)
    get_config_mock.return_value = {'a1': 'va1', 'a2': 'va2', 'b1': 'vb1', 'b2': 'vb2', 'c1': 'vc1', }
    site_template = {'y1': 'vy1', 'a1': 'REPLACE_WITH_', 'a2': 'REPLACE_WITH_', 'nb1': 'REPLACE_WITH_b1', 'nb2': 'REPLACE_WITH_b2', }
    expected_site = {'y1': 'vy1', 'a1': 'va1', 'a2': 'va2', 'nb1': 'vb1', 'nb2': 'vb2', 'c1': 'vc1', }
    UpgradeHelper_HDP2.update_config_using_existing(opm, 'global', site_template, True)
    get_config_mock.assert_called_once_with(opm, 'global')
    update_config_mock.assert_called_once_with(opm, expected_site, 'global')
    pass
