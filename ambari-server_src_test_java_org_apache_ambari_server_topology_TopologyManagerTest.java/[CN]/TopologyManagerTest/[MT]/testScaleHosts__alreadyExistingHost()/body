{
  HashSet<Map<String,Object>> propertySet=new HashSet<>();
  Map<String,Object> properties=new TreeMap<>();
  properties.put(HostResourceProvider.HOST_NAME_PROPERTY_ID,"host1");
  properties.put(HostResourceProvider.HOSTGROUP_PROPERTY_ID,"group1");
  properties.put(HostResourceProvider.HOST_CLUSTER_NAME_PROPERTY_ID,CLUSTER_NAME);
  properties.put(HostResourceProvider.BLUEPRINT_PROPERTY_ID,BLUEPRINT_NAME);
  propertySet.add(properties);
  BlueprintFactory bpfMock=EasyMock.createNiceMock(BlueprintFactory.class);
  EasyMock.expect(bpfMock.getBlueprint(BLUEPRINT_NAME)).andReturn(blueprint).anyTimes();
  ScaleClusterRequest.init(bpfMock);
  replay(bpfMock);
  expect(persistedState.getAllRequests()).andReturn(Collections.<ClusterTopology,List<LogicalRequest>>emptyMap()).anyTimes();
  replayAll();
  topologyManager.provisionCluster(request);
  topologyManager.scaleHosts(new ScaleClusterRequest(propertySet));
  Assert.fail("InvalidTopologyException should have been thrown");
}
