{
  UriInfo uriInfo=createMock(UriInfo.class);
  MultivaluedMap<String,String> mapQueryParams=createMock(MultivaluedMap.class);
  String fields="prop,category/prop1,category2/category3/prop2[1,2,3],prop3[4,5,6],category4[7,8,9],sub-resource/*[10,11,12],finalProp";
  expect(uriInfo.getQueryParameters()).andReturn(mapQueryParams);
  expect(mapQueryParams.getFirst("fields")).andReturn(fields);
  replay(uriInfo,mapQueryParams);
  Request request=new TestRequest(null,null,uriInfo,Request.Type.GET,null,null);
  Map<PropertyId,TemporalInfo> mapFields=request.getFields();
  assertEquals(7,mapFields.size());
  PropertyId prop=PropertyHelper.getPropertyId("prop",null,false);
  assertTrue(mapFields.containsKey(prop));
  assertNull(mapFields.get(prop));
  PropertyId prop1=PropertyHelper.getPropertyId("prop1","category",false);
  assertTrue(mapFields.containsKey(prop1));
  assertNull(mapFields.get(prop1));
  PropertyId prop2=PropertyHelper.getPropertyId("prop2","category2/category3",true);
  assertTrue(mapFields.containsKey(prop2));
  assertEquals(new TemporalInfoImpl(1,2,3),mapFields.get(prop2));
  PropertyId prop3=PropertyHelper.getPropertyId("prop3",null,true);
  assertTrue(mapFields.containsKey(prop3));
  assertEquals(new TemporalInfoImpl(4,5,6),mapFields.get(prop3));
  PropertyId category4=PropertyHelper.getPropertyId("category4",null,true);
  assertTrue(mapFields.containsKey(category4));
  assertEquals(new TemporalInfoImpl(7,8,9),mapFields.get(category4));
  PropertyId subResource=PropertyHelper.getPropertyId("*","sub-resource",true);
  assertTrue(mapFields.containsKey(subResource));
  assertEquals(new TemporalInfoImpl(10,11,12),mapFields.get(subResource));
  PropertyId finalProp=PropertyHelper.getPropertyId("finalProp",null,false);
  assertTrue(mapFields.containsKey(finalProp));
  assertNull(mapFields.get(finalProp));
  verify(uriInfo,mapQueryParams);
}
