def setup_ranger_storm(upgrade_type=None):
    '\n  :param upgrade_type: Upgrade Type such as "rolling" or "nonrolling"\n  '
    import params
    if (params.has_ranger_admin and params.security_enabled):
        if params.xml_configurations_supported:
            from resource_management.libraries.functions.setup_ranger_plugin_xml import setup_ranger_plugin
        else:
            from resource_management.libraries.functions.setup_ranger_plugin import setup_ranger_plugin
        stack_version = None
        if (upgrade_type is not None):
            stack_version = params.version
        if params.retryAble:
            Logger.info('Storm: Setup ranger: command retry enables thus retrying if ranger admin is down !')
        else:
            Logger.info('Storm: Setup ranger: command retry not enabled thus skipping if ranger admin is down !')
        if (params.xml_configurations_supported and params.enable_ranger_storm and params.xa_audit_hdfs_is_enabled):
            if params.has_namenode:
                params.HdfsResource('/ranger/audit', type='directory', action='create_on_execute', owner=params.hdfs_user, group=params.hdfs_user, mode=493, recursive_chmod=True)
                params.HdfsResource('/ranger/audit/storm', type='directory', action='create_on_execute', owner=params.storm_user, group=params.storm_user, mode=448, recursive_chmod=True)
                params.HdfsResource(None, action='execute')
        setup_ranger_plugin('storm-nimbus', 'storm', params.downloaded_custom_connector, params.driver_curl_source, params.driver_curl_target, params.java64_home, params.repo_name, params.storm_ranger_plugin_repo, params.ranger_env, params.ranger_plugin_properties, params.policy_user, params.policymgr_mgr_url, params.enable_ranger_storm, conf_dict=params.conf_dir, component_user=params.storm_user, component_group=params.user_group, cache_service_list=['storm'], plugin_audit_properties=params.config['configurations']['ranger-storm-audit'], plugin_audit_attributes=params.config['configuration_attributes']['ranger-storm-audit'], plugin_security_properties=params.config['configurations']['ranger-storm-security'], plugin_security_attributes=params.config['configuration_attributes']['ranger-storm-security'], plugin_policymgr_ssl_properties=params.config['configurations']['ranger-storm-policymgr-ssl'], plugin_policymgr_ssl_attributes=params.config['configuration_attributes']['ranger-storm-policymgr-ssl'], component_list=['storm-client', 'storm-nimbus'], audit_db_is_enabled=params.xa_audit_db_is_enabled, credential_file=params.credential_file, xa_audit_db_password=params.xa_audit_db_password, ssl_truststore_password=params.ssl_truststore_password, ssl_keystore_password=params.ssl_keystore_password, stack_version_override=stack_version, skip_if_rangeradmin_down=(not params.retryAble))
    else:
        Logger.info('Ranger admin not installed')
