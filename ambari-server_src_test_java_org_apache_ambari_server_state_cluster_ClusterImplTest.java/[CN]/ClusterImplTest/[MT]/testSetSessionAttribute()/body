{
  Map<String,Object> attributes=new HashMap<String,Object>();
  attributes.put("foo","bar");
  attributes.put("foo2","bar2");
  Map<String,Object> updatedAttributes=new HashMap<String,Object>(attributes);
  updatedAttributes.put("foo2","updated value");
  Map<String,Object> addedAttributes=new HashMap<String,Object>(updatedAttributes);
  updatedAttributes.put("foo3","added value");
  AmbariSessionManager sessionManager=createMock(AmbariSessionManager.class);
  ClusterImpl cluster=createMockBuilder(ClusterImpl.class).addMockedMethod("getSessionManager").addMockedMethod("getClusterName").addMockedMethod("getSessionAttributes").createMock();
  expect(cluster.getSessionManager()).andReturn(sessionManager);
  expect(cluster.getClusterName()).andReturn("c1");
  expect(cluster.getSessionAttributes()).andReturn(attributes);
  sessionManager.setAttribute("cluster_session_attributes:c1",updatedAttributes);
  expectLastCall().once();
  expect(cluster.getSessionManager()).andReturn(sessionManager);
  expect(cluster.getClusterName()).andReturn("c1");
  expect(cluster.getSessionAttributes()).andReturn(updatedAttributes);
  sessionManager.setAttribute("cluster_session_attributes:c1",addedAttributes);
  expectLastCall().once();
  replay(sessionManager,cluster);
  cluster.setSessionAttribute("foo2","updated value");
  cluster.setSessionAttribute("foo3","added value");
  verify(sessionManager,cluster);
}
