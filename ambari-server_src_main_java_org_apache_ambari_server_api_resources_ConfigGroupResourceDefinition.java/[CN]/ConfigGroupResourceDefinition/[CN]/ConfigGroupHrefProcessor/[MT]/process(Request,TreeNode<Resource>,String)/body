{
  if (resultNode.getObject().getType() == Resource.Type.ConfigGroup) {
    Resource r=resultNode.getObject();
    Schema schema=ClusterControllerHelper.getClusterController().getSchema(r.getType());
    Object clusterId=r.getPropertyValue(schema.getKeyPropertyId(Resource.Type.Cluster));
    Map<String,Object> configGroup=r.getPropertiesMap().get("ConfigGroup");
    String partialUrl=href.substring(0,href.indexOf("/clusters/") + "/clusters/".length()) + clusterId;
    for (    Map.Entry<String,Object> entry : configGroup.entrySet()) {
      if (entry.getKey().contains("hosts") && entry.getValue() != null) {
        Set<Map<String,Object>> hostSet=(Set<Map<String,Object>>)entry.getValue();
        for (        Map<String,Object> hostMap : hostSet) {
          String idx=partialUrl + "/hosts/" + hostMap.get("host_name");
          hostMap.put("href",idx);
        }
      }
 else       if (entry.getKey().contains("desired_configs") && entry.getValue() != null) {
        Set<Map<String,Object>> configSet=(Set<Map<String,Object>>)entry.getValue();
        for (        Map<String,Object> configMap : configSet) {
          String idx=partialUrl + "/configurations?" + "type="+ configMap.get("type")+ "&tag="+ configMap.get("tag");
          configMap.put("href",idx);
        }
      }
    }
  }
 else {
    super.process(request,resultNode,href);
  }
}
