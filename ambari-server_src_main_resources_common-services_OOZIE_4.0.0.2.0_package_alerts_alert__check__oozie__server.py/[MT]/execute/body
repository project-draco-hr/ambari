def execute(parameters=None, host_name=None):
    '\n  Returns a tuple containing the result code and a pre-formatted result label\n\n  Keyword arguments:\n  parameters (dictionary): a mapping of parameter key to value\n  host_name (string): the name of this host where the alert is running\n  '
    if (parameters is None):
        return (RESULT_CODE_UNKNOWN, ['There were no parameters supplied to the script.'])
    if (not (OOZIE_URL_KEY in parameters)):
        return (RESULT_CODE_UNKNOWN, ['The Oozie URL is a required parameter.'])
    localhost_address = ('localhost' if (OSCheck.get_os_family() == OSConst.WINSRV_FAMILY) else '0.0.0.0')
    oozie_url = parameters[OOZIE_URL_KEY]
    oozie_url = oozie_url.replace(urlparse(oozie_url).hostname, localhost_address)
    security_enabled = False
    if (SECURITY_ENABLED in parameters):
        security_enabled = (str(parameters[SECURITY_ENABLED]).upper() == 'TRUE')
    command = format('source /etc/oozie/conf/oozie-env.sh ; oozie admin -oozie {oozie_url} -status')
    try:
        if security_enabled:
            if ((OOZIE_KEYTAB in parameters) and (OOZIE_PRINCIPAL in parameters)):
                oozie_keytab = parameters[OOZIE_KEYTAB]
                oozie_principal = parameters[OOZIE_PRINCIPAL]
                oozie_principal = oozie_principal.replace('_HOST', host_name)
            else:
                return (RESULT_CODE_UNKNOWN, ['The Oozie keytab and principal are required parameters when security is enabled.'])
            kinit_path_local = get_kinit_path(['/usr/bin', '/usr/kerberos/bin', '/usr/sbin'])
            kinit_command = format('{kinit_path_local} -kt {oozie_keytab} {oozie_principal}; ')
            Execute(kinit_command)
        Execute(command)
        return (RESULT_CODE_OK, ['Successful connection to {0}'.format(oozie_url)])
    except Exception as ex:
        return (RESULT_CODE_CRITICAL, [str(ex)])
