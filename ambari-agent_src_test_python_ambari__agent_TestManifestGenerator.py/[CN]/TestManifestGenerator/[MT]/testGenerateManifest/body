@patch.object(manifestGenerator, 'writeImports')
@patch.object(manifestGenerator, 'writeNodes')
@patch.object(manifestGenerator, 'writeParams')
@patch.object(manifestGenerator, 'writeTasks')
def testGenerateManifest(self, writeTasksMock, writeParamsMock, writeNodesMock, writeImportsMock):
    tmpFileName = tempfile.mkstemp(dir=self.dir, text=True)[1]
    self.parsedJson['roleParams'] = 'role param'
    manifestGenerator.generateManifest(self.parsedJson, tmpFileName, '../../main/puppet/modules', self.config.getConfig())
    self.assertTrue(writeParamsMock.called)
    self.assertTrue(writeNodesMock.called)
    self.assertTrue(writeImportsMock.called)
    self.assertTrue(writeTasksMock.called)
    print file(tmpFileName).read()

    def raiseTypeError():
        raise TypeError()
    writeNodesMock.side_effect = raiseTypeError
    manifestGenerator.generateManifest(self.parsedJson, tmpFileName, '../../main/puppet/modules', self.config.getConfig())
    pass
