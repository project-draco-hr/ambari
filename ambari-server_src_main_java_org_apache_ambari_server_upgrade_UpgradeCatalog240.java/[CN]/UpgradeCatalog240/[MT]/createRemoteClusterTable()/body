{
  List<DBColumnInfo> columns=new ArrayList<>();
  LOG.info("Creating {} table",REMOTE_AMBARI_CLUSTER_TABLE);
  columns.add(new DBColumnInfo(CLUSTER_ID,Long.class,null,null,false));
  columns.add(new DBColumnInfo(CLUSTER_NAME,String.class,255,null,false));
  columns.add(new DBColumnInfo("url",String.class,255,null,false));
  columns.add(new DBColumnInfo("username",String.class,255,null,false));
  columns.add(new DBColumnInfo("password",String.class,255,null,false));
  dbAccessor.createTable(REMOTE_AMBARI_CLUSTER_TABLE,columns,CLUSTER_ID);
  dbAccessor.addUniqueConstraint(REMOTE_AMBARI_CLUSTER_TABLE,"UQ_remote_ambari_cluster",CLUSTER_NAME);
  addSequence("remote_cluster_id_seq",1L,false);
  List<DBColumnInfo> remoteClusterServiceColumns=new ArrayList<>();
  LOG.info("Creating {} table",REMOTE_AMBARI_CLUSTER_SERVICE_TABLE);
  remoteClusterServiceColumns.add(new DBColumnInfo(ID,Long.class,null,null,false));
  remoteClusterServiceColumns.add(new DBColumnInfo(SERVICE_NAME,String.class,255,null,false));
  remoteClusterServiceColumns.add(new DBColumnInfo(CLUSTER_ID,Long.class,null,null,false));
  dbAccessor.createTable(REMOTE_AMBARI_CLUSTER_SERVICE_TABLE,remoteClusterServiceColumns,ID);
  dbAccessor.addFKConstraint(REMOTE_AMBARI_CLUSTER_SERVICE_TABLE,"FK_remote_ambari_cluster_id",CLUSTER_ID,REMOTE_AMBARI_CLUSTER_TABLE,CLUSTER_ID,false);
  addSequence("remote_cluster_service_id_seq",1L,false);
}
