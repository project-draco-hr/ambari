{
  AmbariManagementController ambariManagementController=injector.getInstance(AmbariManagementController.class);
  Clusters clusters=ambariManagementController.getClusters();
  if (clusters != null) {
    Map<String,Cluster> clusterMap=clusters.getClusters();
    if (clusterMap != null && !clusterMap.isEmpty()) {
      for (      final Cluster cluster : clusterMap.values()) {
        Set<String> installedServices=cluster.getServices().keySet();
        if (installedServices.contains("HDFS")) {
          Config hdfsSite=cluster.getDesiredConfigByType("hdfs-site");
          if (hdfsSite != null) {
            String clientRetryPolicyEnabled=hdfsSite.getProperties().get("dfs.client.retry.policy.enabled");
            if (null != clientRetryPolicyEnabled && Boolean.parseBoolean(clientRetryPolicyEnabled)) {
              updateConfigurationProperties("hdfs-site",Collections.singletonMap("dfs.client.retry.policy.enabled","false"),true,false);
            }
            String nameservices=hdfsSite.getProperties().get("dfs.nameservices");
            String int_nameservices=hdfsSite.getProperties().get("dfs.internal.nameservices");
            if (int_nameservices == null && nameservices != null) {
              updateConfigurationProperties("hdfs-site",Collections.singletonMap("dfs.internal.nameservices",nameservices),true,false);
            }
          }
          Config hadoopEnv=cluster.getDesiredConfigByType("hadoop-env");
          if (hadoopEnv != null) {
            String keyServerPort=hadoopEnv.getProperties().get("keyserver_port");
            if (null != keyServerPort && " ".equals(keyServerPort)) {
              updateConfigurationProperties("hadoop-env",Collections.singletonMap("keyserver_port",""),true,false);
            }
          }
        }
      }
    }
  }
}
