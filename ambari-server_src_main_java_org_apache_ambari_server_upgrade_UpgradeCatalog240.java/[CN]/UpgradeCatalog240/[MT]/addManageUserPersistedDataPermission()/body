{
  RoleAuthorizationDAO roleAuthorizationDAO=injector.getInstance(RoleAuthorizationDAO.class);
  if (roleAuthorizationDAO.findById("CLUSTER.MANAGE_USER_PERSISTED_DATA") == null) {
    RoleAuthorizationEntity roleAuthorizationEntity=new RoleAuthorizationEntity();
    roleAuthorizationEntity.setAuthorizationId("CLUSTER.MANAGE_USER_PERSISTED_DATA");
    roleAuthorizationEntity.setAuthorizationName("Manage cluster-level user persisted data");
    roleAuthorizationDAO.create(roleAuthorizationEntity);
  }
  String permissionId=permissionDAO.findPermissionByNameAndType("CLUSTER.ADMINISTRATOR",resourceTypeDAO.findByName("CLUSTER")).getId().toString();
  dbAccessor.insertRowIfMissing("permission_roleauthorization",new String[]{"permission_id","authorization_id"},new String[]{"'" + permissionId + "'","'CLUSTER.MANAGE_USER_PERSISTED_DATA'"},false);
  permissionId=permissionDAO.findPermissionByNameAndType("SERVICE.OPERATOR",resourceTypeDAO.findByName("CLUSTER")).getId().toString();
  dbAccessor.insertRowIfMissing("permission_roleauthorization",new String[]{"permission_id","authorization_id"},new String[]{"'" + permissionId + "'","'CLUSTER.MANAGE_USER_PERSISTED_DATA'"},false);
  permissionId=permissionDAO.findPermissionByNameAndType("SERVICE.ADMINISTRATOR",resourceTypeDAO.findByName("CLUSTER")).getId().toString();
  dbAccessor.insertRowIfMissing("permission_roleauthorization",new String[]{"permission_id","authorization_id"},new String[]{"'" + permissionId + "'","'CLUSTER.MANAGE_USER_PERSISTED_DATA'"},false);
  permissionId=permissionDAO.findPermissionByNameAndType("CLUSTER.OPERATOR",resourceTypeDAO.findByName("CLUSTER")).getId().toString();
  dbAccessor.insertRowIfMissing("permission_roleauthorization",new String[]{"permission_id","authorization_id"},new String[]{"'" + permissionId + "'","'CLUSTER.MANAGE_USER_PERSISTED_DATA'"},false);
  permissionId=permissionDAO.findPermissionByNameAndType("AMBARI.ADMINISTRATOR",resourceTypeDAO.findByName("AMBARI")).getId().toString();
  dbAccessor.insertRowIfMissing("permission_roleauthorization",new String[]{"permission_id","authorization_id"},new String[]{"'" + permissionId + "'","'CLUSTER.MANAGE_USER_PERSISTED_DATA'"},false);
  permissionId=permissionDAO.findPermissionByNameAndType("CLUSTER.USER",resourceTypeDAO.findByName("CLUSTER")).getId().toString();
  dbAccessor.insertRowIfMissing("permission_roleauthorization",new String[]{"permission_id","authorization_id"},new String[]{"'" + permissionId + "'","'CLUSTER.MANAGE_USER_PERSISTED_DATA'"},false);
}
