{
  String username=authentication.getName();
  String password=(String)authentication.getCredentials();
  if (stringUtil.isEmpty(username)) {
    throw new BadCredentialsException("Username can't be null or empty.");
  }
  if (stringUtil.isEmpty(password)) {
    throw new BadCredentialsException("Password can't be null or empty.");
  }
  password=StringEscapeUtils.unescapeHtml(password);
  username=StringEscapeUtils.unescapeHtml(username);
  UserDetails user=userDetailsService.loadUserByUsername(username);
  if (user == null) {
    logger.error("Username not found.");
    throw new BadCredentialsException("User not found.");
  }
  if (password == null || password.isEmpty()) {
    logger.error("Password can't be null or empty.");
    throw new BadCredentialsException("Password can't be null or empty.");
  }
  String encPassword=userDao.encryptPassword(username,password);
  if (!encPassword.equals(user.getPassword())) {
    logger.error("Wrong password for user=" + username);
    throw new BadCredentialsException("Wrong password");
  }
  Collection<? extends GrantedAuthority> authorities=user.getAuthorities();
  authentication=new UsernamePasswordAuthenticationToken(username,encPassword,authorities);
  return authentication;
}
