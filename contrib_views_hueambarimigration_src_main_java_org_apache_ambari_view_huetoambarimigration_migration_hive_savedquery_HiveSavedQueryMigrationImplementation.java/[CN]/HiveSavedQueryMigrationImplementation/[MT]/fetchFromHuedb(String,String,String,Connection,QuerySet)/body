{
  int id=0;
  int i=0;
  String[] query=new String[100];
  ArrayList<HiveModel> hiveArrayList=new ArrayList<HiveModel>();
  ResultSet rs1=null;
  try {
    Statement statement=connection.createStatement();
    connection.setAutoCommit(false);
    PreparedStatement prSt=null;
    ResultSet rs;
    if (username.equals("all")) {
    }
 else {
      prSt=huedatabase.getUseridfromUserName(connection,username);
      rs=prSt.executeQuery();
      while (rs.next()) {
        id=rs.getInt("id");
      }
    }
    if (startdate.equals("") && endtime.equals("")) {
      if (username.equals("all")) {
        prSt=huedatabase.getQueriesNoStartDateNoEndDateAllUser(connection);
      }
 else {
        prSt=huedatabase.getQueriesNoStartDateNoEndDate(connection,id);
      }
    }
 else     if ((startdate.equals("")) && !(endtime.equals(""))) {
      if (username.equals("all")) {
        prSt=huedatabase.getQueriesNoStartDateYesEndDateAllUser(connection,endtime);
      }
 else {
        prSt=huedatabase.getQueriesNoStartDateYesEndDate(connection,id,endtime);
      }
    }
 else     if (!(startdate.equals("")) && (endtime.equals(""))) {
      if (username.equals("all")) {
        prSt=huedatabase.getQueriesYesStartDateNoEndDateAllUser(connection,startdate);
      }
 else {
        prSt=huedatabase.getQueriesYesStartDateNoEndDate(connection,id,startdate);
      }
    }
 else     if (!(startdate.equals("")) && !(endtime.equals(""))) {
      if (username.equals("all")) {
        prSt=huedatabase.getQueriesYesStartDateYesEndDateAllUser(connection,startdate,endtime);
      }
 else {
        prSt=huedatabase.getQueriesYesStartDateYesEndDate(connection,id,startdate,endtime);
      }
    }
    rs1=prSt.executeQuery();
    while (rs1.next()) {
      HiveModel hivepojo=new HiveModel();
      String name=rs1.getString("name");
      String temp=rs1.getString("data");
      InputStream is=new ByteArrayInputStream(temp.getBytes());
      BufferedReader rd=new BufferedReader(new InputStreamReader(is,Charset.forName("UTF-8")));
      String jsonText=readAll(rd);
      JSONObject json=new JSONObject(jsonText);
      String resources=json.get("query").toString();
      json=new JSONObject(resources);
      String resarr=(json.get("query")).toString();
      json=new JSONObject(resources);
      String database=(json.get("database")).toString();
      hivepojo.setQuery(resarr);
      hivepojo.setDatabase(database);
      hivepojo.setOwner(name);
      hiveArrayList.add(hivepojo);
      i++;
    }
  }
 catch (  SQLException e2) {
    e2.printStackTrace();
  }
 finally {
    try {
      if (connection != null)       connection.close();
    }
 catch (    SQLException e) {
      logger.error("sql connection exception",e);
    }
  }
  return hiveArrayList;
}
