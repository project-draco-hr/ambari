{
  Date dNow=new Date();
  SimpleDateFormat ft=new SimpleDateFormat("YYYY-MM-dd hh:mm:ss");
  String currentDate=ft.format(dNow);
  XMLOutputter xmlOutput=new XMLOutputter();
  xmlOutput.setFormat(Format.getPrettyFormat());
  File xmlfile=new File(ConfigurationCheckImplementation.getHomeDir() + "RevertChangesService.xml");
  if (xmlfile.exists()) {
    String iteration=Integer.toString(i + 1);
    SAXBuilder builder=new SAXBuilder();
    Document doc;
    try {
      doc=(Document)builder.build(xmlfile);
      Element rootNode=doc.getRootElement();
      Element record=new Element("RevertRecord");
      record.setAttribute(new Attribute("id",iteration));
      record.addContent(new Element("datetime").setText(currentDate.toString()));
      record.addContent(new Element("dirname").setText(dirname));
      record.addContent(new Element("instance").setText(instance));
      record.addContent(new Element("query").setText(content));
      rootNode.addContent(record);
      xmlOutput.output(doc,new FileWriter(ConfigurationCheckImplementation.getHomeDir() + "RevertChangesService.xml"));
    }
 catch (    JDOMException e) {
      logger.error("JDOMException: ",e);
    }
  }
 else {
    try {
      String iteration=Integer.toString(i + 1);
      Element revertrecord=new Element("RevertChangePage");
      Document doc=new Document(revertrecord);
      doc.setRootElement(revertrecord);
      Element record=new Element("RevertRecord");
      record.setAttribute(new Attribute("id",iteration));
      record.addContent(new Element("datetime").setText(currentDate.toString()));
      record.addContent(new Element("dirname").setText(dirname));
      record.addContent(new Element("instance").setText(instance));
      record.addContent(new Element("query").setText(content));
      doc.getRootElement().addContent(record);
      xmlOutput.output(doc,new FileWriter(ConfigurationCheckImplementation.getHomeDir() + "RevertChangesService.xml"));
    }
 catch (    IOException io) {
    }
  }
}
