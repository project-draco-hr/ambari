{
  if (value != null) {
    try {
      if (isEpoch) {
        long ms=Long.parseLong(value.toString()) * 1000;
        value=new Date(ms);
      }
 else       if (targetDateFormatter != null) {
        if (srcDateFormatter != null) {
          Date srcDate=srcDateFormatter.parse(value.toString());
          if (!srcDateFormatter.toPattern().contains("yy")) {
            Calendar currentCalendar=Calendar.getInstance();
            Calendar logDateCalendar=Calendar.getInstance();
            logDateCalendar.setTimeInMillis(srcDate.getTime());
            if (logDateCalendar.get(Calendar.MONTH) > currentCalendar.get(Calendar.MONTH)) {
              srcDate=DateUtils.setYears(srcDate,currentCalendar.get(Calendar.YEAR) - 1);
            }
 else {
              srcDate=DateUtils.setYears(srcDate,currentCalendar.get(Calendar.YEAR));
            }
          }
          value=targetDateFormatter.format(srcDate);
        }
 else {
          value=targetDateFormatter.parse(value.toString());
        }
      }
 else {
        return value;
      }
      jsonObj.put(fieldName,value);
    }
 catch (    Throwable t) {
      LogFeederUtil.logErrorMessageByInterval(this.getClass().getSimpleName() + ":apply","Error applying date transformation. isEpoch=" + isEpoch + ", targetateFormat="+ (targetDateFormatter != null ? targetDateFormatter.toPattern() : "")+ ", value="+ value+ ". "+ this.toString(),t,logger,Level.ERROR);
    }
  }
  return value;
}
