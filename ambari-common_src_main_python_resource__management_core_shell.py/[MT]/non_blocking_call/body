@log_function_call
def non_blocking_call(command, quiet=False, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, cwd=None, env=None, preexec_fn=None, user=None, timeout=None, path=None, sudo=False):
    "\n  Execute the shell command and don't wait until it's completion\n  \n  @return: process object -- Popen instance \n  (use proc.stdout.readline to read output in cycle, don't foget to proc.stdout.close(),\n  to get return code use proc.wait() and after that proc.returncode)\n  "
    return _call_wrapper(command, logoutput=False, throw_on_failure=True, stdout=stdout, stderr=stderr, cwd=cwd, env=env, preexec_fn=preexec_fn, user=user, wait_for_finish=False, on_timeout=None, timeout=timeout, path=path, sudo=sudo, on_new_line=None, tries=1, try_sleep=0)
