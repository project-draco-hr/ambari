{
  PrincipalKeyCredential kc=new PrincipalKeyCredential("wrong",DEFAULT_ADMIN_PASSWORD);
  Map<String,String> kerberosEnvMap=new HashMap<String,String>(){
{
      put(ADKerberosOperationHandler.KERBEROS_ENV_LDAP_URL,DEFAULT_LDAP_URL);
      put(ADKerberosOperationHandler.KERBEROS_ENV_PRINCIPAL_CONTAINER_DN,DEFAULT_PRINCIPAL_CONTAINER_DN);
    }
  }
;
  ADKerberosOperationHandler handler=createMockBuilder(ADKerberosOperationHandler.class).addMockedMethod(ADKerberosOperationHandler.class.getDeclaredMethod("createInitialLdapContext",Properties.class,Control[].class)).createNiceMock();
  expect(handler.createInitialLdapContext(anyObject(Properties.class),anyObject(Control[].class))).andAnswer(new IAnswer<LdapContext>(){
    @Override public LdapContext answer() throws Throwable {
      throw new AuthenticationException();
    }
  }
).once();
  replayAll();
  handler.open(kc,DEFAULT_REALM,kerberosEnvMap);
  handler.testAdministratorCredentials();
  handler.close();
}
