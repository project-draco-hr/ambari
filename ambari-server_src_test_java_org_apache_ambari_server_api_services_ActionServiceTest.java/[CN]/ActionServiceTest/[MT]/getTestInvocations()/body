{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  ActionService service=new TestActionDefinitionService("actionName");
  Method m=service.getClass().getMethod("getActionDefinition",String.class,HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{null,getHttpHeaders(),getUriInfo(),"actionName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestActionDefinitionService(null);
  m=service.getClass().getMethod("getActionDefinitions",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestActionDefinitionService("actionName");
  m=service.getClass().getMethod("createActionDefinition",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"actionName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,service,m,args,"body"));
  service=new TestActionDefinitionService("actionName");
  m=service.getClass().getMethod("updateActionDefinition",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"actionName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,service,m,args,"body"));
  service=new TestActionDefinitionService("actionName");
  m=service.getClass().getMethod("deleteActionDefinition",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"actionName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,service,m,args,null));
  return listInvocations;
}
