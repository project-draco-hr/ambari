{
  Predicate[] predicates=predicate.getPredicates();
  if (predicates.length == 0) {
    return;
  }
  List<javax.persistence.criteria.Predicate> predicateList=new ArrayList<javax.persistence.criteria.Predicate>();
  m_queue.add(predicateList);
  String operator=predicate.getOperator();
  for (int i=0; i < predicates.length; i++) {
    PredicateHelper.visit(predicates[i],this);
  }
  predicateList=m_queue.pollLast();
  javax.persistence.criteria.Predicate jpaPredicate=null;
  javax.persistence.criteria.Predicate[] array=new javax.persistence.criteria.Predicate[predicateList.size()];
  array=predicateList.toArray(array);
  if ("AND".equals(operator)) {
    jpaPredicate=m_builder.and(array);
  }
 else {
    jpaPredicate=m_builder.or(array);
  }
  if (null == m_queue.peekLast()) {
    m_lastPredicate=jpaPredicate;
  }
 else {
    m_queue.peekLast().add(jpaPredicate);
  }
}
