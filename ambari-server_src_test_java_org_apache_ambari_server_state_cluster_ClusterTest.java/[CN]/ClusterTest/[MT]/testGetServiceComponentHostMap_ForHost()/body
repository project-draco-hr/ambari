{
  createDefaultCluster();
  Service sfHDFS=serviceFactory.createNew(c1,"HDFS");
  c1.addService(sfHDFS);
  Service sfMR=serviceFactory.createNew(c1,"MAPREDUCE");
  c1.addService(sfMR);
  ServiceComponent scNN=serviceComponentFactory.createNew(sfHDFS,"NAMENODE");
  sfHDFS.addServiceComponent(scNN);
  scNN.persist();
  ServiceComponentHost schNNH1=serviceComponentHostFactory.createNew(scNN,"h1");
  scNN.addServiceComponentHost(schNNH1);
  schNNH1.persist();
  ServiceComponent scDN=serviceComponentFactory.createNew(sfHDFS,"DATANODE");
  sfHDFS.addServiceComponent(scDN);
  scDN.persist();
  ServiceComponentHost scDNH1=serviceComponentHostFactory.createNew(scDN,"h1");
  scDN.addServiceComponentHost(scDNH1);
  scDNH1.persist();
  ServiceComponentHost scDNH2=serviceComponentHostFactory.createNew(scDN,"h2");
  scDN.addServiceComponentHost(scDNH2);
  scDNH2.persist();
  ServiceComponent scJT=serviceComponentFactory.createNew(sfMR,"JOBTRACKER");
  sfMR.addServiceComponent(scJT);
  scJT.persist();
  ServiceComponentHost schJTH1=serviceComponentHostFactory.createNew(scJT,"h1");
  scJT.addServiceComponentHost(schJTH1);
  schJTH1.persist();
  Map<String,Set<String>> componentHostMap;
  componentHostMap=c1.getServiceComponentHostMap(Collections.singleton("h1"),null);
  Assert.assertEquals(3,componentHostMap.size());
  Assert.assertEquals(1,componentHostMap.get("NAMENODE").size());
  Assert.assertTrue(componentHostMap.get("NAMENODE").contains("h1"));
  Assert.assertEquals(1,componentHostMap.get("DATANODE").size());
  Assert.assertTrue(componentHostMap.get("DATANODE").contains("h1"));
  Assert.assertEquals(1,componentHostMap.get("JOBTRACKER").size());
  Assert.assertTrue(componentHostMap.get("JOBTRACKER").contains("h1"));
  componentHostMap=c1.getServiceComponentHostMap(Collections.singleton("h2"),null);
  Assert.assertEquals(1,componentHostMap.size());
  Assert.assertEquals(1,componentHostMap.get("DATANODE").size());
  Assert.assertTrue(componentHostMap.get("DATANODE").contains("h2"));
  componentHostMap=c1.getServiceComponentHostMap(new HashSet<String>(Arrays.asList("h1","h2","h3")),null);
  Assert.assertEquals(3,componentHostMap.size());
  Assert.assertEquals(1,componentHostMap.get("NAMENODE").size());
  Assert.assertTrue(componentHostMap.get("NAMENODE").contains("h1"));
  Assert.assertEquals(2,componentHostMap.get("DATANODE").size());
  Assert.assertTrue(componentHostMap.get("DATANODE").contains("h1"));
  Assert.assertTrue(componentHostMap.get("DATANODE").contains("h2"));
  Assert.assertEquals(1,componentHostMap.get("JOBTRACKER").size());
  Assert.assertTrue(componentHostMap.get("JOBTRACKER").contains("h1"));
  componentHostMap=c1.getServiceComponentHostMap(Collections.singleton("unknown"),null);
  Assert.assertEquals(0,componentHostMap.size());
}
