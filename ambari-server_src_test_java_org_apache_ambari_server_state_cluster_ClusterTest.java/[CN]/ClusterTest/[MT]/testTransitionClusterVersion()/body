{
  createDefaultCluster();
  String stack="HDP";
  String version="0.2";
  helper.getOrCreateRepositoryVersion(stack,version);
  c1.createClusterVersion(stack,version,"admin",RepositoryVersionState.INSTALLING);
  assertStateException(stack,version,RepositoryVersionState.CURRENT,RepositoryVersionState.INSTALLING);
  assertStateException(stack,version,RepositoryVersionState.UPGRADING,RepositoryVersionState.INSTALLING);
  assertStateException(stack,version,RepositoryVersionState.UPGRADED,RepositoryVersionState.INSTALLING);
  assertStateException(stack,version,RepositoryVersionState.UPGRADE_FAILED,RepositoryVersionState.INSTALLING);
  c1.transitionClusterVersion(stack,version,RepositoryVersionState.INSTALL_FAILED);
  checkStackVersionState(stack,version,RepositoryVersionState.INSTALL_FAILED);
  assertStateException(stack,version,RepositoryVersionState.CURRENT,RepositoryVersionState.INSTALL_FAILED);
  assertStateException(stack,version,RepositoryVersionState.INSTALLED,RepositoryVersionState.INSTALL_FAILED);
  assertStateException(stack,version,RepositoryVersionState.UPGRADING,RepositoryVersionState.INSTALL_FAILED);
  assertStateException(stack,version,RepositoryVersionState.UPGRADED,RepositoryVersionState.INSTALL_FAILED);
  assertStateException(stack,version,RepositoryVersionState.UPGRADE_FAILED,RepositoryVersionState.INSTALL_FAILED);
  assertStateException(stack,version,RepositoryVersionState.OUT_OF_SYNC,RepositoryVersionState.INSTALL_FAILED);
  c1.transitionClusterVersion(stack,version,RepositoryVersionState.INSTALLING);
  checkStackVersionState(stack,version,RepositoryVersionState.INSTALLING);
  c1.transitionClusterVersion(stack,version,RepositoryVersionState.INSTALLED);
  checkStackVersionState(stack,version,RepositoryVersionState.INSTALLED);
  assertStateException(stack,version,RepositoryVersionState.CURRENT,RepositoryVersionState.INSTALLED);
  assertStateException(stack,version,RepositoryVersionState.UPGRADE_FAILED,RepositoryVersionState.INSTALLED);
  assertStateException(stack,version,RepositoryVersionState.INSTALL_FAILED,RepositoryVersionState.INSTALLED);
  c1.transitionClusterVersion(stack,version,RepositoryVersionState.OUT_OF_SYNC);
  checkStackVersionState(stack,version,RepositoryVersionState.OUT_OF_SYNC);
  assertStateException(stack,version,RepositoryVersionState.CURRENT,RepositoryVersionState.OUT_OF_SYNC);
  assertStateException(stack,version,RepositoryVersionState.INSTALLED,RepositoryVersionState.OUT_OF_SYNC);
  assertStateException(stack,version,RepositoryVersionState.INSTALL_FAILED,RepositoryVersionState.OUT_OF_SYNC);
  assertStateException(stack,version,RepositoryVersionState.UPGRADING,RepositoryVersionState.OUT_OF_SYNC);
  assertStateException(stack,version,RepositoryVersionState.UPGRADED,RepositoryVersionState.OUT_OF_SYNC);
  assertStateException(stack,version,RepositoryVersionState.UPGRADE_FAILED,RepositoryVersionState.OUT_OF_SYNC);
  c1.transitionClusterVersion(stack,version,RepositoryVersionState.INSTALLING);
  checkStackVersionState(stack,version,RepositoryVersionState.INSTALLING);
  c1.transitionClusterVersion(stack,version,RepositoryVersionState.INSTALLED);
  checkStackVersionState(stack,version,RepositoryVersionState.INSTALLED);
  c1.transitionClusterVersion(stack,version,RepositoryVersionState.UPGRADING);
  checkStackVersionState(stack,version,RepositoryVersionState.UPGRADING);
  assertStateException(stack,version,RepositoryVersionState.CURRENT,RepositoryVersionState.UPGRADING);
  assertStateException(stack,version,RepositoryVersionState.INSTALLED,RepositoryVersionState.UPGRADING);
  assertStateException(stack,version,RepositoryVersionState.INSTALL_FAILED,RepositoryVersionState.UPGRADING);
  assertStateException(stack,version,RepositoryVersionState.OUT_OF_SYNC,RepositoryVersionState.UPGRADING);
  c1.transitionClusterVersion(stack,version,RepositoryVersionState.UPGRADE_FAILED);
  checkStackVersionState(stack,version,RepositoryVersionState.UPGRADE_FAILED);
  assertStateException(stack,version,RepositoryVersionState.CURRENT,RepositoryVersionState.UPGRADE_FAILED);
  assertStateException(stack,version,RepositoryVersionState.INSTALLED,RepositoryVersionState.UPGRADE_FAILED);
  assertStateException(stack,version,RepositoryVersionState.INSTALL_FAILED,RepositoryVersionState.UPGRADE_FAILED);
  assertStateException(stack,version,RepositoryVersionState.UPGRADED,RepositoryVersionState.UPGRADE_FAILED);
  assertStateException(stack,version,RepositoryVersionState.OUT_OF_SYNC,RepositoryVersionState.UPGRADE_FAILED);
  c1.transitionClusterVersion(stack,version,RepositoryVersionState.UPGRADING);
  checkStackVersionState(stack,version,RepositoryVersionState.UPGRADING);
  c1.transitionClusterVersion(stack,version,RepositoryVersionState.UPGRADED);
  checkStackVersionState(stack,version,RepositoryVersionState.UPGRADED);
  assertStateException(stack,version,RepositoryVersionState.INSTALLED,RepositoryVersionState.UPGRADED);
  assertStateException(stack,version,RepositoryVersionState.INSTALL_FAILED,RepositoryVersionState.UPGRADED);
  assertStateException(stack,version,RepositoryVersionState.UPGRADING,RepositoryVersionState.UPGRADED);
  assertStateException(stack,version,RepositoryVersionState.UPGRADE_FAILED,RepositoryVersionState.UPGRADED);
  assertStateException(stack,version,RepositoryVersionState.OUT_OF_SYNC,RepositoryVersionState.UPGRADED);
  c1.transitionClusterVersion(stack,version,RepositoryVersionState.CURRENT);
  checkStackVersionState(stack,version,RepositoryVersionState.CURRENT);
  checkStackVersionState("HDP","0.1",RepositoryVersionState.INSTALLED);
  assertStateException(stack,version,RepositoryVersionState.INSTALLED,RepositoryVersionState.CURRENT);
}
