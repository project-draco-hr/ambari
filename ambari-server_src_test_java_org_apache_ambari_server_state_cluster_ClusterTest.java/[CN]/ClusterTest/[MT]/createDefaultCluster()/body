{
  StackId stackId=new StackId("HDP","0.1");
  StackEntity stackEntity=stackDAO.find(stackId.getStackName(),stackId.getStackVersion());
  org.junit.Assert.assertNotNull(stackEntity);
  String clusterName="c1";
  ResourceTypeEntity resourceTypeEntity=resourceTypeDAO.findById(ResourceType.CLUSTER.getId());
  if (resourceTypeEntity == null) {
    resourceTypeEntity=new ResourceTypeEntity();
    resourceTypeEntity.setId(ResourceType.CLUSTER.getId());
    resourceTypeEntity.setName(ResourceType.CLUSTER.name());
    resourceTypeEntity=resourceTypeDAO.merge(resourceTypeEntity);
  }
  ResourceEntity resourceEntity=new ResourceEntity();
  resourceEntity.setResourceType(resourceTypeEntity);
  ClusterEntity clusterEntity=new ClusterEntity();
  clusterEntity.setClusterName(clusterName);
  clusterEntity.setResource(resourceEntity);
  clusterEntity.setDesiredStack(stackEntity);
  clusterDAO.create(clusterEntity);
  Map<String,String> hostAttributes=new HashMap<String,String>();
  hostAttributes.put("os_family","redhat");
  hostAttributes.put("os_release_version","5.9");
  List<HostEntity> hostEntities=new ArrayList<HostEntity>();
  Set<String> hostNames=new HashSet<String>(){
{
      add("h1");
      add("h2");
    }
  }
;
  for (  String hostName : hostNames) {
    HostEntity hostEntity=new HostEntity();
    hostEntity.setHostName(hostName);
    hostEntity.setIpv4("ipv4");
    hostEntity.setIpv6("ipv6");
    hostEntity.setHostAttributes(gson.toJson(hostAttributes));
    hostEntity.setClusterEntities(Arrays.asList(clusterEntity));
    hostEntities.add(hostEntity);
    hostDAO.create(hostEntity);
  }
  clusterEntity.setHostEntities(hostEntities);
  clusterDAO.merge(clusterEntity);
  c1=clusters.getCluster(clusterName);
  helper.getOrCreateRepositoryVersion(stackId,stackId.getStackVersion());
  c1.createClusterVersion(stackId,stackId.getStackVersion(),"admin",RepositoryVersionState.UPGRADING);
  c1.transitionClusterVersion(stackId,stackId.getStackVersion(),RepositoryVersionState.CURRENT);
  ClusterVersionDAOMock.failOnCurrentVersionState=false;
}
