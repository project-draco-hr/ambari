{
  Map<String,Map<String,String>> c1PropAttributes=new HashMap<String,Map<String,String>>();
  c1PropAttributes.put("final",new HashMap<String,String>());
  c1PropAttributes.get("final").put("a","true");
  Map<String,Map<String,String>> c2PropAttributes=new HashMap<String,Map<String,String>>();
  c2PropAttributes.put("final",new HashMap<String,String>());
  c2PropAttributes.get("final").put("x","true");
  Config config1=configFactory.createNew(c1,"global",new HashMap<String,String>(){
{
      put("a","b");
    }
  }
,c1PropAttributes);
  config1.setVersionTag("version1");
  Config config2=configFactory.createNew(c1,"global",new HashMap<String,String>(){
{
      put("x","y");
    }
  }
,c2PropAttributes);
  config2.setVersionTag("version2");
  Config config3=configFactory.createNew(c1,"core-site",new HashMap<String,String>(){
{
      put("x","y");
    }
  }
,new HashMap<String,Map<String,String>>());
  config3.setVersionTag("version2");
  c1.addConfig(config1);
  c1.addConfig(config2);
  c1.addConfig(config3);
  c1.addDesiredConfig("_test",config1);
  Config res=c1.getDesiredConfigByType("global");
  Assert.assertNotNull("Expected non-null config",res);
  Assert.assertEquals("true",res.getPropertiesAttributes().get("final").get("a"));
  res=c1.getDesiredConfigByType("core-site");
  Assert.assertNull("Expected null config",res);
  c1.addDesiredConfig("_test",config2);
  res=c1.getDesiredConfigByType("global");
  Assert.assertEquals("Expected version tag to be 'version2'","version2",res.getVersionTag());
  Assert.assertEquals("true",res.getPropertiesAttributes().get("final").get("x"));
}
