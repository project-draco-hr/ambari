{
  createDefaultCluster();
  helper.getOrCreateRepositoryVersion("HDP","0.2");
  c1.createClusterVersion("HDP","0.2","admin",RepositoryVersionState.INSTALLING);
  ClusterVersionEntity entityHDP2=null;
  for (  ClusterVersionEntity entity : c1.getAllClusterVersions()) {
    if (entity.getRepositoryVersion().getStack().equals("HDP") && entity.getRepositoryVersion().getVersion().equals("0.2")) {
      entityHDP2=entity;
      break;
    }
  }
  assertNotNull(entityHDP2);
  List<HostVersionEntity> hostVersionsH1Before=hostVersionDAO.findByClusterAndHost("c1","h1");
  assertEquals(0,hostVersionsH1Before.size());
  c1.inferHostVersions(entityHDP2);
  List<HostVersionEntity> hostVersionsH1After=hostVersionDAO.findByClusterAndHost("c1","h1");
  assertEquals(1,hostVersionsH1After.size());
  boolean checked=false;
  for (  HostVersionEntity entity : hostVersionsH1After) {
    if (entity.getRepositoryVersion().getStack().equals("HDP") && entity.getRepositoryVersion().getVersion().equals("0.2")) {
      assertEquals(RepositoryVersionState.INSTALLING,entity.getState());
      checked=true;
      break;
    }
  }
  assertTrue(checked);
  c1.inferHostVersions(entityHDP2);
  hostVersionsH1After=hostVersionDAO.findByClusterAndHost("c1","h1");
  assertEquals(1,hostVersionsH1After.size());
  checked=false;
  for (  HostVersionEntity entity : hostVersionsH1After) {
    if (entity.getRepositoryVersion().getStack().equals("HDP") && entity.getRepositoryVersion().getVersion().equals("0.2")) {
      assertEquals(RepositoryVersionState.INSTALLING,entity.getState());
      checked=true;
      break;
    }
  }
  assertTrue(checked);
}
