{
  createDefaultCluster();
  Service s=serviceFactory.createNew(c1,"HDFS");
  c1.addService(s);
  ServiceComponent sc=serviceComponentFactory.createNew(s,"NAMENODE");
  s.addServiceComponent(sc);
  sc.persist();
  ServiceComponentHost sch=serviceComponentHostFactory.createNew(sc,"h1");
  sc.addServiceComponentHost(sch);
  sch.persist();
  List<ServiceComponentHost> scHosts=c1.getServiceComponentHosts("h1");
  Assert.assertEquals(1,scHosts.size());
  Iterator<ServiceComponentHost> iterator=scHosts.iterator();
  try {
    while (iterator.hasNext()) {
      iterator.next();
      Service s1=serviceFactory.createNew(c1,"PIG");
      c1.addService(s1);
      ServiceComponent sc1=serviceComponentFactory.createNew(s1,"PIG");
      s1.addServiceComponent(sc1);
      sc1.persist();
      ServiceComponentHost sch1=serviceComponentHostFactory.createNew(sc1,"h1");
      sc1.addServiceComponentHost(sch1);
      sch1.persist();
    }
  }
 catch (  ConcurrentModificationException e) {
    Assert.assertTrue("Failed to work concurrently with sch",false);
  }
  scHosts=c1.getServiceComponentHosts("h1");
  Assert.assertEquals(2,scHosts.size());
}
