{
  m_injector=Guice.createInjector(new InMemoryDefaultTestModule());
  m_injector.getInstance(GuiceJpaInitializer.class);
  m_dao=m_injector.getInstance(AlertDispatchDAO.class);
  m_alertsDao=m_injector.getInstance(AlertsDAO.class);
  m_definitionDao=m_injector.getInstance(AlertDefinitionDAO.class);
  m_helper=m_injector.getInstance(OrmTestHelper.class);
  m_serviceFactory=m_injector.getInstance(ServiceFactory.class);
  m_componentFactory=m_injector.getInstance(ServiceComponentFactory.class);
  m_schFactory=m_injector.getInstance(ServiceComponentHostFactory.class);
  m_clusters=m_injector.getInstance(Clusters.class);
  m_alertHelper=m_injector.getInstance(AlertDaoHelper.class);
  m_eventPublisher=m_injector.getInstance(AmbariEventPublisher.class);
  m_synchronizedBus=new EventBus();
  Field field=AmbariEventPublisher.class.getDeclaredField("m_eventBus");
  field.setAccessible(true);
  field.set(m_eventPublisher,m_synchronizedBus);
  m_cluster=m_clusters.getClusterById(m_helper.createCluster());
  m_helper.initializeClusterWithStack(m_cluster);
  Set<AlertTargetEntity> targets=createTargets();
  for (int i=0; i < 10; i++) {
    AlertGroupEntity group=new AlertGroupEntity();
    group.setDefault(false);
    group.setGroupName("Group Name " + i);
    group.setClusterId(m_cluster.getClusterId());
    for (    AlertTargetEntity alertTarget : targets) {
      group.addAlertTarget(alertTarget);
    }
    m_dao.create(group);
  }
}
