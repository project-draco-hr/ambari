{
  Cluster cluster=m_helper.buildNewCluster(m_clusters,m_serviceFactory,m_componentFactory,m_schFactory,HOSTNAME);
  m_alertHelper.populateData(cluster);
  List<SortRequestProperty> sortProperties=new ArrayList<SortRequestProperty>();
  SortRequest sortRequest=new SortRequestImpl(sortProperties);
  AlertNoticeRequest request=new AlertNoticeRequest();
  request.Sort=sortRequest;
  Predicate clusterPredicate=new PredicateBuilder().property(AlertNoticeResourceProvider.ALERT_NOTICE_CLUSTER_NAME).equals("c1").toPredicate();
  request.Predicate=clusterPredicate;
  sortProperties.add(new SortRequestProperty(AlertNoticeResourceProvider.ALERT_NOTICE_ID,Order.ASC));
  List<AlertNoticeEntity> notices=m_dao.findAllNotices(request);
  assertEquals(3,notices.size());
  long lastId=0L;
  for (  AlertNoticeEntity notice : notices) {
    if (lastId == 0L) {
      lastId=notice.getNotificationId();
      continue;
    }
    long currentId=notice.getNotificationId();
    assertTrue(lastId < currentId);
    lastId=currentId;
  }
  sortProperties.clear();
  sortProperties.add(new SortRequestProperty(AlertNoticeResourceProvider.ALERT_NOTICE_ID,Order.DESC));
  notices=m_dao.findAllNotices(request);
  assertEquals(3,notices.size());
  lastId=0L;
  for (  AlertNoticeEntity notice : notices) {
    if (lastId == 0L) {
      lastId=notice.getNotificationId();
      continue;
    }
    long currentId=notice.getNotificationId();
    assertTrue(lastId > currentId);
    lastId=currentId;
  }
}
