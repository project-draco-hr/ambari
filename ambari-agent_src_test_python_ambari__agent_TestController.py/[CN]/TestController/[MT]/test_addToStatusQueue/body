@patch('pprint.pformat')
@patch.object(Controller, 'LiveStatus')
def test_addToStatusQueue(self, LiveStatus_mock, pformatMock):
    LiveStatus_mock.SERVICES = ['foo']
    LiveStatus_mock.CLIENT_COMPONENTS = ['foo']
    LiveStatus_mock.COMPONENTS = ['foo']
    commands = ambari_simplejson.loads('[{"clusterName":"dummy_cluster"}]')
    actionQueue = MagicMock()
    self.controller.actionQueue = actionQueue
    process_status_commands = MagicMock(name='process_status_commands')
    self.controller.recovery_manager.process_status_commands = process_status_commands
    updateComponents = Mock()
    self.controller.updateComponents = updateComponents
    self.controller.addToStatusQueue(None)
    self.assertFalse(actionQueue.put_status.called)
    self.assertFalse(updateComponents.called)
    self.controller.addToStatusQueue(commands)
    self.assertTrue(actionQueue.put_status.called)
    self.assertFalse(updateComponents.called)
    LiveStatus_mock.SERVICES = []
    LiveStatus_mock.CLIENT_COMPONENTS = []
    LiveStatus_mock.COMPONENTS = []
    self.controller.addToStatusQueue(commands)
    self.assertTrue(updateComponents.called)
    self.assertTrue(actionQueue.put_status.called)
    self.assertTrue(process_status_commands.called)
