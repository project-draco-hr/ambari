{
  List<GrantedAuthority> grantedAuths=Arrays.<GrantedAuthority>asList(new SimpleGrantedAuthority("ROLE_USER"));
  User user=new User("principal",null,grantedAuths);
  expect(mockAuthPropsConfig.isAuthFileEnabled()).andReturn(true);
  expect(mockUserDetailsService.loadUserByUsername("principal")).andReturn(user);
  replay(mockAuthPropsConfig,mockUserDetailsService);
  Authentication authentication=new TestingAuthenticationToken("principal","credentials");
  try {
    provider.authenticate(authentication);
    assertTrue("Should have thrown BadCredentialsException",false);
  }
 catch (  BadCredentialsException e) {
    assertEquals("Password can't be null or empty.",e.getMessage());
  }
  verify(mockAuthPropsConfig,mockUserDetailsService);
}
