def process_repo(xmlroot, options):
    "\n  Processes repository options.  This method doesn't update or create individual elements, it\n  creates the entire repo structure\n  "
    if (not options.repo):
        return
    repo_parent = xmlroot.find('./repository-info')
    if (repo_parent is None):
        raise Exception("'repository-info' element is not found")
    os_element = repo_parent.find("./os[@family='{0}']".format(options.repo_os))
    if (os_element is None):
        os_element = ET.SubElement(repo_parent, 'os')
        os_element.set('family', options.repo_os)
    repo_element = os_element.find("./repo/[reponame='{0}']".format(options.repo_name))
    if (repo_element is not None):
        os_element.remove(repo_element)
    repo_element = ET.SubElement(os_element, 'repo')
    e = ET.SubElement(repo_element, 'baseurl')
    e.text = options.repo_url
    e = ET.SubElement(repo_element, 'repoid')
    e.text = options.repo_id
    e = ET.SubElement(repo_element, 'reponame')
    e.text = options.repo_name
