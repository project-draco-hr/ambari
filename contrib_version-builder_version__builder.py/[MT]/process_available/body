def process_available(xmlroot, options):
    '\n  Processes available service elements\n  '
    if (not options.available):
        return
    manifest_element = xmlroot.find('./manifest')
    if (manifest_element is None):
        raise Exception("'manifest' element is not found")
    service_element = manifest_element.find("./service[@id='{0}']".format(options.manifest_id))
    if (service_element is None):
        raise Exception("Cannot add an available service for {0}; it's not on the manifest".format(options.manifest_id))
    available_element = xmlroot.find('./available-services')
    if (available_element is None):
        raise Exception("'available-services' is not found")
    service_element = available_element.find("./service[@idref='{0}']".format(options.manifest_id))
    if (service_element is not None):
        available_element.remove(service_element)
    service_element = ET.SubElement(available_element, 'service')
    service_element.set('idref', options.manifest_id)
    if options.available_components:
        components = options.available_components.split(',')
        for component in components:
            e = ET.SubElement(service_element, 'component')
            e.text = component
