{
  String username=job.getUsername();
  ActorRef subActor=null;
  subActor=getActorRefFromSyncPool(username);
  if (subActor == null) {
    Optional<HdfsApi> hdfsApiOptional=hdfsApiSupplier.get(context);
    if (!hdfsApiOptional.isPresent()) {
      sender().tell(new JobRejected(username,ExecuteJob.SYNC_JOB_MARKER,"Failed to connect to HDFS."),ActorRef.noSender());
      return;
    }
    HdfsApi hdfsApi=hdfsApiOptional.get();
    subActor=system.actorOf(Props.create(JdbcConnector.class,context,self(),deathWatch,hdfsApi,connectionSupplier.get(context),storageSupplier.get(context)).withDispatcher("akka.actor.jdbc-connector-dispatcher"),UUID.randomUUID().toString() + ":syncjdbcConnector");
    deathWatch.tell(new RegisterActor(subActor),self());
  }
  if (syncBusyConnections.containsKey(username)) {
    Set<ActorRef> actors=syncBusyConnections.get(username);
    actors.add(subActor);
  }
 else {
    LinkedHashSet<ActorRef> actors=new LinkedHashSet<>();
    actors.add(subActor);
    syncBusyConnections.put(username,actors);
  }
  subActor.tell(connect,sender());
  subActor.tell(job,sender());
}
