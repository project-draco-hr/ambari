def test_condense_good(self):
    puppetexecutor = PuppetExecutor('/tmp', '/x', '/y', '/z', AmbariConfig().getConfig())
    grep = Grep()
    puppetexecutor.grep = grep
    grep.OUTPUT_LAST_LINES = 2
    string_good = open((('ambari_agent' + os.sep) + 'dummy_puppet_output_good.txt'), 'r').read().replace('\n', os.linesep)
    result = puppetexecutor.condenseOutput(string_good, PuppetExecutor.NO_ERROR, 0)
    stripped_string = string_good.strip()
    lines = stripped_string.splitlines(True)
    result_check = ((lines[45].strip() in result) and (lines[46].strip() in result))
    self.assertEquals(result_check, True, 'Failed to condence output log')
    self.assertEquals(len(result.splitlines(True)), 2, 'Failed to condence output log')
