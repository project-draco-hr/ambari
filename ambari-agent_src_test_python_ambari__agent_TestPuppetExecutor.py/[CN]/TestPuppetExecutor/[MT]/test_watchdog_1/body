@patch('shell.kill_process_with_children')
def test_watchdog_1(self, kill_process_with_children_mock):
    '\n    Tests whether watchdog works\n    '
    subproc_mock = self.Subprocess_mockup()
    config = AmbariConfig().getConfig()
    executor_mock = self.PuppetExecutor_mock('/home/centos/ambari_repo_info/ambari-agent/src/main/puppet/', '/usr/', '/root/workspace/puppet-install/facter-1.6.10/', '/tmp', config, subproc_mock)
    (_, tmpoutfile) = tempfile.mkstemp()
    (_, tmperrfile) = tempfile.mkstemp()
    result = {}
    puppetEnv = {'RUBYLIB': '', }
    kill_process_with_children_mock.side_effect = (lambda pid: subproc_mock.terminate())
    subproc_mock.returncode = None
    timeout = '0.1'
    thread = Thread(target=executor_mock.runPuppetFile, args=('fake_puppetFile', result, puppetEnv, tmpoutfile, tmperrfile, timeout))
    thread.start()
    time.sleep(0.1)
    subproc_mock.finished_event.wait()
    self.assertEquals(subproc_mock.was_terminated, True, 'Subprocess should be terminated due to timeout')
