{
  String cluster1=getUniqueName();
  final String host1=getUniqueName();
  createServiceComponentHostSimple(cluster1,host1,getUniqueName());
  String serviceName="HDFS";
  Cluster cluster=clusters.getCluster(cluster1);
  Service s1=cluster.getService(serviceName);
  Map<String,String> configs=new HashMap<String,String>();
  configs.put("a","b");
  ConfigurationRequest cr1, cr2;
  cr1=new ConfigurationRequest(cluster1,"core-site","version1",configs,null);
  cr2=new ConfigurationRequest(cluster1,"hdfs-site","version1",configs,null);
  ClusterRequest crReq=new ClusterRequest(cluster.getClusterId(),cluster1,null,null);
  crReq.setDesiredConfig(Collections.singletonList(cr1));
  controller.updateClusters(Collections.singleton(crReq),null);
  crReq=new ClusterRequest(cluster.getClusterId(),cluster1,null,null);
  crReq.setDesiredConfig(Collections.singletonList(cr2));
  controller.updateClusters(Collections.singleton(crReq),null);
  installService(cluster1,serviceName,false,false);
  ExecutionCommand ec=controller.getExecutionCommand(cluster,s1.getServiceComponent("NAMENODE").getServiceComponentHost(host1),RoleCommand.START);
  assertEquals("1-0",ec.getCommandId());
  assertEquals(cluster1,ec.getClusterName());
  Map<String,Map<String,String>> configurations=ec.getConfigurations();
  assertNotNull(configurations);
  assertEquals(2,configurations.size());
  assertTrue(configurations.containsKey("hdfs-site"));
  assertTrue(configurations.containsKey("core-site"));
  assertTrue(ec.getConfigurationAttributes().containsKey("hdfs-site"));
  assertTrue(ec.getConfigurationAttributes().containsKey("core-site"));
  assertTrue(ec.getCommandParams().containsKey("max_duration_for_retries"));
  assertEquals("0",ec.getCommandParams().get("max_duration_for_retries"));
  assertTrue(ec.getCommandParams().containsKey("command_retry_enabled"));
  assertEquals("false",ec.getCommandParams().get("command_retry_enabled"));
  Map<String,Set<String>> chInfo=ec.getClusterHostInfo();
  assertTrue(chInfo.containsKey("namenode_host"));
}
