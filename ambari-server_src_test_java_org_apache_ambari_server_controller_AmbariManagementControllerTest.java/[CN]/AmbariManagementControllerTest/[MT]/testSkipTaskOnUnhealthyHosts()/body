{
  String clusterName="foo1";
  createCluster(clusterName);
  clusters.getCluster(clusterName).setDesiredStackVersion(new StackId("HDP-0.1"));
  String serviceName="HDFS";
  createService(clusterName,serviceName,null);
  String componentName1="NAMENODE";
  String componentName2="DATANODE";
  createServiceComponent(clusterName,serviceName,componentName1,State.INIT);
  createServiceComponent(clusterName,serviceName,componentName2,State.INIT);
  String host1="h1";
  clusters.addHost(host1);
  clusters.getHost("h1").setOsType("centos5");
  clusters.getHost("h1").setState(HostState.HEALTHY);
  clusters.getHost("h1").persist();
  String host2="h2";
  clusters.addHost(host2);
  clusters.getHost("h2").setOsType("centos6");
  clusters.getHost("h2").setState(HostState.HEALTHY);
  clusters.getHost("h2").persist();
  String host3="h3";
  clusters.addHost(host3);
  clusters.getHost("h3").setOsType("centos6");
  clusters.getHost("h3").setState(HostState.HEALTHY);
  clusters.getHost("h3").persist();
  clusters.mapHostToCluster(host1,clusterName);
  clusters.mapHostToCluster(host2,clusterName);
  clusters.mapHostToCluster(host3,clusterName);
  createServiceComponentHost(clusterName,serviceName,componentName1,host1,null);
  createServiceComponentHost(clusterName,serviceName,componentName2,host2,null);
  createServiceComponentHost(clusterName,serviceName,componentName2,host3,null);
  installService(clusterName,serviceName,false,false);
  clusters.getHost("h1").setState(HostState.HEALTHY);
  clusters.getHost("h2").setState(HostState.HEALTHY);
  clusters.getHost("h3").setState(HostState.HEARTBEAT_LOST);
  long requestId=startService(clusterName,serviceName,true,false);
  List<HostRoleCommand> commands=actionDB.getRequestTasks(requestId);
  Assert.assertEquals(3,commands.size());
  int commandCount=0;
  for (  HostRoleCommand command : commands) {
    if (command.getRoleCommand() == RoleCommand.START) {
      Assert.assertTrue(command.getHostName().equals("h1") || command.getHostName().equals("h2"));
      commandCount++;
    }
  }
  Assert.assertEquals("Expect only two task.",2,commandCount);
  stopService(clusterName,serviceName,false,false);
  clusters.getHost("h1").setState(HostState.HEARTBEAT_LOST);
  clusters.getHost("h2").setState(HostState.HEARTBEAT_LOST);
  clusters.getHost("h3").setState(HostState.HEALTHY);
  requestId=startService(clusterName,serviceName,true,false);
  commands=actionDB.getRequestTasks(requestId);
  commandCount=0;
  for (  HostRoleCommand command : commands) {
    if (command.getRoleCommand() == RoleCommand.START) {
      Assert.assertTrue(command.getHostName().equals("h3"));
      commandCount++;
    }
  }
  Assert.assertEquals("Expect only one task.",1,commandCount);
  stopService(clusterName,serviceName,false,false);
  clusters.getHost("h1").setState(HostState.HEALTHY);
  clusters.getHost("h2").setState(HostState.HEALTHY);
  clusters.getHost("h3").setState(HostState.HEALTHY);
  requestId=startService(clusterName,serviceName,true,false);
  commands=actionDB.getRequestTasks(requestId);
  commandCount=0;
  for (  HostRoleCommand command : commands) {
    if (command.getRoleCommand() == RoleCommand.START) {
      Assert.assertTrue(command.getHostName().equals("h3") || command.getHostName().equals("h2") || command.getHostName().equals("h1"));
      commandCount++;
    }
  }
  Assert.assertEquals("Expect all three task.",3,commandCount);
  clusters.getHost("h2").setState(HostState.HEARTBEAT_LOST);
  requestId=stopService(clusterName,serviceName,false,false);
  commands=actionDB.getRequestTasks(requestId);
  Assert.assertEquals(2,commands.size());
  commandCount=0;
  for (  HostRoleCommand command : commands) {
    if (command.getRoleCommand() == RoleCommand.STOP) {
      Assert.assertTrue(command.getHostName().equals("h3") || command.getHostName().equals("h1"));
      commandCount++;
    }
  }
  Assert.assertEquals("Expect only two task.",2,commandCount);
  Cluster cluster=clusters.getCluster(clusterName);
  Service s=cluster.getService(serviceName);
  ServiceComponent sc3=s.getServiceComponent(componentName2);
  for (  ServiceComponentHost sch : sc3.getServiceComponentHosts().values()) {
    if (sch.getHostName().equals("h3")) {
      sch.setState(State.INSTALL_FAILED);
    }
  }
  clusters.getHost("h3").setState(HostState.HEARTBEAT_LOST);
  clusters.getHost("h2").setState(HostState.HEALTHY);
  requestId=installService(clusterName,serviceName,false,false);
  Assert.assertEquals(-1,requestId);
  clusters.getHost("h3").setState(HostState.HEALTHY);
  requestId=installService(clusterName,serviceName,false,false);
  commands=actionDB.getRequestTasks(requestId);
  Assert.assertEquals(1,commands.size());
  commandCount=0;
  for (  HostRoleCommand command : commands) {
    if (command.getRoleCommand() == RoleCommand.INSTALL) {
      Assert.assertTrue(command.getHostName().equals("h3"));
      commandCount++;
    }
  }
  Assert.assertEquals("Expect only one task.",1,commandCount);
}
