{
  String clusterName="foo1";
  ClusterRequest r=new ClusterRequest(null,clusterName,State.INSTALLED.name(),SecurityType.NONE,"OTHER-2.0",null);
  controller.createCluster(r);
  String serviceName="HBASE";
  clusters.getCluster("foo1").setDesiredStackVersion(new StackId("OTHER-2.0"));
  createService(clusterName,serviceName,State.INIT);
  Service s=clusters.getCluster(clusterName).getService(serviceName);
  Assert.assertNotNull(s);
  Assert.assertEquals(serviceName,s.getName());
  Assert.assertEquals(clusterName,s.getCluster().getClusterName());
  WidgetDAO widgetDAO=injector.getInstance(WidgetDAO.class);
  WidgetLayoutDAO widgetLayoutDAO=injector.getInstance(WidgetLayoutDAO.class);
  List<WidgetEntity> widgetEntities=widgetDAO.findAll();
  List<WidgetLayoutEntity> layoutEntities=widgetLayoutDAO.findAll();
  Assert.assertNotNull(widgetEntities);
  Assert.assertFalse(widgetEntities.isEmpty());
  Assert.assertNotNull(layoutEntities);
  Assert.assertFalse(layoutEntities.isEmpty());
  WidgetEntity candidateVisibleEntity=null;
  for (  WidgetEntity entity : widgetEntities) {
    if (entity.getWidgetName().equals("OPEN_CONNECTIONS")) {
      candidateVisibleEntity=entity;
    }
  }
  Assert.assertNotNull(candidateVisibleEntity);
  Assert.assertEquals("GRAPH",candidateVisibleEntity.getWidgetType());
  Assert.assertEquals("ambari",candidateVisibleEntity.getAuthor());
  Assert.assertEquals("CLUSTER",candidateVisibleEntity.getScope());
  Assert.assertNotNull(candidateVisibleEntity.getMetrics());
  Assert.assertNotNull(candidateVisibleEntity.getProperties());
  Assert.assertNotNull(candidateVisibleEntity.getWidgetValues());
  WidgetLayoutEntity candidateLayoutEntity=null;
  for (  WidgetLayoutEntity entity : layoutEntities) {
    if (entity.getLayoutName().equals("default_hbase_layout")) {
      candidateLayoutEntity=entity;
    }
  }
  Assert.assertNotNull(candidateLayoutEntity);
  List<WidgetLayoutUserWidgetEntity> layoutUserWidgetEntities=candidateLayoutEntity.getListWidgetLayoutUserWidgetEntity();
  Assert.assertNotNull(layoutUserWidgetEntities);
  Assert.assertEquals(4,layoutUserWidgetEntities.size());
  Assert.assertEquals("RS_READS_WRITES",layoutUserWidgetEntities.get(0).getWidget().getWidgetName());
  Assert.assertEquals("OPEN_CONNECTIONS",layoutUserWidgetEntities.get(1).getWidget().getWidgetName());
  Assert.assertEquals("FILES_LOCAL",layoutUserWidgetEntities.get(2).getWidget().getWidgetName());
  Assert.assertEquals("UPDATED_BLOCKED_TIME",layoutUserWidgetEntities.get(3).getWidget().getWidgetName());
}
