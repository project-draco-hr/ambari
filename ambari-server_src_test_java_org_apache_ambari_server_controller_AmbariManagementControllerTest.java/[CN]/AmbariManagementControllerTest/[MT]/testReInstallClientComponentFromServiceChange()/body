{
  String cluster1=getUniqueName();
  createCluster(cluster1);
  clusters.getCluster(cluster1).setDesiredStackVersion(new StackId("HDP-2.0.6"));
  String serviceName="HDFS";
  createService(cluster1,serviceName,null);
  String componentName="HDFS_CLIENT";
  createServiceComponent(cluster1,serviceName,componentName,State.INIT);
  String host1=getUniqueName();
  String host2=getUniqueName();
  addHostToCluster(host1,cluster1);
  addHostToCluster(host2,cluster1);
  createServiceComponentHost(cluster1,serviceName,componentName,host1,null);
  createServiceComponentHost(cluster1,serviceName,componentName,host2,null);
  installService(cluster1,serviceName,false,false);
  ServiceRequest sr=new ServiceRequest(cluster1,serviceName,State.STARTED.name());
  Set<ServiceRequest> setReqs=new HashSet<ServiceRequest>();
  setReqs.add(sr);
  RequestStatusResponse resp=ServiceResourceProviderTest.updateServices(controller,setReqs,Collections.<String,String>emptyMap(),false,true);
  Assert.assertNotNull(resp);
  Assert.assertTrue(resp.getRequestId() > 0);
  List<Stage> stages=actionDB.getAllStages(resp.getRequestId());
  Map<String,Role> hostsToRoles=new HashMap<String,Role>();
  for (  Stage stage : stages) {
    for (    HostRoleCommand hrc : stage.getOrderedHostRoleCommands()) {
      hostsToRoles.put(hrc.getHostName(),hrc.getRole());
    }
  }
  Map<String,Role> expectedHostsToRoles=new HashMap<String,Role>();
  expectedHostsToRoles.put(host1,Role.HDFS_CLIENT);
  expectedHostsToRoles.put(host2,Role.HDFS_CLIENT);
  Assert.assertEquals(expectedHostsToRoles,hostsToRoles);
}
