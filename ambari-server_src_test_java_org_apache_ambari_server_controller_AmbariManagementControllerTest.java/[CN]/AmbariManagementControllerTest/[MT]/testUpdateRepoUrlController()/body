{
  RepositoryInfo repo=ambariMetaInfo.getRepository(STACK_NAME,STACK_VERSION,OS_TYPE,REPO_ID);
  RepositoryRequest request=new RepositoryRequest(STACK_NAME,STACK_VERSION,OS_TYPE,REPO_ID);
  request.setBaseUrl("http://hortonworks.com");
  Set<RepositoryRequest> requests=new HashSet<RepositoryRequest>();
  requests.add(request);
  try {
    controller.updateRespositories(requests);
    fail("Expected exception on invalid url");
  }
 catch (  Exception e) {
  }
  request.setVerifyBaseUrl(false);
  controller.updateRespositories(requests);
  Assert.assertEquals(request.getBaseUrl(),repo.getBaseUrl());
  requests.clear();
  request=new RepositoryRequest(STACK_NAME,STACK_VERSION,OS_TYPE,REPO_ID);
  request.setBaseUrl(repo.getDefaultBaseUrl());
  requests.add(request);
  controller.updateRespositories(requests);
  Assert.assertEquals(repo.getBaseUrl(),repo.getDefaultBaseUrl());
  String baseUrl=repo.getDefaultBaseUrl();
  if (!baseUrl.endsWith("/"))   baseUrl+="/";
  backingProperties.setProperty(Configuration.REPO_SUFFIX_KEY,"/repodata/repomd.xml");
  Assert.assertTrue(baseUrl.endsWith("/") && configuration.getRepoValidationSuffixes()[0].startsWith("/"));
  request.setBaseUrl(baseUrl);
  controller.updateRespositories(requests);
  Assert.assertEquals(baseUrl,repo.getBaseUrl());
  backingProperties.setProperty(Configuration.REPO_SUFFIX_KEY,"repodata/repomd.xml");
  Assert.assertTrue(baseUrl.endsWith("/") && !configuration.getRepoValidationSuffixes()[0].startsWith("/"));
  request.setBaseUrl(baseUrl);
  controller.updateRespositories(requests);
  Assert.assertEquals(baseUrl,repo.getBaseUrl());
  baseUrl=baseUrl.substring(0,baseUrl.length() - 1);
  Assert.assertTrue(!baseUrl.endsWith("/") && !configuration.getRepoValidationSuffixes()[0].startsWith("/"));
  request.setBaseUrl(baseUrl);
  controller.updateRespositories(requests);
  Assert.assertEquals(baseUrl,repo.getBaseUrl());
  backingProperties.setProperty(Configuration.REPO_SUFFIX_KEY,"/repodata/repomd.xml");
  Assert.assertTrue(!baseUrl.endsWith("/") && configuration.getRepoValidationSuffixes()[0].startsWith("/"));
  request.setBaseUrl(baseUrl);
  controller.updateRespositories(requests);
  Assert.assertEquals(baseUrl,repo.getBaseUrl());
  backingProperties.setProperty(Configuration.REPO_SUFFIX_KEY,"/foo/bar.xml,/repodata/repomd.xml");
  Assert.assertTrue(configuration.getRepoValidationSuffixes().length > 1);
  request.setBaseUrl(baseUrl);
  controller.updateRespositories(requests);
  Assert.assertEquals(baseUrl,repo.getBaseUrl());
}
