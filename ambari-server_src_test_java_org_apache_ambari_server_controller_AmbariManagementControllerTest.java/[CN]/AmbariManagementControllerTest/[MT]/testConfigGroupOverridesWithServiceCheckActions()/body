{
  String cluster1=getUniqueName();
  createCluster(cluster1);
  Cluster cluster=clusters.getCluster(cluster1);
  cluster.setDesiredStackVersion(new StackId("HDP-0.1"));
  String serviceName="HDFS";
  createService(cluster1,serviceName,null);
  String componentName1="NAMENODE";
  String componentName2="DATANODE";
  String componentName3="HDFS_CLIENT";
  createServiceComponent(cluster1,serviceName,componentName1,State.INIT);
  createServiceComponent(cluster1,serviceName,componentName2,State.INIT);
  createServiceComponent(cluster1,serviceName,componentName3,State.INIT);
  final String host1=getUniqueName();
  final String host2=getUniqueName();
  addHostToCluster(host1,cluster1);
  addHostToCluster(host2,cluster1);
  createServiceComponentHost(cluster1,null,componentName1,host1,null);
  createServiceComponentHost(cluster1,serviceName,componentName2,host1,null);
  createServiceComponentHost(cluster1,serviceName,componentName2,host2,null);
  createServiceComponentHost(cluster1,serviceName,componentName3,host1,null);
  createServiceComponentHost(cluster1,serviceName,componentName3,host2,null);
  Map<String,String> configs=new HashMap<String,String>();
  configs.put("a","b");
  ConfigurationRequest cr1, cr2;
  cr1=new ConfigurationRequest(cluster1,"core-site","version1",configs,null);
  cr2=new ConfigurationRequest(cluster1,"hdfs-site","version1",configs,null);
  ClusterRequest crReq=new ClusterRequest(cluster.getClusterId(),cluster1,null,null);
  crReq.setDesiredConfig(Collections.singletonList(cr1));
  controller.updateClusters(Collections.singleton(crReq),null);
  crReq=new ClusterRequest(cluster.getClusterId(),cluster1,null,null);
  crReq.setDesiredConfig(Collections.singletonList(cr2));
  controller.updateClusters(Collections.singleton(crReq),null);
  installService(cluster1,serviceName,false,false);
  String group1=getUniqueName();
  String tag1=getUniqueName();
  configs=new HashMap<String,String>();
  configs.put("a","c");
  final Config config=new ConfigImpl("hdfs-site");
  config.setProperties(configs);
  config.setTag("version122");
  Long groupId=createConfigGroup(clusters.getCluster(cluster1),group1,tag1,new ArrayList<String>(){
{
      add(host1);
      add(host2);
    }
  }
,new ArrayList<Config>(){
{
      add(config);
    }
  }
);
  Assert.assertNotNull(groupId);
  long requestId=startService(cluster1,serviceName,true,false);
  HostRoleCommand smokeTestCmd=null;
  List<Stage> stages=actionDB.getAllStages(requestId);
  for (  Stage stage : stages) {
    for (    HostRoleCommand hrc : stage.getOrderedHostRoleCommands()) {
      if (hrc.getRole().equals(Role.HDFS_SERVICE_CHECK)) {
        Assert.assertEquals(2,hrc.getExecutionCommandWrapper().getExecutionCommand().getConfigurationTags().size());
        smokeTestCmd=hrc;
      }
    }
  }
  Assert.assertNotNull(smokeTestCmd);
  Assert.assertEquals("c",smokeTestCmd.getExecutionCommandWrapper().getExecutionCommand().getConfigurations().get("hdfs-site").get("a"));
}
