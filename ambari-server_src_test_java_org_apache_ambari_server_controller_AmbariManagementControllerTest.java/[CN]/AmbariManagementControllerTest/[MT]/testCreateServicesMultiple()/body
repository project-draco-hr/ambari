{
  Set<ServiceRequest> set1=new HashSet<ServiceRequest>();
  String cluster1=getUniqueName();
  clusters.addCluster(cluster1,new StackId("HDP-0.1"));
  ServiceRequest valid1=new ServiceRequest(cluster1,"HDFS",null);
  ServiceRequest valid2=new ServiceRequest(cluster1,"MAPREDUCE",null);
  set1.add(valid1);
  set1.add(valid2);
  ServiceResourceProviderTest.createServices(controller,set1);
  try {
    valid1=new ServiceRequest(cluster1,"PIG",null);
    valid2=new ServiceRequest(cluster1,"MAPREDUCE",null);
    set1.add(valid1);
    set1.add(valid2);
    ServiceResourceProviderTest.createServices(controller,set1);
    fail("Expected failure for invalid services");
  }
 catch (  AmbariException e) {
    Assert.assertTrue(checkExceptionType(e,DuplicateResourceException.class));
  }
  Assert.assertNotNull(clusters.getCluster(cluster1));
  Assert.assertEquals(2,clusters.getCluster(cluster1).getServices().size());
  Assert.assertNotNull(clusters.getCluster(cluster1).getService("HDFS"));
  Assert.assertNotNull(clusters.getCluster(cluster1).getService("MAPREDUCE"));
}
