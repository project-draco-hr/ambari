{
  String hostname1="h1";
  String hostname2="h2";
  addHost(hostname1);
  addHost(hostname2);
  ambariMetaInfo.addActionDefinition(new ActionDefinition("a1",ActionType.SYSTEM,"","","","action def description",TargetHostType.ANY,Short.valueOf("60")));
  Map<String,String> requestProperties=new HashMap<String,String>();
  requestProperties.put(REQUEST_CONTEXT_PROPERTY,"Called from a test");
  Map<String,String> requestParams=new HashMap<String,String>();
  requestParams.put("some_custom_param","abc");
  List<String> hosts=Arrays.asList(hostname1);
  RequestResourceFilter resourceFilter=new RequestResourceFilter(null,null,hosts);
  List<RequestResourceFilter> resourceFilters=new ArrayList<RequestResourceFilter>();
  resourceFilters.add(resourceFilter);
  ExecuteActionRequest actionRequest=new ExecuteActionRequest(null,null,"a1",resourceFilters,null,requestParams,false);
  RequestStatusResponse response=controller.createAction(actionRequest,requestProperties);
  assertEquals(1,response.getTasks().size());
  ShortTaskStatus taskStatus=response.getTasks().get(0);
  Assert.assertEquals(hostname1,taskStatus.getHostName());
  Stage stage=actionDB.getAllStages(response.getRequestId()).get(0);
  Assert.assertNotNull(stage);
  Assert.assertEquals(-1L,stage.getClusterId());
  List<HostRoleCommand> storedTasks=actionDB.getRequestTasks(response.getRequestId());
  Assert.assertEquals(1,storedTasks.size());
  HostRoleCommand task=storedTasks.get(0);
  Assert.assertEquals(RoleCommand.ACTIONEXECUTE,task.getRoleCommand());
  Assert.assertEquals("a1",task.getRole().name());
  Assert.assertEquals(hostname1,task.getHostName());
  ExecutionCommand cmd=task.getExecutionCommandWrapper().getExecutionCommand();
  Type type=new TypeToken<Map<String,String>>(){
  }
.getType();
  Map<String,String> commandParamsStage=StageUtils.getGson().fromJson(stage.getCommandParamsStage(),type);
  Assert.assertTrue(commandParamsStage.containsKey("some_custom_param"));
  Assert.assertEquals(null,cmd.getServiceName());
  Assert.assertEquals(null,cmd.getComponentName());
  Assert.assertEquals(requestProperties.get(REQUEST_CONTEXT_PROPERTY),response.getRequestContext());
  hosts=Arrays.asList(hostname1,hostname2);
  resourceFilter=new RequestResourceFilter(null,null,hosts);
  resourceFilters=new ArrayList<RequestResourceFilter>();
  resourceFilters.add(resourceFilter);
  actionRequest=new ExecuteActionRequest(null,null,"a1",resourceFilters,null,requestParams,false);
  response=controller.createAction(actionRequest,requestProperties);
  assertEquals(2,response.getTasks().size());
  boolean host1Found=false;
  boolean host2Found=false;
  for (  ShortTaskStatus sts : response.getTasks()) {
    if (sts.getHostName().equals(hostname1)) {
      host1Found=true;
    }
 else     if (sts.getHostName().equals(hostname2)) {
      host2Found=true;
    }
  }
  Assert.assertTrue(host1Found);
  Assert.assertTrue(host2Found);
  stage=actionDB.getAllStages(response.getRequestId()).get(0);
  Assert.assertNotNull(stage);
  Assert.assertEquals(-1L,stage.getClusterId());
  storedTasks=actionDB.getRequestTasks(response.getRequestId());
  Assert.assertEquals(2,storedTasks.size());
  task=storedTasks.get(0);
  Assert.assertEquals(RoleCommand.ACTIONEXECUTE,task.getRoleCommand());
  Assert.assertEquals("a1",task.getRole().name());
  Assert.assertEquals(hostname1,task.getHostName());
  cmd=task.getExecutionCommandWrapper().getExecutionCommand();
  commandParamsStage=StageUtils.getGson().fromJson(stage.getCommandParamsStage(),type);
  Assert.assertTrue(commandParamsStage.containsKey("some_custom_param"));
  Assert.assertEquals(null,cmd.getServiceName());
  Assert.assertEquals(null,cmd.getComponentName());
  Assert.assertEquals(requestProperties.get(REQUEST_CONTEXT_PROPERTY),response.getRequestContext());
}
