{
  List<Node> list=new ArrayList<Node>();
  GregorianCalendar cal=new GregorianCalendar();
  cal.setTime(new Date());
  XMLGregorianCalendar curTime=DatatypeFactory.newInstance().newXMLGregorianCalendar(cal);
  for (  Node n : this.nodes.values()) {
    if (allocated && alive) {
      if (n.getNodeState().getAllocatedToCluster() && getTimeDiffInMillis(curTime,n.getNodeState().getLastHeartbeatTime()) < NODE_NOT_RESPONDING_DURATION) {
        list.add(n);
      }
    }
    if (allocated && !alive) {
      if (n.getNodeState().getAllocatedToCluster() && getTimeDiffInMillis(curTime,n.getNodeState().getLastHeartbeatTime()) >= NODE_NOT_RESPONDING_DURATION) {
        list.add(n);
      }
    }
    if (!allocated && alive) {
      if (!n.getNodeState().getAllocatedToCluster() && getTimeDiffInMillis(curTime,n.getNodeState().getLastHeartbeatTime()) < NODE_NOT_RESPONDING_DURATION) {
        list.add(n);
      }
    }
    if (!allocated && !alive) {
      if (!n.getNodeState().getAllocatedToCluster() && getTimeDiffInMillis(curTime,n.getNodeState().getLastHeartbeatTime()) >= NODE_NOT_RESPONDING_DURATION) {
        list.add(n);
      }
    }
  }
  if (list.isEmpty()) {
    throw new WebApplicationException(Response.Status.NO_CONTENT);
  }
  return list;
}
