{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  ClusterPrivilegeService privilegeService=new TestClusterPrivilegeService("c1");
  Method m=privilegeService.getClass().getMethod("getPrivilege",HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{getHttpHeaders(),getUriInfo(),"privilegename"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,privilegeService,m,args,null));
  privilegeService=new TestClusterPrivilegeService("c1");
  m=privilegeService.getClass().getMethod("getPrivileges",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,privilegeService,m,args,null));
  privilegeService=new TestClusterPrivilegeService("c1");
  m=privilegeService.getClass().getMethod("createPrivilege",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,privilegeService,m,args,"body"));
  privilegeService=new TestClusterPrivilegeService("c1");
  m=privilegeService.getClass().getMethod("deletePrivilege",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"privilegename"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,privilegeService,m,args,null));
  return listInvocations;
}
