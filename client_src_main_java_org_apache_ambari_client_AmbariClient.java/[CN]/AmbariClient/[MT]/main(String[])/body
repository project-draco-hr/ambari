{
  AmbariClient c=new AmbariClient();
  c.InitializeCommandsMap();
  if (args.length < 2) {
    System.out.println("Usage: AmbariClient <CommandCateogry> <CommandName> <CommandOptions>");
    System.out.println("");
    for (    String category : c.commands.keySet()) {
      System.out.println("CommandCategory : [" + category + "] : Commands "+ c.commands.get(category).keySet());
    }
    System.exit(-1);
  }
  if (!c.commands.containsKey(args[0])) {
    System.out.println("Invalid command category [" + args[0] + "]");
    System.exit(-1);
  }
  if (!c.commands.get(args[0]).containsKey(args[1])) {
    System.out.println("Invalid command [" + args[1] + "] for category ["+ args[0]+ "]");
    System.exit(-1);
  }
  try {
    Class<?>[] classParm=new Class<?>[]{String[].class};
    Object[] objectParm=new Object[]{args};
    Class<?> commandClass=Class.forName("org.apache.ambari.client." + c.commands.get(args[0]).get(args[1]));
    Constructor<?> co=commandClass.getConstructor(classParm);
    Command cmd=(Command)co.newInstance(objectParm);
    cmd.run();
  }
 catch (  Exception e) {
    System.err.println("Command failed. Reason: <" + e.getMessage() + ">\n");
    System.exit(-1);
  }
}
