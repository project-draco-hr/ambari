{
  List<ResourceConfig> resourceConfigurations=viewConfig.getResources();
  ViewDefinition viewDefinition=new ViewDefinition(viewConfig,ambariConfig);
  Resource.Type externalResourceType=viewDefinition.getExternalResourceType();
  ViewExternalSubResourceProvider viewExternalSubResourceProvider=new ViewExternalSubResourceProvider(externalResourceType,viewDefinition);
  viewDefinition.addResourceProvider(externalResourceType,viewExternalSubResourceProvider);
  ResourceInstanceFactoryImpl.addResourceDefinition(externalResourceType,new ViewExternalSubResourceDefinition(externalResourceType));
  for (  ResourceConfig resourceConfiguration : resourceConfigurations) {
    ViewSubResourceDefinition resourceDefinition=new ViewSubResourceDefinition(viewDefinition,resourceConfiguration);
    viewDefinition.addResourceDefinition(resourceDefinition);
    Resource.Type type=resourceDefinition.getType();
    viewDefinition.addResourceConfiguration(type,resourceConfiguration);
    if (resourceConfiguration.isExternal()) {
      viewExternalSubResourceProvider.addResourceName(resourceConfiguration.getName());
    }
 else {
      ResourceInstanceFactoryImpl.addResourceDefinition(type,resourceDefinition);
      Class<?> clazz=resourceConfiguration.getResourceClass(cl);
      String idProperty=resourceConfiguration.getIdProperty();
      viewDefinition.addResourceProvider(type,new ViewSubResourceProvider(type,clazz,idProperty,viewDefinition));
    }
  }
  ViewRegistry.getInstance().addDefinition(viewDefinition);
  return viewDefinition;
}
