{
  ViewEntity viewEntity=getDefinition(instanceEntity.getViewName());
  if (viewEntity != null) {
    String instanceName=instanceEntity.getName();
    String viewName=viewEntity.getCommonName();
    String version=viewEntity.getVersion();
    if (getInstanceDefinition(viewName,version,instanceName) == null) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Creating view instance " + viewName + "/"+ version+ "/"+ instanceName);
      }
      instanceEntity.validate(viewEntity,Validator.ValidationContext.PRE_CREATE);
      ResourceTypeEntity resourceTypeEntity=resourceTypeDAO.findByName(ViewEntity.getViewName(viewName,version));
      instanceEntity.setResource(createViewInstanceResource(resourceTypeEntity));
      instanceDAO.merge(instanceEntity);
      ViewInstanceEntity persistedInstance=instanceDAO.findByName(ViewEntity.getViewName(viewName,version),instanceName);
      if (persistedInstance == null) {
        String message="Instance  " + instanceEntity.getViewName() + " can not be found.";
        LOG.error(message);
        throw new IllegalStateException(message);
      }
      instanceEntity.setViewInstanceId(persistedInstance.getViewInstanceId());
      instanceEntity.setResource(persistedInstance.getResource());
      try {
        bindViewInstance(viewEntity,instanceEntity);
      }
 catch (      Exception e) {
        String message="Caught exception installing view instance.";
        LOG.error(message,e);
        throw new IllegalStateException(message,e);
      }
      addInstanceDefinition(viewEntity,instanceEntity);
      handlerList.addViewInstance(instanceEntity);
    }
  }
 else {
    String message="Attempt to install an instance for an unknown view " + instanceEntity.getViewName() + ".";
    LOG.error(message);
    throw new IllegalArgumentException(message);
  }
}
