{
  String viewName=view.getName();
  ViewEntity persistedView=viewDAO.findByName(viewName);
  if (persistedView == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Creating View " + viewName + ".");
    }
    persistedView=viewDAO.merge(view);
  }
  Map<String,ViewInstanceEntity> instanceEntityMap=new HashMap<String,ViewInstanceEntity>();
  for (  ViewInstanceEntity instance : view.getInstances()) {
    instanceEntityMap.put(instance.getName(),instance);
  }
  view.setResourceType(persistedView.getResourceType());
  view.setPermissions(persistedView.getPermissions());
  for (  ViewInstanceEntity persistedInstance : persistedView.getInstances()) {
    String instanceName=persistedInstance.getName();
    ViewInstanceEntity instance=view.getInstanceDefinition(instanceName);
    instanceEntityMap.remove(instanceName);
    if (instance == null) {
      instance=new ViewInstanceEntity(view,instanceName);
      bindViewInstance(view,instance);
      instanceDefinitions.add(instance);
    }
    instance.setViewInstanceId(persistedInstance.getViewInstanceId());
    instance.setLabel(persistedInstance.getLabel());
    instance.setDescription(persistedInstance.getDescription());
    instance.setVisible(persistedInstance.isVisible());
    instance.setData(persistedInstance.getData());
    instance.setProperties(persistedInstance.getProperties());
    instance.setEntities(persistedInstance.getEntities());
    instance.setResource(persistedInstance.getResource());
  }
  for (  ViewInstanceEntity instance : instanceEntityMap.values()) {
    view.removeInstanceDefinition(instance.getName());
    instanceDefinitions.remove(instance);
  }
}
