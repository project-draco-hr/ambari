{
  String viewName=view.getName();
  ViewEntity persistedView=viewDAO.findByName(viewName);
  if (persistedView == null) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Creating View " + viewName + ".");
    }
    ResourceTypeEntity resourceTypeEntity=resourceTypeDAO.findByName(viewName);
    if (resourceTypeEntity == null) {
      resourceTypeEntity=view.getResourceType();
      resourceTypeDAO.create(resourceTypeEntity);
    }
    for (    ViewInstanceEntity instance : view.getInstances()) {
      ResourceEntity resourceEntity=new ResourceEntity();
      resourceEntity.setResourceType(view.getResourceType());
      resourceDAO.create(resourceEntity);
      instance.setResource(resourceEntity);
    }
    viewDAO.merge(view);
    persistedView=viewDAO.findByName(viewName);
    if (persistedView == null) {
      String message="View  " + viewName + " can not be found.";
      LOG.error(message);
      throw new IllegalStateException(message);
    }
  }
  Map<String,ViewInstanceEntity> xmlInstanceEntityMap=new HashMap<String,ViewInstanceEntity>();
  for (  ViewInstanceEntity instance : view.getInstances()) {
    xmlInstanceEntityMap.put(instance.getName(),instance);
  }
  view.setResourceType(persistedView.getResourceType());
  view.setPermissions(persistedView.getPermissions());
  for (  ViewInstanceEntity persistedInstance : persistedView.getInstances()) {
    String instanceName=persistedInstance.getName();
    ViewInstanceEntity instance=view.getInstanceDefinition(instanceName);
    if (persistedInstance.isXmlDriven() && !xmlInstanceEntityMap.containsKey(instanceName)) {
      instanceDAO.remove(persistedInstance);
      xmlInstanceEntityMap.remove(instanceName);
      continue;
    }
    xmlInstanceEntityMap.remove(instanceName);
    if (instance == null) {
      instance=new ViewInstanceEntity(view,instanceName);
      bindViewInstance(view,instance);
      instanceDefinitions.add(instance);
    }
    instance.setViewInstanceId(persistedInstance.getViewInstanceId());
    if (instance.isXmlDriven()) {
      persistedInstance.setLabel(instance.getLabel());
      persistedInstance.setDescription(instance.getDescription());
      persistedInstance.setVisible(instance.isVisible());
      persistedInstance.setIcon(instance.getIcon());
      persistedInstance.setIcon64(instance.getIcon64());
      persistedInstance.setProperties(instance.getProperties());
      instanceDAO.merge(persistedInstance);
    }
 else {
      view.removeInstanceDefinition(instanceName);
      view.addInstanceDefinition(persistedInstance);
    }
    instance.setResource(persistedInstance.getResource());
  }
  for (  ViewInstanceEntity instance : xmlInstanceEntityMap.values()) {
    ResourceEntity resourceEntity=new ResourceEntity();
    resourceEntity.setResourceType(view.getResourceType());
    resourceDAO.create(resourceEntity);
    instance.setResource(resourceEntity);
    instanceDAO.merge(instance);
    bindViewInstance(view,instance);
    instanceDefinitions.add(instance);
  }
}
