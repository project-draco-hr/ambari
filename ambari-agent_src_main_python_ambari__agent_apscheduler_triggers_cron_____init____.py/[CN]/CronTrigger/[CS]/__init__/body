def __init__(self, **values):
    self.start_date = values.pop('start_date', None)
    if self.start_date:
        self.start_date = convert_to_datetime(self.start_date)
    for (key, value) in list(iteritems(values)):
        if (key not in self.FIELD_NAMES):
            raise TypeError(('Invalid field name: %s' % key))
        if (value is None):
            del values[key]
    self.fields = []
    assign_defaults = False
    for field_name in self.FIELD_NAMES:
        if (field_name in values):
            exprs = values.pop(field_name)
            is_default = False
            assign_defaults = (not values)
        elif assign_defaults:
            exprs = DEFAULT_VALUES[field_name]
            is_default = True
        else:
            exprs = '*'
            is_default = True
        field_class = self.FIELDS_MAP[field_name]
        field = field_class(field_name, exprs, is_default)
        self.fields.append(field)
