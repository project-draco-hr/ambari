def get_config_resp(options, type, error_if_na=True):
    CONFIG_URL_FORMAT = (URL_FORMAT + '/configurations?type={2}&tag={3}')
    response = curl('-u', AUTH_FORMAT.format(options.user, options.password), URL_FORMAT.format(options.hostname, options.clustername))
    (retcode, errdata) = validate_response(response, True)
    if (not (retcode == 0)):
        raise FatalException(retcode, errdata)
    tag = None
    structured_resp = json.loads(response)
    if ('Clusters' in structured_resp):
        if ('desired_configs' in structured_resp['Clusters']):
            if (type in structured_resp['Clusters']['desired_configs']):
                tag = structured_resp['Clusters']['desired_configs'][type]['tag']
    if (tag != None):
        response = curl('-u', AUTH_FORMAT.format(options.user, options.password), CONFIG_URL_FORMAT.format(options.hostname, options.clustername, type, tag))
        (retcode, errdata) = validate_response(response, True)
        if (not (retcode == 0)):
            raise FatalException(retcode, errdata)
        structured_resp = json.loads(response)
        return (tag, structured_resp)
    elif error_if_na:
        raise FatalException((-1), ('Unable to get the current version for config type ' + type))
    else:
        return (tag, None)
    pass
