def delete_mr(options):
    saved_mr_mapping = get_YN_input('Have you saved MR host mapping using action save-mr-mapping [y/n] (n)? ', False)
    if (not saved_mr_mapping):
        raise FatalException(1, 'Ensure MAPREDUCE host component mapping is saved before deleting it. Use action save-mr-mapping.')
    SERVICE_URL_FORMAT = (URL_FORMAT + '/services/MAPREDUCE')
    COMPONENT_URL_FORMAT = (URL_FORMAT + '/hosts/{2}/host_components/{3}')
    NON_CLIENTS = ['JOBTRACKER', 'TASKTRACKER']
    PUT_IN_MAINTENANCE = '{"HostRoles": {"state": "MAINTENANCE"}}'
    hostmapping = read_mapping()
    for (key, value) in hostmapping.items():
        if ((key in NON_CLIENTS) and (len(value) > 0)):
            for host in value:
                response = curl(options.printonly, '-u', AUTH_FORMAT.format(options.user, options.password), '-X', 'PUT', '-d', PUT_IN_MAINTENANCE, COMPONENT_URL_FORMAT.format(options.hostname, options.clustername, host, key))
                (retcode, errdata) = validate_response(response, False)
                if (not (retcode == 0)):
                    raise FatalException(retcode, errdata)
                pass
            pass
        pass
    pass
    response = curl(options.printonly, '-u', AUTH_FORMAT.format(options.user, options.password), '-X', 'DELETE', SERVICE_URL_FORMAT.format(options.hostname, options.clustername))
    (retcode, errdata) = validate_response(response, False)
    if (not (retcode == 0)):
        raise FatalException(retcode, errdata)
    pass
