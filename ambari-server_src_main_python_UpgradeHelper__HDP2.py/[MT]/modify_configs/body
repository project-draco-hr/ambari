def modify_configs(options, config_type):
    hostmapping = read_mapping()
    if ((config_type is None) or (config_type == CAPACITY_SCHEDULER_TAG)):
        update_config(options, CAPACITY_SCHEDULER, CAPACITY_SCHEDULER_TAG)
        pass
    if ((config_type is None) or (config_type == MAPRED_QUEUE_ACLS_TAG)):
        update_config(options, MAPRED_QUEUE_ACLS, MAPRED_QUEUE_ACLS_TAG)
        pass
    jt_host = hostmapping['JOBTRACKER'][0]
    if ((config_type is None) or (config_type == YARN_SITE_TAG)):
        for key in YARN_SITE.keys():
            if (REPLACE_JH_HOST_NAME_TAG in YARN_SITE[key]):
                YARN_SITE[key] = YARN_SITE[key].replace(REPLACE_JH_HOST_NAME_TAG, jt_host, 1)
            if (REPLACE_RM_HOST_NAME_TAG in YARN_SITE[key]):
                YARN_SITE[key] = YARN_SITE[key].replace(REPLACE_RM_HOST_NAME_TAG, jt_host, 1)
                pass
            pass
        pass
        update_config(options, YARN_SITE, YARN_SITE_TAG)
        pass
    if ((config_type is None) or (config_type == MAPRED_SITE_TAG)):
        for key in MAPRED_SITE.keys():
            if (REPLACE_JH_HOST_NAME_TAG in MAPRED_SITE[key]):
                MAPRED_SITE[key] = MAPRED_SITE[key].replace(REPLACE_JH_HOST_NAME_TAG, jt_host, 1)
                pass
            pass
        pass
        update_config_using_existing(options, MAPRED_SITE_TAG, MAPRED_SITE, True)
        pass
    if ((config_type is None) or (config_type == GLOBAL_TAG)):
        update_config_using_existing(options, GLOBAL_TAG, GLOBAL, True)
        pass
    if ((config_type is None) or (config_type == HDFS_SITE_TAG)):
        update_config_using_existing(options, HDFS_SITE_TAG, HDFS_SITE, True)
        pass
    if ((config_type is None) or (config_type == CORE_SITE_TAG)):
        update_config_using_existing(options, CORE_SITE_TAG, CORE_SITE, True)
        pass
    pass
