def test_yaml_property_escaping(self):
    '\n    Tests that YAML values are escaped with quotes properly when needed\n    '
    self.assertEquals('True', yaml_utils.escape_yaml_property('True'))
    self.assertEquals('FALSE', yaml_utils.escape_yaml_property('FALSE'))
    self.assertEquals('yes', yaml_utils.escape_yaml_property('yes'))
    self.assertEquals('NO', yaml_utils.escape_yaml_property('NO'))
    self.assertEquals('28', yaml_utils.escape_yaml_property('28'))
    self.assertEquals('28.0', yaml_utils.escape_yaml_property('28.0'))
    self.assertEquals('[a,b,c]', yaml_utils.escape_yaml_property('[a,b,c]'))
    self.assertEquals('{ foo : bar }', yaml_utils.escape_yaml_property('{ foo : bar }'))
    self.assertEquals("'5f'", yaml_utils.escape_yaml_property('5f'))
    self.assertEquals("'28.O'", yaml_utils.escape_yaml_property('28.O'))
    self.assertEquals("'This is a test of a string'", yaml_utils.escape_yaml_property('This is a test of a string'))
    map = '\n      storm:\n        hosts:\n          [c6401.ambari.apache.org, c6402.ambari.apache.org]\n        groups:\n          [hadoop, foo]\n        foo:\n          [bar, baz]\n        foo2:\n          bar2:\n            [baz2]\n    '
    escaped_map = yaml_utils.escape_yaml_property(map)
    self.assertTrue(escaped_map.startswith('\n'))
    self.assertFalse(("'" in escaped_map))
