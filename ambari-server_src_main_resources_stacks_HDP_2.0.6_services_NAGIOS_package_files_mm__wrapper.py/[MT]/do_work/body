def do_work(mode, hostnames, command_line):
    ignored_hosts = ignored_host_list(get_real_service(), get_real_component())
    empty_check_result = {'message': 'No checks have been run (no hostnames provided)', 'retcode': (-1), 'real_retcode': None, }
    custom_env = os.environ.copy()
    if ignored_hosts:
        custom_env['MM_HOSTS'] = reduce((lambda a, b: ('%s %s' % (a, b))), ignored_hosts)
    if (mode == OR):
        check_result = work_in_or_mode(hostnames, ignored_hosts, command_line, custom_env, empty_check_result)
    elif (mode == AND):
        check_result = work_in_and_mode(hostnames, ignored_hosts, command_line, custom_env, empty_check_result)
    elif (mode == ENV_ONLY):
        check_result = work_in_env_only_mode(hostnames, command_line, custom_env)
    elif (mode == FILTER_MM):
        check_result = work_in_filter_mm_mode(hostnames, ignored_hosts, command_line, custom_env, empty_check_result)
    else:
        check_result = work_in_legacy_check_wrapper_mode(ignored_hosts, command_line, custom_env)
    final_output = []
    output = check_result.get('message')
    if (output is not None):
        for string in output.splitlines():
            final_output.append(string.strip())
    real_retcode = check_result.get('real_retcode')
    if real_retcode:
        final_output.append(('AMBARIPASSIVE=%s' % real_retcode))
    return (final_output, check_result.get('retcode'))
