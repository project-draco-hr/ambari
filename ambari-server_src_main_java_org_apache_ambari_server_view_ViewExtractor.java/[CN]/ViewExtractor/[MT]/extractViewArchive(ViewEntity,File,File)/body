{
  String archivePath=archiveDir.getAbsolutePath();
  try {
    if (!archiveDir.exists()) {
      String msg="Creating archive folder " + archivePath + ".";
      view.setStatusDetail(msg);
      LOG.info(msg);
      if (archiveDir.mkdir()) {
        JarFile viewJarFile=archiveUtility.getJarFile(viewArchive);
        Enumeration enumeration=viewJarFile.entries();
        msg="Extracting files from " + viewArchive.getName() + ".";
        view.setStatusDetail(msg);
        LOG.info(msg);
        while (enumeration.hasMoreElements()) {
          JarEntry jarEntry=(JarEntry)enumeration.nextElement();
          String entryPath=archivePath + File.separator + jarEntry.getName();
          LOG.debug("Extracting " + entryPath);
          File entryFile=archiveUtility.getFile(entryPath);
          if (jarEntry.isDirectory()) {
            LOG.debug("Making directory " + entryPath);
            if (!entryFile.mkdir()) {
              msg="Could not create archive entry directory " + entryPath + ".";
              view.setStatusDetail(msg);
              LOG.error(msg);
              throw new ExtractionException(msg);
            }
          }
 else {
            LOG.debug("Getting input stream for " + jarEntry.getName());
            InputStream is=viewJarFile.getInputStream(jarEntry);
            try {
              LOG.debug("Getting output stream for " + entryPath);
              FileOutputStream fos=archiveUtility.getFileOutputStream(entryFile);
              try {
                LOG.debug("Begin copying from " + jarEntry.getName() + " to "+ entryPath);
                while (is.available() > 0) {
                  fos.write(is.read());
                }
                LOG.debug("Finish copying from " + jarEntry.getName() + " to "+ entryPath);
              }
  finally {
                LOG.debug("Closing output stream for " + entryPath);
                fos.close();
              }
            }
  finally {
              LOG.debug("Closing input stream for " + jarEntry.getName());
              is.close();
            }
          }
        }
      }
 else {
        msg="Could not create archive directory " + archivePath + ".";
        view.setStatusDetail(msg);
        LOG.error(msg);
        throw new ExtractionException(msg);
      }
    }
    return getArchiveClassLoader(archiveDir);
  }
 catch (  Exception e) {
    String msg="Caught exception trying to extract the view archive " + archivePath + ".";
    view.setStatusDetail(msg);
    LOG.error(msg,e);
    throw new ExtractionException(msg,e);
  }
}
