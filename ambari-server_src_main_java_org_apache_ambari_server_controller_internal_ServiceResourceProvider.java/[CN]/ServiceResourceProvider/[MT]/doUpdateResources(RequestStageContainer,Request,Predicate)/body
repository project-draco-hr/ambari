{
  final Set<ServiceRequest> requests=new HashSet<ServiceRequest>();
  RequestStageContainer requestStages=null;
  Iterator<Map<String,Object>> iterator=request.getProperties().iterator();
  if (iterator.hasNext()) {
    for (    Map<String,Object> propertyMap : getPropertyMaps(iterator.next(),predicate)) {
      requests.add(getRequest(propertyMap));
    }
    final boolean runSmokeTest="true".equals(getQueryParameterValue(QUERY_PARAMETERS_RUN_SMOKE_TEST_ID,predicate));
    final boolean reconfigureClients=!"false".equals(getQueryParameterValue(QUERY_PARAMETERS_RECONFIGURE_CLIENT,predicate));
    requestStages=modifyResources(new Command<RequestStageContainer>(){
      @Override public RequestStageContainer invoke() throws AmbariException {
        return updateServices(stages,requests,request.getRequestInfoProperties(),runSmokeTest,reconfigureClients);
      }
    }
);
  }
  return requestStages;
}
