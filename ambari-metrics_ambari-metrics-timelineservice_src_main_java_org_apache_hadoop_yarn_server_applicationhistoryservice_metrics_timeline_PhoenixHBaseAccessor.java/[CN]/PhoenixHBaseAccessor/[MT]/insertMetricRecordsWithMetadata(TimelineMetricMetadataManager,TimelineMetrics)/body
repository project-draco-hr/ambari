{
  List<TimelineMetric> timelineMetrics=metrics.getMetrics();
  if (timelineMetrics == null || timelineMetrics.isEmpty()) {
    LOG.debug("Empty metrics insert request.");
    return;
  }
  Connection conn=getConnection();
  PreparedStatement metricRecordStmt=null;
  long currentTime=System.currentTimeMillis();
  try {
    metricRecordStmt=conn.prepareStatement(String.format(UPSERT_METRICS_SQL,METRICS_RECORD_TABLE_NAME));
    for (    TimelineMetric metric : timelineMetrics) {
      if (Math.abs(currentTime - metric.getStartTime()) > outOfBandTimeAllowance) {
        LOG.debug("Discarding out of band timeseries, currentTime = " + currentTime + ", startTime = "+ metric.getStartTime()+ ", hostname = "+ metric.getHostName());
        continue;
      }
      metricRecordStmt.clearParameters();
      if (LOG.isTraceEnabled()) {
        LOG.trace("host: " + metric.getHostName() + ", "+ "metricName = "+ metric.getMetricName()+ ", "+ "values: "+ metric.getMetricValues());
      }
      double[] aggregates=AggregatorUtils.calculateAggregates(metric.getMetricValues());
      metricRecordStmt.setString(1,metric.getMetricName());
      metricRecordStmt.setString(2,metric.getHostName());
      metricRecordStmt.setString(3,metric.getAppId());
      metricRecordStmt.setString(4,metric.getInstanceId());
      metricRecordStmt.setLong(5,currentTime);
      metricRecordStmt.setLong(6,metric.getStartTime());
      metricRecordStmt.setString(7,metric.getUnits());
      metricRecordStmt.setDouble(8,aggregates[0]);
      metricRecordStmt.setDouble(9,aggregates[1]);
      metricRecordStmt.setDouble(10,aggregates[2]);
      metricRecordStmt.setLong(11,(long)aggregates[3]);
      String json=TimelineUtils.dumpTimelineRecordtoJSON(metric.getMetricValues());
      metricRecordStmt.setString(12,json);
      try {
        metricRecordStmt.executeUpdate();
        if (metadataManager != null) {
          metadataManager.putIfModifiedTimelineMetricMetadata(metadataManager.getTimelineMetricMetadata(metric));
          metadataManager.putIfModifiedHostedAppsMetadata(metric.getHostName(),metric.getAppId());
        }
      }
 catch (      SQLException sql) {
        LOG.error("Failed on insert records to store.",sql);
      }
    }
    conn.commit();
  }
  finally {
    if (metricRecordStmt != null) {
      try {
        metricRecordStmt.close();
      }
 catch (      SQLException e) {
      }
    }
    if (conn != null) {
      try {
        conn.close();
      }
 catch (      SQLException sql) {
      }
    }
  }
}
