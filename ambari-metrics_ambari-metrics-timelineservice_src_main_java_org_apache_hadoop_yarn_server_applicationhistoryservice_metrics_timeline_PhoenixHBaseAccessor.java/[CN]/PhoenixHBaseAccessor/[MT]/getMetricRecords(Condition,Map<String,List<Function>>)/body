{
  validateConditionIsNotEmpty(condition);
  Connection conn=getConnection();
  PreparedStatement stmt=null;
  ResultSet rs=null;
  TimelineMetrics metrics=new TimelineMetrics();
  try {
    if (condition.isPointInTime()) {
      getLatestMetricRecords(condition,conn,metrics);
    }
 else {
      if (condition.getEndTime() >= condition.getStartTime()) {
        stmt=PhoenixTransactSQL.prepareGetMetricsSqlStmt(conn,condition);
        rs=stmt.executeQuery();
        while (rs.next()) {
          appendMetricFromResultSet(metrics,condition,metricFunctions,rs);
        }
      }
 else {
        LOG.warn("Skipping metrics query because endTime < startTime");
      }
    }
  }
 catch (  RuntimeException ex) {
    Throwable io=ex.getCause();
    String className=null;
    if (io != null) {
      for (      StackTraceElement ste : io.getStackTrace()) {
        className=ste.getClassName();
      }
    }
    if (className != null && className.equals("TimeRange")) {
      LOG.debug(io);
      return new TimelineMetrics();
    }
 else {
      throw ex;
    }
  }
 finally {
    if (rs != null) {
      try {
        rs.close();
      }
 catch (      SQLException e) {
      }
    }
    if (stmt != null) {
      try {
        stmt.close();
      }
 catch (      SQLException e) {
      }
    }
    if (conn != null) {
      try {
        conn.close();
      }
 catch (      SQLException sql) {
      }
    }
  }
  LOG.debug("Metrics records size: " + metrics.getMetrics().size());
  return metrics;
}
