def net_connections(kind, _pid=(-1)):
    'Return socket connections.  If pid == -1 return system-wide\n    connections (as opposed to connections opened by one process only).\n    '
    if (kind not in conn_tmap):
        raise ValueError(('invalid %r kind argument; choose between %s' % (kind, ', '.join([repr(x) for x in conn_tmap]))))
    (families, types) = conn_tmap[kind]
    rawlist = cext.net_connections(_pid, families, types)
    ret = []
    for item in rawlist:
        (fd, fam, type, laddr, raddr, status, pid) = item
        status = TCP_STATUSES[status]
        if (_pid == (-1)):
            nt = _common.sconn(fd, fam, type, laddr, raddr, status, pid)
        else:
            nt = _common.pconn(fd, fam, type, laddr, raddr, status)
        ret.append(nt)
    return ret
