{
  ViewEntity entity1=getViewEntityMock(VERSION_1);
  ViewEntity entity2=getViewEntityMock(VERSION_2);
  replay(entity1,entity2);
  ViewInstanceDataEntity dataEntity=new ViewInstanceDataEntity();
  dataEntity.setName("name1");
  dataEntity.setValue("value1");
  dataEntity.setUser("user1");
  Collection data1=Arrays.asList(dataEntity);
  Capture<ViewInstanceDataEntity> capturedInstanceData=Capture.newInstance();
  Collection data2=createStrictMock(Collection.class);
  expect(data2.add(capture(capturedInstanceData))).andReturn(true);
  replay(data2);
  ViewInstanceEntity instanceEntity1=getViewInstanceEntityMock(entity1);
  expect(instanceEntity1.getData()).andReturn(data1);
  ViewInstanceEntity instanceEntity2=getViewInstanceEntityMock(entity2);
  expect(instanceEntity2.getData()).andReturn(data2);
  replay(instanceEntity1,instanceEntity2);
  ViewDataMigrationContextImpl context=new TestViewDataMigrationContextImpl(instanceEntity1,instanceEntity2);
  context.copyAllInstanceData();
  verify(data2);
  Assert.assertEquals("user1",capturedInstanceData.getValue().getUser());
  Assert.assertEquals("name1",capturedInstanceData.getValue().getName());
  Assert.assertEquals("value1",capturedInstanceData.getValue().getValue());
}
