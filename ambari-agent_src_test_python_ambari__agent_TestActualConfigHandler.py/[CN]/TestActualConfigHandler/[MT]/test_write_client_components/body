@patch.object(OSCheck, 'os_distribution', new=MagicMock(return_value=os_distro_value))
@patch.object(ActualConfigHandler, 'write_file')
def test_write_client_components(self, write_file_mock):
    config = AmbariConfig().getConfig()
    tmpdir = tempfile.gettempdir()
    config.set('agent', 'prefix', tmpdir)
    tags0 = {'global': 'version0', 'core-site': 'version0', }
    tags1 = {'global': 'version1', 'core-site': 'version2', }
    tags2 = {'global': 'version33', 'core-site': 'version33', }
    clientsToUpdateConfigs1 = ['HDFS_CLIENT', 'HBASE_CLIENT']
    configTags = {'HDFS_CLIENT': tags0, 'HBASE_CLIENT': tags1, }
    handler = ActualConfigHandler(config, configTags)
    self.assertEquals(tags0, handler.read_actual_component('HDFS_CLIENT'))
    self.assertEquals(tags1, handler.read_actual_component('HBASE_CLIENT'))
    handler.write_client_components('HDFS', tags2, clientsToUpdateConfigs1)
    self.assertEquals(tags2, handler.read_actual_component('HDFS_CLIENT'))
    self.assertEquals(tags1, handler.read_actual_component('HBASE_CLIENT'))
    self.assertTrue(write_file_mock.called)
    self.assertEqual(1, write_file_mock.call_count)
