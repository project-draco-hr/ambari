def find_provider(env, resource, class_path=None):
    if (not class_path):
        providers = [PROVIDERS, LIBRARY_PROVIDERS]
        for provider in providers:
            if (resource in provider[env.system.platform]):
                class_path = provider[env.system.platform][resource]
                break
            if (resource in provider['default']):
                class_path = provider['default'][resource]
                break
    try:
        (mod_path, class_name) = class_path.rsplit('.', 1)
    except ValueError:
        raise Fail(('Unable to find provider for %s as %s' % (resource, class_path)))
    mod = __import__(mod_path, {}, {}, [class_name])
    return getattr(mod, class_name)
