def setup_users():
    '\n  Creates users before cluster installation\n  '
    import params
    Group(params.user_group)
    Group(params.smoke_user_group)
    Group(params.proxyuser_group)
    User(params.smoke_user, gid=params.user_group, groups=[params.proxyuser_group])
    User(params.tez_user, gid=params.user_group, groups=[params.proxyuser_group])
    smoke_user_dirs = format('/tmp/hadoop-{smoke_user},/tmp/hsperfdata_{smoke_user},/home/{smoke_user},/tmp/{smoke_user},/tmp/sqoop-{smoke_user}')
    set_uid(params.smoke_user, smoke_user_dirs)
    if params.has_hbase_masters:
        User(params.hbase_user, gid=params.user_group, groups=[params.user_group])
        hbase_user_dirs = format('/home/{hbase_user},/tmp/{hbase_user},/usr/bin/{hbase_user},/var/log/{hbase_user},{hbase_tmp_dir}')
        set_uid(params.hbase_user, hbase_user_dirs)
    if params.has_nagios:
        Group(params.nagios_group)
        User(params.nagios_user, gid=params.nagios_group)
    if params.has_oozie_server:
        User(params.oozie_user, gid=params.user_group)
    if params.has_hcat_server_host:
        User(params.webhcat_user, gid=params.user_group)
        User(params.hcat_user, gid=params.user_group)
    if params.has_hive_server_host:
        User(params.hive_user, gid=params.user_group)
    if params.has_resourcemanager:
        User(params.yarn_user, gid=params.user_group)
    if params.has_ganglia_server:
        Group(params.gmetad_user)
        Group(params.gmond_user)
        User(params.gmond_user, gid=params.user_group, groups=[params.gmond_user])
        User(params.gmetad_user, gid=params.user_group, groups=[params.gmetad_user])
    User(params.hdfs_user, gid=params.user_group, groups=[params.user_group])
    User(params.mapred_user, gid=params.user_group, groups=[params.user_group])
    if params.has_zk_host:
        User(params.zk_user, gid=params.user_group)
    if params.has_storm_server:
        User(params.storm_user, gid=params.user_group, groups=[params.user_group])
    if params.has_falcon_server:
        User(params.falcon_user, gid=params.user_group, groups=[params.user_group])
