{
  LinkedList<StackInfo> parents=(LinkedList<StackInfo>)stackParentsMap.get(stackInfo.getVersion());
  if (parents == null || parents.isEmpty()) {
    return stackInfo.getServices();
  }
  parents.addFirst(stackInfo);
  ListIterator<StackInfo> lt=parents.listIterator(parents.size());
  Map<String,ServiceInfo> serviceInfoMap=new HashMap<String,ServiceInfo>();
  while (lt.hasPrevious()) {
    StackInfo parentStack=lt.previous();
    List<ServiceInfo> serviceInfoList=parentStack.getServices();
    for (    ServiceInfo service : serviceInfoList) {
      ServiceInfo existingService=serviceInfoMap.get(service.getName());
      if (service.isDeleted().booleanValue()) {
        serviceInfoMap.remove(service.getName());
        continue;
      }
      if (existingService == null) {
        serviceInfoMap.put(service.getName(),service);
      }
 else {
        ServiceInfo newServiceInfo=mergeServices(existingService,service);
        serviceInfoMap.put(service.getName(),newServiceInfo);
      }
    }
  }
  return new ArrayList<ServiceInfo>(serviceInfoMap.values());
}
