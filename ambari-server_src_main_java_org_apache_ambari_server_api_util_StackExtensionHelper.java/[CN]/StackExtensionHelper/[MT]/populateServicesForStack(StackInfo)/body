{
  List<ServiceInfo> services=new ArrayList<ServiceInfo>();
  File servicesFolder=new File(stackRoot.getAbsolutePath() + File.separator + stackInfo.getName()+ File.separator+ stackInfo.getVersion()+ File.separator+ AmbariMetaInfo.SERVICES_FOLDER_NAME);
  if (!servicesFolder.exists()) {
    LOG.info("No services defined for stack: " + stackInfo.getName() + "-"+ stackInfo.getVersion());
  }
 else {
    try {
      File[] servicesFolders=servicesFolder.listFiles(AmbariMetaInfo.FILENAME_FILTER);
      if (servicesFolders == null) {
        String message=String.format("No service folders found at %s",servicesFolder.getAbsolutePath());
        throw new AmbariException(message);
      }
      for (      File serviceFolder : servicesFolders) {
        if (!serviceFolder.isDirectory())         continue;
        File metainfoFile=new File(serviceFolder.getAbsolutePath() + File.separator + AmbariMetaInfo.SERVICE_METAINFO_FILE_NAME);
        File metricsJson=new File(serviceFolder.getAbsolutePath() + File.separator + AmbariMetaInfo.SERVICE_METRIC_FILE_NAME);
        String version=getSchemaVersion(metainfoFile);
        if (AmbariMetaInfo.SCHEMA_VERSION_LEGACY.equals(version)) {
          ServiceInfo serviceInfo=new ServiceInfo();
          serviceInfo.setSchemaVersion(AmbariMetaInfo.SCHEMA_VERSION_LEGACY);
          serviceInfo.setName(serviceFolder.getName());
          ServiceMetainfoXml smx=unmarshal(ServiceMetainfoXml.class,metainfoFile);
          serviceInfo.setComment(smx.getComment());
          serviceInfo.setUser(smx.getUser());
          serviceInfo.setVersion(smx.getVersion());
          serviceInfo.setDeleted(smx.isDeleted());
          serviceInfo.setConfigDependencies(smx.getConfigDependencies());
          serviceInfo.getComponents().addAll(smx.getComponents());
          if (metricsJson.exists())           serviceInfo.setMetricsFile(metricsJson);
          setPropertiesFromConfigs(serviceFolder,serviceInfo);
          services.add(serviceInfo);
        }
 else {
          ServiceMetainfoV2Xml smiv2x=unmarshal(ServiceMetainfoV2Xml.class,metainfoFile);
          List<ServiceInfo> serviceInfos=smiv2x.getServices();
          for (          ServiceInfo serviceInfo : serviceInfos) {
            serviceInfo.setSchemaVersion(AmbariMetaInfo.SCHEMA_VERSION_2);
            String servicePackageDir=resolveServicePackageFolder(stackRoot.getAbsolutePath(),stackInfo,serviceFolder.getName(),serviceInfo.getName());
            serviceInfo.setServicePackageFolder(servicePackageDir);
            if (metricsJson.exists())             serviceInfo.setMetricsFile(metricsJson);
            setPropertiesFromConfigs(serviceFolder,serviceInfo);
            services.add(serviceInfo);
          }
        }
      }
    }
 catch (    Exception e) {
      LOG.error("Error while parsing metainfo.xml for a service",e);
    }
  }
  stackInfo.getServices().addAll(services);
}
