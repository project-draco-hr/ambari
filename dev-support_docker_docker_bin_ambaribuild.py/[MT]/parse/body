def parse(argv):
    result = ParseResult()
    if (len(argv) >= 2):
        parser = OptionParser()
        parser.add_option('-c', '--clean', dest='is_deep_clean', action='store_true', default=False, help='if this option is set, git clean -xdf is executed for the ambari local git repo')
        parser.add_option('-b', '--rebuild', dest='is_rebuild', action='store_true', default=False, help='set this flag if you want to rebuild Ambari code')
        parser.add_option('-s', '--stack_distribution', dest='stack_distribution', help='set a stack distribution. [HDP|PHD|BIGTOP]. Make sure -b is also set when you set a stack distribution')
        parser.add_option('-d', '--server_debug', dest='is_server_debug', action='store_true', default=False, help='set a debug option for ambari-server')
        (options, args) = parser.parse_args(argv[1:])
        if options.is_deep_clean:
            result.is_deep_clean = True
        if options.is_rebuild:
            result.is_rebuild = True
        if options.stack_distribution:
            result.stack_distribution = options.stack_distribution
        if options.is_server_debug:
            result.is_server_debug = True
    if (argv[0] == 'test'):
        result.is_test = True
    if (argv[0] == 'server'):
        result.is_install_server = True
    if (argv[0] == 'agent'):
        result.is_install_server = True
        result.is_install_agent = True
    if (argv[0] == 'deploy'):
        result.is_install_server = True
        result.is_install_agent = True
        result.is_deploy = True
    return result
