{
  Configuration configuration=clusterTopology.getConfiguration();
  Collection<String> configTypes=configuration.getAllConfigTypes();
  for (  String configType : configTypes) {
    if (!configType.equals("cluster-env") && !configType.equals("global")) {
      String service=clusterTopology.getBlueprint().getStack().getServiceForConfigType(configType);
      if (!clusterTopology.getBlueprint().getServices().contains(service)) {
        configuration.removeConfigType(configType);
        LOG.info("Not found any service for config type '{}'. It will be removed from configuration.",configType);
        Map<String,HostGroupInfo> hostGroupInfoMap=clusterTopology.getHostGroupInfo();
        if (MapUtils.isNotEmpty(hostGroupInfoMap)) {
          for (          Map.Entry<String,HostGroupInfo> hostGroupInfo : hostGroupInfoMap.entrySet()) {
            if (hostGroupInfo.getValue().getConfiguration() != null) {
              hostGroupInfo.getValue().getConfiguration().removeConfigType(configType);
              LOG.info("Not found any service for config type '{}'. It will be removed from host group scoped configuration.",configType);
            }
          }
        }
      }
    }
  }
}
