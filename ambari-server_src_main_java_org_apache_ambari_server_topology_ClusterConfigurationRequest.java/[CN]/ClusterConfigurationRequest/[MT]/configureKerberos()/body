{
  Set<String> updatedConfigTypes=new HashSet<>();
  Cluster cluster=getCluster();
  Blueprint blueprint=clusterTopology.getBlueprint();
  Configuration clusterConfiguration=clusterTopology.getConfiguration();
  Map<String,Map<String,String>> existingConfigurations=clusterConfiguration.getFullProperties();
  Map<String,String> componentHostsMap=createComponentHostMap(blueprint);
  existingConfigurations.put("clusterHostInfo",componentHostsMap);
  try {
    AmbariContext.getController().getKerberosHelper().ensureHeadlessIdentities(cluster,existingConfigurations,new HashSet<String>(blueprint.getServices()));
    Map<String,Map<String,String>> updatedConfigs=AmbariContext.getController().getKerberosHelper().getServiceConfigurationUpdates(cluster,existingConfigurations,new HashSet<String>(blueprint.getServices()),false);
    for (    String configType : updatedConfigs.keySet()) {
      Map<String,String> propertyMap=updatedConfigs.get(configType);
      for (      String property : propertyMap.keySet()) {
        LOG.debug("Update Kerberos related config property: {} {} {}",configType,property,propertyMap.get(property));
        clusterConfiguration.setProperty(configType,property,propertyMap.get(property));
      }
    }
    updatedConfigTypes.addAll(updatedConfigs.keySet());
  }
 catch (  KerberosInvalidConfigurationException e) {
    LOG.error("An exception occurred while doing Kerberos related configuration update: " + e,e);
  }
  return updatedConfigTypes;
}
