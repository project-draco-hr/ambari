{
  SolrInputDocument solrInputDoc=new SolrInputDocument();
  if (!isValid(vHistory)) {
    throw RESTErrorUtil.createRESTException("No FilterName Specified",MessageEnums.INVALID_INPUT_DATA);
  }
  if (isNotUnique(vHistory) && !vHistory.isOverwrite()) {
    throw RESTErrorUtil.createRESTException("Name '" + vHistory.getFiltername() + "' already exists",MessageEnums.INVALID_INPUT_DATA);
  }
  String loggedInUserName=vHistory.getUserName();
  String filterName=vHistory.getFiltername();
  solrInputDoc.addField(LogSearchConstants.ID,vHistory.getId());
  solrInputDoc.addField(LogSearchConstants.USER_NAME,loggedInUserName);
  solrInputDoc.addField(LogSearchConstants.VALUES,vHistory.getValues());
  solrInputDoc.addField(LogSearchConstants.FILTER_NAME,filterName);
  solrInputDoc.addField(LogSearchConstants.ROW_TYPE,vHistory.getRowType());
  List<String> shareNameList=vHistory.getShareNameList();
  if (shareNameList != null && !shareNameList.isEmpty()) {
    solrInputDoc.addField(LogSearchConstants.SHARE_NAME_LIST,shareNameList);
  }
  SolrQuery solrQuery=new SolrQuery();
  SolrUtil.setMainQuery(solrQuery,null);
  queryGenerator.setSingleIncludeFilter(solrQuery,LogSearchConstants.FILTER_NAME,SolrUtil.makeSearcableString(filterName));
  queryGenerator.setSingleIncludeFilter(solrQuery,LogSearchConstants.USER_NAME,loggedInUserName);
  try {
    QueryResponse queryResponse=userConfigSolrDao.process(solrQuery);
    if (queryResponse != null) {
      SolrDocumentList documentList=queryResponse.getResults();
      if (documentList != null && !documentList.isEmpty() && !vHistory.isOverwrite()) {
        logger.error("Filtername is already present");
        throw RESTErrorUtil.createRESTException("Filtername is already present",MessageEnums.INVALID_INPUT_DATA);
      }
    }
  }
 catch (  SolrException|SolrServerException|IOException e) {
    logger.error("Error in checking same filtername config",e);
    throw RESTErrorUtil.createRESTException(MessageEnums.SOLR_ERROR.getMessage().getMessage(),MessageEnums.ERROR_SYSTEM);
  }
  try {
    userConfigSolrDao.addDocs(solrInputDoc);
    return convertObjToString(solrInputDoc);
  }
 catch (  SolrException|SolrServerException|IOException e) {
    logger.error("Error saving user config. solrDoc=" + solrInputDoc,e);
    throw RESTErrorUtil.createRESTException(MessageEnums.SOLR_ERROR.getMessage().getMessage(),MessageEnums.ERROR_SYSTEM);
  }
}
