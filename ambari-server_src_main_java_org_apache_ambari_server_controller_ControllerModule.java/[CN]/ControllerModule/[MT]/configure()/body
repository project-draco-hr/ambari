{
  bindInterceptors();
  installFactories();
  bind(Configuration.class).toInstance(configuration);
  bind(AmbariMetaInfo.class).toInstance(ambariMetaInfo);
  bind(HostsMap.class).toInstance(hostsMap);
  bind(PasswordEncoder.class).toInstance(new StandardPasswordEncoder());
  JpaPersistModule jpaPersistModule=new JpaPersistModule(configuration.getPersistenceType().getUnitName());
  if (configuration.getPersistenceType() == PersistenceType.POSTGRES) {
    Properties properties=new Properties();
    properties.setProperty("javax.persistence.jdbc.user",configuration.getDatabaseUser());
    properties.setProperty("javax.persistence.jdbc.password",configuration.getDatabasePassword());
    jpaPersistModule.properties(properties);
  }
  install(jpaPersistModule);
  bind(Gson.class).in(Scopes.SINGLETON);
  bind(Clusters.class).to(ClustersImpl.class);
  bind(ActionDBAccessor.class).to(ActionDBAccessorImpl.class);
  bindConstant().annotatedWith(Names.named("schedulerSleeptime")).to(10000L);
  bindConstant().annotatedWith(Names.named("actionTimeout")).to(300000L);
  bind(AmbariManagementController.class).to(AmbariManagementControllerImpl.class);
}
