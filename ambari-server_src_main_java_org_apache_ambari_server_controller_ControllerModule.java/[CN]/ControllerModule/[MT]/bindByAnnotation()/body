{
  ClassPathScanningCandidateComponentProvider scanner=new ClassPathScanningCandidateComponentProvider(false);
  @SuppressWarnings("unchecked") List<Class<? extends Annotation>> classes=Arrays.asList(EagerSingleton.class,StaticallyInject.class);
  for (  Class<? extends Annotation> cls : classes) {
    scanner.addIncludeFilter(new AnnotationTypeFilter(cls));
  }
  Set<BeanDefinition> beanDefinitions=scanner.findCandidateComponents("org.apache.ambari.server");
  if (null == beanDefinitions || beanDefinitions.size() == 0) {
    LOG.warn("No instances of {} found to register",classes);
    return;
  }
  for (  BeanDefinition beanDefinition : beanDefinitions) {
    String className=beanDefinition.getBeanClassName();
    Class<?> clazz=ClassUtils.resolveClassName(className,ClassUtils.getDefaultClassLoader());
    if (null != clazz.getAnnotation(EagerSingleton.class)) {
      bind(clazz).asEagerSingleton();
      LOG.debug("Binding singleton {} eagerly",clazz);
    }
    if (null != clazz.getAnnotation(StaticallyInject.class)) {
      requestStaticInjection(clazz);
      LOG.debug("Statically injecting {} ",clazz);
    }
  }
}
