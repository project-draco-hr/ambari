{
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  Request request=createMock(Request.class);
  Set<Map<String,Object>> setProperties=getBlueprintTestProperties();
  Map<String,String> requestInfoProperties=new HashMap<String,String>();
  requestInfoProperties.put(Request.REQUEST_INFO_BODY_PROPERTY,null);
  expect(request.getProperties()).andReturn(setProperties);
  expect(request.getRequestInfoProperties()).andReturn(requestInfoProperties);
  replay(request,managementController);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(Resource.Type.Blueprint,PropertyHelper.getPropertyIds(Resource.Type.Blueprint),PropertyHelper.getKeyPropertyIds(Resource.Type.Blueprint),managementController);
  try {
    provider.createResources(request);
    fail("Exception expected");
  }
 catch (  IllegalArgumentException e) {
    assertEquals(BlueprintResourceProvider.REQUEST_BODY_EMPTY_ERROR_MESSAGE,e.getMessage());
  }
  verify(request,managementController);
}
