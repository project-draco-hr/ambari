{
  assertEquals(BLUEPRINT_NAME,entity.getBlueprintName());
  StackEntity stackEntity=entity.getStack();
  assertEquals("test-stack-name",stackEntity.getStackName());
  assertEquals("test-stack-version",stackEntity.getStackVersion());
  Collection<HostGroupEntity> hostGroupEntities=entity.getHostGroups();
  assertEquals(2,hostGroupEntities.size());
  for (  HostGroupEntity hostGroup : hostGroupEntities) {
    assertEquals(BLUEPRINT_NAME,hostGroup.getBlueprintName());
    assertNotNull(hostGroup.getBlueprintEntity());
    Collection<HostGroupComponentEntity> componentEntities=hostGroup.getComponents();
    if (hostGroup.getName().equals("group1")) {
      assertEquals("1",hostGroup.getCardinality());
      assertEquals(2,componentEntities.size());
      Iterator<HostGroupComponentEntity> componentIterator=componentEntities.iterator();
      String name=componentIterator.next().getName();
      assertTrue(name.equals("component1") || name.equals("component2"));
      String name2=componentIterator.next().getName();
      assertFalse(name.equals(name2));
      assertTrue(name2.equals("component1") || name2.equals("component2"));
    }
 else     if (hostGroup.getName().equals("group2")) {
      assertEquals("2",hostGroup.getCardinality());
      assertEquals(1,componentEntities.size());
      HostGroupComponentEntity componentEntity=componentEntities.iterator().next();
      assertEquals("component1",componentEntity.getName());
      if (containsConfig) {
        Collection<HostGroupConfigEntity> configurations=hostGroup.getConfigurations();
        assertEquals(1,configurations.size());
        HostGroupConfigEntity hostGroupConfigEntity=configurations.iterator().next();
        assertEquals(BLUEPRINT_NAME,hostGroupConfigEntity.getBlueprintName());
        assertSame(hostGroup,hostGroupConfigEntity.getHostGroupEntity());
        assertEquals("core-site",hostGroupConfigEntity.getType());
        Map<String,String> properties=gson.<Map<String,String>>fromJson(hostGroupConfigEntity.getConfigData(),Map.class);
        assertEquals(1,properties.size());
        assertEquals("anything",properties.get("my.custom.hg.property"));
      }
    }
 else {
      fail("Unexpected host group name");
    }
  }
  Collection<BlueprintConfigEntity> configurations=entity.getConfigurations();
  if (containsConfig) {
    assertEquals(1,configurations.size());
    BlueprintConfigEntity blueprintConfigEntity=configurations.iterator().next();
    assertEquals(BLUEPRINT_NAME,blueprintConfigEntity.getBlueprintName());
    assertSame(entity,blueprintConfigEntity.getBlueprintEntity());
    assertEquals("core-site",blueprintConfigEntity.getType());
    Map<String,String> properties=gson.<Map<String,String>>fromJson(blueprintConfigEntity.getConfigData(),Map.class);
    assertEquals(2,properties.size());
    assertEquals("480",properties.get("fs.trash.interval"));
    assertEquals("8500",properties.get("ipc.client.idlethreshold"));
  }
 else {
    assertEquals(0,configurations.size());
  }
}
