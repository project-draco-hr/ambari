def check_database(options):
    jdk_path = serverConfiguration.get_java_exe_path()
    if (jdk_path is None):
        print_error_msg(('No JDK found, please run the "setup" command to install a JDK automatically or install any JDK manually to ' + configDefaults.JDK_INSTALL_DIR))
        sys.exit(1)
    properties = serverConfiguration.get_ambari_properties()
    serverConfiguration.parse_properties_file(options)
    options.database_index = LINUX_DBMS_KEYS_LIST.index(properties[JDBC_DATABASE_PROPERTY])
    dbConfiguration.ensure_jdbc_driver_is_installed(options, serverConfiguration.get_ambari_properties())
    serverClassPath = ServerClassPath(serverConfiguration.get_ambari_properties(), options)
    class_path = serverClassPath.get_full_ambari_classpath_escaped_for_shell()
    command = CHECK_DATABASE_HELPER_CMD.format(jdk_path, class_path)
    ambari_user = serverConfiguration.read_ambari_user()
    current_user = setupSecurity.ensure_can_start_under_current_user(ambari_user)
    environ = setupSecurity.generate_env(options, ambari_user, current_user)
    (retcode, stdout, stderr) = os_utils.run_os_command(command, env=environ)
    print_info_msg(('Return code from check database command, retcode = ' + str(retcode)))
    if (retcode > 0):
        print_error_msg('Database check failed to complete. Please check ambari-server.log and ambari-server-check-database.log for problem.')
        raise FatalException(1, 'Database check failed.')
    else:
        print str(stdout)
