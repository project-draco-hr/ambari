{
  Collection<RoleAuthorizationEntity> authorizationEntities=new ArrayList<RoleAuthorizationEntity>();
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.VIEW_METRICS","View metrics"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.VIEW_STATUS_INFO","View status information"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.VIEW_CONFIGS","View configurations"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.COMPARE_CONFIGS","Compare configurations"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.VIEW_ALERTS","View service alerts"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.START_STOP","Start/Stop/Restart Service"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.DECOMMISSION_RECOMMISSION","Decommission/recommission"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.RUN_SERVICE_CHECK","Run service checks"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.TOGGLE_MAINTENANCE","Turn on/off maintenance mode"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.RUN_CUSTOM_COMMAND","Perform service-specific tasks"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.MODIFY_CONFIGS","Modify configurations"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.MANAGE_CONFIG_GROUPS","Manage configuration groups"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.MOVE","Move to another host"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.ENABLE_HA","Enable HA"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.TOGGLE_ALERTS","Enable/disable service alerts"));
  authorizationEntities.add(new RoleAuthorizationEntity("SERVICE.ADD_DELETE_SERVICES","Add Service to cluster"));
  authorizationEntities.add(new RoleAuthorizationEntity("HOST.VIEW_METRICS","View metrics"));
  authorizationEntities.add(new RoleAuthorizationEntity("HOST.VIEW_STATUS_INFO","View status information"));
  authorizationEntities.add(new RoleAuthorizationEntity("HOST.VIEW_CONFIGS","View configuration"));
  authorizationEntities.add(new RoleAuthorizationEntity("HOST.COMPARE_CONFIGS","Turn on/off maintenance mode"));
  authorizationEntities.add(new RoleAuthorizationEntity("HOST.ADD_DELETE_COMPONENTS","Install components"));
  authorizationEntities.add(new RoleAuthorizationEntity("HOST.ADD_DELETE_HOSTS","Add/Delete hosts"));
  authorizationEntities.add(new RoleAuthorizationEntity("CLUSTER.VIEW_METRICS","View metrics"));
  authorizationEntities.add(new RoleAuthorizationEntity("CLUSTER.VIEW_STATUS_INFO","View status information"));
  authorizationEntities.add(new RoleAuthorizationEntity("CLUSTER.VIEW_CONFIGS","View configuration"));
  authorizationEntities.add(new RoleAuthorizationEntity("CLUSTER.VIEW_STACK_DETAILS","View stack version details"));
  authorizationEntities.add(new RoleAuthorizationEntity("CLUSTER.VIEW_ALERTS","View alerts"));
  authorizationEntities.add(new RoleAuthorizationEntity("CLUSTER.TOGGLE_ALERTS","Enable/disable alerts"));
  authorizationEntities.add(new RoleAuthorizationEntity("CLUSTER.TOGGLE_KERBEROS","Enable/disable Kerberos"));
  authorizationEntities.add(new RoleAuthorizationEntity("CLUSTER.UPGRADE_DOWNGRADE_STACK","Upgrade/downgrade stack"));
  return authorizationEntities;
}
