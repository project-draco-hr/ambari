{
  log.info("Get roles for user " + username + " from local DB");
  UserEntity user;
  user=userDAO.findLdapUserByName(username);
  if (user == null) {
    log.info("User " + username + " not present in local DB - creating");
    createLdapUser(username);
    user=userDAO.findLdapUserByName(username);
  }
  if (configuration.getLdapServerProperties().isGroupMappingEnabled()) {
    Boolean isAdmin=(Boolean)userData.getObjectAttribute(AMBARI_ADMIN_LDAP_ATTRIBUTE_KEY);
    if ((isAdmin != null) && isAdmin) {
      log.info("Adding admin role to LDAP user " + username);
      addRole(user,configuration.getConfigsMap().get(Configuration.ADMIN_ROLE_NAME_KEY));
    }
 else {
      removeRole(user,configuration.getConfigsMap().get(Configuration.ADMIN_ROLE_NAME_KEY));
    }
  }
  List<PrincipalEntity> principalEntities=new LinkedList<PrincipalEntity>();
  principalEntities.add(user.getPrincipal());
  List<MemberEntity> memberEntities=memberDAO.findAllMembersByUser(user);
  for (  MemberEntity memberEntity : memberEntities) {
    principalEntities.add(memberEntity.getGroup().getPrincipal());
  }
  List<PrivilegeEntity> privilegeEntities=privilegeDAO.findAllByPrincipal(principalEntities);
  return authorizationHelper.convertPrivilegesToAuthorities(privilegeEntities);
}
