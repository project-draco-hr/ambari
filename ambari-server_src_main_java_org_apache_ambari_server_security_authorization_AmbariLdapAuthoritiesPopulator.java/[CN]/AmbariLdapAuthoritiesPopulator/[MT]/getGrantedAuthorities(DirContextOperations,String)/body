{
  username=AuthorizationHelper.resolveLoginAliasToUserName(username);
  log.info("Get authorities for user " + username + " from local DB");
  UserEntity user;
  user=userDAO.findLdapUserByName(username);
  if (user == null) {
    log.error("Can't get authorities for user " + username + ", he is not present in local DB");
    return Collections.emptyList();
  }
  if (!user.getActive()) {
    throw new InvalidUsernamePasswordCombinationException();
  }
  List<PrincipalEntity> principalEntities=new LinkedList<PrincipalEntity>();
  principalEntities.add(user.getPrincipal());
  List<MemberEntity> memberEntities=memberDAO.findAllMembersByUser(user);
  for (  MemberEntity memberEntity : memberEntities) {
    principalEntities.add(memberEntity.getGroup().getPrincipal());
  }
  List<PrivilegeEntity> privilegeEntities=privilegeDAO.findAllByPrincipal(principalEntities);
  return authorizationHelper.convertPrivilegesToAuthorities(privilegeEntities);
}
