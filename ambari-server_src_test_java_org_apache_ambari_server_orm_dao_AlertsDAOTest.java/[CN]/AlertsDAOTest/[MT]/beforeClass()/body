{
  injector=Guice.createInjector(new InMemoryDefaultTestModule());
  injector.getInstance(GuiceJpaInitializer.class);
  clusterId=injector.getInstance(OrmTestHelper.class).createCluster();
  AlertsDAO alertDAO=injector.getInstance(AlertsDAO.class);
  AlertDefinitionDAO alertDefinitionDAO=injector.getInstance(AlertDefinitionDAO.class);
  for (int i=0; i < 5; i++) {
    AlertDefinitionEntity definition=new AlertDefinitionEntity();
    definition.setDefinitionName("Alert Definition " + i);
    definition.setServiceName("Service " + i);
    definition.setComponentName(null);
    definition.setClusterId(clusterId);
    definition.setHash(UUID.randomUUID().toString());
    definition.setScheduleInterval(60L);
    definition.setScope("SERVICE");
    definition.setSource("Source " + i);
    definition.setSourceType("SCRIPT");
    alertDefinitionDAO.create(definition);
  }
  List<AlertDefinitionEntity> definitions=alertDefinitionDAO.findAll();
  Assert.assertNotNull(definitions);
  Assert.assertEquals(5,definitions.size());
  for (  AlertDefinitionEntity definition : definitions) {
    for (int i=0; i < 5; i++) {
      AlertHistoryEntity history=new AlertHistoryEntity();
      history.setServiceName(definition.getServiceName());
      history.setClusterId(clusterId);
      history.setAlertDefinition(definition);
      history.setAlertLabel(definition.getDefinitionName() + " " + i);
      history.setAlertState(AlertState.OK);
      history.setAlertText(definition.getDefinitionName() + " " + i);
      history.setAlertTimestamp(new Date().getTime());
      alertDAO.create(history);
    }
  }
  for (  AlertDefinitionEntity definition : definitions) {
    List<AlertHistoryEntity> alerts=alertDAO.findAll();
    AlertHistoryEntity history=null;
    for (    AlertHistoryEntity alert : alerts) {
      if (definition.equals(alert.getAlertDefinition())) {
        history=alert;
      }
    }
    Assert.assertNotNull(history);
    AlertCurrentEntity current=new AlertCurrentEntity();
    current.setAlertId(history.getAlertId());
    current.setAlertHistory(history);
    current.setLatestTimestamp(new Date().getTime());
    current.setOriginalTimestamp(new Date().getTime() - 10800000);
    current.setMaintenanceState(MaintenanceState.OFF);
    alertDAO.create(current);
  }
}
