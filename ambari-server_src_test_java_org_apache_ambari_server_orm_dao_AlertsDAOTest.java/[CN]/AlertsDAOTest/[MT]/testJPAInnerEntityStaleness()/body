{
  List<AlertCurrentEntity> currents=m_dao.findCurrent();
  AlertCurrentEntity current=currents.get(0);
  AlertHistoryEntity oldHistory=current.getAlertHistory();
  AlertHistoryEntity newHistory=new AlertHistoryEntity();
  newHistory.setAlertDefinition(oldHistory.getAlertDefinition());
  newHistory.setAlertInstance(oldHistory.getAlertInstance());
  newHistory.setAlertLabel(oldHistory.getAlertLabel());
  if (oldHistory.getAlertState() == AlertState.OK) {
    newHistory.setAlertState(AlertState.CRITICAL);
  }
 else {
    newHistory.setAlertState(AlertState.OK);
  }
  newHistory.setAlertText("New History");
  newHistory.setClusterId(oldHistory.getClusterId());
  newHistory.setAlertTimestamp(System.currentTimeMillis());
  newHistory.setComponentName(oldHistory.getComponentName());
  newHistory.setHostName(oldHistory.getHostName());
  newHistory.setServiceName(oldHistory.getServiceName());
  m_dao.create(newHistory);
  assertTrue(newHistory.getAlertId().longValue() != oldHistory.getAlertId().longValue());
  current.setAlertHistory(newHistory);
  m_dao.merge(current);
  AlertCurrentEntity newCurrent=m_dao.findCurrentByHostAndName(newHistory.getClusterId(),newHistory.getHostName(),newHistory.getAlertDefinition().getDefinitionName());
  assertEquals(newHistory.getAlertId(),newCurrent.getAlertHistory().getAlertId());
  assertEquals(newHistory.getAlertState(),newCurrent.getAlertHistory().getAlertState());
}
