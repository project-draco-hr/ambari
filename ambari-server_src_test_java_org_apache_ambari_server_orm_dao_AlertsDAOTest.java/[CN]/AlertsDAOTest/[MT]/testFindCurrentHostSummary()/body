{
  AlertHostSummaryDTO summary=m_dao.findCurrentHostCounts(m_cluster.getClusterId());
  assertEquals(0,summary.getWarningCount());
  assertEquals(0,summary.getCriticalCount());
  assertEquals(0,summary.getUnknownCount());
  assertEquals(1,summary.getOkCount());
  AlertHistoryEntity history1=m_dao.findCurrentByCluster(m_cluster.getClusterId()).get(1).getAlertHistory();
  history1.setAlertState(AlertState.WARNING);
  m_dao.merge(history1);
  summary=m_dao.findCurrentHostCounts(m_cluster.getClusterId());
  assertEquals(1,summary.getWarningCount());
  assertEquals(0,summary.getCriticalCount());
  assertEquals(0,summary.getUnknownCount());
  assertEquals(0,summary.getOkCount());
  history1.setAlertState(AlertState.CRITICAL);
  m_dao.merge(history1);
  summary=m_dao.findCurrentHostCounts(m_cluster.getClusterId());
  assertEquals(0,summary.getWarningCount());
  assertEquals(1,summary.getCriticalCount());
  assertEquals(0,summary.getUnknownCount());
  assertEquals(0,summary.getOkCount());
  AlertHistoryEntity history2=m_dao.findCurrentByCluster(m_cluster.getClusterId()).get(2).getAlertHistory();
  history2.setHostName(history2.getHostName() + "-foo");
  m_dao.merge(history2);
  summary=m_dao.findCurrentHostCounts(m_cluster.getClusterId());
  assertEquals(0,summary.getWarningCount());
  assertEquals(1,summary.getCriticalCount());
  assertEquals(0,summary.getUnknownCount());
  assertEquals(1,summary.getOkCount());
  AlertHistoryEntity history3=m_dao.findCurrentByCluster(m_cluster.getClusterId()).get(3).getAlertHistory();
  history3.setHostName(history3.getHostName() + "-bar");
  m_dao.merge(history3);
  summary=m_dao.findCurrentHostCounts(m_cluster.getClusterId());
  assertEquals(0,summary.getWarningCount());
  assertEquals(1,summary.getCriticalCount());
  assertEquals(0,summary.getUnknownCount());
  assertEquals(2,summary.getOkCount());
  AlertHistoryEntity history4=m_dao.findCurrentByCluster(m_cluster.getClusterId()).get(4).getAlertHistory();
  history4.setHostName(history4.getHostName() + "-baz");
  history4.setAlertState(AlertState.UNKNOWN);
  m_dao.merge(history3);
  summary=m_dao.findCurrentHostCounts(m_cluster.getClusterId());
  assertEquals(0,summary.getWarningCount());
  assertEquals(1,summary.getCriticalCount());
  assertEquals(1,summary.getUnknownCount());
  assertEquals(2,summary.getOkCount());
  AlertCurrentEntity current4=m_dao.findCurrentByCluster(m_cluster.getClusterId()).get(4);
  current4.setMaintenanceState(MaintenanceState.ON);
  m_dao.merge(current4);
  summary=m_dao.findCurrentHostCounts(m_cluster.getClusterId());
  assertEquals(0,summary.getWarningCount());
  assertEquals(1,summary.getCriticalCount());
  assertEquals(0,summary.getUnknownCount());
  assertEquals(3,summary.getOkCount());
  List<AlertCurrentEntity> currents=m_dao.findCurrentByCluster(m_cluster.getClusterId());
  for (  AlertCurrentEntity current : currents) {
    current.setMaintenanceState(MaintenanceState.ON);
    m_dao.merge(current);
  }
  summary=m_dao.findCurrentHostCounts(m_cluster.getClusterId());
  assertEquals(0,summary.getWarningCount());
  assertEquals(0,summary.getCriticalCount());
  assertEquals(0,summary.getUnknownCount());
  assertEquals(4,summary.getOkCount());
}
