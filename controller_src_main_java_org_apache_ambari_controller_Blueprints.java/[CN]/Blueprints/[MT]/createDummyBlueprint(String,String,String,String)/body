{
  Blueprint bp=new Blueprint();
  bp.setName(name);
  bp.setParentName(siteName);
  bp.setRevision(revision);
  bp.setParentRevision(siteVersion);
  List<RepositoryKind> prList=new ArrayList<RepositoryKind>();
  RepositoryKind hdfsRepo=new RepositoryKind();
  hdfsRepo.setKind("TAR");
  List<String> repoURLs=new ArrayList<String>();
  repoURLs.add("http://www.apache.org/dist/hadoop/common/");
  hdfsRepo.setUrls(repoURLs);
  prList.add(hdfsRepo);
  bp.setPackageRepositories(prList);
  Configuration bpDefaultCfg=new Configuration();
  ConfigurationCategory ambari=new ConfigurationCategory();
  ambari.setName("ambari");
  ambari.getProperty().add(getProperty("ambari.install.dir","/var/ambari"));
  ambari.getProperty().add(getProperty("ambari.data.dir.pattern","/grid/*"));
  ConfigurationCategory core_site=new ConfigurationCategory();
  core_site.setName("core-site");
  core_site.getProperty().add(getProperty("dfs.name.dir","/tmp/namenode"));
  ConfigurationCategory hdfs_site=new ConfigurationCategory();
  hdfs_site.setName("hdfs-site");
  hdfs_site.getProperty().add(getProperty("dfs.name.dir","/tmp/namenode"));
  hdfs_site.getProperty().add(getProperty("dfs.data.dir","/tmp/datanode"));
  bpDefaultCfg.getCategory().add(core_site);
  bpDefaultCfg.getCategory().add(hdfs_site);
  bpDefaultCfg.getCategory().add(ambari);
  bp.setConfiguration(bpDefaultCfg);
  List<Component> compList=new ArrayList<Component>();
  Component commonC=new Component();
  commonC.setName("common");
  commonC.setArchitecture("x86_64");
  commonC.setVersion("0.20.205.0");
  commonC.setProvider("org.apache.hadoop");
  ComponentDefinition commonCD=new ComponentDefinition();
  commonCD.setGroup("org.apache.ambari");
  commonCD.setDefinition("hadoop-common-0.1.0.acd");
  commonCD.setVersion("0.1.0");
  commonC.setDefinition(commonCD);
  compList.add(commonC);
  Component hdfsC=new Component();
  hdfsC.setName("hdfs");
  hdfsC.setArchitecture("x86_64");
  hdfsC.setVersion("0.20.205.0");
  hdfsC.setProvider("org.apache.hadoop");
  ComponentDefinition hdfsCD=new ComponentDefinition();
  hdfsCD.setGroup("org.apache.ambari");
  hdfsCD.setDefinition("hadoop-hdfs-0.1.0.acd");
  hdfsCD.setVersion("0.1.0");
  hdfsC.setDefinition(hdfsCD);
  List<Role> hdfsRoleList=new ArrayList<Role>();
  Role hdfs_nn_role=new Role();
  hdfs_nn_role.setName("namenode");
  hdfs_nn_role.setConfiguration(bpDefaultCfg);
  Role hdfs_dn_role=new Role();
  hdfs_dn_role.setName("datanode");
  hdfs_dn_role.setConfiguration(bpDefaultCfg);
  hdfsRoleList.add(hdfs_nn_role);
  hdfsRoleList.add(hdfs_dn_role);
  hdfsC.setRoles(hdfsRoleList);
  compList.add(hdfsC);
  bp.setComponents(compList);
  try {
    addBlueprint(bp);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
