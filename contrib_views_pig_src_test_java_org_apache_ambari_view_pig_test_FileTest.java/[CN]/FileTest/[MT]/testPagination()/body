{
  String name=UUID.randomUUID().toString().replaceAll("-","");
  String filePath="/tmp/" + name;
  doCreateFile(name,"1234567890");
  Response response=fileService.getFile(filePath,0L,null);
  Assert.assertEquals(200,response.getStatus());
  JSONObject obj=((JSONObject)response.getEntity());
  Assert.assertTrue(obj.containsKey("file"));
  Assert.assertEquals("1234",((FileResource)obj.get("file")).getFileContent());
  Assert.assertEquals(3,((FileResource)obj.get("file")).getPageCount());
  Assert.assertEquals(0,((FileResource)obj.get("file")).getPage());
  Assert.assertTrue(((FileResource)obj.get("file")).isHasNext());
  Assert.assertEquals(filePath,((FileResource)obj.get("file")).getFilePath());
  response=fileService.getFile(filePath,1L,null);
  Assert.assertEquals(200,response.getStatus());
  obj=((JSONObject)response.getEntity());
  Assert.assertEquals("5678",((FileResource)obj.get("file")).getFileContent());
  Assert.assertEquals(1,((FileResource)obj.get("file")).getPage());
  Assert.assertTrue(((FileResource)obj.get("file")).isHasNext());
  response=fileService.getFile(filePath,2L,null);
  Assert.assertEquals(200,response.getStatus());
  obj=((JSONObject)response.getEntity());
  Assert.assertEquals("90",((FileResource)obj.get("file")).getFileContent());
  Assert.assertEquals(2,((FileResource)obj.get("file")).getPage());
  Assert.assertFalse(((FileResource)obj.get("file")).isHasNext());
  thrown.expect(BadRequestFormattedException.class);
  fileService.getFile(filePath,3L,null);
}
