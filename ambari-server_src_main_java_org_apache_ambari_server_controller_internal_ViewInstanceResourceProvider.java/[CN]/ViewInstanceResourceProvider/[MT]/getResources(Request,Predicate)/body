{
  Set<Resource> resources=new HashSet<Resource>();
  ViewRegistry viewRegistry=ViewRegistry.getInstance();
  Set<String> requestedIds=getRequestPropertyIds(request,predicate);
  Set<Map<String,Object>> propertyMaps=getPropertyMaps(predicate);
  if (propertyMaps.isEmpty()) {
    propertyMaps.add(Collections.<String,Object>emptyMap());
  }
  for (  Map<String,Object> propertyMap : propertyMaps) {
    String viewName=(String)propertyMap.get(VIEW_NAME_PROPERTY_ID);
    String instanceName=(String)propertyMap.get(INSTANCE_NAME_PROPERTY_ID);
    for (    ViewDefinition viewDefinition : viewRegistry.getDefinitions()) {
      if (viewName == null || viewName.equals(viewDefinition.getName())) {
        for (        ViewInstanceDefinition viewInstanceDefinition : viewRegistry.getInstanceDefinitions(viewDefinition)) {
          if (instanceName == null || instanceName.equals(viewInstanceDefinition.getName())) {
            Resource resource=new ResourceImpl(Resource.Type.ViewInstance);
            setResourceProperty(resource,VIEW_NAME_PROPERTY_ID,viewDefinition.getName(),requestedIds);
            setResourceProperty(resource,INSTANCE_NAME_PROPERTY_ID,viewInstanceDefinition.getName(),requestedIds);
            setResourceProperty(resource,SERVLET_MAPPINGS_PROPERTY_ID,viewInstanceDefinition.getServletMappings(),requestedIds);
            resources.add(resource);
          }
        }
      }
    }
  }
  return resources;
}
