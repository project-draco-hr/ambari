{
  String name=(String)properties.get(INSTANCE_NAME_PROPERTY_ID);
  if (name == null || name.isEmpty()) {
    throw new IllegalArgumentException("View instance name must be provided");
  }
  String version=(String)properties.get(VIEW_VERSION_PROPERTY_ID);
  if (version == null || version.isEmpty()) {
    throw new IllegalArgumentException("View version must be provided");
  }
  String viewName=(String)properties.get(VIEW_NAME_PROPERTY_ID);
  if (viewName == null || viewName.isEmpty()) {
    throw new IllegalArgumentException("View name must be provided");
  }
  ViewRegistry viewRegistry=ViewRegistry.getInstance();
  ViewInstanceEntity viewInstanceEntity=viewRegistry.getInstanceDefinition(viewName,version,name);
  viewName=ViewEntity.getViewName(viewName,version);
  if (viewInstanceEntity == null) {
    viewInstanceEntity=new ViewInstanceEntity();
    viewInstanceEntity.setName(name);
    viewInstanceEntity.setViewName(viewName);
    ViewEntity viewEntity=new ViewEntity();
    viewEntity.setName(viewName);
    viewEntity.setVersion(version);
    viewInstanceEntity.setViewEntity(viewEntity);
  }
  String label=(String)properties.get(LABEL_PROPERTY_ID);
  if (label != null) {
    viewInstanceEntity.setLabel(label);
  }
  String description=(String)properties.get(DESCRIPTION_PROPERTY_ID);
  if (description != null) {
    viewInstanceEntity.setDescription(description);
  }
  String visible=(String)properties.get(VISIBLE_PROPERTY_ID);
  viewInstanceEntity.setVisible(visible == null ? true : Boolean.valueOf(visible));
  Collection<ViewInstancePropertyEntity> instanceProperties=new HashSet<ViewInstancePropertyEntity>();
  Collection<ViewInstanceDataEntity> instanceData=new HashSet<ViewInstanceDataEntity>();
  for (  Map.Entry<String,Object> entry : properties.entrySet()) {
    String propertyName=entry.getKey();
    if (propertyName.startsWith(PROPERTIES_PREFIX)) {
      ViewInstancePropertyEntity viewInstancePropertyEntity=new ViewInstancePropertyEntity();
      viewInstancePropertyEntity.setViewName(viewName);
      viewInstancePropertyEntity.setViewInstanceName(name);
      viewInstancePropertyEntity.setName(entry.getKey().substring(PROPERTIES_PREFIX.length()));
      viewInstancePropertyEntity.setValue((String)entry.getValue());
      viewInstancePropertyEntity.setViewInstanceEntity(viewInstanceEntity);
      instanceProperties.add(viewInstancePropertyEntity);
    }
 else     if (propertyName.startsWith(DATA_PREFIX)) {
      ViewInstanceDataEntity viewInstanceDataEntity=new ViewInstanceDataEntity();
      viewInstanceDataEntity.setViewName(viewName);
      viewInstanceDataEntity.setViewInstanceName(name);
      viewInstanceDataEntity.setName(entry.getKey().substring(DATA_PREFIX.length()));
      viewInstanceDataEntity.setValue((String)entry.getValue());
      viewInstanceDataEntity.setViewInstanceEntity(viewInstanceEntity);
      instanceData.add(viewInstanceDataEntity);
    }
  }
  if (!instanceProperties.isEmpty()) {
    viewInstanceEntity.setProperties(instanceProperties);
  }
  if (!instanceData.isEmpty()) {
    viewInstanceEntity.setData(instanceData);
  }
  return viewInstanceEntity;
}
