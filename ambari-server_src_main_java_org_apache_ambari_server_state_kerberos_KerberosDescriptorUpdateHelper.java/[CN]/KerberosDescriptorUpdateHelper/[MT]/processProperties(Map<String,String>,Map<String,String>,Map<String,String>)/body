{
  if ((previousStackProperties == null) && (newStackProperties == null)) {
    return userProperties;
  }
 else {
    Map<String,String> updatedProperties=new TreeMap<String,String>();
    if (userProperties != null) {
      updatedProperties.putAll(userProperties);
    }
    if (previousStackProperties == null) {
      previousStackProperties=Collections.emptyMap();
    }
    if (newStackProperties == null) {
      newStackProperties=Collections.emptyMap();
    }
    for (    Map.Entry<String,String> entry : previousStackProperties.entrySet()) {
      String name=entry.getKey();
      if (newStackProperties.containsKey(name)) {
        String previousValue=entry.getValue();
        String newValue=newStackProperties.get(name);
        String userValue=updatedProperties.get(name);
        if (((previousValue == null) ? (newValue != null) : !previousValue.equals(newValue)) && ((previousValue == null) ? (userValue == null) : previousValue.equals(userValue))) {
          LOG.debug("Modifying property named {} from user-specified Kerberos Descriptor",name);
          updatedProperties.put(name,newValue);
        }
      }
 else {
        LOG.debug("Removing property named {} from user-specified Kerberos Descriptor",name);
        updatedProperties.remove(name);
      }
    }
    for (    Map.Entry<String,String> entry : newStackProperties.entrySet()) {
      String name=entry.getKey();
      if (!previousStackProperties.containsKey(name) && !updatedProperties.containsKey(name)) {
        LOG.debug("Adding property named {} to user-specified Kerberos Descriptor",name);
        updatedProperties.put(name,entry.getValue());
      }
    }
    return updatedProperties;
  }
}
