{
  if ((userServices == null) || userServices.isEmpty() || ((previousStackServices == null) && (newStackServices == null))) {
    return userServices;
  }
  Map<String,KerberosServiceDescriptor> updatedServices=new TreeMap<String,KerberosServiceDescriptor>();
  if (previousStackServices == null) {
    previousStackServices=Collections.emptyMap();
  }
  if (newStackServices == null) {
    newStackServices=Collections.emptyMap();
  }
  for (  Map.Entry<String,KerberosServiceDescriptor> entry : userServices.entrySet()) {
    String name=entry.getKey();
    KerberosServiceDescriptor userValue=entry.getValue();
    if (userValue != null) {
      if (newStackServices.containsKey(name)) {
        KerberosServiceDescriptor oldValue=previousStackServices.get(name);
        KerberosServiceDescriptor newValue=newStackServices.get(name);
        LOG.debug("Processing service {} for modifications",name);
        updatedServices.put(name,processService(oldValue,newValue,userValue));
      }
 else       if (previousStackServices.containsKey(name)) {
        LOG.debug("Removing service {} from user-specified Kerberos Descriptor",name);
      }
 else {
        LOG.debug("Leaving service {} in user-specified Kerberos Descriptor unchanged since it was user-defined.",name);
        updatedServices.put(name,userValue);
      }
    }
  }
  return updatedServices;
}
