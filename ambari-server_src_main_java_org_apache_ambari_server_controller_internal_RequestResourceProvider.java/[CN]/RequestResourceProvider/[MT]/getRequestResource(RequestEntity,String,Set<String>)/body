{
  Resource resource=new ResourceImpl(Resource.Type.Request);
  if (null != clusterName) {
    setResourceProperty(resource,REQUEST_CLUSTER_NAME_PROPERTY_ID,clusterName,requestedPropertyIds);
  }
 else   if (null != entity.getClusterId() && -1L != entity.getClusterId()) {
    setResourceProperty(resource,REQUEST_CLUSTER_ID_PROPERTY_ID,entity.getClusterId(),requestedPropertyIds);
  }
  setResourceProperty(resource,REQUEST_ID_PROPERTY_ID,entity.getRequestId(),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_CONTEXT_ID,entity.getRequestContext(),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_TYPE_ID,entity.getRequestType(),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_INPUTS_ID,entity.getInputs(),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_RESOURCE_FILTER_ID,org.apache.ambari.server.actionmanager.Request.filtersFromEntity(entity),requestedPropertyIds);
  RequestOperationLevel operationLevel=org.apache.ambari.server.actionmanager.Request.operationLevelFromEntity(entity);
  String opLevelStr=null;
  if (operationLevel != null) {
    opLevelStr=RequestOperationLevel.getExternalLevelName(operationLevel.getLevel().toString());
  }
  setResourceProperty(resource,REQUEST_OPERATION_LEVEL_ID,opLevelStr,requestedPropertyIds);
  setResourceProperty(resource,REQUEST_CREATE_TIME_ID,entity.getCreateTime(),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_START_TIME_ID,entity.getStartTime(),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_END_TIME_ID,entity.getEndTime(),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_EXCLUSIVE_ID,entity.isExclusive(),requestedPropertyIds);
  if (entity.getRequestScheduleId() != null) {
    setResourceProperty(resource,REQUEST_SOURCE_SCHEDULE_ID,entity.getRequestScheduleId(),requestedPropertyIds);
  }
 else {
    setResourceProperty(resource,REQUEST_SOURCE_SCHEDULE,null,requestedPropertyIds);
  }
  Map<Long,HostRoleCommandStatusSummaryDTO> summary=s_hostRoleCommandDAO.findAggregateCounts(entity.getRequestId());
  summary.putAll(topologyManager.getStageSummaries(entity.getRequestId()));
  LogicalRequest logicalRequest=topologyManager.getRequest(entity.getRequestId());
  CalculatedStatus status=CalculatedStatus.statusFromStageSummary(summary,summary.keySet());
  if (summary.isEmpty() && logicalRequest == null) {
    status=CalculatedStatus.getCompletedStatus();
  }
  setResourceProperty(resource,REQUEST_STATUS_PROPERTY_ID,status.getStatus().toString(),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_PROGRESS_PERCENT_ID,status.getPercent(),requestedPropertyIds);
  int taskCount=0;
  for (  HostRoleCommandStatusSummaryDTO dto : summary.values()) {
    taskCount+=dto.getTaskTotal();
  }
  Map<HostRoleStatus,Integer> hostRoleStatusCounters=CalculatedStatus.calculateTaskStatusCounts(summary,summary.keySet());
  setResourceProperty(resource,REQUEST_TASK_CNT_ID,taskCount,requestedPropertyIds);
  setResourceProperty(resource,REQUEST_FAILED_TASK_CNT_ID,hostRoleStatusCounters.get(HostRoleStatus.FAILED),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_ABORTED_TASK_CNT_ID,hostRoleStatusCounters.get(HostRoleStatus.ABORTED),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_TIMED_OUT_TASK_CNT_ID,hostRoleStatusCounters.get(HostRoleStatus.TIMEDOUT),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_QUEUED_TASK_CNT_ID,hostRoleStatusCounters.get(HostRoleStatus.QUEUED),requestedPropertyIds);
  setResourceProperty(resource,REQUEST_COMPLETED_TASK_CNT_ID,hostRoleStatusCounters.get(HostRoleStatus.COMPLETED),requestedPropertyIds);
  return resource;
}
