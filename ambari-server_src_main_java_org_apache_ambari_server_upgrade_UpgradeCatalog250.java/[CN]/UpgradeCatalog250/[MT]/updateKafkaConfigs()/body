{
  AmbariManagementController ambariManagementController=injector.getInstance(AmbariManagementController.class);
  Clusters clusters=ambariManagementController.getClusters();
  if (clusters != null) {
    Map<String,Cluster> clusterMap=clusters.getClusters();
    if (clusterMap != null && !clusterMap.isEmpty()) {
      for (      final Cluster cluster : clusterMap.values()) {
        Config kafkaBrokerConfig=cluster.getDesiredConfigByType(KAFKA_BROKER);
        if (kafkaBrokerConfig != null) {
          Map<String,String> kafkaBrokerProperties=kafkaBrokerConfig.getProperties();
          if (kafkaBrokerProperties != null && kafkaBrokerProperties.containsKey(KAFKA_TIMELINE_METRICS_HOST)) {
            LOG.info("Removing kafka.timeline.metrics.host from kafka-broker");
            removeConfigurationPropertiesFromCluster(cluster,KAFKA_BROKER,Collections.singleton("kafka.timeline.metrics.host"));
          }
        }
      }
    }
  }
}
