{
  Assert.assertNotNull(descriptor);
  Map<String,String> properties=descriptor.getProperties();
  Assert.assertNotNull(properties);
  Assert.assertEquals(3,properties.size());
  Assert.assertEquals("EXAMPLE.COM",properties.get("realm"));
  Assert.assertEquals("/etc/security/keytabs",properties.get("keytab_dir"));
  Assert.assertEquals("Hello World",properties.get("some.property"));
  Map<String,KerberosServiceDescriptor> serviceDescriptors=descriptor.getServices();
  Assert.assertNotNull(serviceDescriptors);
  Assert.assertEquals(2,serviceDescriptors.size());
  KerberosServiceDescriptorTest.validateFromJSON(descriptor.getService("SERVICE_NAME"));
  KerberosServiceDescriptorTest.validateFromMap(descriptor.getService("A_DIFFERENT_SERVICE_NAME"));
  Assert.assertNull(descriptor.getService("invalid service"));
  Map<String,KerberosConfigurationDescriptor> configurations=descriptor.getConfigurations();
  Assert.assertNotNull(configurations);
  Assert.assertEquals(1,configurations.size());
  KerberosConfigurationDescriptor configuration=configurations.get("cluster-conf");
  Assert.assertNotNull(configuration);
  Map<String,String> configProperties=configuration.getProperties();
  Assert.assertEquals("cluster-conf",configuration.getType());
  Assert.assertNotNull(configProperties);
  Assert.assertEquals(1,configProperties.size());
  Assert.assertEquals("red",configProperties.get("property1"));
}
