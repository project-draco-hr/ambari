def setup_java():
    '\n  Installs jdk using specific params, that comes from ambari-server\n  '
    import params
    jdk_curl_target = format('{artifact_dir}/{jdk_bin}')
    java_dir = os.path.dirname(params.java_home)
    java_exec = format('{java_home}/bin/java')
    Execute(format('mkdir -p {artifact_dir} ; curl -kf --retry 10 {jdk_location}/{jdk_bin} -o {jdk_curl_target}'), path=['/bin', '/usr/bin/'], not_if=format('test -e {java_exec}'))
    Execute(format('mkdir -p {java_dir} ; chmod +x {jdk_curl_target}; cd {java_dir} ; echo A | {jdk_curl_target} -noregister > /dev/null 2>&1'), path=['/bin', '/usr/bin/'], not_if=format('test -e {java_exec}'))
    jce_curl_target = format('{artifact_dir}/{jce_policy_zip}')
    download_jce = format('mkdir -p {artifact_dir}; curl -kf --retry 10 {jce_location}/{jce_policy_zip} -o {jce_curl_target}')
    Execute(download_jce, path=['/bin', '/usr/bin/'], not_if=format('test -e {jce_curl_target}'), ignore_failures=True)
    security_dir = format('{java_home}/jre/lib/security')
    extract_cmd = format('rm -f local_policy.jar; rm -f US_export_policy.jar; unzip -o -j -q {jce_curl_target}')
    Execute(extract_cmd, only_if=format('test -e {security_dir} && test -f {jce_curl_target}'), cwd=security_dir, path=['/bin/', '/usr/bin'])
