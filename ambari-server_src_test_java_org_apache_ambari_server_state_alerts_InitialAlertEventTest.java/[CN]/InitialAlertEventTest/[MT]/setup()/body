{
  m_injector=Guice.createInjector(Modules.override(new InMemoryDefaultTestModule()).with(new MockModule()));
  m_injector.getInstance(GuiceJpaInitializer.class);
  m_listener=m_injector.getInstance(MockEventListener.class);
  m_alertsDao=m_injector.getInstance(AlertsDAO.class);
  m_eventPublisher=m_injector.getInstance(AlertEventPublisher.class);
  EventBus synchronizedBus=new EventBus();
  synchronizedBus.register(m_listener);
  synchronizedBus.register(m_injector.getInstance(AlertLifecycleListener.class));
  synchronizedBus.register(m_injector.getInstance(AlertServiceStateListener.class));
  synchronizedBus.register(m_injector.getInstance(AlertReceivedListener.class));
  Field field=AlertEventPublisher.class.getDeclaredField("m_eventBus");
  field.setAccessible(true);
  field.set(m_eventPublisher,synchronizedBus);
  m_definitionDao=m_injector.getInstance(AlertDefinitionDAO.class);
  m_clusters=m_injector.getInstance(Clusters.class);
  m_serviceFactory=m_injector.getInstance(ServiceFactory.class);
  m_metaInfo=m_injector.getInstance(AmbariMetaInfo.class);
  m_metaInfo.init();
  m_clusterName="c1";
  m_clusters.addCluster(m_clusterName);
  m_cluster=m_clusters.getCluster(m_clusterName);
  m_cluster.setDesiredStackVersion(new StackId("HDP","2.0.6"));
  Assert.assertNotNull(m_cluster);
  installHdfsService();
  Assert.assertEquals(1,m_cluster.getServices().size());
  Assert.assertEquals(6,m_definitionDao.findAll().size());
}
