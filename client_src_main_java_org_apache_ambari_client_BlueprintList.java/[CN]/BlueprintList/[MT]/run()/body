{
  parseCommandLine();
  ClientConfig config=new DefaultClientConfig();
  Client client=Client.create(config);
  WebResource service=client.resource(getBaseURI());
  String name=line.getOptionValue("name");
  boolean tree=line.hasOption("tree");
  if (name != null) {
    ClientResponse response=service.path("blueprints/" + name).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).get(ClientResponse.class);
    Blueprint blueprint=response.getEntity(Blueprint.class);
    printBlueprintInformation(blueprint,tree);
  }
 else {
    ClientResponse response=service.path("blueprints").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).get(ClientResponse.class);
    List<BlueprintInformation> bpInfos=response.getEntity(new GenericType<List<BlueprintInformation>>(){
    }
);
    for (    BlueprintInformation bpInfo : bpInfos) {
      printBlueprintInformation(bpInfo,tree);
    }
  }
}
