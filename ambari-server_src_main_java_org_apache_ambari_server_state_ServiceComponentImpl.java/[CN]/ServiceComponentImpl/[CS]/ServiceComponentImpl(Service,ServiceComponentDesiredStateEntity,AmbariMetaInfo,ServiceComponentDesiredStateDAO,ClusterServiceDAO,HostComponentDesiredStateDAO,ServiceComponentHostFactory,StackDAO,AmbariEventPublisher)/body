{
  this.service=service;
  this.serviceComponentDesiredStateDAO=serviceComponentDesiredStateDAO;
  this.clusterServiceDAO=clusterServiceDAO;
  this.serviceComponentHostFactory=serviceComponentHostFactory;
  this.stackDAO=stackDAO;
  this.eventPublisher=eventPublisher;
  this.ambariMetaInfo=ambariMetaInfo;
  desiredStateEntityId=serviceComponentDesiredStateEntity.getId();
  componentName=serviceComponentDesiredStateEntity.getComponentName();
  updateComponentInfo();
  for (  HostComponentStateEntity hostComponentStateEntity : serviceComponentDesiredStateEntity.getHostComponentStateEntities()) {
    HostComponentDesiredStateEntityPK pk=new HostComponentDesiredStateEntityPK();
    pk.setClusterId(hostComponentStateEntity.getClusterId());
    pk.setServiceName(hostComponentStateEntity.getServiceName());
    pk.setComponentName(hostComponentStateEntity.getComponentName());
    pk.setHostId(hostComponentStateEntity.getHostId());
    HostComponentDesiredStateEntity hostComponentDesiredStateEntity=hostComponentDesiredStateDAO.findByPK(pk);
    try {
      hostComponents.put(hostComponentStateEntity.getHostName(),serviceComponentHostFactory.createExisting(this,hostComponentStateEntity,hostComponentDesiredStateEntity));
    }
 catch (    ProvisionException ex) {
      StackId currentStackId=service.getCluster().getCurrentStackVersion();
      LOG.error(String.format("Can not get host component info: stackName=%s, stackVersion=%s, serviceName=%s, componentName=%s, hostname=%s",currentStackId.getStackName(),currentStackId.getStackVersion(),service.getName(),serviceComponentDesiredStateEntity.getComponentName(),hostComponentStateEntity.getHostName()));
      ex.printStackTrace();
    }
  }
}
