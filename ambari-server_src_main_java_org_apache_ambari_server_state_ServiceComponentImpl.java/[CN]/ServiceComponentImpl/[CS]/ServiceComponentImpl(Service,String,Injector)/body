{
  injector.injectMembers(this);
  this.clusterGlobalLock=service.getClusterGlobalLock();
  this.service=service;
  this.desiredStateEntity=new ServiceComponentDesiredStateEntity();
  desiredStateEntity.setComponentName(componentName);
  desiredStateEntity.setDesiredState(State.INIT);
  setDesiredStackVersion(service.getDesiredStackVersion());
  this.hostComponents=new HashMap<String,ServiceComponentHost>();
  StackId stackId=service.getDesiredStackVersion();
  try {
    ComponentInfo compInfo=ambariMetaInfo.getComponent(stackId.getStackName(),stackId.getStackVersion(),service.getName(),componentName);
    this.isClientComponent=compInfo.isClient();
    this.isMasterComponent=compInfo.isMaster();
  }
 catch (  ObjectNotFoundException e) {
    throw new RuntimeException("Trying to create a ServiceComponent" + " not recognized in stack info" + ", clusterName=" + service.getCluster().getClusterName() + ", serviceName="+ service.getName()+ ", componentName="+ componentName+ ", stackInfo="+ stackId.getStackId());
  }
  init();
}
