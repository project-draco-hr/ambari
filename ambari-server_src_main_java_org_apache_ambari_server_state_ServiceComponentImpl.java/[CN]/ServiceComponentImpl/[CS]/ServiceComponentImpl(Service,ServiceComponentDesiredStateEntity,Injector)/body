{
  this.injector=injector;
  injector.injectMembers(this);
  this.service=service;
  this.desiredStateEntity=serviceComponentDesiredStateEntity;
  this.configs=new HashMap<String,Config>();
  this.desiredConfigs=new HashMap<String,Config>();
  this.hostComponents=new HashMap<String,ServiceComponentHost>();
  for (  HostComponentStateEntity hostComponentStateEntity : desiredStateEntity.getHostComponentStateEntities()) {
    HostComponentDesiredStateEntityPK pk=new HostComponentDesiredStateEntityPK();
    pk.setClusterId(hostComponentStateEntity.getClusterId());
    pk.setServiceName(hostComponentStateEntity.getServiceName());
    pk.setComponentName(hostComponentStateEntity.getComponentName());
    pk.setHostName(hostComponentStateEntity.getHostName());
    HostComponentDesiredStateEntity hostComponentDesiredStateEntity=hostComponentDesiredStateDAO.findByPK(pk);
    hostComponents.put(hostComponentStateEntity.getComponentName(),serviceComponentHostFactory.createExisting(this,hostComponentStateEntity,hostComponentDesiredStateEntity));
  }
  persisted=true;
}
