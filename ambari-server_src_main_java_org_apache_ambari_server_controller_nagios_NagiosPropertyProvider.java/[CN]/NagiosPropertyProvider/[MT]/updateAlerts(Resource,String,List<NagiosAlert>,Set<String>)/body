{
  if (null == allAlerts || 0 == allAlerts.size())   return;
  int ok=0;
  int warning=0;
  int critical=0;
  List<Map<String,Object>> alerts=new ArrayList<Map<String,Object>>();
  for (  NagiosAlert alert : allAlerts) {
    boolean match=false;
switch (resourceType.getInternalType()) {
case Service:
      match=alert.getService().equals(matchValue);
    break;
case Host:
  match=alert.getHost().equals(matchValue);
break;
default :
break;
}
if (match) {
switch (alert.getStatus()) {
case 0:
ok++;
break;
case 1:
warning++;
break;
case 2:
critical++;
break;
default :
break;
}
Map<String,Object> map=new LinkedHashMap<String,Object>();
map.put("description",alert.getDescription());
map.put("host_name",alert.getHost());
map.put("last_status",NagiosAlert.getStatusString(alert.getLastStatus()));
map.put("last_status_time",Long.valueOf(alert.getLastStatusTime()));
map.put("service_name",alert.getService());
map.put("status",NagiosAlert.getStatusString(alert.getStatus()));
map.put("status_time",Long.valueOf(alert.getStatusTime()));
map.put("output",alert.getOutput());
alerts.add(map);
}
}
setResourceProperty(res,ALERT_SUMMARY_OK_PROPERTY_ID,Integer.valueOf(ok),requestedIds);
setResourceProperty(res,ALERT_SUMMARY_WARNING_PROPERTY_ID,Integer.valueOf(warning),requestedIds);
setResourceProperty(res,ALERT_SUMMARY_CRITICAL_PROPERTY_ID,Integer.valueOf(critical),requestedIds);
if (!alerts.isEmpty()) setResourceProperty(res,ALERT_DETAIL_PROPERTY_ID,alerts,requestedIds);
}
