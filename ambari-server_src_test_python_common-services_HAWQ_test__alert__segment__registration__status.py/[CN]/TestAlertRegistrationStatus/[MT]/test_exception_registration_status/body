@patch('alert_segment_registration_status.get_segment_list_db')
@patch('alert_segment_registration_status.get_segment_list_ambari')
@patch('os.path.isfile', return_value=True)
def test_exception_registration_status(self, os_path_isfile_mock, get_segment_list_ambari_mock, get_segment_list_db_mock):
    '\n    Check if the status is UNKNOWN if an exception is thrown when finding registration segment number and slaves count.\n    '
    get_segment_list_ambari_mock.return_value = self.HOST_LIST_A
    get_segment_list_db_mock.side_effect = Exception('Exception raised to fail')
    configs = {'{{hawq-site/hawq_master_address_port}}': '5432', }
    [status, messages] = alert_segment_registration_status.execute(configurations=configs)
    self.assertEqual(status, RESULT_STATE_UNKNOWN)
    self.assertTrue(((messages is not None) and (len(messages) == 1)))
    self.assertEqual(messages[0], 'HAWQ Segments Registration Status cannot be determined.')
