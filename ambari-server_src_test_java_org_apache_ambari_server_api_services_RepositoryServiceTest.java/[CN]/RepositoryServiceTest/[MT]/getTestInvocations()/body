{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  RepositoryService service;
  Method m;
  Object[] args;
  service=new TestRepositoryService();
  m=service.getClass().getMethod("createRepository",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,service,m,args,"body"));
  service=new TestRepositoryService();
  m=service.getClass().getMethod("createRepository",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"HDP-2.2"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,service,m,args,"body"));
  service=new TestRepositoryService();
  m=service.getClass().getMethod("getRepositories",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestRepositoryService();
  m=service.getClass().getMethod("getRepository",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"HDP-2.2"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestRepositoryService();
  m=service.getClass().getMethod("updateRepository",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"HDP-2.2"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,service,m,args,"body"));
  return listInvocations;
}
