{
  NodeImpl node=new NodeImpl();
  registerNode(node);
  verifyNode(node);
  long counter=0;
  sendHealthyHeartbeat(node,++counter);
  verifyNodeState(node,NodeState.HEALTHY);
  Assert.assertEquals(node.getLastHeartbeatTime(),counter);
  sendHealthyHeartbeat(node,++counter);
  verifyNodeState(node,NodeState.HEALTHY);
  Assert.assertEquals(node.getLastHeartbeatTime(),counter);
  sendUnhealthyHeartbeat(node,++counter);
  verifyNodeState(node,NodeState.UNHEALTHY);
  Assert.assertEquals(node.getLastHeartbeatTime(),counter);
  sendUnhealthyHeartbeat(node,++counter);
  verifyNodeState(node,NodeState.UNHEALTHY);
  Assert.assertEquals(node.getLastHeartbeatTime(),counter);
  sendHealthyHeartbeat(node,++counter);
  verifyNodeState(node,NodeState.HEALTHY);
  Assert.assertEquals(node.getLastHeartbeatTime(),counter);
  timeoutNode(node);
  verifyNodeState(node,NodeState.HEARTBEAT_LOST);
  Assert.assertEquals(node.getLastHeartbeatTime(),counter);
  timeoutNode(node);
  verifyNodeState(node,NodeState.HEARTBEAT_LOST);
  Assert.assertEquals(node.getLastHeartbeatTime(),counter);
  sendUnhealthyHeartbeat(node,++counter);
  verifyNodeState(node,NodeState.UNHEALTHY);
  Assert.assertEquals(node.getLastHeartbeatTime(),counter);
  timeoutNode(node);
  verifyNodeState(node,NodeState.HEARTBEAT_LOST);
  Assert.assertEquals(node.getLastHeartbeatTime(),counter);
  sendHealthyHeartbeat(node,++counter);
  verifyNodeState(node,NodeState.HEALTHY);
  Assert.assertEquals(node.getLastHeartbeatTime(),counter);
}
