def __init__(self, cache_dir, recovery_enabled=False, auto_start_only=False):
    self.recovery_enabled = recovery_enabled
    self.auto_start_only = auto_start_only
    self.max_count = 6
    self.window_in_min = 60
    self.retry_gap = 5
    self.max_lifetime_count = 12
    self.stored_exec_commands = {}
    self.id = int(time.time())
    self.allowed_desired_states = [self.STARTED, self.INSTALLED]
    self.allowed_current_states = [self.INIT, self.INSTALLED]
    self.enabled_components = []
    self.statuses = {}
    self.__status_lock = threading.RLock()
    self.__command_lock = threading.RLock()
    self.__active_command_lock = threading.RLock()
    self.__cache_lock = threading.RLock()
    self.active_command_count = 0
    self.paused = False
    if (not os.path.exists(cache_dir)):
        try:
            os.makedirs(cache_dir)
        except:
            logger.critical('[RecoveryManager] Could not create the cache directory {0}'.format(cache_dir))
    self.__actions_json_file = os.path.join(cache_dir, self.FILENAME)
    self.actions = {}
    self.update_config(6, 60, 5, 12, recovery_enabled, auto_start_only, '')
    pass
