def update_configuration_from_registration(self, reg_resp):
    '\n    TODO: Server sends the recovery configuration - call update_config after parsing\n    "recoveryConfig": {\n      "type" : "DEFAULT|AUTO_START|FULL",\n      "maxCount" : 10,\n      "windowInMinutes" : 60,\n      "retryGap" : 0 }\n    '
    recovery_enabled = False
    auto_start_only = True
    max_count = 6
    window_in_min = 60
    retry_gap = 5
    max_lifetime_count = 12
    if (reg_resp and ('recoveryConfig' in reg_resp)):
        config = reg_resp['recoveryConfig']
        if ('type' in config):
            if (config['type'] in ['AUTO_START', 'FULL']):
                recovery_enabled = True
                if (config['type'] == 'FULL'):
                    auto_start_only = False
        if ('maxCount' in config):
            max_count = self._read_int_(config['maxCount'], max_count)
        if ('windowInMinutes' in config):
            window_in_min = self._read_int_(config['windowInMinutes'], window_in_min)
        if ('retryGap' in config):
            retry_gap = self._read_int_(config['retryGap'], retry_gap)
        if ('maxLifetimeCount' in config):
            max_lifetime_count = self._read_int_(config['maxLifetimeCount'], max_lifetime_count)
    self.update_config(max_count, window_in_min, retry_gap, max_lifetime_count, recovery_enabled, auto_start_only)
    pass
