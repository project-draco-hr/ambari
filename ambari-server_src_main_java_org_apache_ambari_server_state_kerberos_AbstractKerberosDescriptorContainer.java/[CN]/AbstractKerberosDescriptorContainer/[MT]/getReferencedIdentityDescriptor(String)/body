{
  KerberosIdentityDescriptor identityDescriptor=null;
  if (path != null) {
    if (path.startsWith("../")) {
      AbstractKerberosDescriptor parent=getParent();
      path=path.substring(2);
      while (parent != null) {
        String name=parent.getName();
        if (name != null) {
          path=String.format("/%s",name) + path;
        }
        parent=parent.getParent();
      }
    }
    if (path.startsWith("/")) {
      String[] pathParts=path.split("/");
      String serviceName=null;
      String componentName=null;
      String identityName;
switch (pathParts.length) {
case 4:
        serviceName=pathParts[1];
      componentName=pathParts[2];
    identityName=pathParts[3];
  break;
case 3:
serviceName=pathParts[1];
identityName=pathParts[2];
break;
case 2:
identityName=pathParts[1];
break;
case 1:
identityName=pathParts[0];
break;
default :
throw new AmbariException(String.format("Unexpected path length in %s",path));
}
if (identityName != null) {
AbstractKerberosDescriptor descriptor=getRoot();
if (descriptor != null) {
if ((serviceName != null) && !serviceName.isEmpty()) {
descriptor=descriptor.getDescriptor(KerberosDescriptorType.SERVICE,serviceName);
if ((descriptor != null) && (componentName != null) && !componentName.isEmpty()) {
descriptor=descriptor.getDescriptor(KerberosDescriptorType.COMPONENT,componentName);
}
}
if (descriptor != null) {
descriptor=descriptor.getDescriptor(KerberosDescriptorType.IDENTITY,identityName);
if (descriptor instanceof KerberosIdentityDescriptor) {
identityDescriptor=(KerberosIdentityDescriptor)descriptor;
}
}
}
}
}
}
return identityDescriptor;
}
