{
  if (includeInherited) {
    Map<String,KerberosConfigurationDescriptor> mergedConfigurations=new HashMap<String,KerberosConfigurationDescriptor>();
    List<Map<String,KerberosConfigurationDescriptor>> configurationSets=new ArrayList<Map<String,KerberosConfigurationDescriptor>>();
    AbstractKerberosDescriptor currentDescriptor=this;
    while (currentDescriptor != null) {
      if (currentDescriptor.isContainer()) {
        Map<String,KerberosConfigurationDescriptor> configurations=((AbstractKerberosDescriptorContainer)currentDescriptor).getConfigurations();
        if (configurations != null) {
          configurationSets.add(configurations);
        }
      }
      currentDescriptor=currentDescriptor.getParent();
    }
    Collections.reverse(configurationSets);
    for (    Map<String,KerberosConfigurationDescriptor> map : configurationSets) {
      for (      Map.Entry<String,KerberosConfigurationDescriptor> entry : map.entrySet()) {
        String currentType=entry.getKey();
        KerberosConfigurationDescriptor currentConfiguration=entry.getValue();
        if (currentConfiguration != null) {
          KerberosConfigurationDescriptor detachedConfiguration=new KerberosConfigurationDescriptor(currentConfiguration.toMap());
          KerberosConfigurationDescriptor mergedConfiguration=mergedConfigurations.get(entry.getKey());
          if (mergedConfiguration == null) {
            mergedConfigurations.put(currentType,detachedConfiguration);
          }
 else {
            mergedConfiguration.update(detachedConfiguration);
          }
        }
      }
    }
    return mergedConfigurations;
  }
 else {
    return configurations;
  }
}
