{
  Condition condition=new DefaultCondition(Arrays.asList("cpu_user","mem_free"),Arrays.asList("h1","h2"),"a1","i1",null,null,null,null,false);
  Connection connection=createNiceMock(Connection.class);
  PreparedStatement preparedStatement=createNiceMock(PreparedStatement.class);
  ParameterMetaData parameterMetaData=createNiceMock(ParameterMetaData.class);
  Capture<String> stmtCapture=new Capture<String>();
  expect(connection.prepareStatement(EasyMock.and(EasyMock.anyString(),EasyMock.capture(stmtCapture)))).andReturn(preparedStatement);
  expect(preparedStatement.getParameterMetaData()).andReturn(parameterMetaData).once();
  expect(parameterMetaData.getParameterCount()).andReturn(6).once();
  replay(connection,preparedStatement,parameterMetaData);
  PhoenixTransactSQL.prepareGetLatestMetricSqlStmt(connection,condition);
  String stmt=stmtCapture.getValue();
  Assert.assertTrue(stmt.contains("FROM METRIC_RECORD"));
  Assert.assertTrue(stmt.contains("JOIN"));
  verify(connection,preparedStatement,parameterMetaData);
}
