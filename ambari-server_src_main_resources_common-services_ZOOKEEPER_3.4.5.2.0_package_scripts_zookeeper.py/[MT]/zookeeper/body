def zookeeper(type=None):
    import params
    Directory(params.config_dir, owner=params.zk_user, recursive=True, group=params.user_group)
    File(format('{config_dir}/zookeeper-env.sh'), content=InlineTemplate(params.zk_env_sh_template), owner=params.zk_user, group=params.user_group)
    configFile('zoo.cfg', template_name='zoo.cfg.j2')
    configFile('configuration.xsl', template_name='configuration.xsl.j2')
    Directory(params.zk_pid_dir, owner=params.zk_user, recursive=True, group=params.user_group)
    Directory(params.zk_log_dir, owner=params.zk_user, recursive=True, group=params.user_group)
    Directory(params.zk_data_dir, owner=params.zk_user, recursive=True, cd_access='a', group=params.user_group)
    if (type == 'server'):
        myid = str((sorted(params.zookeeper_hosts).index(params.hostname) + 1))
        File(format('{zk_data_dir}/myid'), mode=420, content=myid)
    if (params.log4j_props != None):
        File(format('{params.config_dir}/log4j.properties'), mode=420, group=params.user_group, owner=params.zk_user, content=params.log4j_props)
    elif os.path.exists(format('{params.config_dir}/log4j.properties')):
        File(format('{params.config_dir}/log4j.properties'), mode=420, group=params.user_group, owner=params.zk_user)
    if params.security_enabled:
        if (type == 'server'):
            configFile('zookeeper_jaas.conf', template_name='zookeeper_jaas.conf.j2')
            configFile('zookeeper_client_jaas.conf', template_name='zookeeper_client_jaas.conf.j2')
        else:
            configFile('zookeeper_client_jaas.conf', template_name='zookeeper_client_jaas.conf.j2')
    File(format('{config_dir}/zoo_sample.cfg'), owner=params.zk_user, group=params.user_group)
