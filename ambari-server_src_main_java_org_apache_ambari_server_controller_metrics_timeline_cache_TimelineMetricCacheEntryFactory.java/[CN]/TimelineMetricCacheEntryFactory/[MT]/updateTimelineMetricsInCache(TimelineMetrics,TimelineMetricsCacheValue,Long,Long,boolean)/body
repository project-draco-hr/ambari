{
  TimelineMetrics existingTimelineMetrics=timelineMetricsCacheValue.getTimelineMetrics();
  updateExistingMetricValues(existingTimelineMetrics,requestedStartTime,requestedEndTime,removeAll);
  if (newMetrics != null && !newMetrics.getMetrics().isEmpty()) {
    for (    TimelineMetric timelineMetric : newMetrics.getMetrics()) {
      if (LOG.isTraceEnabled()) {
        TreeMap<Long,Double> sortedMetrics=new TreeMap<Long,Double>(timelineMetric.getMetricValues());
        LOG.trace("New metric: " + timelineMetric.getMetricName() + " # "+ timelineMetric.getMetricValues().size()+ ", startTime = "+ sortedMetrics.firstKey()+ ", endTime = "+ sortedMetrics.lastKey());
      }
      TimelineMetric existingMetric=null;
      for (      TimelineMetric metric : existingTimelineMetrics.getMetrics()) {
        if (metric.equalsExceptTime(timelineMetric)) {
          existingMetric=metric;
        }
      }
      if (existingMetric != null) {
        existingMetric.getMetricValues().putAll(timelineMetric.getMetricValues());
        if (LOG.isTraceEnabled()) {
          TreeMap<Long,Double> sortedMetrics=new TreeMap<Long,Double>(existingMetric.getMetricValues());
          LOG.trace("Merged metric: " + timelineMetric.getMetricName() + ", "+ "Final size: "+ existingMetric.getMetricValues().size()+ ", startTime = "+ sortedMetrics.firstKey()+ ", endTime = "+ sortedMetrics.lastKey());
        }
      }
 else {
        existingTimelineMetrics.getMetrics().add(timelineMetric);
      }
    }
  }
}
