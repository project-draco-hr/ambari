{
  Set<Resource> resources=new LinkedHashSet<Resource>();
  for (  Map<String,Object> properties : getPropertyMaps(predicate)) {
    String quickLinksFileName=(String)properties.get(QUICKLINK_FILE_NAME_PROPERTY_ID);
    String stackName=(String)properties.get(STACK_NAME_PROPERTY_ID);
    String stackVersion=(String)properties.get(STACK_VERSION_PROPERTY_ID);
    String stackService=(String)properties.get(STACK_SERVICE_NAME_PROPERTY_ID);
    StackInfo stackInfo;
    try {
      stackInfo=getManagementController().getAmbariMetaInfo().getStack(stackName,stackVersion);
    }
 catch (    AmbariException e) {
      throw new NoSuchParentResourceException(String.format("Parent stack resource doesn't exist: stackName='%s', stackVersion='%s'",stackName,stackVersion));
    }
    List<ServiceInfo> serviceInfoList=new ArrayList<ServiceInfo>();
    if (stackService == null) {
      serviceInfoList.addAll(stackInfo.getServices());
    }
 else {
      ServiceInfo service=stackInfo.getService(stackService);
      if (service == null) {
        throw new NoSuchParentResourceException(String.format("Parent stack/service resource doesn't exist: stackName='%s', stackVersion='%s', serviceName='%s'",stackName,stackVersion,stackService));
      }
      serviceInfoList.add(service);
    }
    for (    ServiceInfo serviceInfo : serviceInfoList) {
      List<QuickLinksConfigurationInfo> serviceQuickLinks=new ArrayList<QuickLinksConfigurationInfo>();
      if (quickLinksFileName != null) {
        LOG.debug("Getting quick links from service {}, quick links = {}",serviceInfo.getName(),serviceInfo.getQuickLinksConfigurationsMap());
        serviceQuickLinks.add(serviceInfo.getQuickLinksConfigurationsMap().get(quickLinksFileName));
      }
 else {
        for (        QuickLinksConfigurationInfo quickLinksConfigurationInfo : serviceInfo.getQuickLinksConfigurationsMap().values()) {
          if (quickLinksConfigurationInfo.getIsDefault()) {
            serviceQuickLinks.add(0,quickLinksConfigurationInfo);
          }
 else {
            serviceQuickLinks.add(quickLinksConfigurationInfo);
          }
        }
      }
      List<Resource> serviceResources=new ArrayList<Resource>();
      for (      QuickLinksConfigurationInfo quickLinksConfigurationInfo : serviceQuickLinks) {
        Resource resource=new ResourceImpl(Resource.Type.QuickLink);
        Set<String> requestedIds=getRequestPropertyIds(request,predicate);
        setResourceProperty(resource,QUICKLINK_FILE_NAME_PROPERTY_ID,quickLinksConfigurationInfo.getFileName(),requestedIds);
        setResourceProperty(resource,QUICKLINK_DATA_PROPERTY_ID,quickLinksConfigurationInfo.getQuickLinksConfigurationMap(),requestedIds);
        setResourceProperty(resource,QUICKLINK_DEFAULT_PROPERTY_ID,quickLinksConfigurationInfo.getIsDefault(),requestedIds);
        setResourceProperty(resource,STACK_NAME_PROPERTY_ID,stackName,requestedIds);
        setResourceProperty(resource,STACK_VERSION_PROPERTY_ID,stackVersion,requestedIds);
        setResourceProperty(resource,STACK_SERVICE_NAME_PROPERTY_ID,serviceInfo.getName(),requestedIds);
        serviceResources.add(resource);
      }
      resources.addAll(serviceResources);
    }
  }
  return resources;
}
