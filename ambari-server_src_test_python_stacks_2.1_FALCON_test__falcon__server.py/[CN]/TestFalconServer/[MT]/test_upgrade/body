@patch('os.path.isdir')
@patch('os.path.exists')
@patch('os.path.isfile')
def test_upgrade(self, isfile_mock, exists_mock, isdir_mock):
    isdir_mock.return_value = True
    exists_mock.side_effect = [False, False, True, True]
    isfile_mock.return_value = True
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/falcon_server.py'), classname='FalconServer', command='restart', config_file='falcon-upgrade.json', hdp_stack_version=self.UPGRADE_STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    self.assertResourceCalled('Execute', '/usr/hdp/current/falcon-server/bin/falcon-stop', path=['/usr/hdp/current/hadoop-client/bin'], user='falcon', environment={'HADOOP_HOME': '/usr/hdp/current/hadoop-client', })
    self.assertResourceCalled('File', '/var/run/falcon/falcon.pid', action=['delete'])
    self.assertResourceCalled('Execute', ('tar', '-zcvhf', '/tmp/falcon-upgrade-backup/falcon-conf-backup.tar', '/usr/hdp/current/falcon-server/conf'), sudo=True)
    self.assertResourceCalled('Execute', ('tar', '-zcvhf', '/tmp/falcon-upgrade-backup/falcon-local-backup.tar', u'/hadoop/falcon'), sudo=True)
    self.assertResourceCalled('Execute', ('hdp-select', 'set', 'falcon-server', u'2.2.1.0-2135'), sudo=True)
    self.assertResourceCalled('Execute', ('tar', '-xvf', '/tmp/falcon-upgrade-backup/falcon-conf-backup.tar', '-C', '/usr/hdp/current/falcon-server/conf/'), sudo=True)
    self.assertResourceCalled('Execute', ('tar', '-xvf', '/tmp/falcon-upgrade-backup/falcon-local-backup.tar', '-C', u'/hadoop/falcon/'), sudo=True)
    self.assertResourceCalled('Directory', '/tmp/falcon-upgrade-backup', action=['delete'])
    self.assertResourceCalled('Directory', '/var/run/falcon', owner='falcon', recursive=True)
    self.assertResourceCalled('Directory', '/var/log/falcon', owner='falcon', recursive=True)
    self.assertResourceCalled('Directory', '/usr/hdp/current/falcon-server/webapp', owner='falcon', recursive=True)
    self.assertResourceCalled('Directory', '/usr/hdp/current/falcon-server', owner='falcon', recursive=True)
    self.assertResourceCalled('Directory', '/etc/falcon', recursive=True, mode=493)
    self.assertResourceCalled('Directory', '/usr/hdp/current/falcon-server/conf', owner='falcon', recursive=True)
    self.assertResourceCalled('File', '/usr/hdp/current/falcon-server/conf/falcon-env.sh', owner='falcon', content=InlineTemplate(self.getConfig()['configurations']['falcon-env']['content']), group='hadoop')
    self.assertResourceCalled('File', '/usr/hdp/current/falcon-server/conf/client.properties', owner='falcon', content=Template('client.properties.j2'), mode=420)
    self.assertResourceCalled('PropertiesFile', '/usr/hdp/current/falcon-server/conf/runtime.properties', owner='falcon', mode=420, properties={u'*.domain': u'${falcon.app.type}', u'*.log.cleanup.frequency.days.retention': u'days(7)', u'*.log.cleanup.frequency.hours.retention': u'minutes(1)', u'*.log.cleanup.frequency.minutes.retention': u'hours(6)', u'*.log.cleanup.frequency.months.retention': u'months(3)', })
    self.assertResourceCalled('PropertiesFile', '/usr/hdp/current/falcon-server/conf/startup.properties', owner='falcon', mode=420, properties=self.getConfig()['configurations']['falcon-startup.properties'])
    self.assertResourceCalled('Directory', '/hadoop/falcon/data/lineage/graphdb', owner='falcon', recursive=True, group='hadoop', mode=509, cd_access='a')
    self.assertResourceCalled('Directory', '/hadoop/falcon/data/lineage', owner='falcon', recursive=True, group='hadoop', mode=509, cd_access='a')
    self.assertResourceCalled('Directory', '/hadoop/falcon/store', owner='falcon', recursive=True)
    self.assertResourceCalled('HdfsResource', '/apps/falcon', security_enabled=False, hadoop_bin_dir='/usr/hdp/current/hadoop-client/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', hdfs_site=self.getConfig()['configurations']['hdfs-site'], kinit_path_local='/usr/bin/kinit', principal_name=UnknownConfigurationMock(), user='hdfs', dfs_type='', owner='falcon', hadoop_conf_dir='/usr/hdp/current/hadoop-client/conf', type='directory', action=['create_on_execute'], mode=511)
    self.assertResourceCalled('Directory', '/hadoop/falcon/store', owner='falcon', recursive=True)
    self.assertResourceCalled('HdfsResource', '/apps/data-mirroring', security_enabled=False, hadoop_bin_dir='/usr/hdp/current/hadoop-client/bin', keytab=UnknownConfigurationMock(), source='/usr/hdp/current/falcon-server/data-mirroring', default_fs='hdfs://c6401.ambari.apache.org:8020', user='hdfs', dfs_type='', hdfs_site=self.getConfig()['configurations']['hdfs-site'], kinit_path_local='/usr/bin/kinit', principal_name=UnknownConfigurationMock(), recursive_chmod=True, recursive_chown=True, owner='falcon', group='users', hadoop_conf_dir='/usr/hdp/current/hadoop-client/conf', type='directory', action=['create_on_execute'], mode=504)
    self.assertResourceCalled('HdfsResource', None, security_enabled=False, hadoop_bin_dir='/usr/hdp/current/hadoop-client/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', hdfs_site=self.getConfig()['configurations']['hdfs-site'], kinit_path_local='/usr/bin/kinit', principal_name=UnknownConfigurationMock(), user='hdfs', dfs_type='', action=['execute'], hadoop_conf_dir='/usr/hdp/current/hadoop-client/conf')
    self.assertResourceCalled('Directory', '/hadoop/falcon', owner='falcon', recursive=True, cd_access='a')
    self.assertResourceCalled('Directory', '/hadoop/falcon/embeddedmq', owner='falcon', recursive=True)
    self.assertResourceCalled('Directory', '/hadoop/falcon/embeddedmq/data', owner='falcon', recursive=True)
    self.assertResourceCalled('Execute', '/usr/hdp/current/falcon-server/bin/falcon-start -port 15000', environment={'HADOOP_HOME': '/usr/hdp/current/hadoop-client', }, path=['/usr/hdp/current/hadoop-client/bin'], user='falcon')
    self.assertNoMoreResources()
