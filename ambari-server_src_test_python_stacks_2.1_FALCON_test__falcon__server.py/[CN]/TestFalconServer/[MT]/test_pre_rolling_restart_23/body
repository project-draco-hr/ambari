@patch('os.path.isfile', new=MagicMock(return_value=True))
@patch.object(tarfile, 'open')
@patch.object(shutil, 'rmtree')
@patch('resource_management.core.shell.call')
def test_pre_rolling_restart_23(self, tarfile_open_mock, rmtree_mock, call_mock):
    config_file = (self.get_src_folder() + '/test/python/stacks/2.2/configs/falcon-upgrade.json')
    with open(config_file, 'r') as f:
        json_content = json.load(f)
    version = '2.3.0.0-1234'
    json_content['commandParams']['version'] = version
    mocks_dict = {}
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/falcon_server.py'), classname='FalconServer', command='pre_rolling_restart', config_dict=json_content, hdp_stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES, call_mocks=[(0, None), (0, None)], mocks_dict=mocks_dict)
    self.assertResourceCalled('Execute', ('ambari-python-wrap', 'hdp-select', 'set', 'falcon-server', version), sudo=True)
    self.assertResourceCalled('Execute', ('tar', '-xvf', '/tmp/falcon-upgrade-backup/falcon-conf-backup.tar', '-C', '/usr/hdp/current/falcon-server/conf/'), sudo=True)
    self.assertResourceCalled('Execute', ('tar', '-xvf', '/tmp/falcon-upgrade-backup/falcon-local-backup.tar', '-C', u'/hadoop/falcon/'), sudo=True)
    self.assertResourceCalled('Directory', '/tmp/falcon-upgrade-backup', action=['delete'])
    self.assertNoMoreResources()
    self.assertEquals(1, mocks_dict['call'].call_count)
    self.assertEquals(1, mocks_dict['checked_call'].call_count)
    self.assertEquals(('conf-select', 'set-conf-dir', '--package', 'falcon', '--stack-version', '2.3.0.0-1234', '--conf-version', '0'), mocks_dict['checked_call'].call_args_list[0][0][0])
    self.assertEquals(('conf-select', 'create-conf-dir', '--package', 'falcon', '--stack-version', '2.3.0.0-1234', '--conf-version', '0'), mocks_dict['call'].call_args_list[0][0][0])
