def assert_configure_default(self):
    self.assertResourceCalled('Directory', '/var/run/falcon', owner='falcon')
    self.assertResourceCalled('Directory', '/var/log/falcon', owner='falcon')
    self.assertResourceCalled('Directory', '/var/lib/falcon/webapp', owner='falcon')
    self.assertResourceCalled('File', '/etc/falcon/conf/falcon-env.sh', content=Template('falcon-env.sh.j2'))
    self.assertResourceCalled('File', '/etc/falcon/conf/client.properties', content=Template('client.properties.j2'), mode=420)
    self.assertResourceCalled('PropertiesFile', '/etc/falcon/conf/runtime.properties', mode=420, properties=self.getConfig()['configurations']['falcon-runtime.properties'])
    self.assertResourceCalled('PropertiesFile', '/etc/falcon/conf/startup.properties', mode=420, properties=self.getConfig()['configurations']['falcon-startup.properties'])
    self.assertResourceCalled('HdfsDirectory', '/apps/falcon', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', mode=511, owner='falcon', action=['create_delayed'])
    self.assertResourceCalled('HdfsDirectory', None, security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', hdfs_user='hdfs', kinit_path_local='/usr/bin/kinit', action=['create'])
    self.assertResourceCalled('Directory', '/hadoop/falcon', owner='falcon', recursive=True)
    self.assertResourceCalled('Directory', '/hadoop/falcon/activemq', owner='falcon', recursive=True)
