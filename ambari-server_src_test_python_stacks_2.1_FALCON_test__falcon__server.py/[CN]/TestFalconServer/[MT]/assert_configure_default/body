def assert_configure_default(self):
    self.assertResourceCalled('Directory', '/var/run/falcon', owner='falcon', recursive=True, cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/var/log/falcon', owner='falcon', recursive=True, cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/var/lib/falcon/webapp', owner='falcon', recursive=True)
    self.assertResourceCalled('Directory', '/usr/lib/falcon', owner='falcon', recursive=True)
    self.assertResourceCalled('Directory', '/etc/falcon', mode=493, recursive=True)
    self.assertResourceCalled('Directory', '/etc/falcon/conf', owner='falcon', recursive=True)
    self.assertResourceCalled('File', '/etc/falcon/conf/falcon-env.sh', content=InlineTemplate(self.getConfig()['configurations']['falcon-env']['content']), owner='falcon', group='hadoop')
    self.assertResourceCalled('File', '/etc/falcon/conf/client.properties', content=Template('client.properties.j2'), mode=420, owner='falcon')
    self.assertResourceCalled('PropertiesFile', '/etc/falcon/conf/runtime.properties', mode=420, properties=self.getConfig()['configurations']['falcon-runtime.properties'], owner='falcon')
    self.assertResourceCalled('PropertiesFile', '/etc/falcon/conf/startup.properties', mode=420, properties=self.getConfig()['configurations']['falcon-startup.properties'], owner='falcon')
    self.assertResourceCalled('Directory', '/hadoop/falcon/store', owner='falcon', recursive=True)
    self.assertResourceCalled('HdfsResource', '/apps/falcon', security_enabled=False, hadoop_bin_dir='/usr/bin', keytab=UnknownConfigurationMock(), kinit_path_local='/usr/bin/kinit', user='hdfs', dfs_type='', owner='falcon', hadoop_conf_dir='/etc/hadoop/conf', type='directory', action=['create_on_execute'], hdfs_site=self.getConfig()['configurations']['hdfs-site'], principal_name=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', mode=511)
    self.assertResourceCalled('Directory', '/hadoop/falcon/store', owner='falcon', recursive=True)
    self.assertResourceCalled('HdfsResource', '/apps/data-mirroring', security_enabled=False, hadoop_bin_dir='/usr/bin', keytab=UnknownConfigurationMock(), kinit_path_local='/usr/bin/kinit', user='hdfs', dfs_type='', owner='falcon', group='users', hadoop_conf_dir='/etc/hadoop/conf', type='directory', recursive_chown=True, recursive_chmod=True, action=['create_on_execute'], hdfs_site=self.getConfig()['configurations']['hdfs-site'], principal_name=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', mode=504, source='/usr/hdp/current/falcon-server/data-mirroring')
    self.assertResourceCalled('HdfsResource', None, security_enabled=False, hadoop_bin_dir='/usr/bin', keytab=UnknownConfigurationMock(), kinit_path_local='/usr/bin/kinit', user='hdfs', dfs_type='', action=['execute'], hdfs_site=self.getConfig()['configurations']['hdfs-site'], principal_name=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', hadoop_conf_dir='/etc/hadoop/conf')
    self.assertResourceCalled('Directory', '/hadoop/falcon', owner='falcon', recursive=True, cd_access='a')
    self.assertResourceCalled('Directory', '/hadoop/falcon/embeddedmq', owner='falcon', recursive=True)
    self.assertResourceCalled('Directory', '/hadoop/falcon/embeddedmq/data', owner='falcon', recursive=True)
