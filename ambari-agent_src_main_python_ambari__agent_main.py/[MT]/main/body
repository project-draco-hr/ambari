def main():
    global config
    parser = OptionParser()
    parser.add_option('-v', '--verbose', dest='verbose', action='store_true', help='verbose log output', default=False)
    (options, args) = parser.parse_args()
    setup_logging(options.verbose)
    default_cfg = {'agent': {'prefix': '/home/ambari', }, }
    config = ConfigParser.RawConfigParser(default_cfg)
    bind_signal_handlers()
    if ((len(sys.argv) > 1) and (sys.argv[1] == 'stop')):
        stop_agent()
    config = resolve_ambari_config()
    perform_prestart_checks()
    daemonize()
    killstaleprocesses()
    update_log_level(config)
    server_url = ((('https://' + config.get('server', 'hostname')) + ':') + config.get('server', 'url_port'))
    print (('Connecting to the server at ' + server_url) + '...')
    logger.info(('Connecting to the server at: ' + server_url))
    netutil = NetUtil()
    netutil.try_to_connect(server_url, (-1), logger)
    ' Check if security is enable if not then disable it'
    logger.info('Creating certs')
    certMan = security.CertificateManager(config)
    certMan.initSecurity()
    controller = Controller(config)
    controller.start()
    logger.info('finished')
