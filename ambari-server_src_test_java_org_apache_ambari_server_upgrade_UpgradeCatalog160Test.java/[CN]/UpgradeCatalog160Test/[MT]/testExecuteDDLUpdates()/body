{
  final DBAccessor dbAccessor=createNiceMock(DBAccessor.class);
  Configuration configuration=createNiceMock(Configuration.class);
  Capture<List<DBAccessor.DBColumnInfo>> hgConfigcolumnCapture=new Capture<List<DBAccessor.DBColumnInfo>>();
  Capture<List<DBAccessor.DBColumnInfo>> viewEntitycolumnCapture=new Capture<List<DBAccessor.DBColumnInfo>>();
  Capture<DBAccessor.DBColumnInfo> restartRequiredColumnCapture=new Capture<DBAccessor.DBColumnInfo>();
  expect(configuration.getDatabaseUrl()).andReturn(Configuration.JDBC_IN_MEMORY_URL).anyTimes();
  setBPHostGroupConfigExpectations(dbAccessor,hgConfigcolumnCapture,restartRequiredColumnCapture);
  setViewEntityConfigExpectations(dbAccessor,viewEntitycolumnCapture);
  replay(dbAccessor,configuration);
  AbstractUpgradeCatalog upgradeCatalog=getUpgradeCatalog(dbAccessor);
  Class<?> c=AbstractUpgradeCatalog.class;
  Field f=c.getDeclaredField("configuration");
  f.setAccessible(true);
  f.set(upgradeCatalog,configuration);
  upgradeCatalog.executeDDLUpdates();
  verify(dbAccessor,configuration);
  assertHGConfigColumns(hgConfigcolumnCapture);
  assertViewEntityColumns(viewEntitycolumnCapture);
  assertRestartRequiredColumn(restartRequiredColumnCapture);
}
