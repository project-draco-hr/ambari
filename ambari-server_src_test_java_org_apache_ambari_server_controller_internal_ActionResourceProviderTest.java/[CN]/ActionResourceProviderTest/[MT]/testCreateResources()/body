{
  Resource.Type type=Resource.Type.Action;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  RequestStatusResponse response=createNiceMock(RequestStatusResponse.class);
  Map<String,String> requestProperties=new HashMap<String,String>();
  requestProperties.put("context","Called from a test");
  expect(managementController.createActions(AbstractResourceProviderTest.Matcher.getActionRequestSet("Cluster100","Service100","Action100"),eq(requestProperties))).andReturn(response);
  replay(managementController,response);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  Set<Map<String,Object>> propertySet=new LinkedHashSet<Map<String,Object>>();
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put(ActionResourceProvider.ACTION_CLUSTER_NAME_PROPERTY_ID,"Cluster100");
  properties.put(ActionResourceProvider.ACTION_SERVICE_NAME_PROPERTY_ID,"Service100");
  properties.put(ActionResourceProvider.ACTION_ACTION_NAME_PROPERTY_ID,"Action100");
  propertySet.add(properties);
  Request request=PropertyHelper.getCreateRequest(propertySet,requestProperties);
  provider.createResources(request);
  verify(managementController,response);
}
