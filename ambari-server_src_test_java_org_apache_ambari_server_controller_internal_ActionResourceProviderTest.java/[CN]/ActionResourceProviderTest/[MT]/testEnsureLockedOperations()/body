{
  Resource.Type type=Resource.Type.Action;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  Map<String,String> mapRequestProps=new HashMap<String,String>();
  mapRequestProps.put("context","Called from a test");
  Request request=PropertyHelper.getUpdateRequest(properties,mapRequestProps);
  Predicate predicate=new PredicateBuilder().property(ActionResourceProvider.ACTION_NAME_PROPERTY_ID).equals("a2").toPredicate();
  try {
    provider.updateResources(request,predicate);
    Assert.fail("Update call must fail.");
  }
 catch (  UnsupportedOperationException ex) {
    Assert.assertTrue(ex.getMessage().contains("Not currently supported"));
  }
  try {
    provider.createResources(request);
    Assert.fail("Create call must fail.");
  }
 catch (  UnsupportedOperationException ex) {
    Assert.assertTrue(ex.getMessage().contains("Not currently supported"));
  }
  try {
    provider.deleteResources(predicate);
    Assert.fail("Delete call must fail.");
  }
 catch (  UnsupportedOperationException ex) {
    Assert.assertTrue(ex.getMessage().contains("Not currently supported"));
  }
}
