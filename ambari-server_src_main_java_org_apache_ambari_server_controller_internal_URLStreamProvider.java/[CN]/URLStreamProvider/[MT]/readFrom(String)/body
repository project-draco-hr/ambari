{
  if (LOG.isDebugEnabled()) {
    LOG.debug("readFrom spec:" + spec);
  }
  HttpURLConnection connection=spec.startsWith("https") ? (HttpURLConnection)getSSLConnection(spec) : (HttpURLConnection)getConnection(spec);
  String appCookie=appCookieManager.getCachedAppCookie(spec);
  if (appCookie != null) {
    LOG.debug("Using cached app cookie for URL:" + spec);
    connection.setRequestProperty(COOKIE,appCookie);
  }
  connection.setConnectTimeout(connTimeout);
  connection.setReadTimeout(readTimeout);
  connection.setDoOutput(true);
  int statusCode=connection.getResponseCode();
  if (statusCode == HttpStatus.SC_UNAUTHORIZED) {
    String wwwAuthHeader=connection.getHeaderField(WWW_AUTHENTICATE);
    if (LOG.isInfoEnabled()) {
      LOG.info("Received WWW-Authentication header:" + wwwAuthHeader + ", for URL:"+ spec);
    }
    if (wwwAuthHeader != null && wwwAuthHeader.trim().startsWith(NEGOTIATE)) {
      connection=spec.startsWith("https") ? (HttpURLConnection)getSSLConnection(spec) : (HttpURLConnection)getConnection(spec);
      appCookie=appCookieManager.getAppCookie(spec,true);
      connection.setRequestProperty(COOKIE,appCookie);
      connection.setConnectTimeout(connTimeout);
      connection.setReadTimeout(readTimeout);
      connection.setDoOutput(true);
      return connection.getInputStream();
    }
 else {
      LOG.error("Unsupported WWW-Authentication header:" + wwwAuthHeader + ", for URL:"+ spec);
      return connection.getInputStream();
    }
  }
 else {
    return connection.getInputStream();
  }
}
