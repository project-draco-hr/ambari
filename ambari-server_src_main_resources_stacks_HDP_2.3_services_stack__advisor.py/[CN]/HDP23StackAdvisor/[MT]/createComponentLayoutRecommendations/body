def createComponentLayoutRecommendations(self, services, hosts):
    parentComponentLayoutRecommendations = super(HDP23StackAdvisor, self).createComponentLayoutRecommendations(services, hosts)
    hostsList = [host['Hosts']['host_name'] for host in hosts['items']]
    hostGroups = parentComponentLayoutRecommendations['blueprint']['host_groups']
    servicesList = [service['StackServices']['service_name'] for service in services['services']]
    if ('HAWQ' in servicesList):
        if (len(hostsList) == 1):
            components = parentComponentLayoutRecommendations['blueprint']['host_groups'][0]['components']
            components = [component for component in components if (component['name'] != 'HAWQSTANDBY')]
            parentComponentLayoutRecommendations['blueprint']['host_groups'][0]['components'] = components
        for host_group in hostGroups:
            if (({'name': 'DATANODE', } in host_group['components']) and ({'name': 'HAWQSEGMENT', } not in host_group['components'])):
                host_group['components'].append({'name': 'HAWQSEGMENT', })
            if (({'name': 'DATANODE', } not in host_group['components']) and ({'name': 'HAWQSEGMENT', } in host_group['components'])):
                host_group['components'].remove({'name': 'HAWQSEGMENT', })
    if ('PXF' in servicesList):
        for host_group in hostGroups:
            if ((({'name': 'NAMENODE', } in host_group['components']) or ({'name': 'DATANODE', } in host_group['components'])) and ({'name': 'PXF', } not in host_group['components'])):
                host_group['components'].append({'name': 'PXF', })
    return parentComponentLayoutRecommendations
