def recommendHIVEConfigurations(self, configurations, clusterData, services, hosts):
    super(HDP23StackAdvisor, self).recommendHIVEConfigurations(configurations, clusterData, services, hosts)
    putHiveSiteProperty = self.putProperty(configurations, 'hive-site', services)
    putHiveServerProperty = self.putProperty(configurations, 'hiveserver2-site', services)
    putHiveSitePropertyAttribute = self.putPropertyAttribute(configurations, 'hive-site')
    servicesList = [service['StackServices']['service_name'] for service in services['services']]
    if (str(configurations['hive-env']['properties']['hive_security_authorization']).lower() == 'ranger'):
        putHiveServerProperty('hive.security.authorization.manager', 'org.apache.ranger.authorization.hive.authorizer.RangerHiveAuthorizerFactory')
    jvmGCParams = '-XX:+UseParallelGC'
    if (('ambari-server-properties' in services) and ('java.home' in services['ambari-server-properties'])):
        match = re.match('.*\\/jdk(1\\.\\d+)[\\-\\_\\.][^/]*$', services['ambari-server-properties']['java.home'])
        if (match and (len(match.groups()) > 0)):
            versionSplits = re.split('\\.', match.group(1))
            if (versionSplits and (len(versionSplits) > 1) and (int(versionSplits[0]) > 0) and (int(versionSplits[1]) > 7)):
                jvmGCParams = '-XX:+UseG1GC -XX:+ResizeTLAB'
    putHiveSiteProperty('hive.tez.java.opts', (('-server -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA ' + jvmGCParams) + ' -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps'))
    sqla_db_used = (('hive-env' in services['configurations']) and ('hive_database' in services['configurations']['hive-env']['properties']) and (services['configurations']['hive-env']['properties']['hive_database'] == 'Existing SQLA Database'))
    if sqla_db_used:
        putHiveSiteProperty('datanucleus.rdbms.datastoreAdapterClassName', 'org.datanucleus.store.rdbms.adapter.SQLAnywhereAdapter')
    else:
        putHiveSitePropertyAttribute('datanucleus.rdbms.datastoreAdapterClassName', 'delete', 'true')
