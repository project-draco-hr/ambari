def validateHDFSConfigurations(self, properties, recommendedDefaults, configurations, services, hosts):
    super(HDP23StackAdvisor, self).validateHDFSConfigurations(properties, recommendedDefaults, configurations, services, hosts)
    hdfs_site = properties
    validationItems = []
    ranger_plugin_properties = getSiteProperties(configurations, 'ranger-hdfs-plugin-properties')
    ranger_plugin_enabled = (ranger_plugin_properties['ranger-hdfs-plugin-enabled'] if ranger_plugin_properties else 'No')
    servicesList = [service['StackServices']['service_name'] for service in services['services']]
    if (('RANGER' in servicesList) and (ranger_plugin_enabled.lower() == 'Yes'.lower())):
        if (hdfs_site['dfs.namenode.inode.attributes.provider.class'].lower() != 'org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer'.lower()):
            validationItems.append({'config-name': 'dfs.namenode.inode.attributes.provider.class', 'item': self.getWarnItem("dfs.namenode.inode.attributes.provider.class needs to be set to 'org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer' if Ranger HDFS Plugin is enabled."), })
    return self.toConfigurationValidationProblems(validationItems, 'hdfs-site')
