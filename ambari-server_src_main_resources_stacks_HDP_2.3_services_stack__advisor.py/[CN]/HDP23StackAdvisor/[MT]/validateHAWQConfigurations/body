def validateHAWQConfigurations(self, properties, recommendedDefaults, configurations, services, hosts):
    hawq_site = properties
    validationItems = []
    if (self.isHawqMasterComponentOnAmbariServer(services) and self.isHawqMasterPortConflict(configurations)):
        prop_name = 'hawq_master_address_port'
        validationItems.append({'config-name': prop_name, 'item': self.getWarnItem('HAWQ Master or Standby Master cannot use the port 5432 when installed on the same host as the Ambari Server. Ambari Postgres DB uses the same port. Please choose a different value (e.g. 10432)'), })
    directories = {'hawq_master_directory': 'HAWQ Master directory', 'hawq_master_temp_directory': 'HAWQ Master temp directory', 'hawq_segment_directory': 'HAWQ Segment directory', 'hawq_segment_temp_directory': 'HAWQ Segment temp directory', }
    for (property_name, display_name) in directories.iteritems():
        self.validateIfRootDir(properties, validationItems, property_name, display_name)
    YARN = 'YARN'
    servicesList = [service['StackServices']['service_name'] for service in services['services']]
    if ((YARN in servicesList) and ('yarn-site' in configurations)):
        yarn_site = getSiteProperties(configurations, 'yarn-site')
        for (hs_prop, ys_prop) in self.getHAWQYARNPropertyMapping().items():
            if ((hs_prop in hawq_site) and (ys_prop in yarn_site) and (hawq_site[hs_prop] != yarn_site[ys_prop])):
                message = 'Expected value: {0} (this property should have the same value as the property {1} in yarn-site)'.format(yarn_site[ys_prop], ys_prop)
                validationItems.append({'config-name': hs_prop, 'item': self.getWarnItem(message), })
    HAWQ_GLOBAL_RM_TYPE = 'hawq_global_rm_type'
    if ((YARN not in servicesList) and (HAWQ_GLOBAL_RM_TYPE in hawq_site) and (hawq_site[HAWQ_GLOBAL_RM_TYPE].upper() == YARN)):
        message = '{0} must be set to none if YARN service is not installed'.format(HAWQ_GLOBAL_RM_TYPE)
        validationItems.append({'config-name': HAWQ_GLOBAL_RM_TYPE, 'item': self.getErrorItem(message), })
    return self.toConfigurationValidationProblems(validationItems, 'hawq-site')
