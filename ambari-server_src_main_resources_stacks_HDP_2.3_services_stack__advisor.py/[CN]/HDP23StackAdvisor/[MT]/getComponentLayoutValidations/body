def getComponentLayoutValidations(self, services, hosts):
    parentItems = super(HDP23StackAdvisor, self).getComponentLayoutValidations(services, hosts)
    hiveExists = ('HIVE' in [service['StackServices']['service_name'] for service in services['services']])
    sparkExists = ('SPARK' in [service['StackServices']['service_name'] for service in services['services']])
    if ((not ('HAWQ' in [service['StackServices']['service_name'] for service in services['services']])) and (not sparkExists)):
        return parentItems
    childItems = []
    hostsList = [host['Hosts']['host_name'] for host in hosts['items']]
    hostsCount = len(hostsList)
    componentsListList = [service['components'] for service in services['services']]
    componentsList = [item for sublist in componentsListList for item in sublist]
    hawqMasterHosts = [component['StackServiceComponents']['hostnames'][0] for component in componentsList if (component['StackServiceComponents']['component_name'] == 'HAWQMASTER')]
    hawqStandbyHosts = [component['StackServiceComponents']['hostnames'][0] for component in componentsList if (component['StackServiceComponents']['component_name'] == 'HAWQSTANDBY')]
    if ((len(hawqMasterHosts) == 1) and (len(hawqStandbyHosts) == 1) and (hawqMasterHosts == hawqStandbyHosts)):
        message = 'HAWQ Standby Master and HAWQ Master should not be deployed on the same host.'
        childItems.append({'type': 'host-component', 'level': 'ERROR', 'message': message, 'component-name': 'HAWQSTANDBY', 'host': hawqStandbyHosts[0], })
    if ((len(hawqMasterHosts) == 1) and (hostsCount > 1) and self.isLocalHost(hawqMasterHosts[0])):
        message = 'HAWQ Master and Ambari Server should not be deployed on the same host. If you leave them collocated, make sure to set HAWQ Master Port property to a value different from the port number used by Ambari Server database.'
        childItems.append({'type': 'host-component', 'level': 'WARN', 'message': message, 'component-name': 'HAWQMASTER', 'host': hawqMasterHosts[0], })
    if ((len(hawqStandbyHosts) == 1) and (hostsCount > 1) and self.isLocalHost(hawqStandbyHosts[0])):
        message = 'HAWQ Standby Master and Ambari Server should not be deployed on the same host. If you leave them collocated, make sure to set HAWQ Master Port property to a value different from the port number used by Ambari Server database.'
        childItems.append({'type': 'host-component', 'level': 'WARN', 'message': message, 'component-name': 'HAWQSTANDBY', 'host': hawqStandbyHosts[0], })
    if ('SPARK_THRIFTSERVER' in [service['StackServices']['service_name'] for service in services['services']]):
        if (not ('HIVE_SERVER' in [service['StackServices']['service_name'] for service in services['services']])):
            message = 'SPARK_THRIFTSERVER requires HIVE services to be selected.'
            childItems.append({'type': 'host-component', 'level': 'ERROR', 'message': messge, 'component-name': 'SPARK_THRIFTSERVER', })
    hmsHosts = ([component['StackServiceComponents']['hostnames'] for component in componentsList if (component['StackServiceComponents']['component_name'] == 'HIVE_METASTORE')][0] if hiveExists else [])
    sparkTsHosts = ([component['StackServiceComponents']['hostnames'] for component in componentsList if (component['StackServiceComponents']['component_name'] == 'SPARK_THRIFTSERVER')][0] if sparkExists else [])
    if ((len(sparkTsHosts) > 0) and (len(hmsHosts) == 0)):
        message = 'SPARK_THRIFTSERVER requires HIVE_METASTORE to be selected/deployed.'
        childItems.append({'type': 'host-component', 'level': 'ERROR', 'message': message, 'component-name': 'SPARK_THRIFTSERVER', })
    parentItems.extend(childItems)
    return parentItems
