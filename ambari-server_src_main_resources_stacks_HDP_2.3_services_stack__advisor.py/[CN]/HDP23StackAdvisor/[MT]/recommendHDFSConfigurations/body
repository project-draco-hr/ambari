def recommendHDFSConfigurations(self, configurations, clusterData, services, hosts):
    super(HDP23StackAdvisor, self).recommendHDFSConfigurations(configurations, clusterData, services, hosts)
    putHdfsSiteProperty = self.putProperty(configurations, 'hdfs-site', services)
    putHdfsSitePropertyAttribute = self.putPropertyAttribute(configurations, 'hdfs-site')
    if (('ranger-hdfs-plugin-properties' in services['configurations']) and ('ranger-hdfs-plugin-enabled' in services['configurations']['ranger-hdfs-plugin-properties']['properties'])):
        rangerPluginEnabled = ''
        if (('ranger-hdfs-plugin-properties' in configurations) and ('ranger-hdfs-plugin-enabled' in configurations['ranger-hdfs-plugin-properties']['properties'])):
            rangerPluginEnabled = configurations['ranger-hdfs-plugin-properties']['properties']['ranger-hdfs-plugin-enabled']
        elif (('ranger-hdfs-plugin-properties' in services['configurations']) and ('ranger-hdfs-plugin-enabled' in services['configurations']['ranger-hdfs-plugin-properties']['properties'])):
            rangerPluginEnabled = services['configurations']['ranger-hdfs-plugin-properties']['properties']['ranger-hdfs-plugin-enabled']
        if (rangerPluginEnabled and (rangerPluginEnabled.lower() == 'Yes'.lower())):
            putHdfsSiteProperty('dfs.namenode.inode.attributes.provider.class', 'org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer')
        else:
            putHdfsSitePropertyAttribute('dfs.namenode.inode.attributes.provider.class', 'delete', 'true')
    else:
        putHdfsSitePropertyAttribute('dfs.namenode.inode.attributes.provider.class', 'delete', 'true')
