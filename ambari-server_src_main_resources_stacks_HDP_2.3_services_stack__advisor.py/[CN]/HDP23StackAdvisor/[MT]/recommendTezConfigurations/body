def recommendTezConfigurations(self, configurations, clusterData, services, hosts):
    super(HDP23StackAdvisor, self).recommendTezConfigurations(configurations, clusterData, services, hosts)
    putTezProperty = self.putProperty(configurations, 'tez-site')
    taskResourceMemory = int(configurations['tez-site']['properties']['tez.task.resource.memory.mb'])
    putTezProperty('tez.runtime.io.sort.mb', int((taskResourceMemory * 0.4)))
    if (('tez-site' in services['configurations']) and ('tez.runtime.sorter.class' in services['configurations']['tez-site']['properties'])):
        if (services['configurations']['tez-site']['properties']['tez.runtime.sorter.class'] == 'LEGACY'):
            putTezAttribute = self.putPropertyAttribute(configurations, 'tez-site')
            putTezAttribute('tez.runtime.io.sort.mb', 'maximum', 2047)
    pass
    serverProperties = services['ambari-server-properties']
    latest_tez_jar_version = None
    server_host = socket.getfqdn()
    server_port = '8080'
    server_protocol = 'http'
    views_dir = '/var/lib/ambari-server/resources/views/'
    if serverProperties:
        if ('client.api.port' in serverProperties):
            server_port = serverProperties['client.api.port']
        if ('views.dir' in serverProperties):
            views_dir = serverProperties['views.dir']
        if ('api.ssl' in serverProperties):
            if (serverProperties['api.ssl'].lower() == 'true'):
                server_protocol = 'https'
        views_work_dir = os.path.join(views_dir, 'work')
        if (os.path.exists(views_work_dir) and os.path.isdir(views_work_dir)):
            last_version = '0.0.0'
            for file in os.listdir(views_work_dir):
                if fnmatch.fnmatch(file, 'TEZ{*}'):
                    current_version = file.lstrip('TEZ{').rstrip('}')
                    if (self.versionCompare(current_version.replace('-', '.'), last_version.replace('-', '.')) >= 0):
                        latest_tez_jar_version = current_version
                        last_version = current_version
                    pass
            pass
        pass
    pass
    if latest_tez_jar_version:
        tez_url = '{0}://{1}:{2}/#/main/views/TEZ/{3}/TEZ_CLUSTER_INSTANCE'.format(server_protocol, server_host, server_port, latest_tez_jar_version)
        putTezProperty('tez.tez-ui.history-url.base', tez_url)
    pass
    jvmGCParams = '-XX:+UseParallelGC'
    if (('ambari-server-properties' in services) and ('java.home' in services['ambari-server-properties'])):
        match = re.match('.*\\/jdk(1\\.\\d+)[\\-\\_\\.][^/]*$', services['ambari-server-properties']['java.home'])
        if (match and (len(match.groups()) > 0)):
            versionSplits = re.split('\\.', match.group(1))
            if (versionSplits and (len(versionSplits) > 1) and (int(versionSplits[0]) > 0) and (int(versionSplits[1]) > 7)):
                jvmGCParams = '-XX:+UseG1GC -XX:+ResizeTLAB'
    putTezProperty('tez.am.launch.cmd-opts', ('-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA ' + jvmGCParams))
    putTezProperty('tez.task.launch.cmd-opts', ('-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA ' + jvmGCParams))
