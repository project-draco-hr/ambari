{
  List<Token> listTokens=new ArrayList<Token>();
  listTokens.add(new Token(Token.TYPE.RELATIONAL_OPERATOR_FUNC,".in("));
  listTokens.add(new Token(Token.TYPE.PROPERTY_OPERAND,"foo"));
  listTokens.add(new Token(Token.TYPE.VALUE_OPERAND,"one,two,3"));
  listTokens.add(new Token(Token.TYPE.BRACKET_CLOSE,")"));
  QueryParser parser=new QueryParser();
  Predicate p=parser.parse(listTokens.toArray(new Token[listTokens.size()]));
  EqualsPredicate ep1=new EqualsPredicate("foo","one");
  EqualsPredicate ep2=new EqualsPredicate("foo","two");
  EqualsPredicate ep3=new EqualsPredicate("foo","3");
  OrPredicate orPredicate=new OrPredicate(ep1,ep2,ep3);
  assertEquals(orPredicate,p);
}
