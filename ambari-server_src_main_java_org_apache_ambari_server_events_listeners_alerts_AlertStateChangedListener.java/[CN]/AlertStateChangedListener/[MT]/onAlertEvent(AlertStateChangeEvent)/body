{
  LOG.debug("Received event {}",event);
  Alert alert=event.getAlert();
  AlertHistoryEntity history=event.getNewHistoricalEntry();
  AlertDefinitionEntity definition=history.getAlertDefinition();
  ALERT_LOG.info(ALERT_LOG_MESSAGE,alert.getState(),definition.getServiceName(),definition.getDefinitionName(),definition.getLabel(),alert.getText());
  if (LOG.isDebugEnabled()) {
    LOG.debug("An alert has changed state: {}",event);
  }
  AlertCurrentEntity currentAlert=event.getCurrentAlert();
  if (null != currentAlert && currentAlert.getMaintenanceState() != MaintenanceState.OFF) {
    return;
  }
  List<AlertGroupEntity> groups=m_alertsDispatchDao.findGroupsByDefinition(definition);
  List<AlertNoticeEntity> notices=new LinkedList<AlertNoticeEntity>();
  for (  AlertGroupEntity group : groups) {
    Set<AlertTargetEntity> targets=group.getAlertTargets();
    if (null == targets || targets.size() == 0) {
      continue;
    }
    for (    AlertTargetEntity target : targets) {
      if (!isAlertTargetInterested(target,history)) {
        continue;
      }
      AlertNoticeEntity notice=new AlertNoticeEntity();
      notice.setUuid(UUID.randomUUID().toString());
      notice.setAlertTarget(target);
      notice.setAlertHistory(event.getNewHistoricalEntry());
      notice.setNotifyState(NotificationState.PENDING);
      notices.add(notice);
    }
  }
  m_alertsDispatchDao.createNotices(notices);
}
