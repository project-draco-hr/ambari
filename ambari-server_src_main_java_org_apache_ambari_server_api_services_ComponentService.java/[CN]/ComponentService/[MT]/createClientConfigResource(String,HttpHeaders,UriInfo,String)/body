{
  Map<Resource.Type,String> mapIds=new HashMap<Resource.Type,String>();
  mapIds.put(Resource.Type.Cluster,m_clusterName);
  mapIds.put(Resource.Type.Service,m_serviceName);
  mapIds.put(Resource.Type.Component,componentName);
  Response response=handleRequest(headers,body,ui,Request.Type.GET,createResource(Resource.Type.ClientConfig,mapIds));
  if (response.getStatus() != 200) {
    return response;
  }
  Response.ResponseBuilder rb=Response.status(Response.Status.OK);
  File file=new File("/tmp/ambari-server/" + componentName + "-configs.tar.gz");
  InputStream resultInputStream=null;
  try {
    resultInputStream=new FileInputStream(file);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  String contentType="application/x-ustar";
  String outputFileName=componentName + "-configs.tar.gz";
  rb.header("Content-Disposition","attachment; filename=\"" + outputFileName + "\"");
  rb.entity(resultInputStream);
  return rb.type(contentType).build();
}
