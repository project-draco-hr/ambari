def zip_directory(self, directory, skip_if_empty=False):
    '\n    Packs entire directory into zip file. Hash file is also packaged\n    into archive\n    '
    self.dbg_out('creating archive for directory {0}'.format(directory))
    try:
        if skip_if_empty:
            if (not os.listdir(directory)):
                self.dbg_out('Empty directory. Skipping archive creation for {0}'.format(directory))
                return
        zf = zipfile.ZipFile(os.path.join(directory, self.ARCHIVE_NAME), 'w')
        abs_src = os.path.abspath(directory)
        for (root, dirs, files) in os.walk(directory):
            for filename in files:
                if (not self.is_ignored(filename)):
                    absname = os.path.abspath(os.path.join(root, filename))
                    arcname = absname[(len(abs_src) + 1):]
                    self.dbg_out(('zipping %s as %s' % (os.path.join(root, filename), arcname)))
                    zf.write(absname, arcname)
        zf.close()
    except Exception as err:
        raise KeeperException('Can not create zip archive of directory {0} : {1}'.format(directory, str(err)))
