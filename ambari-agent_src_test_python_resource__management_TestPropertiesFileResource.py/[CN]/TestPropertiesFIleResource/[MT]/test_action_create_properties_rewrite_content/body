@patch('resource_management.core.providers.system._ensure_metadata')
@patch('__builtin__.open')
@patch.object(os.path, 'exists')
@patch.object(os.path, 'isdir')
@patch.object(time, 'asctime')
def test_action_create_properties_rewrite_content(self, time_asctime_mock, os_path_isdir_mock, os_path_exists_mock, open_mock, ensure_mock):
    '\n    Tests if \'action_create\' - rewrite file that exist\n    1) properties={"Some property":"Some value"}\n    2) dir="Some dir"\n    '
    os_path_isdir_mock.side_effect = [False, True]
    os_path_exists_mock.return_value = True
    time_asctime_mock.return_value = 777
    result_file = MagicMock()
    result_file.read.return_value = 'old-content'
    open_mock.return_value = result_file
    with Environment('/') as env:
        PropertiesFile('new_file', dir='/dir1', properties={'property_1': 'value1', })
    result_file.read.assert_called()
    open_mock.assert_called_with('/dir1/new_file', 'wb')
    result_file.__enter__().write.assert_called_with(u'# Generated by Apache Ambari. 777\n    \nproperty_1=value1\n    \n')
    self.assertEqual(open_mock.call_count, 2)
    ensure_mock.assert_called()
