@patch('resource_management.core.providers.system._ensure_metadata')
@patch.object(sudo, 'read_file')
@patch.object(sudo, 'create_file')
@patch.object(sudo, 'path_exists')
@patch.object(sudo, 'path_isdir')
@patch.object(time, 'asctime')
def test_action_create_properties_rewrite_content(self, time_asctime_mock, os_path_isdir_mock, os_path_exists_mock, create_file_mock, read_file_mock, ensure_mock):
    '\n    Tests if \'action_create\' - rewrite file that exist\n    1) properties={"Some property":"Some value"}\n    2) dir="Some dir"\n    '
    os_path_isdir_mock.side_effect = [False, True]
    os_path_exists_mock.return_value = True
    time_asctime_mock.return_value = 777
    read_file_mock.return_value = 'old-content'
    with Environment('/') as env:
        PropertiesFile('new_file', dir='/dir1', properties={'property_1': 'value1', })
    read_file_mock.assert_called()
    create_file_mock.assert_called_with('/dir1/new_file', u'# Generated by Apache Ambari. 777\n    \nproperty_1=value1\n    ', encoding=None)
    ensure_mock.assert_called()
