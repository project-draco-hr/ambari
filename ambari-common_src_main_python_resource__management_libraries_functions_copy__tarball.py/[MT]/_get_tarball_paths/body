def _get_tarball_paths(name, use_upgrading_version_during_uprade=True, custom_source_file=None, custom_dest_file=None):
    stack_name = Script.get_stack_name()
    if (not stack_name):
        Logger.error('Cannot copy {0} tarball to HDFS because stack name could be be determined.'.format(str(name)))
        return (False, None, None)
    stack_version = _get_current_version(use_upgrading_version_during_uprade)
    if (not stack_version):
        Logger.error('Cannot copy {0} tarball to HDFS because stack version could be be determined.'.format(str(name)))
        return (False, None, None)
    stack_root = Script.get_stack_root()
    if (not stack_root):
        Logger.error('Cannot copy {0} tarball to HDFS because stack root could be be determined.'.format(str(name)))
        return (False, None, None)
    tarball_map = _get_tarball_map()
    if (not tarball_map):
        Logger.error('Cannot copy {0} tarball to HDFS because tarball map could not be determined.'.format(str(name), str(stack_name)))
    if ((name is None) or (name.lower() not in tarball_map)):
        Logger.error('Cannot copy tarball to HDFS because {0} is not supported in stack {1} for this operation.'.format(str(name), str(stack_name)))
        return (False, None, None)
    (source_file, dest_file) = tarball_map[name.lower()]
    if (custom_source_file is not None):
        source_file = custom_source_file
    if (custom_dest_file is not None):
        dest_file = custom_dest_file
    source_file = source_file.replace(STACK_NAME_PATTERN, stack_name.lower())
    dest_file = dest_file.replace(STACK_NAME_PATTERN, stack_name.lower())
    source_file = source_file.replace(STACK_ROOT_PATTERN, stack_root.lower())
    dest_file = dest_file.replace(STACK_ROOT_PATTERN, stack_root.lower())
    source_file = source_file.replace(STACK_VERSION_PATTERN, stack_version)
    dest_file = dest_file.replace(STACK_VERSION_PATTERN, stack_version)
    return (True, source_file, dest_file)
