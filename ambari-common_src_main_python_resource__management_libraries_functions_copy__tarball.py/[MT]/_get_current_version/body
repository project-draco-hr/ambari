def _get_current_version(use_upgrading_version_during_upgrade=True):
    "\n  Get the effective version to use to copy the tarballs to.\n  :param use_upgrading_version_during_upgrade: True, except when the RU/EU hasn't started yet.\n  :return: Version, or False if an error occurred.\n  "
    upgrade_direction = default('/commandParams/upgrade_direction', None)
    is_stack_upgrade = (upgrade_direction is not None)
    current_version = default('/hostLevelParams/current_version', None)
    Logger.info('Default version is {0}'.format(current_version))
    if is_stack_upgrade:
        if use_upgrading_version_during_upgrade:
            current_version = default('/commandParams/version', None)
            Logger.info('Because this is a Stack Upgrade, will use version {0}'.format(current_version))
        else:
            Logger.info('This is a Stack Upgrade, but keep the version unchanged.')
    elif (current_version is None):
        stack_version = _get_single_version_from_stack_select()
        if stack_version:
            Logger.info('Will use stack version {0}'.format(stack_version))
            current_version = stack_version
    if (current_version is None):
        message_suffix = (('during stack %s' % str(upgrade_direction)) if is_stack_upgrade else '')
        Logger.warning('Cannot copy tarball because unable to determine current version {0}.'.format(message_suffix))
        return False
    return current_version
