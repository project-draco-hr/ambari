def setup_configs():
    '\n  Creates configs for services DHFS mapred\n  '
    import params
    if ('mapred-queue-acls' in params.config['configurations']):
        XmlConfig('mapred-queue-acls.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['mapred-queue-acls'], owner=params.mapred_user, group=params.user_group)
    elif os.path.exists(os.path.join(params.hadoop_conf_dir, 'mapred-queue-acls.xml')):
        File(os.path.join(params.hadoop_conf_dir, 'mapred-queue-acls.xml'), owner=params.mapred_user, group=params.user_group)
    if ('hadoop-policy' in params.config['configurations']):
        XmlConfig('hadoop-policy.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['hadoop-policy'], owner=params.hdfs_user, group=params.user_group)
    XmlConfig('core-site.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['core-site'], owner=params.hdfs_user, group=params.user_group)
    if ('mapred-site' in params.config['configurations']):
        XmlConfig('mapred-site.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['mapred-site'], owner=params.mapred_user, group=params.user_group)
    File(params.task_log4j_properties_location, content=StaticFile('task-log4j.properties'), mode=493)
    if ('capacity-scheduler' in params.config['configurations']):
        XmlConfig('capacity-scheduler.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['capacity-scheduler'], owner=params.hdfs_user, group=params.user_group)
    XmlConfig('hdfs-site.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['hdfs-site'], owner=params.hdfs_user, group=params.user_group)
    if os.path.exists(os.path.join(params.hadoop_conf_dir, 'configuration.xsl')):
        File(os.path.join(params.hadoop_conf_dir, 'configuration.xsl'), owner=params.hdfs_user, group=params.user_group)
    if os.path.exists(os.path.join(params.hadoop_conf_dir, 'fair-scheduler.xml')):
        File(os.path.join(params.hadoop_conf_dir, 'fair-scheduler.xml'), owner=params.mapred_user, group=params.user_group)
    if os.path.exists(os.path.join(params.hadoop_conf_dir, 'masters')):
        File(os.path.join(params.hadoop_conf_dir, 'masters'), owner=params.hdfs_user, group=params.user_group)
    if os.path.exists(os.path.join(params.hadoop_conf_dir, 'ssl-client.xml.example')):
        File(os.path.join(params.hadoop_conf_dir, 'ssl-client.xml.example'), owner=params.mapred_user, group=params.user_group)
    if os.path.exists(os.path.join(params.hadoop_conf_dir, 'ssl-server.xml.example')):
        File(os.path.join(params.hadoop_conf_dir, 'ssl-server.xml.example'), owner=params.mapred_user, group=params.user_group)
    generate_include_file()
