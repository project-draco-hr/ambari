def hdfs_directory(name=None, owner=None, group=None, mode=None, recursive_chown=False, recursive_chmod=False):
    import params
    dir_exists = format('hadoop fs -ls {name} >/dev/null 2>&1')
    namenode_safe_mode_off = "hadoop dfsadmin -safemode get|grep 'Safe mode is OFF'"
    stub_dir = params.namenode_dirs_created_stub_dir
    stub_filename = params.namenode_dirs_stub_filename
    dir_absent_in_stub = format("grep -q '^{name}$' {stub_dir}/{stub_filename} > /dev/null 2>&1; test $? -ne 0")
    record_dir_in_stub = format("echo '{name}' >> {stub_dir}/{stub_filename}")
    tries = 3
    try_sleep = 10
    dfs_check_nn_status_cmd = 'true'
    mkdir_cmd = format('fs -mkdir {name}')
    if params.security_enabled:
        Execute(format('kinit -kt {hdfs_user_keytab} {hdfs_user}'), user=params.hdfs_user)
    ExecuteHadoop(mkdir_cmd, try_sleep=try_sleep, tries=tries, not_if=format('{dir_absent_in_stub} && {dfs_check_nn_status_cmd} && {dir_exists} && ! {namenode_safe_mode_off}'), only_if=format("su - hdfs -c '{dir_absent_in_stub} && {dfs_check_nn_status_cmd} && ! {dir_exists}'"), conf_dir=params.hadoop_conf_dir, user=params.hdfs_user)
    Execute(record_dir_in_stub, user=params.hdfs_user, only_if=format('! {dir_absent_in_stub}'))
    recursive = ('-R' if recursive_chown else '')
    perm_cmds = []
    if owner:
        chown = owner
        if group:
            chown = format('{owner}:{group}')
        perm_cmds.append(format('fs -chown {recursive} {chown} {name}'))
    if mode:
        perm_cmds.append(format('fs -chmod {recursive} {mode} {name}'))
    for cmd in perm_cmds:
        ExecuteHadoop(cmd, user=params.hdfs_user, only_if=format("su - hdfs -c '{dir_absent_in_stub} && {dfs_check_nn_status_cmd} && {namenode_safe_mode_off} && {dir_exists}'"), try_sleep=try_sleep, tries=tries, conf_dir=params.hadoop_conf_dir)
