{
  Object instance=null;
  try {
    instance=(Object)Class.forName(classFullName).getConstructor().newInstance();
  }
 catch (  Exception exception) {
    logger.error("Unsupported class =" + classFullName,exception.getCause());
  }
  if (instance != null) {
    boolean isValid=false;
switch (aliasType) {
case FILTER:
      isValid=Filter.class.isAssignableFrom(instance.getClass());
    break;
case INPUT:
  isValid=Input.class.isAssignableFrom(instance.getClass());
break;
case OUTPUT:
isValid=Output.class.isAssignableFrom(instance.getClass());
break;
case MAPPER:
isValid=Mapper.class.isAssignableFrom(instance.getClass());
break;
default :
isValid=true;
}
if (!isValid) {
logger.error("Not a valid class :" + classFullName + " AliasType :"+ aliasType.name());
}
}
return instance;
}
