{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  ConfigGroupService configGroupService=new TestConfigGroupService("clusterName",null);
  Method m=configGroupService.getClass().getMethod("getConfigGroups",HttpHeaders.class,UriInfo.class);
  Object[] args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,configGroupService,m,args,null));
  configGroupService=new TestConfigGroupService("clusterName","groupId");
  m=configGroupService.getClass().getMethod("getConfigGroup",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"groupId"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,configGroupService,m,args,null));
  configGroupService=new TestConfigGroupService("clusterName",null);
  m=configGroupService.getClass().getMethod("createConfigGroup",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,configGroupService,m,args,"body"));
  configGroupService=new TestConfigGroupService("clusterName","groupId");
  m=configGroupService.getClass().getMethod("deleteConfigGroup",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"groupId"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,configGroupService,m,args,null));
  configGroupService=new TestConfigGroupService("clusterName","groupId");
  m=configGroupService.getClass().getMethod("updateConfigGroup",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"groupId"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,configGroupService,m,args,"body"));
  return listInvocations;
}
