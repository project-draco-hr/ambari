{
  parseCommandLine();
  ClientConfig config=new DefaultClientConfig();
  Client client=Client.create(config);
  WebResource service=client.resource(getBaseURI());
  String location=line.getOptionValue("location");
  File f=new File(location);
  ClientResponse response=null;
  if (!f.exists()) {
    try {
      URL urlx=new URL(location);
    }
 catch (    MalformedURLException x) {
      System.out.println("Specified location is either a file path that does not exists or a malformed URL");
      System.exit(-1);
    }
    Blueprint bp=new Blueprint();
    response=service.path("blueprints").queryParam("url",location).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_XML).post(ClientResponse.class,bp);
  }
 else {
    Blueprint bp=this.readBlueprintFromFile(f);
    response=service.path("blueprints").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_XML).post(ClientResponse.class,bp);
  }
  Blueprint bp_return=response.getEntity(Blueprint.class);
  if (response.getStatus() != 200) {
    System.err.println("Blueprint add command failed. Reason [Code: <" + response.getStatus() + ">, Message: <"+ response.getHeaders().getFirst("ErrorMessage")+ ">]");
    System.exit(-1);
  }
  System.out.println("Blueprint added.\n");
  printClusterBlueprint(bp_return,null);
}
