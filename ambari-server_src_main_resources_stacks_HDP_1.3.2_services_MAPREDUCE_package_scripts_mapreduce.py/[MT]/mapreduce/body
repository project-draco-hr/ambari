def mapreduce(name=None):
    import params
    if (name in ['jobtracker', 'historyserver']):
        params.HdfsDirectory('/mapred', action='create_delayed', owner=params.mapred_user)
        params.HdfsDirectory('/mapred/system', action='create_delayed', owner=params.mapred_user)
        params.HdfsDirectory('/mapred/history', action='create_delayed', owner=params.mapred_user)
        params.HdfsDirectory(params.mapreduce_jobhistory_intermediate_done_dir, action='create_delayed', owner=params.mapred_user, group=params.user_group, mode=511)
        params.HdfsDirectory(params.mapreduce_jobhistory_done_dir, action='create_delayed', owner=params.mapred_user, group=params.user_group, mode=511)
        params.HdfsDirectory(None, action='create')
    Directory(params.mapred_pid_dir, owner=params.mapred_user, group=params.user_group, recursive=True)
    mapred_log_dir = os.path.join(params.mapred_log_dir_prefix, params.mapred_user)
    mapred_userlogs_dir = os.path.join(mapred_log_dir, 'userlogs')
    Directory(mapred_log_dir, recursive=True, owner=params.mapred_user, group=params.user_group)
    Directory(mapred_userlogs_dir, recursive=True, mode=1023)
    if (name == 'jobtracker'):
        File(os.path.join(mapred_log_dir, 'hadoop-mapreduce.jobsummary.log'), owner=params.mapred_user, group=params.user_group, mode=436)
    Directory(params.mapred_local_dir.split(','), owner=params.mapred_user, mode=493, recursive=True, ignore_failures=True)
    File(params.exclude_file_path, owner=params.mapred_user, group=params.user_group)
    File(params.mapred_hosts_file_path, owner=params.mapred_user, group=params.user_group)
