{
  Set<String> requestPropertyIds=getRequestPropertyIds(request,predicate);
  Set<Resource> results=new HashSet<Resource>();
  for (  Map<String,Object> propertyMap : getPropertyMaps(predicate)) {
    String clusterName=(String)propertyMap.get(ALERT_CLUSTER_NAME);
    if (null == clusterName || clusterName.isEmpty()) {
      throw new IllegalArgumentException("Invalid argument, cluster name is required");
    }
    String id=(String)propertyMap.get(ALERT_ID);
    if (null != id) {
      AlertCurrentEntity entity=alertsDAO.findCurrentById(Long.parseLong(id));
      if (null != entity) {
        AlertResourceProviderUtils.verifyViewAuthorization(entity);
        results.add(toResource(false,clusterName,entity,requestPropertyIds));
      }
    }
 else {
      try {
        Long clusterId=(StringUtils.isEmpty(clusterName)) ? null : getClusterId(clusterName);
        String definitionName=(String)propertyMap.get(ALERT_DEFINITION_NAME);
        String definitionId=(String)propertyMap.get(ALERT_DEFINITION_ID);
        if (clusterId == null) {
          AlertResourceProviderUtils.verifyViewAuthorization("",-1L);
        }
 else         if (!StringUtils.isEmpty(definitionName)) {
          AlertDefinitionEntity alertDefinition=alertDefinitionDAO.findByName(clusterId,definitionName);
          AlertResourceProviderUtils.verifyViewAuthorization(alertDefinition);
        }
 else         if (StringUtils.isNumeric(definitionId)) {
          AlertDefinitionEntity alertDefinition=alertDefinitionDAO.findById(Long.valueOf(definitionId));
          AlertResourceProviderUtils.verifyViewAuthorization(alertDefinition);
        }
 else {
          AlertResourceProviderUtils.verifyViewAuthorization("",getClusterResourceId(clusterName));
        }
      }
 catch (      AmbariException e) {
        throw new SystemException(e.getMessage(),e);
      }
      List<AlertCurrentEntity> entities=null;
      AlertCurrentRequest alertCurrentRequest=new AlertCurrentRequest();
      alertCurrentRequest.Predicate=predicate;
      alertCurrentRequest.Pagination=request.getPageRequest();
      alertCurrentRequest.Sort=request.getSortRequest();
      entities=alertsDAO.findAll(alertCurrentRequest);
      if (null == entities) {
        entities=Collections.emptyList();
      }
      for (      AlertCurrentEntity entity : entities) {
        results.add(toResource(true,clusterName,entity,requestPropertyIds));
      }
    }
  }
  return results;
}
