{
  hostGroups.put("group1",group1);
  hostGroups.put("group2",group2);
  autoDeploy.setEnabled(true);
  autoDeploy.setCoLocate("service1/component2");
  expect(blueprint.getStack()).andReturn(stack).anyTimes();
  expect(blueprint.getHostGroups()).andReturn(hostGroups).anyTimes();
  expect(blueprint.getServices()).andReturn(services).anyTimes();
  expect(group1.getComponentNames()).andReturn(group1Components).anyTimes();
  expect(group1.getName()).andReturn("host-group-1").anyTimes();
  expect(group2.getComponentNames()).andReturn(group2Components).anyTimes();
  expect(group2.getName()).andReturn("host-group-2").anyTimes();
  expect(stack.getDependenciesForComponent("component1")).andReturn(dependencies1).anyTimes();
  expect(stack.getDependenciesForComponent("component2")).andReturn(dependencies1).anyTimes();
  expect(stack.getDependenciesForComponent("component3")).andReturn(dependencies1).anyTimes();
  expect(stack.getDependenciesForComponent("component4")).andReturn(dependencies1).anyTimes();
  expect(stack.getCardinality("component1")).andReturn(new Cardinality("1"));
  expect(stack.getCardinality("component2")).andReturn(new Cardinality("1+"));
  expect(stack.getCardinality("component3")).andReturn(new Cardinality("1+"));
  expect(blueprint.getConfiguration()).andReturn(configuration).anyTimes();
}
