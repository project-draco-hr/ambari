{
  List<BasePredicate> predicateList=new LinkedList<BasePredicate>();
  boolean hasOrs=false;
  BasePredicate[] predicates=arrayPredicate.getPredicates();
  if (predicates.length > 0) {
    for (    BasePredicate predicate : predicates) {
      predicate.accept(this);
      predicateList.add(lastVisited);
      if (lastVisited instanceof OrPredicate) {
        hasOrs=true;
      }
    }
  }
  if (hasOrs && arrayPredicate instanceof AndPredicate) {
    int size=predicateList.size();
    List<BasePredicate> andPredicateList=new LinkedList<BasePredicate>();
    for (int i=0; i < size; ++i) {
      for (int j=i + 1; j < size; ++j) {
        andPredicateList.addAll(distribute(predicateList.get(i),predicateList.get(j)));
      }
    }
    lastVisited=OrPredicate.instance(andPredicateList.toArray(new BasePredicate[andPredicateList.size()]));
  }
 else {
    lastVisited=arrayPredicate.create(predicateList.toArray(new BasePredicate[predicateList.size()]));
  }
}
