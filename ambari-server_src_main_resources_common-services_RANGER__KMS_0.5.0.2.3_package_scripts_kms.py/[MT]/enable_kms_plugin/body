def enable_kms_plugin():
    import params
    if params.has_ranger_admin:
        count = 0
        while (count < 5):
            ranger_flag = check_ranger_service()
            if ranger_flag:
                break
            else:
                time.sleep(5)
                count = (count + 1)
        else:
            Logger.error('Ranger service is not reachable after {0} tries'.format(count))
        current_datetime = datetime.now()
        File(format('{kms_conf_dir}/ranger-security.xml'), owner=params.kms_user, group=params.kms_group, mode=420, content=InlineTemplate(format('<ranger>\n<enabled>{current_datetime}</enabled>\n</ranger>')))
        Directory([os.path.join('/etc', 'ranger', params.repo_name), os.path.join('/etc', 'ranger', params.repo_name, 'policycache')], owner=params.kms_user, group=params.kms_group, mode=509, create_parents=True)
        File(os.path.join('/etc', 'ranger', params.repo_name, 'policycache', format('kms_{repo_name}.json')), owner=params.kms_user, group=params.kms_group, mode=420)
        XmlConfig('ranger-kms-audit.xml', conf_dir=params.kms_conf_dir, configurations=params.config['configurations']['ranger-kms-audit'], configuration_attributes=params.config['configuration_attributes']['ranger-kms-audit'], owner=params.kms_user, group=params.kms_group, mode=484)
        XmlConfig('ranger-kms-security.xml', conf_dir=params.kms_conf_dir, configurations=params.config['configurations']['ranger-kms-security'], configuration_attributes=params.config['configuration_attributes']['ranger-kms-security'], owner=params.kms_user, group=params.kms_group, mode=484)
        XmlConfig('ranger-policymgr-ssl.xml', conf_dir=params.kms_conf_dir, configurations=params.config['configurations']['ranger-kms-policymgr-ssl'], configuration_attributes=params.config['configuration_attributes']['ranger-kms-policymgr-ssl'], owner=params.kms_user, group=params.kms_group, mode=484)
        if params.xa_audit_db_is_enabled:
            cred_setup = (params.cred_setup_prefix + ('-f', params.credential_file, '-k', 'auditDBCred', '-v', PasswordString(params.xa_audit_db_password), '-c', '1'))
            Execute(cred_setup, environment={'JAVA_HOME': params.java_home, }, logoutput=True, sudo=True)
        cred_setup = (params.cred_setup_prefix + ('-f', params.credential_file, '-k', 'sslKeyStore', '-v', PasswordString(params.ssl_keystore_password), '-c', '1'))
        Execute(cred_setup, environment={'JAVA_HOME': params.java_home, }, logoutput=True, sudo=True)
        cred_setup = (params.cred_setup_prefix + ('-f', params.credential_file, '-k', 'sslTrustStore', '-v', PasswordString(params.ssl_truststore_password), '-c', '1'))
        Execute(cred_setup, environment={'JAVA_HOME': params.java_home, }, logoutput=True, sudo=True)
        File(params.credential_file, owner=params.kms_user, group=params.kms_group, mode=416)
