def kms():
    import params
    if params.has_ranger_admin:
        File(params.downloaded_custom_connector, content=DownloadSource(params.driver_curl_source))
        File(params.downloaded_connector_path, content=DownloadSource(params.driver_source))
        Directory(params.java_share_dir, mode=493)
        if (not os.path.isfile(params.driver_curl_target)):
            Execute(('cp', '--remove-destination', params.downloaded_custom_connector, params.driver_curl_target), path=['/bin', '/usr/bin/'], sudo=True)
        if (not os.path.isfile(params.driver_target)):
            Execute(('cp', '--remove-destination', params.downloaded_connector_path, params.driver_target), path=['/bin', '/usr/bin/'], sudo=True)
        ranger_adm_obj = Rangeradmin(url=params.policymgr_mgr_url)
        (response_code, response_recieved) = ranger_adm_obj.check_ranger_login_urllib2((params.policymgr_mgr_url + '/login.jsp'), 'test:test')
        if ((response_code is not None) and (response_code == 200)):
            (ambari_ranger_admin, ambari_ranger_password) = ranger_adm_obj.create_ambari_admin_user(params.ambari_ranger_admin, params.ambari_ranger_password, params.admin_uname_password)
            ambari_username_password_for_ranger = ((ambari_ranger_admin + ':') + ambari_ranger_password)
        else:
            raise Fail('Ranger service is not started on given host')
        if ((ambari_ranger_admin != '') and (ambari_ranger_password != '')):
            get_repo_flag = get_repo(params.policymgr_mgr_url, params.repo_name, ambari_username_password_for_ranger)
            if (not get_repo_flag):
                create_repo(params.policymgr_mgr_url, json.dumps(params.kms_ranger_plugin_repo), ambari_username_password_for_ranger)
        else:
            raise Fail('Ambari admin username and password not available')
        file_path = format('{kms_home}/install.properties')
        if (not os.path.isfile(file_path)):
            raise Fail(format('Ranger kms install.properties file does not exist at {file_path}'))
        ModifyPropertiesFile(file_path, properties=params.config['configurations']['kms-properties'])
        env_dict = {'JAVA_HOME': params.java_home, 'RANGER_HOME': params.kms_home, }
        setup_sh = (format('cd {kms_home} && ') + as_sudo([format('{kms_home}/setup.sh')]))
        Execute(setup_sh, environment=env_dict, logoutput=True)
        XmlConfig('kms-site.xml', conf_dir=params.kms_conf_dir, configurations=params.config['configurations']['kms-site'], configuration_attributes=params.config['configuration_attributes']['kms-site'], owner=params.kms_user, group=params.kms_group)
        File(os.path.join(params.kms_conf_dir, 'kms-log4j.properties'), owner=params.kms_user, group=params.kms_group, content=params.kms_log4j)
        File(format('{kms_conf_dir}/dbks-site.xml'), owner=params.kms_user, group=params.kms_group)
        File(format('{kms_home}/ranger-kms'), mode=493)
