{
  if (userEntity == null) {
    return Collections.emptyList();
  }
  List<PrincipalEntity> principalEntities=new LinkedList<PrincipalEntity>();
  principalEntities.add(userEntity.getPrincipal());
  List<MemberEntity> memberEntities=memberDAO.findAllMembersByUser(userEntity);
  for (  MemberEntity memberEntity : memberEntities) {
    principalEntities.add(memberEntity.getGroup().getPrincipal());
  }
  List<PrivilegeEntity> explicitPrivilegeEntities=privilegeDAO.findAllByPrincipal(principalEntities);
  List<PrivilegeEntity> implicitPrivilegeEntities=getImplicitPrivileges(explicitPrivilegeEntities);
  List<PrivilegeEntity> privilegeEntities;
  if (implicitPrivilegeEntities.isEmpty()) {
    privilegeEntities=explicitPrivilegeEntities;
  }
 else {
    privilegeEntities=new LinkedList<PrivilegeEntity>();
    privilegeEntities.addAll(explicitPrivilegeEntities);
    privilegeEntities.addAll(implicitPrivilegeEntities);
  }
  return privilegeEntities;
}
