def __get_repo_version(self, version):
    '\n    Get the Repo Version object whose version matches.\n    :param version: Version string, e.g., 2.3.0.0-1234\n    :return: Return the a dictionary with the parameters of the object.\n    '
    if (self.compare_versions(self.ambari_version, '2.1.0') < 0):
        query = "SELECT repo_version_id, version, display_name FROM repo_version WHERE version = '{0}';".format(version)
    else:
        query = "SELECT repo_version_id, version, display_name, stack_id FROM repo_version WHERE version = '{0}';".format(version)
    self.cursor.execute(query)
    rows = self.cursor.fetchall()
    if ((rows is not None) or (len(rows) == 1)):
        obj = {}
        if (len(rows[0]) >= 3):
            obj = {'repo_version_id': rows[0][0], 'version': rows[0][1], 'display_name': rows[0][2], }
        if (len(rows[0]) >= 4):
            obj['stack_id'] = rows[0][3]
        return obj
    Logger.warning('Unable to run query, or generated multiple rows: {0}'.format(query))
    return None
