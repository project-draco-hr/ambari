def __get_update_statements_for_tasks_in_progress(self, upgrade_in_progress):
    '\n    When an RU is in progress, need to abort any host_role_command records for it that are still PENDING, QUEUED, IN_PROGRESS, HOLDING.\n    :param upgrade_in_progress: Dictionary of the upgrade in progress, which contains an "upgrade_id"\n    :return: List of update statements to run, or empty list if no statements could be generated.\n    '
    statements = []
    if (upgrade_in_progress and ('upgrade_id' in upgrade_in_progress)):
        query = 'SELECT DISTINCT(hrc.request_id) FROM upgrade u JOIN upgrade_group g ON u.upgrade_id = g.upgrade_id JOIN upgrade_item i ON g.upgrade_group_id = i.upgrade_group_id JOIN host_role_command hrc ON i.stage_id = hrc.stage_id AND u.request_id = hrc.request_id WHERE u.upgrade_id = {0} LIMIT 1;'.format(upgrade_in_progress['upgrade_id'])
        self.cursor.execute(query)
        row = self.cursor.fetchone()
        if (row and (len(row) == 1)):
            request_id = row[0]
            statements.append("UPDATE host_role_command SET status = 'ABORTED' WHERE request_id = {0} AND status IN ('PENDING', 'QUEUED', 'IN_PROGRESS', 'HOLDING');".format(request_id))
    return statements
