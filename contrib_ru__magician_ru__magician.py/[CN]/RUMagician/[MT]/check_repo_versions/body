def check_repo_versions(self):
    '\n    Check that all display names are unique, that all versions are unique.\n    '
    query = 'SELECT version, display_name FROM repo_version;'
    self.cursor.execute(query)
    rows = self.cursor.fetchall()
    if (rows is None):
        Logger.warning('Did not find any Repo Versions, nothing to do. Query: {0}'.format(query))
        return
    if (len(rows) == 0):
        Logger.info('There are no Repo Versions, nothing to do.')
    elif (len(rows) > 0):
        version_name_to_count = {}
        display_name_to_count = {}
        for row in rows:
            if (len(row) == 2):
                version = row[0]
                display_name = row[1]
                if (version in version_name_to_count):
                    version_name_to_count[version] += 1
                else:
                    version_name_to_count[version] = 1
                if (display_name in display_name_to_count):
                    display_name_to_count[display_name] += 1
                else:
                    display_name_to_count[display_name] = 1
        problematic_versions = set()
        for (k, v) in version_name_to_count.iteritems():
            if (v > 1):
                problematic_versions.add(k)
        problematic_display_names = set()
        for (k, v) in display_name_to_count.iteritems():
            if (v > 1):
                problematic_display_names.add(k)
        found_error = False
        if (len(problematic_versions) > 0):
            found_error = True
            Logger.error('The following version(s) exist multiple times in the Repo Versions: {0}'.format(', '.join(problematic_versions)))
        if (len(problematic_display_names) > 0):
            found_error = True
            Logger.error('The following display name(s) exist multiple times in the Repo Versions: {0}'.format(', '.join(problematic_display_names)))
        if found_error:
            Logger.error('You will have to correct this error manually by ensuring uniqueness.')
        else:
            Logger.info('Looks good; all of the Repo Versions have unique display names and versions.')
    pass
