def __normalize_version(self, v, desired_segments=0):
    '\n    :param v: Input string of the form "#.#.#" or "#.#.#.#"\n    :param desired_segments: If greater than 0, and if v has fewer segments this parameter, will pad v with segments\n    containing "0" until the desired segments is reached.\n    :return: Returns a list of integers representing the segments of the version\n    '
    v_list = v.split('.')
    if ((desired_segments > 0) and (len(v_list) < desired_segments)):
        v_list = (v_list + ((desired_segments - len(v_list)) * ['0']))
    return [int(x) for x in v_list]
