def __get_last_upgrade_id_for_repo_version(self, version):
    '\n    Get the most recent upgrade_id for the Upgrade record whose to_version matches the version.\n    :param version: Version string, e.g., 2.3.0.0-1234\n    :return: Return the a dictionary with the parameters of the object.\n    '
    query = "SELECT u.upgrade_id, u.direction, u.from_version, u.to_version FROM upgrade u JOIN repo_version rv ON u.to_version = rv.version JOIN cluster_version cv ON rv.repo_version_id = cv.repo_version_id AND cv.cluster_id = {0} AND u.to_version = '{1}' AND cv.state IN ('UPGRADING', 'UPGRADED') ORDER BY u.upgrade_id DESC;".format(self.cluster_id, version)
    self.cursor.execute(query)
    rows = self.cursor.fetchall()
    if ((rows is not None) and (len(rows) == 1)):
        obj = {}
        if (len(rows[0]) == 4):
            obj = {'upgrade_id': rows[0][0], 'direction': rows[0][1], 'from_version': rows[0][2], 'from_version': rows[0][3], }
            return obj
    return None
