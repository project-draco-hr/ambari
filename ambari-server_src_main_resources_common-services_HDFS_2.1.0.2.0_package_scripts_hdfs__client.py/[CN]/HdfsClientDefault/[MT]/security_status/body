def security_status(self, env):
    import status_params
    env.set_params(status_params)
    props_value_check = {'hadoop.security.authentication': 'kerberos', 'hadoop.security.authorization': 'true', }
    props_empty_check = ['hadoop.security.auth_to_local']
    props_read_check = None
    core_site_expectations = build_expectations('core-site', props_value_check, props_empty_check, props_read_check)
    hdfs_expectations = {}
    hdfs_expectations.update(core_site_expectations)
    security_params = get_params_from_filesystem(status_params.hadoop_conf_dir, {'core-site.xml': FILE_TYPE_XML, })
    if (('core-site' in security_params) and ('hadoop.security.authentication' in security_params['core-site']) and (security_params['core-site']['hadoop.security.authentication'].lower() == 'kerberos')):
        result_issues = validate_security_config_properties(security_params, hdfs_expectations)
        if (not result_issues):
            if (status_params.hdfs_user_principal or status_params.hdfs_user_keytab):
                try:
                    cached_kinit_executor(status_params.kinit_path_local, status_params.hdfs_user, status_params.hdfs_user_keytab, status_params.hdfs_user_principal, status_params.hostname, status_params.tmp_dir)
                    self.put_structured_out({'securityState': 'SECURED_KERBEROS', })
                except Exception as e:
                    self.put_structured_out({'securityState': 'ERROR', })
                    self.put_structured_out({'securityStateErrorInfo': str(e), })
            else:
                self.put_structured_out({'securityIssuesFound': 'hdfs principal and/or keytab file is not specified', })
                self.put_structured_out({'securityState': 'UNSECURED', })
        else:
            issues = []
            for cf in result_issues:
                issues.append(('Configuration file %s did not pass the validation. Reason: %s' % (cf, result_issues[cf])))
            self.put_structured_out({'securityIssuesFound': '. '.join(issues), })
            self.put_structured_out({'securityState': 'UNSECURED', })
    else:
        self.put_structured_out({'securityState': 'UNSECURED', })
