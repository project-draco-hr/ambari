{
  installDependencies();
  handler=mock(HeartBeatHandler.class);
  response.setResponseStatus(RegistrationStatus.OK);
  hresponse.setResponseId(0L);
  componentsResponse.setClusterName("dummycluster");
  try {
    when(handler.handleRegistration(any(Register.class))).thenReturn(response);
    when(handler.handleHeartBeat(any(HeartBeat.class))).thenReturn(hresponse);
    when(handler.handleComponents(any(String.class))).thenReturn(componentsResponse);
  }
 catch (  Exception ex) {
  }
  requestStaticInjection(AgentResource.class);
  bind(Clusters.class).to(ClustersImpl.class);
  os_family=mock(OsFamily.class);
  actionManager=mock(ActionManager.class);
  ambariMetaInfo=mock(AmbariMetaInfo.class);
  actionDBAccessor=mock(ActionDBAccessor.class);
  bind(OsFamily.class).toInstance(os_family);
  bind(ActionDBAccessor.class).toInstance(actionDBAccessor);
  bind(ActionManager.class).toInstance(actionManager);
  bind(AgentCommand.class).to(ExecutionCommand.class);
  bind(HeartBeatHandler.class).toInstance(handler);
  bind(AmbariMetaInfo.class).toInstance(ambariMetaInfo);
  bind(DBAccessor.class).toInstance(mock(DBAccessor.class));
}
