def __init__(self, alert_meta, alert_source_meta, config):
    ' ScriptAlert reporting structure is output from the script itself '
    alert_source_meta['reporting'] = {'ok': {'text': '{0}', }, 'warning': {'text': '{0}', }, 'critical': {'text': '{0}', }, 'unknown': {'text': '{0}', }, }
    super(ScriptAlert, self).__init__(alert_meta, alert_source_meta, config)
    self.path = None
    self.stacks_dir = None
    self.common_services_dir = None
    self.host_scripts_dir = None
    self.path_to_script = None
    self.parameters = {}
    self.kinit_timeout = long(config.get('agent', 'alert_kinit_timeout', BaseAlert._DEFAULT_KINIT_TIMEOUT))
    if ('path' in alert_source_meta):
        self.path = alert_source_meta['path']
    if ('common_services_directory' in alert_source_meta):
        self.common_services_dir = alert_source_meta['common_services_directory']
    if ('stacks_directory' in alert_source_meta):
        self.stacks_dir = alert_source_meta['stacks_directory']
    if ('host_scripts_directory' in alert_source_meta):
        self.host_scripts_dir = alert_source_meta['host_scripts_directory']
    if ('parameters' in alert_source_meta):
        parameters = alert_source_meta['parameters']
        for parameter in parameters:
            if (('name' not in parameter) or ('value' not in parameter)):
                continue
            parameter_name = parameter['name']
            parameter_value = parameter['value']
            self.parameters[parameter_name] = parameter_value
    self.parameters[KERBEROS_KINIT_TIMER_PARAMETER] = self.kinit_timeout
