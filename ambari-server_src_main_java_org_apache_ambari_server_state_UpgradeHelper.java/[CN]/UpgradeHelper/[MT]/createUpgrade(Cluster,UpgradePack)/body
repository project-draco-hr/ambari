{
  Map<String,Map<String,ProcessingComponent>> allTasks=upgradePack.getTasks();
  List<UpgradeGroupHolder> groups=new ArrayList<UpgradeGroupHolder>();
  for (  Grouping group : upgradePack.getGroups()) {
    UpgradeGroupHolder groupHolder=new UpgradeGroupHolder();
    groupHolder.name=group.name;
    groupHolder.title=group.title;
    groups.add(groupHolder);
    StageWrapperBuilder builder=group.getBuilder();
    for (    UpgradePack.OrderService service : group.services) {
      if (!allTasks.containsKey(service.serviceName)) {
        continue;
      }
      for (      String component : service.components) {
        if (!allTasks.get(service.serviceName).containsKey(component)) {
          continue;
        }
        Set<String> componentHosts=getClusterHosts(cluster,service.serviceName,component);
        if (0 == componentHosts.size()) {
          continue;
        }
        ProcessingComponent pc=allTasks.get(service.serviceName).get(component);
        builder.add(componentHosts,service.serviceName,pc);
      }
    }
    List<StageWrapper> proxies=builder.build();
    if (LOG.isDebugEnabled()) {
      LOG.debug(group.name);
      int i=0;
      for (      StageWrapper proxy : proxies) {
        LOG.debug("  Stage {}",Integer.valueOf(i++));
        int j=0;
        for (        TaskWrapper task : proxy.getTasks()) {
          LOG.debug("    Task {} {}",Integer.valueOf(j++),task);
        }
      }
    }
    groupHolder.items=proxies;
  }
  return groups;
}
