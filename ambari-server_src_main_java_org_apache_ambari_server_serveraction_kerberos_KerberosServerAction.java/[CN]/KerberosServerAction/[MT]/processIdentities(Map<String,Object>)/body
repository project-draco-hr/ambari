{
  CommandReport commandReport=null;
  Map<String,String> commandParameters=getCommandParameters();
  if (commandParameters != null) {
    KerberosCredential administratorCredential=getAdministratorCredential(commandParameters);
    String defaultRealm=getDefaultRealm(commandParameters);
    KDCType kdcType=getKDCType(commandParameters);
    String dataDirectoryPath=getDataDirectoryPath(commandParameters);
    if (dataDirectoryPath != null) {
      File dataDirectory=new File(dataDirectoryPath);
      if (!dataDirectory.exists() || !dataDirectory.isDirectory()) {
        String message=String.format("Failed to process the identities, the data directory does not exist: %s",dataDirectory.getAbsolutePath());
        LOG.error(message);
        throw new AmbariException(message);
      }
      File indexFile=new File(dataDirectory,KerberosActionDataFileBuilder.DATA_FILE_NAME);
      if (!indexFile.canRead()) {
        String message=String.format("Failed to process the identities, cannot read the index file: %s",indexFile.getAbsolutePath());
        LOG.error(message);
        throw new AmbariException(message);
      }
      KerberosActionDataFileReader reader=null;
      KerberosOperationHandler handler=KerberosOperationHandlerFactory.getKerberosOperationHandler(kdcType);
      if (handler == null) {
        String message=String.format("Failed to process the identities, cannot read the index file: %s",indexFile.getAbsolutePath());
        LOG.error(message);
        throw new AmbariException(message);
      }
      handler.open(administratorCredential,defaultRealm);
      try {
        reader=new KerberosActionDataFileReader(indexFile);
        for (        Map<String,String> record : reader) {
          commandReport=processRecord(record,defaultRealm,handler,requestSharedDataContext);
          if (commandReport != null) {
            break;
          }
        }
      }
 catch (      IOException e) {
        String message=String.format("Failed to process the identities, cannot read the index file: %s",indexFile.getAbsolutePath());
        LOG.error(message,e);
        throw new AmbariException(message,e);
      }
 finally {
        if (reader != null) {
          try {
            reader.close();
          }
 catch (          IOException e) {
          }
        }
        try {
          handler.close();
        }
 catch (        AmbariException e) {
        }
      }
    }
  }
  return (commandReport == null) ? createCommandReport(0,HostRoleStatus.COMPLETED,"{}",null,null) : commandReport;
}
