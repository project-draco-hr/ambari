{
  int maxRecsPerName=2;
  int maxEvictionTime=TimelineMetricsCache.MAX_EVICTION_TIME_MILLIS;
  TimelineMetricsCache timelineMetricsCache=new TimelineMetricsCache(maxRecsPerName,maxEvictionTime);
  timelineMetricsCache.putTimelineMetric(createTimelineMetricSingleValue(DEFAULT_START_TIME));
  timelineMetricsCache.putTimelineMetric(createTimelineMetricSingleValue(DEFAULT_START_TIME + maxEvictionTime * 2));
  TimelineMetric cachedMetric=timelineMetricsCache.getTimelineMetric(METRIC_NAME);
  assertNotNull(cachedMetric);
  assertFalse(cachedMetric.getMetricValues().isEmpty());
  assertEquals("2 values added.",2,cachedMetric.getMetricValues().size());
  assertEquals(DEFAULT_START_TIME,cachedMetric.getStartTime());
  timelineMetricsCache.putTimelineMetric(createTimelineMetricSingleValue(DEFAULT_START_TIME));
  timelineMetricsCache.putTimelineMetric(createTimelineMetricSingleValue(DEFAULT_START_TIME + maxEvictionTime * 2));
  timelineMetricsCache.putTimelineMetric(createTimelineMetricSingleValue(DEFAULT_START_TIME + maxEvictionTime * 3));
  cachedMetric=timelineMetricsCache.getTimelineMetric(METRIC_NAME);
  assertNotNull(cachedMetric);
  assertFalse(cachedMetric.getMetricValues().isEmpty());
  assertEquals("3 values added.",3,cachedMetric.getMetricValues().size());
  assertEquals(DEFAULT_START_TIME,cachedMetric.getStartTime());
  timelineMetricsCache.putTimelineMetric(createTimelineMetricSingleValue(DEFAULT_START_TIME));
  timelineMetricsCache.putTimelineMetric(createTimelineMetricSingleValue(DEFAULT_START_TIME + maxEvictionTime * 2));
  timelineMetricsCache.putTimelineMetric(createTimelineMetricSingleValue(DEFAULT_START_TIME + maxEvictionTime * 3));
  timelineMetricsCache.putTimelineMetric(createTimelineMetricSingleValue(DEFAULT_START_TIME + maxEvictionTime * 4));
  cachedMetric=timelineMetricsCache.getTimelineMetric(METRIC_NAME);
  assertNotNull(cachedMetric);
  assertFalse(cachedMetric.getMetricValues().isEmpty());
  assertEquals("1 metric value should have been removed",3,cachedMetric.getMetricValues().size());
  assertEquals(DEFAULT_START_TIME + maxEvictionTime * 2,cachedMetric.getStartTime());
}
