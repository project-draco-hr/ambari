{
  TimelineMetric metric=createTimelineMetric(new TreeMap<Long,Double>(){
{
      put(1L,10.0);
    }
  }
,DEFAULT_START_TIME);
  timelineMetricsCache.putTimelineMetric(metric,true);
  metric=createTimelineMetric(new TreeMap<Long,Double>(){
{
      put(2L,10.0);
      put(3L,20.0);
      put(4L,30.0);
    }
  }
,DEFAULT_START_TIME + 2 * TimelineMetricsCache.MAX_EVICTION_TIME_MILLIS);
  timelineMetricsCache.putTimelineMetric(metric,true);
  TimelineMetric cachedMetric=timelineMetricsCache.getTimelineMetric(METRIC_NAME);
  assertEquals(0,cachedMetric.getMetricValues().get(1L),delta);
  assertEquals(0,cachedMetric.getMetricValues().get(2L),delta);
  assertEquals(10,cachedMetric.getMetricValues().get(3L),delta);
  assertEquals(10,cachedMetric.getMetricValues().get(4L),delta);
  metric=createTimelineMetric(new TreeMap<Long,Double>(){
{
      put(5L,100.0);
      put(6L,120.0);
      put(7L,230.0);
    }
  }
,DEFAULT_START_TIME + 3 * TimelineMetricsCache.MAX_EVICTION_TIME_MILLIS);
  timelineMetricsCache.putTimelineMetric(metric,true);
  metric=createTimelineMetric(new TreeMap<Long,Double>(){
{
      put(8L,300.0);
    }
  }
,DEFAULT_START_TIME + 5 * TimelineMetricsCache.MAX_EVICTION_TIME_MILLIS);
  timelineMetricsCache.putTimelineMetric(metric,true);
  cachedMetric=timelineMetricsCache.getTimelineMetric(METRIC_NAME);
  assertEquals(70,cachedMetric.getMetricValues().get(5L),delta);
  assertEquals(20,cachedMetric.getMetricValues().get(6L),delta);
  assertEquals(110,cachedMetric.getMetricValues().get(7L),delta);
  assertEquals(70,cachedMetric.getMetricValues().get(8L),delta);
}
