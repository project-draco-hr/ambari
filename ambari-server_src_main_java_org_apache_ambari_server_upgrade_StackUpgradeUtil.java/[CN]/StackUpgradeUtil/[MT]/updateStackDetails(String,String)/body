{
  ClusterDAO clusterDAO=injector.getInstance(ClusterDAO.class);
  StackDAO stackDAO=injector.getInstance(StackDAO.class);
  List<Long> clusterIds=new ArrayList<Long>();
  StackEntity stackEntity=stackDAO.find(stackName,stackVersion);
  List<ClusterEntity> clusterEntities=clusterDAO.findAll();
  if (clusterEntities != null && !clusterEntities.isEmpty()) {
    for (    ClusterEntity entity : clusterEntities) {
      clusterIds.add(entity.getClusterId());
      entity.setDesiredStack(stackEntity);
      clusterDAO.merge(entity);
    }
  }
  ClusterStateDAO clusterStateDAO=injector.getInstance(ClusterStateDAO.class);
  for (  Long clusterId : clusterIds) {
    ClusterStateEntity clusterStateEntity=clusterStateDAO.findByPK(clusterId);
    clusterStateEntity.setCurrentStack(stackEntity);
    clusterStateDAO.merge(clusterStateEntity);
  }
  HostComponentStateDAO hostComponentStateDAO=injector.getInstance(HostComponentStateDAO.class);
  List<HostComponentStateEntity> hcEntities=hostComponentStateDAO.findAll();
  if (hcEntities != null) {
    for (    HostComponentStateEntity hc : hcEntities) {
      hc.setCurrentStack(stackEntity);
      hostComponentStateDAO.merge(hc);
    }
  }
  HostComponentDesiredStateDAO hostComponentDesiredStateDAO=injector.getInstance(HostComponentDesiredStateDAO.class);
  List<HostComponentDesiredStateEntity> hcdEntities=hostComponentDesiredStateDAO.findAll();
  if (hcdEntities != null) {
    for (    HostComponentDesiredStateEntity hcd : hcdEntities) {
      hcd.setDesiredStack(stackEntity);
      hostComponentDesiredStateDAO.merge(hcd);
    }
  }
  ServiceComponentDesiredStateDAO serviceComponentDesiredStateDAO=injector.getInstance(ServiceComponentDesiredStateDAO.class);
  List<ServiceComponentDesiredStateEntity> scdEntities=serviceComponentDesiredStateDAO.findAll();
  if (scdEntities != null) {
    for (    ServiceComponentDesiredStateEntity scd : scdEntities) {
      scd.setDesiredStack(stackEntity);
      serviceComponentDesiredStateDAO.merge(scd);
    }
  }
  ServiceDesiredStateDAO serviceDesiredStateDAO=injector.getInstance(ServiceDesiredStateDAO.class);
  List<ServiceDesiredStateEntity> sdEntities=serviceDesiredStateDAO.findAll();
  if (sdEntities != null) {
    for (    ServiceDesiredStateEntity sd : sdEntities) {
      sd.setDesiredStack(stackEntity);
      serviceDesiredStateDAO.merge(sd);
    }
  }
}
