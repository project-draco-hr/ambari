{
  MetainfoDAO metaInfoDao=createNiceMock(MetainfoDAO.class);
  StackDAO stackDao=createNiceMock(StackDAO.class);
  ExtensionDAO extensionDao=createNiceMock(ExtensionDAO.class);
  ExtensionLinkDAO linkDao=createNiceMock(ExtensionLinkDAO.class);
  ActionMetadata actionMetadata=createNiceMock(ActionMetadata.class);
  OsFamily osFamily=createNiceMock(OsFamily.class);
  StackEntity stackEntity=createNiceMock(StackEntity.class);
  actionMetadata.addServiceCheckAction("HDFS");
  expect(stackDao.find(EasyMock.anyObject(String.class),EasyMock.anyObject(String.class))).andReturn(stackEntity).atLeastOnce();
  List<ExtensionLinkEntity> list=Collections.emptyList();
  expect(linkDao.findByStack(EasyMock.anyObject(String.class),EasyMock.anyObject(String.class))).andReturn(list).atLeastOnce();
  replay(metaInfoDao,stackDao,extensionDao,linkDao,actionMetadata,osFamily);
  String singleStack=ClassLoader.getSystemClassLoader().getResource("single_stack").getPath();
  StackManager stackManager=new StackManager(new File(singleStack.replace(StackManager.PATH_DELIMITER,File.separator)),null,null,osFamily,false,metaInfoDao,actionMetadata,stackDao,extensionDao,linkDao);
  Collection<StackInfo> stacks=stackManager.getStacks();
  assertEquals(1,stacks.size());
  assertNotNull(stacks.iterator().next().getService("HDFS"));
  verify(metaInfoDao,stackDao,actionMetadata,osFamily);
}
