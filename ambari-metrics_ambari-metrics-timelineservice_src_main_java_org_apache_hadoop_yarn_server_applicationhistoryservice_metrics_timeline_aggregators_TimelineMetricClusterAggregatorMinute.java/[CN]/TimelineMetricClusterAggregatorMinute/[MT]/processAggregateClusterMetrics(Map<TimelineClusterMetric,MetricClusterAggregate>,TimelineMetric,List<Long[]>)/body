{
  Map<TimelineClusterMetric,Double> clusterMetrics=sliceFromTimelineMetric(metric,timeSlices);
  if (clusterMetrics != null && !clusterMetrics.isEmpty()) {
    for (    Map.Entry<TimelineClusterMetric,Double> clusterMetricEntry : clusterMetrics.entrySet()) {
      TimelineClusterMetric clusterMetric=clusterMetricEntry.getKey();
      Double avgValue=clusterMetricEntry.getValue();
      MetricClusterAggregate aggregate=aggregateClusterMetrics.get(clusterMetric);
      if (aggregate == null) {
        aggregate=new MetricClusterAggregate(avgValue,1,null,avgValue,avgValue);
        aggregateClusterMetrics.put(clusterMetric,aggregate);
      }
 else {
        aggregate.updateSum(avgValue);
        aggregate.updateNumberOfHosts(1);
        aggregate.updateMax(avgValue);
        aggregate.updateMin(avgValue);
      }
      appAggregator.processTimelineClusterMetric(clusterMetric,metric.getHostName(),avgValue);
    }
  }
}
