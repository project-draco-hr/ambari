{
  Resource.Type type=Resource.Type.HostComponent;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  RequestStatusResponse response=createNiceMock(RequestStatusResponse.class);
  Injector injector=createNiceMock(Injector.class);
  HostComponentResourceProvider provider=new HostComponentResourceProvider(PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController,injector);
  expect(managementController.deleteHostComponents(AbstractResourceProviderTest.Matcher.getHostComponentRequestSet(null,null,"Component100","Host100",null,null))).andReturn(response);
  replay(managementController,response);
  SecurityContextHolder.getContext().setAuthentication(authentication);
  AbstractResourceProviderTest.TestObserver observer=new AbstractResourceProviderTest.TestObserver();
  provider.addObserver(observer);
  Predicate predicate=new PredicateBuilder().property(HostComponentResourceProvider.HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID).equals("Component100").and().property(HostComponentResourceProvider.HOST_COMPONENT_HOST_NAME_PROPERTY_ID).equals("Host100").toPredicate();
  provider.deleteResources(predicate);
  ResourceProviderEvent lastEvent=observer.getLastEvent();
  Assert.assertNotNull(lastEvent);
  Assert.assertEquals(Resource.Type.HostComponent,lastEvent.getResourceType());
  Assert.assertEquals(ResourceProviderEvent.Type.Delete,lastEvent.getType());
  Assert.assertEquals(predicate,lastEvent.getPredicate());
  Assert.assertNull(lastEvent.getRequest());
  verify(managementController,response);
}
