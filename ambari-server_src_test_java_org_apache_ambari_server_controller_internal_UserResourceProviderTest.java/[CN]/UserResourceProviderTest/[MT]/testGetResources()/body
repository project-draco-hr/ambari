{
  Resource.Type type=Resource.Type.User;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  Set<UserResponse> allResponse=new HashSet<UserResponse>();
  allResponse.add(new UserResponse("User100",false));
  expect(managementController.getUsers(AbstractResourceProviderTest.Matcher.getUserRequestSet("User100"))).andReturn(allResponse).once();
  replay(managementController);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  Set<String> propertyIds=new HashSet<String>();
  propertyIds.add(UserResourceProvider.USER_USERNAME_PROPERTY_ID);
  propertyIds.add(UserResourceProvider.USER_PASSWORD_PROPERTY_ID);
  Predicate predicate=new PredicateBuilder().property(UserResourceProvider.USER_USERNAME_PROPERTY_ID).equals("User100").toPredicate();
  Request request=PropertyHelper.getReadRequest(propertyIds);
  Set<Resource> resources=provider.getResources(request,predicate);
  Assert.assertEquals(1,resources.size());
  for (  Resource resource : resources) {
    String userName=(String)resource.getPropertyValue(UserResourceProvider.USER_USERNAME_PROPERTY_ID);
    Assert.assertEquals("User100",userName);
  }
  verify(managementController);
}
