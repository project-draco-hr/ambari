def invoke(self, http_method, url_path=None, payload=None, headers=None):
    '\n    Invoke an API http_method.\n    '
    path = self._join_uri(url_path)
    (resp, code, content) = self._make_invoke(http_method, payload, headers, path)
    LOG.debug(('RESPONSE from the REST request >>>>>>> \n' + str(resp)))
    LOG.debug('\n===========================================================')
    if ((not resp) and ((code != 200) and (code != 201))):
        LOG.error(("Command '%s %s' failed with error %s" % (http_method, path, code)))
        return {'status': code, 'message': ("Command '%s %s' failed with error %s" % (http_method, path, code)), }
    if (resp and ((code == 404) or (code == 405))):
        LOG.error(("Command '%s %s' failed with error %s" % (http_method, path, code)))
        return {'status': code, 'message': ("Command '%s %s' failed with error %s" % (http_method, path, code)), }
    try:
        if (((code == 200) or (code == 201)) and (not resp)):
            return {'status': code, }
        json_dict = json.loads(resp)
        return json_dict
    except Exception as ex:
        LOG.error(('JSON decode error: %s' % (resp,)))
        raise ex
