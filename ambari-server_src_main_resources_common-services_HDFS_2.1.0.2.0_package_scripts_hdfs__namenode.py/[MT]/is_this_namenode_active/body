@retry(times=5, sleep_time=5, backoff_factor=2, err_class=Fail)
def is_this_namenode_active():
    '\n  Gets whether the current NameNode is Active. This function will wait until the NameNode is\n  listed as being either Active or Standby before returning a value. This is to ensure that\n  that if the other NameNode is Active, we ensure that this NameNode has fully loaded and\n  registered in the event that the other NameNode is going to be restarted. This prevents\n  a situation where we detect the other NameNode as Active before this NameNode has fully booted.\n  If the other Active NameNode is then restarted, there can be a loss of service if this\n  NameNode has not entered Standby.\n  '
    import params
    namenode_states = namenode_ha_utils.get_namenode_states(params.hdfs_site, params.security_enabled, params.hdfs_user, times=5, sleep_time=5, backoff_factor=2)
    active_namenodes = ([] if (len(namenode_states[0]) < 1) else namenode_states[0][0])
    standby_namenodes = ([] if (len(namenode_states[1]) < 1) else namenode_states[1][0])
    if (params.namenode_id in active_namenodes):
        return True
    if (params.namenode_id in standby_namenodes):
        return False
    raise Fail(format('The NameNode {namenode_id} is not listed as Active or Standby, waiting...'))
