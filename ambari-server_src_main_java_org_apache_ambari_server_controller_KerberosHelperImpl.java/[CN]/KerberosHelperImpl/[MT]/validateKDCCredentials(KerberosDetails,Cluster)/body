{
  if (kerberosDetails == null) {
    kerberosDetails=getKerberosDetails(cluster,null);
  }
  if (kerberosDetails.manageIdentities()) {
    PrincipalKeyCredential credentials=getKDCAdministratorCredentials(cluster.getClusterName());
    if (credentials == null) {
      throw new KerberosMissingAdminCredentialsException();
    }
 else {
      KerberosOperationHandler operationHandler=kerberosOperationHandlerFactory.getKerberosOperationHandler(kerberosDetails.getKdcType());
      if (operationHandler == null) {
        throw new AmbariException("Failed to get an appropriate Kerberos operation handler.");
      }
 else {
        boolean missingCredentials=false;
        try {
          operationHandler.open(credentials,kerberosDetails.getDefaultRealm(),kerberosDetails.getKerberosEnvProperties());
          missingCredentials=!operationHandler.testAdministratorCredentials();
        }
 catch (        KerberosAdminAuthenticationException e) {
          throw new KerberosAdminAuthenticationException("Invalid KDC administrator credentials.\n" + "The KDC administrator credentials must be set as a persisted or temporary credential resource." + "This may be done by issuing a POST (or PUT for updating) to the /api/v1/clusters/:clusterName/credentials/kdc.admin.credential API entry point with the following payload:\n"+ "{\n"+ "  \"Credential\" : {\n"+ "    \"principal\" : \"(PRINCIPAL)\", \"key\" : \"(PASSWORD)\", \"type\" : \"(persisted|temporary)\"}\n"+ "  }\n"+ "}",e);
        }
catch (        KerberosKDCConnectionException e) {
          throw new KerberosInvalidConfigurationException("Failed to connect to KDC - " + e.getMessage() + "\n"+ "Update the KDC settings in krb5-conf and kerberos-env configurations to correct this issue.",e);
        }
catch (        KerberosRealmException e) {
          throw new KerberosInvalidConfigurationException("Failed to find a KDC for the specified realm - " + e.getMessage() + "\n"+ "Update the KDC settings in krb5-conf and kerberos-env configurations to correct this issue.",e);
        }
catch (        KerberosLDAPContainerException e) {
          throw new KerberosInvalidConfigurationException("The principal container was not specified\n" + "Set the 'container_dn' value in the kerberos-env configuration to correct this issue.",e);
        }
catch (        KerberosOperationException e) {
          throw new AmbariException(e.getMessage(),e);
        }
 finally {
          try {
            operationHandler.close();
          }
 catch (          KerberosOperationException e) {
          }
        }
        if (missingCredentials) {
          throw new KerberosMissingAdminCredentialsException();
        }
      }
    }
  }
}
