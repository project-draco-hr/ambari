{
  Map<String,UpgradePack> upgrades=ambariMetaInfo.getUpgradePacks("HDP","2.1.1");
  assertTrue(upgrades.containsKey("upgrade_test"));
  UpgradePack upgrade=upgrades.get("upgrade_test");
  assertNotNull(upgrade);
  makeCluster();
  UpgradeContext context=new UpgradeContext(m_masterHostResolver,HDP_21,HDP_21,DOWNGRADE_VERSION,Direction.DOWNGRADE,UpgradeType.ROLLING);
  List<UpgradeGroupHolder> groups=m_upgradeHelper.createSequence(upgrade,context);
  assertEquals(6,groups.size());
  UpgradeGroupHolder preGroup=groups.get(0);
  assertEquals("PRE_CLUSTER",preGroup.name);
  assertEquals("HIVE",groups.get(1).name);
  assertEquals("CORE_SLAVES",groups.get(2).name);
  assertEquals("CORE_MASTER",groups.get(3).name);
  assertEquals("ZOOKEEPER",groups.get(4).name);
  UpgradeGroupHolder postGroup=groups.get(5);
  assertEquals("POST_CLUSTER",postGroup.name);
  assertEquals("Finalize Downgrade",postGroup.title);
  assertEquals(3,postGroup.items.size());
  assertEquals("Confirm Finalize",postGroup.items.get(0).getText());
  assertEquals("Execute HDFS Finalize",postGroup.items.get(1).getText());
  assertEquals("Save Cluster State",postGroup.items.get(2).getText());
  assertEquals(StageWrapper.Type.SERVER_SIDE_ACTION,postGroup.items.get(2).getType());
  assertEquals(4,groups.get(0).items.size());
  assertEquals(2,groups.get(1).items.size());
  assertEquals(8,groups.get(2).items.size());
  assertEquals(7,groups.get(3).items.size());
  assertEquals(5,groups.get(4).items.size());
}
