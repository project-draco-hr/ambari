@patch('hawqstandby.common.__set_osparams')
@patch('hawqstandby.master_helper.__is_active_master')
@patch('hawqstandby.master_helper.__is_standby_host')
def test_start_default(self, standby_host_mock, active_master_mock, set_osparams_mock):
    standby_host_mock.return_value = True
    active_master_mock.return_value = False
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/hawqstandby.py'), classname='HawqStandby', command='start', config_file='hawq_default.json', stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    self.__asserts_for_configure()
    self.assertResourceCalled('Execute', 'source /usr/local/hawq/greenplum_path.sh && hawq ssh-exkeys -f /usr/local/hawq/etc/hawq_hosts -p gpadmin', logoutput=True, not_if=None, only_if=None, user=self.GPADMIN, timeout=900)
    self.assertResourceCalled('Execute', 'source /usr/local/hawq/greenplum_path.sh && hawq init standby -a -v', logoutput=True, not_if=None, only_if=None, user=self.GPADMIN, timeout=900)
    self.assertNoMoreResources()
