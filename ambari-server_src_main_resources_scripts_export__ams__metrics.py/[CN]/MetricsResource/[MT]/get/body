def get(self):
    args = request.args
    separator = '._'
    if (not ('metricNames' in args)):
        logger.error('Bad request')
        abort(404)
    if (separator in args['metricNames']):
        (metric_name, operation) = args['metricNames'].split(separator, 1)
    else:
        metric_name = args['metricNames']
        separator = ''
        operation = ''
    metric_dict = {'metrics': [], }
    if (('hostname' in args) and (args['hostname'] != '')):
        host_names = args['hostname'].split(',')
        metric_dict = {'metrics': [], }
        for host_name in host_names:
            if (metric_name in self.ams_metrics_processor.metrics_for_hosts[host_name]):
                if (len(self.ams_metrics_processor.metrics_for_hosts[host_name][metric_name]['metrics']) > 0):
                    metric_dict['metrics'].append(self.ams_metrics_processor.metrics_for_hosts[host_name][metric_name]['metrics'][0])
            else:
                continue
    elif Params.AGGREGATE:
        for metric in self.ams_metrics_processor.metrics_for_hosts:
            if (metric_name == metric):
                metric_dict = self.ams_metrics_processor.metrics_for_hosts[metric_name]
                break
    else:
        for host in self.ams_metrics_processor.metrics_for_hosts:
            for metric in self.ams_metrics_processor.metrics_for_hosts[host]:
                if ((metric_name == metric) and (len(self.ams_metrics_processor.metrics_for_hosts[host][metric_name]['metrics']) > 0)):
                    metric_dict = self.ams_metrics_processor.metrics_for_hosts[host][metric_name]
                    break
    if metric_dict:
        metrics_json_new = copy.deepcopy(metric_dict)
        for i in range(0, len(metrics_json_new['metrics'])):
            metrics_json_new['metrics'][i]['metricname'] += (separator + operation)
        return jsonify(metrics_json_new)
    else:
        abort(404)
        return
