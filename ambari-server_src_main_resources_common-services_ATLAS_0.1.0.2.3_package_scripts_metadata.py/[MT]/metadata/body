def metadata(type='server'):
    import params
    Directory([params.pid_dir], mode=493, cd_access='a', owner=params.metadata_user, group=params.user_group, create_parents=True)
    Directory(params.conf_dir, mode=493, cd_access='a', owner=params.metadata_user, group=params.user_group, create_parents=True)
    Directory(params.log_dir, mode=493, cd_access='a', owner=params.metadata_user, group=params.user_group, create_parents=True)
    Directory(params.data_dir, mode=420, cd_access='a', owner=params.metadata_user, group=params.user_group, create_parents=True)
    Directory(params.expanded_war_dir, mode=420, cd_access='a', owner=params.metadata_user, group=params.user_group, create_parents=True)
    File(format('{expanded_war_dir}/atlas.war'), content=StaticFile(format('{metadata_home}/server/webapp/atlas.war')))
    PropertiesFile(format('{conf_dir}/{conf_file}'), properties=params.application_properties, mode=420, owner=params.metadata_user, group=params.user_group)
    File(format('{conf_dir}/atlas-env.sh'), owner=params.metadata_user, group=params.user_group, mode=493, content=InlineTemplate(params.metadata_env_content))
    File(format('{conf_dir}/atlas-log4j.xml'), mode=420, owner=params.metadata_user, group=params.user_group, content=InlineTemplate(params.metadata_log4j_content))
    File(format('{conf_dir}/users-credentials.properties'), mode=420, owner=params.metadata_user, group=params.user_group, content=StaticFile('users-credentials.properties'))
    File(format('{conf_dir}/policy-store.txt'), mode=420, owner=params.metadata_user, group=params.user_group, content=StaticFile('policy-store.txt'))
    if ((type == 'server') and params.search_backend_solr and params.has_logsearch_solr):
        random_num = random.random()
        upload_conf_set('basic_configs', random_num)
        create_collection('vertex_index', 'basic_configs')
        create_collection('edge_index', 'basic_configs')
        create_collection('fulltext_index', 'basic_configs')
    if params.security_enabled:
        TemplateConfig(format(params.atlas_jaas_file), owner=params.metadata_user)
