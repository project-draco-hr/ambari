@OsFamilyFuncImpl(os_family=OsFamilyImpl.DEFAULT)
def hdfs(name=None):
    import params
    Directory(params.limits_conf_dir, recursive=True, owner='root', group='root')
    File(os.path.join(params.limits_conf_dir, 'hdfs.conf'), owner='root', group='root', mode=420, content=Template('hdfs.conf.j2'))
    if params.security_enabled:
        tc_mode = 420
        tc_owner = 'root'
    else:
        tc_mode = None
        tc_owner = params.hdfs_user
    if ('hadoop-policy' in params.config['configurations']):
        XmlConfig('hadoop-policy.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['hadoop-policy'], configuration_attributes=params.config['configuration_attributes']['hadoop-policy'], owner=params.hdfs_user, group=params.user_group)
    if ('ssl-client' in params.config['configurations']):
        XmlConfig('ssl-client.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['ssl-client'], configuration_attributes=params.config['configuration_attributes']['ssl-client'], owner=params.hdfs_user, group=params.user_group)
    if ('ssl-server' in params.config['configurations']):
        XmlConfig('ssl-server.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['ssl-server'], configuration_attributes=params.config['configuration_attributes']['ssl-server'], owner=params.hdfs_user, group=params.user_group)
    XmlConfig('hdfs-site.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['hdfs-site'], configuration_attributes=params.config['configuration_attributes']['hdfs-site'], owner=params.hdfs_user, group=params.user_group)
    XmlConfig('core-site.xml', conf_dir=params.hadoop_conf_dir, configurations=params.config['configurations']['core-site'], configuration_attributes=params.config['configuration_attributes']['core-site'], owner=params.hdfs_user, group=params.user_group, mode=420)
    File(os.path.join(params.hadoop_conf_dir, 'slaves'), owner=tc_owner, content=Template('slaves.j2'))
    File(format('{ambari_libs_dir}/fast-hdfs-resource.jar'), content=StaticFile('fast-hdfs-resource.jar'))
    if (params.lzo_enabled and (len(params.lzo_packages) > 0)):
        Package(params.lzo_packages)
