{
  String dataDirectoryPath=getCommandParameterValue(DATA_DIRECTORY);
  Map<String,Host> hosts=getClusters().getHostsForCluster(getClusterName());
  if ((hosts != null) && !hosts.isEmpty()) {
    Cluster cluster=getCluster();
    for (    String hostname : hosts.keySet()) {
      List<ServiceComponentHost> serviceComponentHosts=cluster.getServiceComponentHosts(hostname);
      for (      ServiceComponentHost sch : serviceComponentHosts) {
        SecurityState securityState=sch.getSecurityState();
        if (securityState.isTransitional()) {
          String message=String.format("Setting securityState for %s/%s on host %s to state %s",sch.getServiceName(),sch.getServiceComponentName(),sch.getHostName(),sch.getDesiredSecurityState().toString());
          LOG.info(message);
          actionLog.writeStdOut(message);
          sch.setSecurityState(sch.getDesiredSecurityState());
          ChangeSecurityStateKerberosAuditEvent auditEvent=ChangeSecurityStateKerberosAuditEvent.builder().withTimestamp(System.currentTimeMillis()).withService(sch.getServiceName()).withComponent(sch.getServiceComponentName()).withHostName(sch.getHostName()).withState(sch.getDesiredSecurityState().toString()).build();
          auditLog(auditEvent);
        }
      }
    }
  }
  if ((dataDirectoryPath != null) && dataDirectoryPath.contains("/" + DATA_DIRECTORY_PREFIX)) {
    File dataDirectory=new File(dataDirectoryPath);
    File dataDirectoryParent=dataDirectory.getParentFile();
    if ((dataDirectoryParent != null) && dataDirectory.isDirectory() && dataDirectoryParent.isDirectory()&& dataDirectoryParent.canWrite()) {
      try {
        FileUtils.deleteDirectory(dataDirectory);
      }
 catch (      IOException e) {
        String message=String.format("The data directory (%s) was not deleted due to an error condition - {%s}",dataDirectory.getAbsolutePath(),e.getMessage());
        LOG.warn(message,e);
      }
    }
  }
  return createCommandReport(0,HostRoleStatus.COMPLETED,"{}",actionLog.getStdOut(),actionLog.getStdErr());
}
