{
  if (identityRecord != null) {
    if (StageUtils.getHostName().equals(identityRecord.get(KerberosIdentityDataFile.HOSTNAME))) {
      Map<String,String> principalPasswordMap=getPrincipalPasswordMap(requestSharedDataContext);
      if ((principalPasswordMap == null) || !principalPasswordMap.containsKey(evaluatedPrincipal)) {
        String keytabFilePath=identityRecord.get(KerberosIdentityDataFile.KEYTAB_FILE_PATH);
        if (!StringUtils.isEmpty(keytabFilePath)) {
          Set<String> visited=(Set<String>)requestSharedDataContext.get(this.getClass().getName() + "_visited");
          if (!visited.contains(keytabFilePath)) {
            String ownerName=identityRecord.get(KerberosIdentityDataFile.KEYTAB_FILE_OWNER_NAME);
            String ownerAccess=identityRecord.get(KerberosIdentityDataFileReader.KEYTAB_FILE_OWNER_ACCESS);
            boolean ownerWritable="w".equalsIgnoreCase(ownerAccess) || "rw".equalsIgnoreCase(ownerAccess);
            boolean ownerReadable="r".equalsIgnoreCase(ownerAccess) || "rw".equalsIgnoreCase(ownerAccess);
            String groupName=identityRecord.get(KerberosIdentityDataFile.KEYTAB_FILE_GROUP_NAME);
            String groupAccess=identityRecord.get(KerberosIdentityDataFileReader.KEYTAB_FILE_OWNER_ACCESS);
            boolean groupWritable="w".equalsIgnoreCase(groupAccess) || "rw".equalsIgnoreCase(groupAccess);
            boolean groupReadable="r".equalsIgnoreCase(groupAccess) || "rw".equalsIgnoreCase(groupAccess);
            ShellCommandUtil.Result result;
            String message;
            result=ShellCommandUtil.setFileOwner(keytabFilePath,ownerName);
            if (result.isSuccessful()) {
              message=String.format("Updated the owner of the keytab file at %s to %s",keytabFilePath,ownerName);
              LOG.info(message);
              actionLog.writeStdOut(message);
            }
 else {
              message=String.format("Failed to update the owner of the keytab file at %s to %s: %s",keytabFilePath,ownerName,result.getStderr());
              LOG.error(message);
              actionLog.writeStdOut(message);
              actionLog.writeStdErr(message);
            }
            result=ShellCommandUtil.setFileGroup(keytabFilePath,groupName);
            if (result.isSuccessful()) {
              message=String.format("Updated the group of the keytab file at %s to %s",keytabFilePath,groupName);
              LOG.info(message);
              actionLog.writeStdOut(message);
            }
 else {
              message=String.format("Failed to update the group of the keytab file at %s to %s: %s",keytabFilePath,groupName,result.getStderr());
              LOG.error(message);
              actionLog.writeStdOut(message);
              actionLog.writeStdErr(message);
            }
            result=ShellCommandUtil.setFileMode(keytabFilePath,ownerReadable,ownerWritable,false,groupReadable,groupWritable,false,false,false,false);
            if (result.isSuccessful()) {
              message=String.format("Updated the access mode of the keytab file at %s to owner:'%s' and group:'%s'",keytabFilePath,ownerAccess,groupAccess);
              LOG.info(message);
              actionLog.writeStdOut(message);
            }
 else {
              message=String.format("Failed to update the access mode of the keytab file at %s to owner:'%s' and group:'%s': %s",keytabFilePath,ownerAccess,groupAccess,result.getStderr());
              LOG.error(message);
              actionLog.writeStdOut(message);
              actionLog.writeStdErr(message);
            }
            visited.add(keytabFilePath);
          }
        }
      }
    }
  }
  return null;
}
