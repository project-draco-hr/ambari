@patch('ambari_server.serverConfiguration.find_properties_file')
def test_get_ulimit_open_files(self, find_properties_file_mock):
    find_properties_file_mock.return_value = None
    open_files = _ambari_server_.get_fqdn()
    self.assertEqual(open_files, None)
    tf1 = tempfile.NamedTemporaryFile()
    prop_value = 65000
    with open(tf1.name, 'w') as fout:
        fout.write(((_ambari_server_.ULIMIT_OPEN_FILES_KEY + '=') + str(prop_value)))
    fout.close()
    find_properties_file_mock.return_value = tf1.name
    open_files = _ambari_server_.get_ulimit_open_files()
    self.assertEqual(open_files, 65000)
    tf1 = tempfile.NamedTemporaryFile()
    prop_value = 0
    with open(tf1.name, 'w') as fout:
        fout.write(((_ambari_server_.ULIMIT_OPEN_FILES_KEY + '=') + str(prop_value)))
    fout.close()
    find_properties_file_mock.return_value = tf1.name
    open_files = _ambari_server_.get_ulimit_open_files()
    self.assertEqual(open_files, _ambari_server_.ULIMIT_OPEN_FILES_DEFAULT)
