@patch.object(ambari__server, 'find_properties_file')
def test_get_ulimit_open_files(self, find_properties_file_mock):
    find_properties_file_mock.return_value = None
    open_files = ambari__server.get_fqdn()
    self.assertEqual(open_files, None)
    tf1 = tempfile.NamedTemporaryFile()
    prop_value = 65000
    with open(tf1.name, 'w') as fout:
        fout.write(((ambari__server.ULIMIT_OPEN_FILES_KEY + '=') + str(prop_value)))
    fout.close()
    find_properties_file_mock.return_value = tf1.name
    open_files = ambari__server.get_ulimit_open_files()
    self.assertEqual(open_files, 65000)
    tf1 = tempfile.NamedTemporaryFile()
    prop_value = 0
    with open(tf1.name, 'w') as fout:
        fout.write(((ambari__server.ULIMIT_OPEN_FILES_KEY + '=') + str(prop_value)))
    fout.close()
    find_properties_file_mock.return_value = tf1.name
    open_files = ambari__server.get_ulimit_open_files()
    self.assertEqual(open_files, ambari__server.ULIMIT_OPEN_FILES_DEFAULT)
