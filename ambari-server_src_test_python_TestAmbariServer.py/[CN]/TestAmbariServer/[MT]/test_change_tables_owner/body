@patch('ambari_server.dbConfiguration.decrypt_password_for_alias')
@patch('ambari_server.dbConfiguration_linux.run_os_command')
@patch('ambari_server.dbConfiguration_linux.print_error_msg')
def test_change_tables_owner(self, print_error_msg_mock, run_os_command_mock, decrypt_password_for_alias_mock):
    args = MagicMock()
    del args.database_index
    del args.dbms
    del args.database_host
    del args.database_port
    del args.database_name
    del args.database_username
    del args.database_password
    del args.init_script_file
    del args.drop_script_file
    properties = Properties()
    properties.process_pair(JDBC_PASSWORD_PROPERTY, get_alias_string('mypwdalias'))
    decrypt_password_for_alias_mock.return_value = 'password'
    run_os_command_mock.side_effect = [(0, 'tbl1\n,tbl2', ''), (0, '', ''), (0, '', ''), (0, 'postgres', ''), (0, 'ALTER TABLE', ''), (0, 'postgres', ''), (0, 'ALTER TABLE', '')]
    dbms = PGConfig(args, properties, 'local')
    result = dbms._change_tables_owner()
    self.assertTrue(result)
    self.assertEquals(run_os_command_mock.call_count, 7)
