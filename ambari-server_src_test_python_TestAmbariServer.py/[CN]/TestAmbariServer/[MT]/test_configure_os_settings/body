@patch('platform.linux_distribution')
@patch('platform.system')
@patch.object(ambari_server, 'print_info_msg')
@patch.object(ambari_server, 'print_error_msg')
@patch.object(ambari_server, 'get_ambari_properties')
@patch.object(ambari_server, 'write_property')
@patch.object(ambari_server, 'get_conf_dir')
def test_configure_os_settings(self, get_conf_dir_mock, write_property_mock, get_ambari_properties_mock, print_error_msg_mock, print_info_msg_mock, systemMock, distMock):
    get_ambari_properties_mock.return_value = (-1)
    rcode = ambari_server.configure_os_settings()
    self.assertEqual((-1), rcode)
    p = MagicMock()
    p[ambari_server.OS_TYPE_PROPERTY] = 'somevalue'
    get_ambari_properties_mock.return_value = p
    rcode = ambari_server.configure_os_settings()
    self.assertEqual(0, rcode)
    p.__getitem__.return_value = ''
    systemMock.return_value = 'NonLinux'
    rcode = ambari_server.configure_os_settings()
    self.assertEqual((-1), rcode)
    systemMock.return_value = 'Linux'
    distMock.return_value = ('CentOS', '6.3', None)
    rcode = ambari_server.configure_os_settings()
    self.assertEqual(0, rcode)
    self.assertTrue(write_property_mock.called)
