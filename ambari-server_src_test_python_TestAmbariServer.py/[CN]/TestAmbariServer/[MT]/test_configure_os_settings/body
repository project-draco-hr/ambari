@patch('platform.linux_distribution')
@patch('platform.system')
@patch('ambari_commons.logging_utils.print_info_msg')
@patch('ambari_commons.logging_utils.print_error_msg')
@patch('ambari_server.serverSetup.get_ambari_properties')
@patch('ambari_server.serverSetup.write_property')
@patch('ambari_server.serverConfiguration.get_conf_dir')
def test_configure_os_settings(self, get_conf_dir_mock, write_property_mock, get_ambari_properties_mock, print_error_msg_mock, print_info_msg_mock, systemMock, distMock):
    get_ambari_properties_mock.return_value = (-1)
    rcode = configure_os_settings()
    self.assertEqual((-1), rcode)
    p = MagicMock()
    p[OS_TYPE_PROPERTY] = 'somevalue'
    get_ambari_properties_mock.return_value = p
    rcode = configure_os_settings()
    self.assertEqual(0, rcode)
    p.__getitem__.return_value = ''
    rcode = configure_os_settings()
    self.assertEqual(0, rcode)
    self.assertTrue(write_property_mock.called)
    self.assertEqual(2, write_property_mock.call_count)
    self.assertEquals(write_property_mock.call_args_list[0][0][0], 'server.os_family')
    self.assertEquals(write_property_mock.call_args_list[1][0][0], 'server.os_type')
