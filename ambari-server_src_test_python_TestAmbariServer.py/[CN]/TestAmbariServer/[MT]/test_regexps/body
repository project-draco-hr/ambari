def test_regexps(self):
    res = re.search(ambari__server.REGEX_HOSTNAME_PORT, '')
    self.assertTrue((res is None))
    res = re.search(ambari__server.REGEX_HOSTNAME_PORT, 'ddd')
    self.assertTrue((res is None))
    res = re.search(ambari__server.REGEX_HOSTNAME_PORT, 'gg:ff')
    self.assertTrue((res is None))
    res = re.search(ambari__server.REGEX_HOSTNAME_PORT, 'gg:55444325')
    self.assertTrue((res is None))
    res = re.search(ambari__server.REGEX_HOSTNAME_PORT, 'gg:555')
    self.assertTrue((res is not None))
    res = re.search(ambari__server.REGEX_TRUE_FALSE, '')
    self.assertTrue((res is not None))
    res = re.search(ambari__server.REGEX_TRUE_FALSE, 't')
    self.assertTrue((res is None))
    res = re.search(ambari__server.REGEX_TRUE_FALSE, 'trrrr')
    self.assertTrue((res is None))
    res = re.search(ambari__server.REGEX_TRUE_FALSE, 'true|false')
    self.assertTrue((res is None))
    res = re.search(ambari__server.REGEX_TRUE_FALSE, 'true')
    self.assertTrue((res is not None))
    res = re.search(ambari__server.REGEX_TRUE_FALSE, 'false')
    self.assertTrue((res is not None))
    res = re.search(ambari__server.REGEX_ANYTHING, '')
    self.assertTrue((res is not None))
    res = re.search(ambari__server.REGEX_ANYTHING, 't')
    self.assertTrue((res is not None))
    res = re.search(ambari__server.REGEX_ANYTHING, 'trrrr')
    self.assertTrue((res is not None))
