@patch.object(OSCheck, 'os_distribution', new=MagicMock(return_value=os_distro_value))
@patch.object(_ambari_server_, 'setup')
@patch.object(_ambari_server_, 'fix_database_options')
@patch('optparse.OptionParser')
@patch.object(_ambari_server_, 'logger')
@patch('ambari_server.serverConfiguration.get_ambari_properties')
@patch.object(_ambari_server_, 'setup_logging')
def test_fix_database_options_called(self, setup_logging_mock, get_ambari_properties_mock, logger_mock, optionParserMock, fixDBOptionsMock, setup_method):
    opm = optionParserMock.return_value
    options = self._create_empty_options_mock()
    args = ['setup']
    opm.parse_args.return_value = (options, args)
    _ambari_server_.mainBody()
    self.assertTrue(setup_method.called)
    self.assertTrue(fixDBOptionsMock.called)
    set_silent(False)
    pass
