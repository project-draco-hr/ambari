@patch('ambari_server.setupSecurity.search_file')
@patch('ambari_server.setupSecurity.get_validated_string_input')
def test_setup_ambari_krb5_jaas_with_options(self, get_validated_string_input_mock, search_file_mock):
    options = self._create_empty_options_mock()
    options.jaas_keytab = '/kerberos/admin.keytab'
    temp_file = tempfile.NamedTemporaryFile(mode='r')
    search_file_mock.return_value = temp_file.name
    get_validated_string_input_mock.side_effect = ['adm@EXAMPLE.COM', temp_file]
    self.assertEqual(None, setup_ambari_krb5_jaas(options))
    self.assertTrue(get_validated_string_input_mock.called)
    self.assertEqual(get_validated_string_input_mock.call_count, 2)
    get_validated_string_input_mock.assert_called_with("Enter keytab path for ambari server's kerberos principal: ", '/etc/security/keytabs/ambari.keytab', '.*', False, False, validatorFunction=is_valid_filepath, answer='/kerberos/admin.keytab')
    pass
