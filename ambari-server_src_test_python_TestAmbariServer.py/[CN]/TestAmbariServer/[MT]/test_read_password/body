@patch.object(_ambari_server_, 'get_validated_string_input')
def test_read_password(self, get_validated_string_input_method):
    out = StringIO.StringIO()
    sys.stdout = out
    passwordDefault = ''
    passwordPrompt = 'Enter Manager Password* : '
    passwordPattern = '.*'
    passwordDescr = 'Invalid characters in password.'
    get_validated_string_input_method.side_effect = ['', 'aaa', 'aaa']
    password = _ambari_server_.read_password(passwordDefault, passwordPattern, passwordPrompt, passwordDescr)
    self.assertTrue(3, get_validated_string_input_method.call_count)
    self.assertEquals('aaa', password)
    get_validated_string_input_method.reset_mock()
    get_validated_string_input_method.side_effect = ['aaa', 'aaa']
    password = _ambari_server_.read_password(passwordDefault, passwordPattern, passwordPrompt, passwordDescr)
    self.assertTrue(2, get_validated_string_input_method.call_count)
    self.assertEquals('aaa', password)
    get_validated_string_input_method.reset_mock()
    get_validated_string_input_method.side_effect = ['aaa']
    password = _ambari_server_.read_password('aaa', passwordPattern, passwordPrompt, passwordDescr)
    self.assertTrue(1, get_validated_string_input_method.call_count)
    self.assertEquals('aaa', password)
    sys.stdout = sys.__stdout__
