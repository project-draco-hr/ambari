@patch.object(ambari_server, 'configure_database_username_password')
@patch.object(ambari_server, 'run_os_command')
@patch.object(ambari_server, 'is_root')
@patch.object(ambari_server, 'check_database_name_property')
def test_upgrade_stack(self, check_database_name_property_mock, is_root_mock, run_os_command_mock, configure_postgres_username_password_mock):
    args = MagicMock()
    is_root_mock.return_value = False
    try:
        ambari_server.upgrade_stack(args, 'HDP-2.0')
        self.fail('Should throw exception')
    except FatalException as fe:
        self.assertTrue(('root-level' in fe.reason))
        pass
    is_root_mock.return_value = True
    run_os_command_mock.return_value = (0, '', '')
    check_database_name_property_mock.return_value = 1
    ambari_server.upgrade_stack(args, 'HDP-2.0')
    self.assertTrue(configure_postgres_username_password_mock.called)
    self.assertTrue(run_os_command_mock.called)
