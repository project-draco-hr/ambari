@patch.object(ambari__server, 'is_root')
@patch.object(ambari__server, 'check_database_name_property')
@patch.object(ambari__server, 'run_stack_upgrade')
def test_upgrade_stack(self, run_stack_upgrade_mock, check_database_name_property_mock, is_root_mock):
    args = MagicMock()
    args.persistence_type = 'local'
    is_root_mock.return_value = False
    try:
        ambari__server.upgrade_stack(args, 'HDP-2.0')
        self.fail('Should throw exception')
    except FatalException as fe:
        self.assertTrue(('root-level' in fe.reason))
        pass
    is_root_mock.return_value = True
    run_stack_upgrade_mock.return_value = 0
    ambari__server.upgrade_stack(args, 'HDP-2.0')
    self.assertTrue(run_stack_upgrade_mock.called)
    run_stack_upgrade_mock.assert_called_with('HDP', '2.0', None, None)
