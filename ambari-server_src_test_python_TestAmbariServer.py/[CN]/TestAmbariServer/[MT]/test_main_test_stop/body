@patch.object(OSCheck, 'os_distribution', new=MagicMock(return_value=os_distro_value))
@patch.object(_ambari_server_, 'setup')
@patch.object(_ambari_server_, 'start')
@patch.object(_ambari_server_, 'is_server_runing')
@patch.object(_ambari_server_, 'reset')
@patch('optparse.OptionParser')
def test_main_test_stop(self, optionParserMock, reset_method, is_server_runing_method, start_method, setup_method):
    opm = optionParserMock.return_value
    options = MagicMock()
    del options.exit_message
    args = ['stop']
    opm.parse_args.return_value = (options, args)
    is_server_runing_method.return_value = (False, None)
    options.dbms = None
    options.sid_or_sname = 'sid'
    _ambari_server_.main()
    self.assertFalse(setup_method.called)
    self.assertFalse(start_method.called)
    self.assertTrue(is_server_runing_method.called)
    self.assertFalse(reset_method.called)
    self.assertFalse(False, get_verbose())
    self.assertFalse(False, get_silent())
    self.assertIsNone(options.exit_message)
    pass
