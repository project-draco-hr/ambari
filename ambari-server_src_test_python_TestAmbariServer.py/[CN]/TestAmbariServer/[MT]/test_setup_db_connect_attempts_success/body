@not_for_platform(PLATFORM_WINDOWS)
@patch('ambari_server.dbConfiguration.decrypt_password_for_alias')
@patch('time.sleep')
@patch('ambari_server.dbConfiguration_linux.run_os_command')
def test_setup_db_connect_attempts_success(self, run_os_command_mock, sleep_mock, decrypt_password_for_alias_mock):
    args = MagicMock()
    del args.database_index
    del args.dbms
    del args.database_host
    del args.database_port
    del args.database_name
    del args.database_username
    del args.database_password
    del args.init_script_file
    del args.drop_script_file
    properties = Properties()
    decrypt_password_for_alias_mock.return_value = 'password'
    dbms = PGConfig(args, properties, 'local')
    run_os_command_mock.side_effect = [(1, 'error', 'error'), (0, None, None), (0, None, None)]
    result = dbms._setup_db()
    self.assertTrue(run_os_command_mock.called)
    self.assertEqual((0, None, None), result)
    self.assertEqual(1, sleep_mock.call_count)
    pass
