@patch('glob.glob')
@patch('ambari_server.serverConfiguration.get_ambari_properties')
@patch('ambari_server.serverConfiguration.print_info_msg')
def test_get_ambari_classpath(self, printInfoMsg_mock, get_ambari_properties_mock, globMock):
    props = {}
    props[JDBC_DRIVER_PATH_PROPERTY] = '/driver'
    get_ambari_properties_mock.return_value = props
    globMock.return_value = ['one']
    result = get_ambari_classpath()
    self.assertTrue((get_ambari_jars() in result))
    self.assertTrue(('/driver' in result))
    self.assertTrue((get_share_jars() in result))
    globMock.return_value = []
    props[JDBC_DRIVER_PATH_PROPERTY] = ''
    result = get_ambari_classpath()
    self.assertTrue((get_ambari_jars() in result))
    self.assertFalse((':' in result))
