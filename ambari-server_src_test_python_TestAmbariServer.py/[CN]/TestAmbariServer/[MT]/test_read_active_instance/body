@patch('ambari_server.serverConfiguration.get_ambari_properties')
@patch('ambari_server.serverConfiguration.Properties')
def test_read_active_instance(self, properties_mock, get_ambari_properties_mock):
    properties_mock.propertyNames = MagicMock(return_value=['active.instance'])
    get_ambari_properties_mock.return_value = properties_mock
    properties_mock.__getitem__.return_value = 'false'
    is_active_instance = get_is_active_instance()
    self.assertFalse(is_active_instance)
    properties_mock.__getitem__.return_value = ''
    is_active_instance = get_is_active_instance()
    self.assertFalse(is_active_instance)
    properties_mock.__getitem__.return_value = 'xyz'
    is_active_instance = get_is_active_instance()
    self.assertFalse(is_active_instance)
    properties_mock.__getitem__.return_value = 'false'
    is_active_instance = get_is_active_instance()
    self.assertFalse(is_active_instance)
    properties_mock.__getitem__.return_value = 'true'
    is_active_instance = get_is_active_instance()
    self.assertTrue(is_active_instance)
    properties_mock.propertyNames = MagicMock(return_value=[])
    is_active_instance = get_is_active_instance()
    self.assertTrue(is_active_instance)
    pass
