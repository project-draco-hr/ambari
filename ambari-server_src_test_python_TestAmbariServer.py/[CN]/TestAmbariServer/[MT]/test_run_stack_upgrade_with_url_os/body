@patch.object(ServerClassPath, 'get_full_ambari_classpath_escaped_for_shell', new=MagicMock(return_value=(((('/etc/conf' + os.pathsep) + 'test') + os.pathsep) + 'path12')))
@patch('ambari_server.serverConfiguration.get_conf_dir')
@patch('ambari_server.serverUpgrade.run_os_command')
@patch('ambari_server.serverUpgrade.get_java_exe_path')
def test_run_stack_upgrade_with_url_os(self, java_exe_path_mock, run_os_command_mock, get_conf_dir_mock):
    java_exe_path_mock.return_value = '/usr/lib/java/bin/java'
    run_os_command_mock.return_value = (0, None, None)
    get_conf_dir_mock.return_value = '/etc/conf'
    stackIdMap = {'HDP': '2.0', 'repo_url': 'http://test.com', 'repo_url_os': 'centos5,centos6', }
    run_stack_upgrade(None, 'HDP', '2.0', 'http://test.com', 'centos5,centos6')
    self.assertTrue(java_exe_path_mock.called)
    self.assertTrue(get_conf_dir_mock.called)
    self.assertTrue(run_os_command_mock.called)
    run_os_command_mock.assert_called_with((((((((((((((('/usr/lib/java/bin/java -cp /etc/conf' + os.pathsep) + 'test:path12 org.apache.ambari.server.upgrade.StackUpgradeHelper updateStackId ') + "'") + json.dumps(stackIdMap)) + "'") + ' > ') + os.sep) + 'var') + os.sep) + 'log') + os.sep) + 'ambari-server') + os.sep) + 'ambari-server.out 2>&1'))
    pass
