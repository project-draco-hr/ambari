def test_is_valid_cert_exp(self):
    certInfo = {}
    is_valid = ambari__server.is_valid_cert_exp(certInfo)
    self.assertFalse(is_valid)
    issuedOn = (datetime.datetime.now() + datetime.timedelta(hours=1000)).strftime(ambari__server.SSL_DATE_FORMAT)
    expiresOn = (datetime.datetime.now() + datetime.timedelta(hours=2000)).strftime(ambari__server.SSL_DATE_FORMAT)
    certInfo = {ambari__server.NOT_BEFORE_ATTR: issuedOn, ambari__server.NOT_AFTER_ATTR: expiresOn, }
    is_valid = ambari__server.is_valid_cert_exp(certInfo)
    self.assertFalse(is_valid)
    issuedOn = (datetime.datetime.now() - datetime.timedelta(hours=2000)).strftime(ambari__server.SSL_DATE_FORMAT)
    expiresOn = (datetime.datetime.now() - datetime.timedelta(hours=1000)).strftime(ambari__server.SSL_DATE_FORMAT)
    certInfo = {ambari__server.NOT_BEFORE_ATTR: issuedOn, ambari__server.NOT_AFTER_ATTR: expiresOn, }
    is_valid = ambari__server.is_valid_cert_exp(certInfo)
    self.assertFalse(is_valid)
    issuedOn = (datetime.datetime.now() - datetime.timedelta(hours=2000)).strftime(ambari__server.SSL_DATE_FORMAT)
    expiresOn = (datetime.datetime.now() + datetime.timedelta(hours=1000)).strftime(ambari__server.SSL_DATE_FORMAT)
    certInfo = {ambari__server.NOT_BEFORE_ATTR: issuedOn, ambari__server.NOT_AFTER_ATTR: expiresOn, }
    is_valid = ambari__server.is_valid_cert_exp(certInfo)
    self.assertTrue(is_valid)
