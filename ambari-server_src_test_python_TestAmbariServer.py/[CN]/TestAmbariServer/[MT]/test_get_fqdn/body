@patch('socket.getfqdn')
@patch('urllib2.urlopen')
@patch.object(ambari_server, 'get_ambari_properties')
def test_get_fqdn(self, get_ambari_properties_mock, url_open_mock, getfqdn_mock):
    get_ambari_properties_mock.return_value = (-1)
    fqdn = ambari_server.get_fqdn()
    self.assertEqual(fqdn, None)
    self.assertEqual(ambari_server.GET_FQDN_SERVICE_URL, 'server.fqdn.service.url')
    p = MagicMock()
    p[ambari_server.GET_FQDN_SERVICE_URL] = 'someurl'
    get_ambari_properties_mock.return_value = p
    u = MagicMock()
    host = 'host1.domain.com'
    u.read.return_value = host
    url_open_mock.return_value = u
    fqdn = ambari_server.get_fqdn()
    self.assertEqual(fqdn, host)
    u.reset_mock()
    u.side_effect = Exception('Failed to read FQDN from service')
    getfqdn_mock.return_value = host
    fqdn = ambari_server.get_fqdn()
    self.assertEqual(fqdn, host)
