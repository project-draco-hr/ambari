@patch('time.sleep')
@patch('subprocess.Popen')
@patch.object(_ambari_server_, 'run_os_command')
@patch.object(_ambari_server_, 'get_postgre_status')
def test_check_postgre_up(self, get_postgre_status_mock, run_os_command_mock, popen_mock, sleep_mock):
    p = MagicMock()
    p.poll.return_value = 0
    p.communicate.return_value = (None, None)
    p.returncode = 0
    popen_mock.return_value = p
    get_postgre_status_mock.return_value = ('running', 0, '', '')
    run_os_command_mock.return_value = (0, None, None)
    (pg_status, retcode, out, err) = _ambari_server_.check_postgre_up()
    self.assertEqual(0, retcode)
    _ambari_server_.OS_TYPE = OSConst.OS_SUSE
    p.poll.return_value = 4
    get_postgre_status_mock.return_value = ('stopped', 0, '', '')
    (pg_status, retcode, out, err) = _ambari_server_.check_postgre_up()
    self.assertEqual(4, retcode)
