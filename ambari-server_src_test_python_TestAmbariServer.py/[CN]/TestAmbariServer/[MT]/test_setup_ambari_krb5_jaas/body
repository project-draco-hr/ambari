@patch('re.sub')
@patch('fileinput.FileInput')
@patch('ambari_server.setupSecurity.get_validated_string_input')
@patch('ambari_server.setupSecurity.search_file')
@patch('os.path.exists')
def test_setup_ambari_krb5_jaas(self, exists_mock, search_mock, get_validated_string_input_mock, fileinput_mock, re_sub_mock):
    search_mock.return_value = 'filepath'
    exists_mock.return_value = False
    try:
        setup_ambari_krb5_jaas(self._create_empty_options_mock())
        self.fail('Should throw exception')
    except NonFatalException as fe:
        self.assertTrue(('No jaas config file found at location' in fe.reason))
        pass
    exists_mock.reset_mock()
    exists_mock.return_value = True
    get_validated_string_input_mock.side_effect = ['aaa@aaa.cnn', 'pathtokeytab']
    fileinput_mock.return_value = ['keyTab=xyz', 'principal=xyz']
    setup_ambari_krb5_jaas(self._create_empty_options_mock())
    self.assertTrue(fileinput_mock.called)
    self.assertTrue(re_sub_mock.called)
    self.assertTrue(re_sub_mock.call_args_list, ['aaa@aaa.cnn', 'pathtokeytab'])
    pass
