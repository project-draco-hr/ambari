@patch.object(OSCheck, 'os_distribution', new=MagicMock(return_value=os_distro_value))
@patch.object(_ambari_server_, 'setup')
@patch.object(_ambari_server_, 'start')
@patch.object(_ambari_server_, 'stop')
@patch.object(_ambari_server_, 'reset')
@patch('optparse.OptionParser')
@patch.object(_ambari_server_, 'logger')
@patch('ambari_server.serverConfiguration.get_ambari_properties')
@patch.object(_ambari_server_, 'setup_logging')
@patch.object(_ambari_server_, 'init_logging')
def test_main_test_reset(self, init_logging_mock, setup_logging_mock, get_ambari_properties_mock, logger_mock, optionParserMock, reset_method, stop_method, start_method, setup_method):
    opm = optionParserMock.return_value
    options = self._create_empty_options_mock()
    args = ['reset']
    opm.parse_args.return_value = (options, args)
    options.dbms = None
    options.sid_or_sname = 'sid'
    _ambari_server_.mainBody()
    self.assertFalse(setup_method.called)
    self.assertFalse(start_method.called)
    self.assertFalse(stop_method.called)
    self.assertTrue(reset_method.called)
    self.assertFalse(False, get_verbose())
    self.assertFalse(False, get_silent())
    pass
