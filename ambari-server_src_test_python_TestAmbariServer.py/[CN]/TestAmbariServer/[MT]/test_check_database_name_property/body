@patch.object(_ambari_server_, 'get_ambari_properties')
def test_check_database_name_property(self, get_ambari_properties_mock):
    parser = OptionParser()
    parser.add_option('--database', default=None, help='Database to use embedded|oracle|mysql|postgres', dest='dbms')
    args = parser.parse_args()
    get_ambari_properties_mock.return_value = {_ambari_server_.JDBC_DATABASE_NAME_PROPERTY: '', }
    try:
        result = _ambari_server_.check_database_name_property(args)
        self.fail('Should fail with exception')
    except FatalException as e:
        self.assertTrue(('DB Name property not set in config file.' in e.reason))
    dbname = 'ambari'
    get_ambari_properties_mock.reset_mock()
    get_ambari_properties_mock.return_value = {_ambari_server_.JDBC_DATABASE_NAME_PROPERTY: dbname, }
    try:
        result = _ambari_server_.check_database_name_property(args)
    except FatalException:
        self.fail('Setup should be successful')
