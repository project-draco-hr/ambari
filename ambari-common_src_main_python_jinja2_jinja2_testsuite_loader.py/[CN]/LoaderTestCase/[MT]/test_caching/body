def test_caching(self):
    changed = False


    class TestLoader(loaders.BaseLoader):

        def get_source(self, environment, template):
            return (u'foo', None, (lambda : (not changed)))
    env = Environment(loader=TestLoader(), cache_size=(-1))
    tmpl = env.get_template('template')
    assert (tmpl is env.get_template('template'))
    changed = True
    assert (tmpl is not env.get_template('template'))
    changed = False
    env = Environment(loader=TestLoader(), cache_size=0)
    assert (env.get_template('template') is not env.get_template('template'))
    env = Environment(loader=TestLoader(), cache_size=2)
    t1 = env.get_template('one')
    t2 = env.get_template('two')
    assert (t2 is env.get_template('two'))
    assert (t1 is env.get_template('one'))
    t3 = env.get_template('three')
    assert ('one' in env.cache)
    assert ('two' not in env.cache)
    assert ('three' in env.cache)
