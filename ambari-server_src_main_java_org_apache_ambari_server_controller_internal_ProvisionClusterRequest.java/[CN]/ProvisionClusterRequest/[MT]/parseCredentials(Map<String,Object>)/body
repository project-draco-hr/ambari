{
  HashMap<String,Credential> credentialHashMap=new HashMap<>();
  Set<Map<String,String>> credentialsSet=(Set<Map<String,String>>)properties.get(ClusterResourceProvider.CREDENTIALS_PROPERTY_ID);
  if (credentialsSet != null) {
    for (    Map<String,String> credentialMap : credentialsSet) {
      String alias=Strings.emptyToNull(credentialMap.get("alias"));
      if (alias == null) {
        throw new InvalidTopologyTemplateException("credential.alias property is missing.");
      }
      String principal=Strings.emptyToNull(credentialMap.get("principal"));
      if (principal == null) {
        throw new InvalidTopologyTemplateException("credential.principal property is missing.");
      }
      String key=Strings.emptyToNull(credentialMap.get("key"));
      if (key == null) {
        throw new InvalidTopologyTemplateException("credential.key is missing.");
      }
      String typeString=Strings.emptyToNull(credentialMap.get("type"));
      if (typeString == null) {
        throw new InvalidTopologyTemplateException("credential.type is missing.");
      }
      CredentialStoreType type=Enums.getIfPresent(CredentialStoreType.class,typeString.toUpperCase()).orNull();
      if (type == null) {
        throw new InvalidTopologyTemplateException("credential.type is invalid.");
      }
      credentialHashMap.put(alias,new Credential(alias,principal,key,type));
    }
  }
  return credentialHashMap;
}
