{
  if (!schedule.isEmpty()) {
    if (schedule.getStartTime() != null && !schedule.getStartTime().isEmpty()) {
      try {
        DateUtils.convertToDate(schedule.getStartTime());
      }
 catch (      ParseException pe) {
        throw new AmbariException("Start time in invalid format. startTime " + "= " + schedule.getStartTime() + ", Allowed format = "+ DateUtils.ALLOWED_DATE_FORMAT);
      }
    }
    if (schedule.getEndTime() != null && !schedule.getEndTime().isEmpty()) {
      try {
        DateUtils.convertToDate(schedule.getEndTime());
      }
 catch (      ParseException pe) {
        throw new AmbariException("End time in invalid format. endTime " + "= " + schedule.getEndTime() + ", Allowed format = "+ DateUtils.ALLOWED_DATE_FORMAT);
      }
    }
    String cronExpression=schedule.getScheduleExpression();
    if (cronExpression != null && !cronExpression.trim().isEmpty()) {
      if (!CronExpression.isValidExpression(cronExpression)) {
        throw new AmbariException("Invalid non-empty cron expression " + "provided. " + cronExpression);
      }
    }
  }
}
