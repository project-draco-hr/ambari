{
  try {
    JobController jobController=getResourceManager().readController(jobId);
    Job job=jobController.getJob();
    if (job.getStatus().equals(Job.JOB_STATE_ERROR) || job.getStatus().equals(Job.JOB_STATE_CANCELED)) {
      ConnectionSystem system=ConnectionSystem.getInstance();
      final AsyncJobRunner asyncJobRunner=new AsyncJobRunnerImpl(context,system.getOperationController(context),system.getActorSystem());
      Optional<Failure> error=asyncJobRunner.getError(jobId,context.getUsername());
      if (error.isPresent()) {
        throw new Exception(error.get().getError());
      }
    }
    JSONObject jsonJob=jsonObjectFromJob(jobController);
    return Response.ok(jsonJob).build();
  }
 catch (  WebApplicationException ex) {
    throw ex;
  }
catch (  ItemNotFound itemNotFound) {
    throw new NotFoundFormattedException(itemNotFound.getMessage(),itemNotFound);
  }
catch (  Exception ex) {
    throw new ServiceFormattedException(ex.getMessage(),ex);
  }
}
