{
  ConfigFactory cf=m_injector.getInstance(ConfigFactory.class);
  Config config=cf.createNew(m_cluster,ConfigHelper.CLUSTER_ENV,new HashMap<String,String>(){
{
      put(ConfigHelper.CLUSTER_ENV_ALERT_REPEAT_TOLERANCE,"3");
    }
  }
,new HashMap<String,Map<String,String>>());
  config.setTag("version2");
  config.persist();
  m_cluster.addConfig(config);
  m_cluster.addDesiredConfig("user",Collections.singleton(config));
  String definitionName=ALERT_DEFINITION + "1";
  String serviceName="HDFS";
  String componentName="NAMENODE";
  String text=serviceName + " " + componentName+ " is OK";
  Alert alert=new Alert(definitionName,null,serviceName,componentName,HOST1,AlertState.OK);
  alert.setCluster(m_cluster.getClusterName());
  alert.setLabel(ALERT_LABEL);
  alert.setText(text);
  alert.setTimestamp(1L);
  AlertReceivedListener listener=m_injector.getInstance(AlertReceivedListener.class);
  AlertReceivedEvent event=new AlertReceivedEvent(m_cluster.getClusterId(),alert);
  listener.onAlertEvent(event);
  List<AlertCurrentEntity> allCurrent=m_dao.findCurrent();
  assertEquals(1,allCurrent.size());
  assertEquals(1,(long)allCurrent.get(0).getOccurrences());
  assertEquals(AlertFirmness.HARD,allCurrent.get(0).getFirmness());
  alert.setState(AlertState.CRITICAL);
  listener.onAlertEvent(event);
  allCurrent=m_dao.findCurrent();
  assertEquals(1,(long)allCurrent.get(0).getOccurrences());
  assertEquals(AlertFirmness.SOFT,allCurrent.get(0).getFirmness());
  listener.onAlertEvent(event);
  allCurrent=m_dao.findCurrent();
  assertEquals(2,(long)allCurrent.get(0).getOccurrences());
  assertEquals(AlertFirmness.SOFT,allCurrent.get(0).getFirmness());
  listener.onAlertEvent(event);
  allCurrent=m_dao.findCurrent();
  assertEquals(3,(long)allCurrent.get(0).getOccurrences());
  assertEquals(AlertFirmness.HARD,allCurrent.get(0).getFirmness());
}
