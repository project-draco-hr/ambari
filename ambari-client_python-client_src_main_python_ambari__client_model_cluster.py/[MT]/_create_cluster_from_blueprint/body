def _create_cluster_from_blueprint(root_resource, cluster_name, blueprint_name, host_groups, configurations=None, default_password=None):
    '\n    Create a cluster\n    @param root_resource: The root Resource.\n    @param cluster_name: Cluster cluster_name\n    @param blueprint_name: the name of the blueprint\n    @param host_groups: an array of host_group information\n    @param configurations: an array of configuration overrides\n    @param default_password: the default password to use for all password-requiring services\n    @return: An StatusModel object\n    '
    data = {'blueprint': blueprint_name, 'host_groups': host_groups, }
    if (configurations is not None):
        data['configurations'] = configurations
    if (default_password is not None):
        data['default_password'] = default_password
    path = (paths.CLUSTERS_PATH + ('/%s' % cluster_name))
    resp = root_resource.post(path=path, payload=data)
    return utils.ModelUtils.create_model(status.StatusModel, resp, root_resource, 'NO_KEY')
