def get_config_dir_during_stack_upgrade(self, env, base_dir, conf_select_name):
    '\n    Because this gets called during a Rolling Upgrade, the new configs have already been saved, so we must be\n    careful to only call configure() on the directory with the new version.\n\n    If valid, returns the config directory to save configs to, otherwise, return None\n    '
    import params
    env.set_params(params)
    required_attributes = ['stack_name', 'stack_root', 'version']
    for attribute in required_attributes:
        if (not has_attr(params, attribute)):
            raise Fail(("Failed in function 'stack_upgrade_save_new_config' because params was missing variable %s." % attribute))
    Logger.info('stack_upgrade_save_new_config(): Checking if can write new client configs to new config version folder.')
    if check_stack_feature(StackFeature.CONFIG_VERSIONING, params.version):
        config_path = os.path.join(params.stack_root, params.version, conf_select_name, 'conf')
        return os.path.realpath(config_path)
    return None
