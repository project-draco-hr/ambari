def install_packages(self, env, exclude_packages=[]):
    '\n    List of packages that are required< by service is received from the server\n    as a command parameter. The method installs all packages\n    from this list\n    '
    config = self.get_config()
    if ('host_sys_prepped' in config['hostLevelParams']):
        if (config['hostLevelParams']['host_sys_prepped'] == True):
            Logger.info('Node has all packages pre-installed. Skipping.')
            return
        pass
    try:
        package_list_str = config['hostLevelParams']['package_list']
        if (isinstance(package_list_str, basestring) and (len(package_list_str) > 0)):
            package_list = json.loads(package_list_str)
            for package in package_list:
                if (not (package['name'] in exclude_packages)):
                    name = package['name']
                    if OSCheck.is_windows_family():
                        if ('ambari-metrics' in name):
                            Package(name)
                    else:
                        Package(name)
    except KeyError:
        pass
    if OSCheck.is_windows_family():
        hadoop_user = config['configurations']['cluster-env']['hadoop.user.name']
        install_windows_msi(config['hostLevelParams']['jdk_location'], config['hostLevelParams']['agentCacheDir'], ['hdp-2.3.0.0.winpkg.msi', 'hdp-2.3.0.0.cab', 'hdp-2.3.0.0-01.cab'], hadoop_user, self.get_password(hadoop_user), str(config['hostLevelParams']['stack_version']))
        reload_windows_env()
