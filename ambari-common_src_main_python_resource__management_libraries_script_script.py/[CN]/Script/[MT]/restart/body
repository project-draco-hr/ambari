def restart(self, env):
    '\n    Default implementation of restart command is to call stop and start methods\n    Feel free to override restart() method with your implementation.\n    For client components we call install\n    '
    config = self.get_config()
    componentCategory = None
    try:
        componentCategory = config['roleParams']['component_category']
    except KeyError:
        pass
    restart_type = ''
    if (config is not None):
        command_params = (config['commandParams'] if ('commandParams' in config) else None)
        if (command_params is not None):
            restart_type = (command_params['restart_type'] if ('restart_type' in command_params) else '')
    upgrade_type = None
    if (restart_type.lower() == 'rolling_upgrade'):
        upgrade_type = 'rolling'
    elif (restart_type.lower() == 'nonrolling_upgrade'):
        upgrade_type = 'nonrolling'
    is_stack_upgrade = (upgrade_type is not None)
    if (componentCategory and (componentCategory.strip().lower() == 'CLIENT'.lower())):
        if is_stack_upgrade:
            if ('pre_upgrade_restart' in dir(self)):
                self.pre_upgrade_restart(env, upgrade_type=upgrade_type)
            else:
                self.pre_rolling_restart(env)
        self.install(env)
    else:
        if (is_stack_upgrade and ('upgrade_type' in inspect.getargspec(self.stop).args)):
            self.stop(env, upgrade_type=upgrade_type)
        else:
            self.stop(env, rolling_restart=(restart_type == 'rolling_upgrade'))
        if is_stack_upgrade:
            if ('pre_upgrade_restart' in dir(self)):
                self.pre_upgrade_restart(env, upgrade_type=upgrade_type)
            else:
                self.pre_rolling_restart(env)
        if (is_stack_upgrade and ('upgrade_type' in inspect.getargspec(self.start).args)):
            self.start(env, upgrade_type=upgrade_type)
        else:
            self.start(env, rolling_restart=(restart_type == 'rolling_upgrade'))
        if is_stack_upgrade:
            if ('post_upgrade_restart' in dir(self)):
                self.post_upgrade_restart(env, upgrade_type=upgrade_type)
            else:
                self.post_rolling_restart(env)
    if self.should_expose_component_version('restart'):
        self.save_component_version_to_structured_out()
