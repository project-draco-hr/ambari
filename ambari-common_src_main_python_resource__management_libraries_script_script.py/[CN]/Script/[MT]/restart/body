def restart(self, env):
    '\n    Default implementation of restart command is to call stop and start methods\n    Feel free to override restart() method with your implementation.\n    For client components we call install\n    '
    config = self.get_config()
    componentCategory = None
    try:
        componentCategory = config['roleParams']['component_category']
    except KeyError:
        pass
    restart_type = ''
    if (config is not None):
        command_params = (config['commandParams'] if ('commandParams' in config) else None)
        if (command_params is not None):
            restart_type = (command_params['restart_type'] if ('restart_type' in command_params) else '')
            if restart_type:
                restart_type = restart_type.encode('ascii', 'ignore')
    rolling_restart = restart_type.lower().startswith('rolling')
    if (componentCategory and (componentCategory.strip().lower() == 'CLIENT'.lower())):
        if rolling_restart:
            self.pre_rolling_restart(env)
        self.install(env)
    else:
        if rolling_restart:
            self.stop(env, rolling_restart=rolling_restart)
        else:
            self.stop(env)
        if rolling_restart:
            self.pre_rolling_restart(env)
        if rolling_restart:
            self.start(env, rolling_restart=rolling_restart)
        else:
            self.start(env)
        if rolling_restart:
            self.post_rolling_restart(env)
    try:
        import params
        if hasattr(params, 'stack_name'):
            self.save_component_version_to_structured_out(params.stack_name)
    except ImportError:
        logger.error('Restart command could not import params')
