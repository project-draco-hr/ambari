def generate_configs(self, env):
    '\n    Generates config files and stores them as an archive in tmp_dir\n    based on xml_configs_list and env_configs_list from commandParams\n    '
    import params
    env.set_params(params)
    xml_configs_list = params.config['commandParams']['xml_configs_list']
    env_configs_list = params.config['commandParams']['env_configs_list']
    conf_tmp_dir = tempfile.mkdtemp()
    output_filename = os.path.join(self.get_tmp_dir(), params.config['commandParams']['output_file'])
    Directory(self.get_tmp_dir(), recursive=True)
    for file_dict in xml_configs_list:
        for (filename, dict) in file_dict.iteritems():
            XmlConfig(filename, conf_dir=conf_tmp_dir, configurations=params.config['configurations'][dict], configuration_attributes=params.config['configuration_attributes'][dict])
    for file_dict in env_configs_list:
        for (filename, dict) in file_dict.iteritems():
            File(os.path.join(conf_tmp_dir, filename), content=InlineTemplate(params.config['configurations'][dict]['content']))
    with closing(tarfile.open(output_filename, 'w:gz')) as tar:
        tar.add(conf_tmp_dir, arcname=os.path.basename('.'))
        tar.close()
    Directory(conf_tmp_dir, action='delete')
