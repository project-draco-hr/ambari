def get_stack_version_before_packages_installed(self):
    '\n    This works in a lazy way (calculates the version first time and stores it). \n    If you need to recalculate the version explicitly set:\n    \n    Script.stack_version_from_distro_select = None\n    \n    before the call. However takes a bit of time, so better to avoid.\n\n    :return: stack version including the build number. e.g.: 2.3.4.0-1234.\n    '
    component_name = self.get_component_name()
    if ((not Script.stack_version_from_distro_select) and component_name):
        from resource_management.libraries.functions import stack_select
        Script.stack_version_from_distro_select = stack_select.get_stack_version_before_install(component_name)
    if (not Script.stack_version_from_distro_select):
        Script.stack_version_from_distro_select = packages_analyzer.getInstalledPackageVersion(stack_tools.get_stack_tool_package(stack_tools.STACK_SELECTOR_NAME))
    return Script.stack_version_from_distro_select
