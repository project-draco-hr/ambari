def format_package_name(self, name):
    from resource_management.libraries.functions.default import default
    '\n    This function replaces ${stack_version} placeholder into actual version.  If the package\n    version is passed from the server, use that as an absolute truth.\n    '
    package_version = default('roleParams/package_version', None)
    if (not package_version):
        package_version = default('hostLevelParams/package_version', None)
    package_delimiter = ('-' if OSCheck.is_ubuntu_family() else '_')
    if package_version:
        stack_version_package_formatted = package_version
        if OSCheck.is_ubuntu_family():
            stack_version_package_formatted = package_version.replace('_', package_delimiter)
    else:
        stack_version_package_formatted = (self.get_stack_version_before_packages_installed().replace('.', package_delimiter).replace('-', package_delimiter) if (STACK_VERSION_PLACEHOLDER in name) else name)
    package_name = name.replace(STACK_VERSION_PLACEHOLDER, stack_version_package_formatted)
    return package_name
