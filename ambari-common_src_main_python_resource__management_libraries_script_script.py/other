'\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n"License"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'
import tempfile
__all__ = ['Script']
import re
import os
import sys
import logging
import platform
import inspect
import tarfile
import resource_management
from ambari_commons import OSCheck, OSConst
from ambari_commons.constants import UPGRADE_TYPE_NON_ROLLING, UPGRADE_TYPE_ROLLING
from ambari_commons.os_family_impl import OsFamilyFuncImpl, OsFamilyImpl
from resource_management.libraries.resources import XmlConfig
from resource_management.libraries.resources import PropertiesFile
from resource_management.core.resources import File, Directory
from resource_management.core.source import InlineTemplate
from resource_management.core.environment import Environment
from resource_management.core.logger import Logger
from resource_management.core.exceptions import Fail, ClientComponentHasNoStatus, ComponentIsNotRunning
from resource_management.core.resources.packaging import Package
from resource_management.libraries.functions.version_select_util import get_component_version
from resource_management.libraries.functions.version import compare_versions
from resource_management.libraries.functions.version import format_stack_version
from resource_management.libraries.functions import stack_tools
from resource_management.libraries.functions.constants import Direction
from resource_management.libraries.functions import packages_analyzer
from resource_management.libraries.script.config_dictionary import ConfigDictionary, UnknownConfiguration
from resource_management.core.resources.system import Execute
from contextlib import closing
import ambari_simplejson as json
if OSCheck.is_windows_family():
    from resource_management.libraries.functions.install_windows_msi import install_windows_msi
    from resource_management.libraries.functions.reload_windows_env import reload_windows_env
    from resource_management.libraries.functions.zip_archive import archive_dir
    from resource_management.libraries.resources import Msi
else:
    from resource_management.libraries.functions.tar_archive import archive_dir
USAGE = 'Usage: {0} <COMMAND> <JSON_CONFIG> <BASEDIR> <STROUTPUT> <LOGGING_LEVEL> <TMP_DIR>\n\n<COMMAND> command type (INSTALL/CONFIGURE/START/STOP/SERVICE_CHECK...)\n<JSON_CONFIG> path to command json file. Ex: /var/lib/ambari-agent/data/command-2.json\n<BASEDIR> path to service metadata dir. Ex: /var/lib/ambari-agent/cache/common-services/HDFS/2.1.0.2.0/package\n<STROUTPUT> path to file with structured command output (file will be created). Ex:/tmp/my.txt\n<LOGGING_LEVEL> log level for stdout. Ex:DEBUG,INFO\n<TMP_DIR> temporary directory for executable scripts. Ex: /var/lib/ambari-agent/tmp\n'
_PASSWORD_MAP = {'/configurations/cluster-env/hadoop.user.name': '/configurations/cluster-env/hadoop.user.password', }
STACK_VERSION_PLACEHOLDER = '${stack_version}'
