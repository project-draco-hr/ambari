{
  Map<String,MetricReportRequest> reportRequestMap=getPropertyIdMaps(request,ids);
  String host=hostProvider.getCollectorHostName(clusterName,TIMELINE_METRICS);
  String port=hostProvider.getCollectorPort(clusterName,TIMELINE_METRICS);
  URIBuilder uriBuilder=AMSPropertyProvider.getAMSUriBuilder(host,port != null ? Integer.parseInt(port) : 8188);
  for (  Map.Entry<String,MetricReportRequest> entry : reportRequestMap.entrySet()) {
    MetricReportRequest reportRequest=entry.getValue();
    TemporalInfo temporalInfo=reportRequest.getTemporalInfo();
    Map<String,String> propertyIdMap=reportRequest.getPropertyIdMap();
    uriBuilder.removeQuery();
    uriBuilder.addParameter("metricNames",MetricsPropertyProvider.getSetString(propertyIdMap.keySet(),-1));
    uriBuilder.setParameter("appId","HOST");
    long startTime=temporalInfo.getStartTime();
    if (startTime != -1) {
      uriBuilder.setParameter("startTime",String.valueOf(startTime));
    }
    long endTime=temporalInfo.getEndTime();
    if (endTime != -1) {
      uriBuilder.setParameter("endTime",String.valueOf(endTime));
    }
    TimelineAppMetricCacheKey metricCacheKey=new TimelineAppMetricCacheKey(propertyIdMap.keySet(),"HOST",temporalInfo);
    metricCacheKey.setSpec(uriBuilder.toString());
    TimelineMetrics timelineMetrics;
    if (metricCache != null && metricCacheKey.getTemporalInfo() != null) {
      timelineMetrics=metricCache.getAppTimelineMetricsFromCache(metricCacheKey);
    }
 else {
      try {
        timelineMetrics=requestHelper.fetchTimelineMetrics(uriBuilder.toString());
      }
 catch (      IOException e) {
        timelineMetrics=null;
      }
    }
    if (timelineMetrics != null) {
      for (      TimelineMetric metric : timelineMetrics.getMetrics()) {
        if (metric.getMetricName() != null && metric.getMetricValues() != null) {
          TimelineMetric timelineMetricClone=new TimelineMetric(metric);
          metricsPaddingMethod.applyPaddingStrategy(timelineMetricClone,temporalInfo);
          String propertyId=propertyIdMap.get(metric.getMetricName());
          if (propertyId != null) {
            resource.setProperty(propertyId,getValue(timelineMetricClone,temporalInfo));
          }
        }
      }
    }
  }
}
