{
  SimpleFacetQuery facetQuery=conversionService.convert(request,SimpleFacetQuery.class);
  SolrQuery solrQuery=new DefaultQueryParser().doConstructSolrQuery(facetQuery);
  solrQuery.setFacetSort(request.getSortBy() == null ? HOST : request.getSortBy());
  NodeListResponse list=new NodeListResponse();
  String componentName=request.getComponentName() == null ? "" : request.getComponentName();
  if (StringUtils.isNotBlank(componentName)) {
    solrQuery.addFilterQuery(COMPONENT + ":" + componentName);
    QueryResponse response=serviceLogsSolrDao.process(solrQuery,"/service/logs/hosts/components");
    String firstHierarchy=String.format("%s,%s,%s",COMPONENT,HOST,LEVEL);
    String secondHierarchy=String.format("%s,%s",COMPONENT,LEVEL);
    return graphDataGenerator.generateServiceNodeTreeFromFacetResponse(response,firstHierarchy,secondHierarchy,LogSearchConstants.COMPONENT,LogSearchConstants.HOST);
  }
 else {
    return list;
  }
}
