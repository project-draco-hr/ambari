{
  SolrQuery solrQuery=queryGenerator.commonServiceFilterQuery(searchCriteria);
  solrQuery.setParam("event","/service/hosts/components");
  NodeListResponse list=new NodeListResponse();
  if (searchCriteria.getSortBy() == null) {
    searchCriteria.setSortBy(LogSearchConstants.SOLR_HOST);
    searchCriteria.setSortType(SolrQuery.ORDER.asc.toString());
  }
  queryGenerator.setFilterFacetSort(solrQuery,searchCriteria);
  String componentName="" + ((searchCriteria.getParamValue("componentName") == null) ? "" : searchCriteria.getParamValue("componentName"));
  if (!StringUtils.isBlank(componentName)) {
    solrQuery.addFilterQuery(LogSearchConstants.SOLR_COMPONENT + ":" + componentName);
  }
 else {
    return list;
  }
  String firstHirarchy="type,host,level";
  String secondHirarchy="type,level";
  try {
    SolrUtil.setFacetPivot(solrQuery,1,firstHirarchy,secondHirarchy);
    QueryResponse response=serviceLogsSolrDao.process(solrQuery);
    List<List<PivotField>> firstHirarchicalPivotFields=null;
    List<List<PivotField>> secondHirarchicalPivotFields=null;
    NamedList<List<PivotField>> firstNamedList=response.getFacetPivot();
    if (firstNamedList != null) {
      firstHirarchicalPivotFields=firstNamedList.getAll(firstHirarchy);
      secondHirarchicalPivotFields=firstNamedList.getAll(secondHirarchy);
    }
    if (firstHirarchicalPivotFields == null || secondHirarchicalPivotFields == null) {
      return list;
    }
    List<NodeData> dataList=buidTreeData(firstHirarchicalPivotFields.get(0),secondHirarchicalPivotFields.get(0),solrQuery,LogSearchConstants.COMPONENT,LogSearchConstants.HOST);
    if (dataList == null) {
      return list;
    }
    list.setvNodeList(dataList);
    return list;
  }
 catch (  SolrException|SolrServerException|IOException e) {
    logger.error("Error during solrQuery=" + solrQuery,e);
    throw RESTErrorUtil.createRESTException(MessageEnums.SOLR_ERROR.getMessage().getMessage(),MessageEnums.ERROR_SYSTEM);
  }
}
