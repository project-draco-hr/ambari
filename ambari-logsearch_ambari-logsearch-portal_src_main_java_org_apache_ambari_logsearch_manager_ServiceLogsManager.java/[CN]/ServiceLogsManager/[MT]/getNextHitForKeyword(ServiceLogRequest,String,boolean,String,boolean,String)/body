{
  if (hasNextOrAscOrder(isNext,timeAscending)) {
    request.setTo(nextOrPreviousPageDate);
  }
 else {
    request.setFrom(nextOrPreviousPageDate);
  }
  SimpleQuery keywordNextQuery=conversionService.convert(request,SimpleQuery.class);
  keywordNextQuery.addFilterQuery(new SimpleFilterQuery(new Criteria(KEY_LOG_MESSAGE).contains(keyword)));
  keywordNextQuery.setRows(1);
  SolrQuery kewordNextSolrQuery=new DefaultQueryParser().doConstructSolrQuery(keywordNextQuery);
  kewordNextSolrQuery.setStart(0);
  if (hasNextOrAscOrder(isNext,timeAscending)) {
    kewordNextSolrQuery.setSort(LOGTIME,SolrQuery.ORDER.desc);
  }
 else {
    kewordNextSolrQuery.setSort(LOGTIME,SolrQuery.ORDER.asc);
  }
  kewordNextSolrQuery.addSort(SEQUENCE_ID,SolrQuery.ORDER.desc);
  QueryResponse queryResponse=serviceLogsSolrDao.process(kewordNextSolrQuery,event);
  if (queryResponse == null) {
    throw RESTErrorUtil.createRESTException("The keyword " + "\"" + keyword + "\""+ " was not found",MessageEnums.ERROR_SYSTEM);
  }
  List<SolrServiceLogData> solrServiceLogDataList=queryResponse.getBeans(SolrServiceLogData.class);
  if (!CollectionUtils.isNotEmpty(solrServiceLogDataList)) {
    throw RESTErrorUtil.createRESTException("The keyword " + "\"" + keyword + "\""+ " was not found",MessageEnums.ERROR_SYSTEM);
  }
  return solrServiceLogDataList.get(0);
}
