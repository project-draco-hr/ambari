{
  List<String> fieldNames=new ArrayList<String>();
  String excludeArray[]=Arrays.copyOf(solrServiceLogConfig.getExcludeColumnList().toArray(),solrServiceLogConfig.getExcludeColumnList().size(),String[].class);
  HashMap<String,String> uiFieldColumnMapping=new LinkedHashMap<String,String>();
  ConfigHelper.getSchemaFieldsName(excludeArray,fieldNames,serviceLogsSolrDao);
  for (  String fieldName : fieldNames) {
    String uiField=solrServiceLogConfig.getSolrAndUiColumns().get(fieldName + LogSearchConstants.SOLR_SUFFIX);
    if (uiField != null) {
      uiFieldColumnMapping.put(fieldName,uiField);
    }
 else {
      uiFieldColumnMapping.put(fieldName,fieldName);
    }
  }
  HashMap<String,String> uiFieldColumnMappingSorted=new LinkedHashMap<String,String>();
  uiFieldColumnMappingSorted.put(LogSearchConstants.SOLR_LOG_MESSAGE,LogSearchConstants.SOLR_LOG_MESSAGE);
  Iterator<Entry<String,String>> it=BizUtil.sortHashMapByValues(uiFieldColumnMapping).entrySet().iterator();
  while (it.hasNext()) {
    @SuppressWarnings("rawtypes") Map.Entry pair=(Map.Entry)it.next();
    uiFieldColumnMappingSorted.put("" + pair.getKey(),"" + pair.getValue());
  }
  return convertObjToString(uiFieldColumnMappingSorted);
}
