{
  String deafalutValue="0";
  BarGraphDataListResponse dataList=new BarGraphDataListResponse();
  SolrQuery solrQuery=queryGenerator.commonServiceFilterQuery(searchCriteria);
  solrQuery.set("event","/audit/logs/histogram");
  String from=getFrom((String)searchCriteria.getParamValue("from"));
  String to=getTo((String)searchCriteria.getParamValue("to"));
  String unit=getUnit((String)searchCriteria.getParamValue("unit"));
  List<BarGraphData> histogramData=new ArrayList<>();
  String jsonHistogramQuery=queryGenerator.buildJSONFacetTermTimeRangeQuery(LogSearchConstants.SOLR_LEVEL,LogSearchConstants.LOGTIME,from,to,unit).replace("\\","");
  try {
    SolrUtil.setJSONFacet(solrQuery,jsonHistogramQuery);
    SolrUtil.setRowCount(solrQuery,Integer.parseInt(deafalutValue));
    QueryResponse response=serviceLogsSolrDao.process(solrQuery);
    if (response == null) {
      return dataList;
    }
    SimpleOrderedMap<Object> jsonFacetResponse=(SimpleOrderedMap<Object>)response.getResponse().get("facets");
    if (jsonFacetResponse == null || jsonFacetResponse.toString().equals("{count=0}")) {
      return dataList;
    }
    extractValuesFromBuckets(jsonFacetResponse,"x","y",histogramData);
    Collection<NameValueData> vNameValues=new ArrayList<NameValueData>();
    List<BarGraphData> graphDatas=new ArrayList<BarGraphData>();
    for (    String level : LogSearchConstants.SUPPORTED_LOG_LEVEL) {
      boolean isLevelPresent=false;
      BarGraphData vData1=null;
      for (      BarGraphData vData2 : histogramData) {
        String name=vData2.getName();
        if (level.contains(name)) {
          isLevelPresent=true;
          vData1=vData2;
          break;
        }
        if (vNameValues.isEmpty()) {
          Collection<NameValueData> vNameValues2=vData2.getDataCount();
          for (          NameValueData value : vNameValues2) {
            NameValueData value2=new NameValueData();
            value2.setValue(deafalutValue);
            value2.setName(value.getName());
            vNameValues.add(value2);
          }
        }
      }
      if (!isLevelPresent) {
        BarGraphData vBarGraphData=new BarGraphData();
        vBarGraphData.setName(level);
        vBarGraphData.setDataCount(vNameValues);
        graphDatas.add(vBarGraphData);
      }
 else {
        graphDatas.add(vData1);
      }
    }
    dataList.setGraphData(graphDatas);
    return dataList;
  }
 catch (  SolrServerException|SolrException|IOException e) {
    logger.error(e);
    throw RESTErrorUtil.createRESTException(MessageEnums.SOLR_ERROR.getMessage().getMessage(),MessageEnums.ERROR_SYSTEM);
  }
}
