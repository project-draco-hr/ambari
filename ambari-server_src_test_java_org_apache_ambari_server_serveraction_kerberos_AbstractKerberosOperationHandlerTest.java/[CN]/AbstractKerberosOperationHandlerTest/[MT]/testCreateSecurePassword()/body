{
  KerberosOperationHandler handler2=new KerberosOperationHandler(){
    @Override public void open(    KerberosCredential administratorCredentials,    String defaultRealm) throws AmbariException {
      setAdministratorCredentials(administratorCredentials);
      setDefaultRealm(defaultRealm);
    }
    @Override public void close() throws AmbariException {
    }
    @Override public boolean principalExists(    String principal) throws AmbariException {
      return false;
    }
    @Override public boolean createServicePrincipal(    String principal,    String password) throws AmbariException {
      return false;
    }
    @Override public boolean setPrincipalPassword(    String principal,    String password) throws AmbariException {
      return false;
    }
    @Override public boolean removeServicePrincipal(    String principal) throws AmbariException {
      return false;
    }
  }
;
  String password1=handler.createSecurePassword();
  Assert.assertNotNull(password1);
  Assert.assertEquals(KerberosOperationHandler.SECURE_PASSWORD_LENGTH,password1.length());
  String password2=handler2.createSecurePassword();
  Assert.assertNotNull(password2);
  Assert.assertEquals(KerberosOperationHandler.SECURE_PASSWORD_LENGTH,password2.length());
  Assert.assertFalse((password1.equals(password2)));
}
