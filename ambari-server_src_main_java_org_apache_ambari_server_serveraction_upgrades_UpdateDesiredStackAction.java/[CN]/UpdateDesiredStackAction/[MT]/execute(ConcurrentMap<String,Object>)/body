{
  Map<String,String> commandParams=getExecutionCommand().getCommandParams();
  StackId originalStackId=new StackId(commandParams.get(COMMAND_PARAM_ORIGINAL_STACK));
  StackId targetStackId=new StackId(commandParams.get(COMMAND_PARAM_TARGET_STACK));
  Direction direction=Direction.UPGRADE;
  if (commandParams.containsKey(COMMAND_PARAM_DIRECTION) && "downgrade".equals(commandParams.get(COMMAND_PARAM_DIRECTION).toLowerCase())) {
    direction=Direction.DOWNGRADE;
  }
  String version=commandParams.get(COMMAND_PARAM_VERSION);
  String upgradePackName=commandParams.get(COMMAND_PARAM_UPGRADE_PACK);
  String clusterName=getExecutionCommand().getClusterName();
  UpgradePack upgradePack=ambariMetaInfo.getUpgradePacks(originalStackId.getStackName(),originalStackId.getStackVersion()).get(upgradePackName);
  Map<String,String> roleParams=getExecutionCommand().getRoleParams();
  String userName;
  if (roleParams != null && roleParams.containsKey(ServerAction.ACTION_USER_NAME)) {
    userName=roleParams.get(ServerAction.ACTION_USER_NAME);
  }
 else {
    userName=m_configuration.getAnonymousAuditName();
    LOG.warn(String.format("Did not receive role parameter %s, will save configs using anonymous username %s",ServerAction.ACTION_USER_NAME,userName));
  }
  return updateDesiredStack(clusterName,originalStackId,targetStackId,version,direction,upgradePack,userName);
}
