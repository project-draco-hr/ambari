{
  Map<String,String> parametersMap=new HashMap<String,String>();
  String hostPrefix=amsJmeterProperties.getProperty("host-prefix");
  String hostSuffix=amsJmeterProperties.getProperty("host-suffix");
  int minHostIndex=Integer.valueOf(amsJmeterProperties.getProperty("min-host-index"));
  int numHosts=Integer.valueOf(amsJmeterProperties.getProperty("num-hosts"));
  parametersMap.put("appId",app);
  if (request.needsTimestamps()) {
    long currentTime=System.currentTimeMillis();
    long oneHourBack=currentTime - 3600 * 1000;
    parametersMap.put("startTime",String.valueOf(oneHourBack));
    parametersMap.put("endTime",String.valueOf(currentTime));
  }
  if (request.needsHost()) {
    if (ClientApp.AMS_HBASE.getId().equals(app)) {
      parametersMap.put("hostname",amsJmeterProperties.getProperty("ams-host"));
    }
 else     if (ClientApp.HOST.getId().equals(app) || ClientApp.NODEMANAGER.getId().equals(app)) {
      int randomHost=minHostIndex + new Random().nextInt(numHosts);
      parametersMap.put("hostname",hostPrefix + randomHost + hostSuffix);
    }
 else {
      parametersMap.put("hostname",hostPrefix + amsJmeterProperties.getProperty(app + "-host") + hostSuffix);
    }
  }
  parametersMap.put("metricNames",request.getMetricStringPayload());
  return parametersMap;
}
