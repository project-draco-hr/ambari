def alternatives_checks_parser(task_results_by_host, results_to_print):
    for key in task_results_by_host:
        structured_out = basic_task_result_parser(task_results_by_host[key], results_to_print)
        last_agent_env = structured_out.get('last_agent_env_check', [])
        alternatives = last_agent_env.get('alternatives', [])
        if alternatives:
            warnings = []
            for alternative in alternatives:
                warnings.append('Existing /etc/alternativies entry: {0} points to {1}'.format(alternative['name'], alternative['target']))
            results_to_print.append({'key': key, 'status': STATUS_WARNING, 'warning': warnings, })
        else:
            results_to_print.append({'key': key, 'status': STATUS_PASSED, })
