def java_process_checks_parser(task_results_by_host, results_to_print):
    for key in task_results_by_host:
        structured_out = basic_task_result_parser(task_results_by_host[key], results_to_print)
        if structured_out:
            last_agent_env = structured_out.get('last_agent_env_check', {})
            host_health = last_agent_env.get('hostHealth', {})
            active_java_processes = host_health.get('activeJavaProcs', [])
            if active_java_processes:
                warnings = []
                for process in active_java_processes:
                    warnings.append('Process {0} under user {1} should not be running'.format(process['pid'], process['user']))
                results_to_print.append({'key': key, 'status': STATUS_WARNING, 'warning': warnings, })
            else:
                results_to_print.append({'key': key, 'status': STATUS_PASSED, })
