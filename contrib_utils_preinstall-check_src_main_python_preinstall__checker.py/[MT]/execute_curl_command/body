def execute_curl_command(url, headers=[], request_type=DEFAULT_HTTP_REQUEST_TYPE, request_body=None, user=DEFAULT_ADMIN_USER, password=None):
    '\n  @param url: REST URL\n  @param headers: Optional. Headers to be included in the REST API call\n  @param request_type: HTTP request type (GET/POST/PUT/DELETE). Use HTTP GET as the default.\n  @param request_body: Data to be submitted for HTTP POST and PUT requests\n  @param user: User for Ambari REST API authentication\n  @param password: Password for the user used to authenticate the Ambari REST API call\n  '
    curl_cmd_array = ['curl', '-v', '-u', '{0}:{1}'.format(user, password), '-k', '-H', 'X-Requested-By: ambari']
    for header in headers:
        curl_cmd_array.append('-H')
        curl_cmd_array.append(header)
    curl_cmd_array.append('-s')
    curl_cmd_array.append('-X')
    curl_cmd_array.append(request_type)
    if ((request_type == 'PUT') or (request_type == 'POST')):
        if request_body:
            curl_cmd_array.append('-d')
            curl_cmd_array.append(request_body)
    curl_cmd_array.append(url)
    logger.debug('Curl command: {0}'.format(' '.join(curl_cmd_array)))
    exeProcess = subprocess.Popen(curl_cmd_array, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    (out, err) = exeProcess.communicate()
    exit_code = exeProcess.returncode
    return (out, err, exit_code)
