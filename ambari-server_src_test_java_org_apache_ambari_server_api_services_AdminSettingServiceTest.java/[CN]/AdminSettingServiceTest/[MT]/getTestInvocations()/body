{
  List<ServiceTestInvocation> listInvocations=new ArrayList<>();
  AdminSettingService adminSettingService=new TestAdminSettingService("settingName");
  Method m=adminSettingService.getClass().getMethod("getSetting",String.class,HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{null,getHttpHeaders(),getUriInfo(),"settingName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,adminSettingService,m,args,null));
  adminSettingService=new TestAdminSettingService(null);
  m=adminSettingService.getClass().getMethod("getSettings",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,adminSettingService,m,args,null));
  adminSettingService=new TestAdminSettingService(null);
  m=adminSettingService.getClass().getMethod("createSetting",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,adminSettingService,m,args,"body"));
  adminSettingService=new TestAdminSettingService("settingName");
  m=adminSettingService.getClass().getMethod("updateSetting",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"settingName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,adminSettingService,m,args,"body"));
  adminSettingService=new TestAdminSettingService("settingName");
  m=adminSettingService.getClass().getMethod("deleteSetting",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"settingName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,adminSettingService,m,args,null));
  return listInvocations;
}
