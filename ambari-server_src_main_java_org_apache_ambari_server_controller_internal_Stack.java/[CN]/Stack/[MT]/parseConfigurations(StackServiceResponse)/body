{
  String service=stackService.getServiceName();
  Map<String,Map<String,ConfigProperty>> mapServiceConfig=new HashMap<String,Map<String,ConfigProperty>>();
  Map<String,Map<String,ConfigProperty>> mapRequiredServiceConfig=new HashMap<String,Map<String,ConfigProperty>>();
  serviceConfigurations.put(service,mapServiceConfig);
  requiredServiceConfigurations.put(service,mapRequiredServiceConfig);
  Set<StackConfigurationResponse> serviceConfigs=controller.getStackConfigurations(Collections.singleton(new StackConfigurationRequest(name,version,service,null)));
  Set<StackConfigurationResponse> stackLevelConfigs=controller.getStackLevelConfigurations(Collections.singleton(new StackLevelConfigurationRequest(name,version,null)));
  serviceConfigs.addAll(stackLevelConfigs);
  for (  StackConfigurationResponse config : serviceConfigs) {
    ConfigProperty configProperty=new ConfigProperty(config);
    String type=configProperty.getType();
    Map<String,ConfigProperty> mapTypeConfig=mapServiceConfig.get(type);
    if (mapTypeConfig == null) {
      mapTypeConfig=new HashMap<String,ConfigProperty>();
      mapServiceConfig.put(type,mapTypeConfig);
    }
    mapTypeConfig.put(config.getPropertyName(),configProperty);
    if (config.isRequired()) {
      Map<String,ConfigProperty> requiredTypeConfig=mapRequiredServiceConfig.get(type);
      if (requiredTypeConfig == null) {
        requiredTypeConfig=new HashMap<String,ConfigProperty>();
        mapRequiredServiceConfig.put(type,requiredTypeConfig);
      }
      requiredTypeConfig.put(config.getPropertyName(),configProperty);
    }
  }
  Set<String> configTypes=stackService.getConfigTypes().keySet();
  for (  String configType : configTypes) {
    if (!mapServiceConfig.containsKey(configType)) {
      mapServiceConfig.put(configType,Collections.<String,ConfigProperty>emptyMap());
    }
  }
}
