def namenode(action=None, do_format=True):
    import params
    if (action == 'configure'):
        create_name_dirs(params.dfs_name_dir)
    if (action == 'start'):
        if do_format:
            format_namenode()
            pass
        File(params.exclude_file_path, content=Template('exclude_hosts_list.j2'), owner=params.hdfs_user, group=params.user_group)
        Directory(params.hadoop_pid_dir_prefix, mode=493, owner=params.hdfs_user, group=params.user_group)
        service(action='start', name='namenode', user=params.hdfs_user, create_pid_dir=True, create_log_dir=True)
        if params.security_enabled:
            Execute(format('{kinit_path_local} -kt {hdfs_user_keytab} {hdfs_principal_name}'), user=params.hdfs_user)
        if params.dfs_ha_enabled:
            dfs_check_nn_status_cmd = format("su -s /bin/bash - {hdfs_user} -c 'export PATH=$PATH:{hadoop_bin_dir} ; hdfs --config {hadoop_conf_dir} haadmin -getServiceState {namenode_id} | grep active > /dev/null'")
        else:
            dfs_check_nn_status_cmd = None
        namenode_safe_mode_off = format("su -s /bin/bash - {hdfs_user} -c 'export PATH=$PATH:{hadoop_bin_dir} ; hdfs --config {hadoop_conf_dir} dfsadmin -safemode get' | grep 'Safe mode is OFF'")
        leave_safe_mode = True
        if (dfs_check_nn_status_cmd is not None):
            (code, out) = shell.call(dfs_check_nn_status_cmd)
            if (code != 0):
                leave_safe_mode = False
        if leave_safe_mode:
            (code, out) = shell.call(namenode_safe_mode_off)
            if (code != 0):
                leave_safe_mode_cmd = format("su -s /bin/bash - {hdfs_user} -c 'export PATH=$PATH:{hadoop_bin_dir} ; hdfs --config {hadoop_conf_dir} dfsadmin -safemode leave'")
                Execute(leave_safe_mode_cmd)
        Execute(namenode_safe_mode_off, tries=40, try_sleep=10, only_if=dfs_check_nn_status_cmd)
        create_hdfs_directories(dfs_check_nn_status_cmd)
    if (action == 'stop'):
        service(action='stop', name='namenode', user=params.hdfs_user)
    if (action == 'decommission'):
        decommission()
