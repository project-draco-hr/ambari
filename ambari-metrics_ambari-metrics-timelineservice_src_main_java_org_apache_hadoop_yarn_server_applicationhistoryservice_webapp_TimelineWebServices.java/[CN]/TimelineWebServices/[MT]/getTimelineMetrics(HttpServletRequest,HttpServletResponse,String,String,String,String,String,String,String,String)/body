{
  init(res);
  try {
    LOG.debug("Request for metrics => metricNames: " + metricNames + ", "+ "appId: "+ appId+ ", instanceId: "+ instanceId+ ", "+ "hostname: "+ hostname+ ", startTime: "+ startTime+ ", "+ "endTime: "+ endTime);
    return timelineMetricStore.getTimelineMetrics(parseListStr(metricNames,","),hostname,appId,instanceId,parseLongStr(startTime),parseLongStr(endTime),parseIntStr(limit),parseBoolean(grouped));
  }
 catch (  NumberFormatException ne) {
    throw new BadRequestException("startTime and limit should be numeric " + "values");
  }
catch (  SQLException sql) {
    throw new WebApplicationException(sql,Response.Status.INTERNAL_SERVER_ERROR);
  }
catch (  IOException io) {
    throw new WebApplicationException(io,Response.Status.INTERNAL_SERVER_ERROR);
  }
}
