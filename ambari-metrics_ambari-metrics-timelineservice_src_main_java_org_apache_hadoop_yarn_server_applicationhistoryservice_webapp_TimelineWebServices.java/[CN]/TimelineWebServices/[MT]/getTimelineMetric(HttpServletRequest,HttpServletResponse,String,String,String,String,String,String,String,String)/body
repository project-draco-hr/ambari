{
  init(res);
  try {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Request for metrics => metricName: " + metricName + ", "+ "appId: "+ appId+ ", instanceId: "+ instanceId+ ", "+ "hostname: "+ hostname+ ", startTime: "+ startTime+ ", "+ "endTime: "+ endTime);
    }
    return timelineMetricStore.getTimelineMetric(metricName,hostname,appId,instanceId,parseLongStr(startTime),parseLongStr(endTime),Precision.getPrecision(precision),parseIntStr(limit));
  }
 catch (  NumberFormatException ne) {
    throw new BadRequestException("startTime, endTime and limit should be " + "numeric values");
  }
catch (  Precision.PrecisionFormatException pfe) {
    throw new BadRequestException("precision should be seconds, minutes " + "or hours");
  }
catch (  IllegalArgumentException iae) {
    throw new BadRequestException(iae.getMessage());
  }
catch (  SQLException sql) {
    throw new WebApplicationException(sql,Response.Status.INTERNAL_SERVER_ERROR);
  }
catch (  IOException io) {
    throw new WebApplicationException(io,Response.Status.INTERNAL_SERVER_ERROR);
  }
}
