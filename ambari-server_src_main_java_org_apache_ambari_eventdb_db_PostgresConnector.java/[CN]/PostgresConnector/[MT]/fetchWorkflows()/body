{
  PreparedStatement ps=getPS(Statements.FW_PS);
  List<WorkflowDBEntry> workflows=new ArrayList<WorkflowDBEntry>();
  ResultSet rs=null;
  try {
    rs=ps.executeQuery();
    while (rs.next()) {
      WorkflowDBEntry w=new WorkflowDBEntry();
      w.setWorkflowId(WorkflowFields.WORKFLOWID.getString(rs));
      w.setWorkflowName(WorkflowFields.WORKFLOWNAME.getString(rs));
      w.setUserName(WorkflowFields.USERNAME.getString(rs));
      w.setStartTime(WorkflowFields.STARTTIME.getLong(rs));
      long updateTime=WorkflowFields.LASTUPDATETIME.getLong(rs);
      if (updateTime > w.getStartTime())       w.setElapsedTime(updateTime - w.getStartTime());
 else       w.setElapsedTime(0);
      w.setNumJobsTotal(WorkflowFields.NUMJOBSTOTAL.getInt(rs));
      w.setNumJobsCompleted(WorkflowFields.NUMJOBSCOMPLETED.getInt(rs));
      w.setWorkflowContext(jsonMapper.readValue(WorkflowFields.WORKFLOWCONTEXT.getString(rs),WorkflowContext.class));
      try {
        PreparedStatement aggregateio=getPS(Statements.WORKFLOW_AGGREGATE_IO);
        aggregateio.setString(1,w.getWorkflowId());
        ResultSet ioresult=aggregateio.executeQuery();
        if (ioresult.next()) {
          w.setInputBytes(ioresult.getLong(AGGREGATE_INPUTBYTES));
          w.setOutputBytes(ioresult.getLong(AGGREGATE_OUTPUTBYTES));
        }
      }
 catch (      SQLException e) {
        throw new IOException(e);
      }
      workflows.add(w);
    }
  }
 catch (  SQLException e) {
    throw new IOException(e);
  }
 finally {
    try {
      if (rs != null)       rs.close();
    }
 catch (    SQLException e) {
      LOG.error("Exception while closing ResultSet",e);
    }
  }
  return workflows;
}
