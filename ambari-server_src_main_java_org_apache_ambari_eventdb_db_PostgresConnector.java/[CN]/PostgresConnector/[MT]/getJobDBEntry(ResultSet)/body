{
  JobDBEntry j=new JobDBEntry();
  j.setConfPath(JobFields.CONFPATH.getString(rs));
  j.setSubmitTime(JobFields.SUBMITTIME.getLong(rs));
  long finishTime=JobFields.FINISHTIME.getLong(rs);
  if (finishTime > j.getSubmitTime())   j.setElapsedTime(finishTime - j.getSubmitTime());
 else   j.setElapsedTime(0);
  j.setInputBytes(JobFields.INPUTBYTES.getLong(rs));
  j.setJobId(JobFields.JOBID.getString(rs));
  j.setJobName(JobFields.JOBNAME.getString(rs));
  j.setMaps(JobFields.MAPS.getInt(rs));
  j.setOutputBytes(JobFields.OUTPUTBYTES.getLong(rs));
  j.setReduces(JobFields.REDUCES.getInt(rs));
  j.setStatus(JobFields.STATUS.getString(rs));
  j.setUserName(JobFields.USERNAME.getString(rs));
  j.setWorkflowEntityName(JobFields.WORKFLOWENTITYNAME.getString(rs));
  j.setWorkflowId(JobFields.WORKFLOWID.getString(rs));
  return j;
}
