{
  int total=0;
  PreparedStatement ps=getPS(Statements.FW_COUNT_PS);
  ResultSet rs=null;
  try {
    rs=ps.executeQuery();
    if (rs.next())     total=SummaryFields.numRows.getInt(rs);
  }
 catch (  SQLException e) {
    throw new IOException(e);
  }
 finally {
    try {
      if (rs != null)       rs.close();
    }
 catch (    SQLException e) {
      LOG.error("Exception while closing ResultSet",e);
    }
  }
  String searchClause=buildSearchClause(searchTerm,searchWorkflowId,searchWorkflowName,searchWorkflowType,searchUserName,minJobs,maxJobs,minInputBytes,maxInputBytes,minOutputBytes,maxOutputBytes,minDuration,maxDuration,minStartTime,maxStartTime);
  List<WorkflowDBEntry> workflows=fetchWorkflows(getQualifiedPS(Statements.FW_PS,searchClause,col,sortAscending,offset,limit));
  Summary summary=fetchSummary(getQualifiedPS(Statements.FW_SUMMARY_PS,searchClause));
  DataTable table=new DataTable();
  table.setiTotalRecords(total);
  table.setiTotalDisplayRecords(summary.getNumRows());
  table.setAaData(workflows);
  table.setsEcho(echo);
  table.setSummary(summary);
  return table;
}
