{
  String result="";
  BufferedReader rd;
  String line;
  if (url.toLowerCase().contains(impersonatorSetting.getDoAsParamName().toLowerCase())) {
    throw new IllegalArgumentException("URL cannot contain \"" + impersonatorSetting.getDoAsParamName() + "\" parameter");
  }
  try {
    ComponentSSLConfiguration configuration=ComponentSSLConfiguration.instance();
    URLStreamProvider urlStreamProvider=new URLStreamProvider(ProxyService.URL_CONNECT_TIMEOUT,ProxyService.URL_READ_TIMEOUT,configuration.getTruststorePath(),configuration.getTruststorePassword(),configuration.getTruststoreType());
    Map<String,List<String>> headers=new HashMap<String,List<String>>();
    headers.put(impersonatorSetting.getDoAsParamName(),new ArrayList<String>(){
{
        add(impersonatorSetting.getUsername());
      }
    }
);
    HttpURLConnection connection=urlStreamProvider.processURL(url,requestType,(String)null,headers);
    int responseCode=connection.getResponseCode();
    InputStream resultInputStream;
    if (responseCode >= ProxyService.HTTP_ERROR_RANGE_START) {
      resultInputStream=connection.getErrorStream();
    }
 else {
      resultInputStream=connection.getInputStream();
    }
    rd=this.helper.makeBR(new InputStreamReader(resultInputStream));
    if (rd != null) {
      line=rd.readLine();
      while (line != null) {
        result+=line;
        line=rd.readLine();
      }
      rd.close();
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
catch (  Exception e) {
    e.printStackTrace();
  }
  return result;
}
