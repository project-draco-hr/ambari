{
  Resource.Type type=Resource.Type.Group;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  Set<GroupResponse> allResponse=new HashSet<GroupResponse>();
  allResponse.add(new GroupResponse("engineering",false));
  expect(managementController.getGroups(AbstractResourceProviderTest.Matcher.getGroupRequestSet("engineering"))).andReturn(allResponse).once();
  replay(managementController);
  SecurityContextHolder.getContext().setAuthentication(authentication);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  Set<String> propertyIds=new HashSet<String>();
  propertyIds.add(GroupResourceProvider.GROUP_GROUPNAME_PROPERTY_ID);
  Predicate predicate=new PredicateBuilder().property(GroupResourceProvider.GROUP_GROUPNAME_PROPERTY_ID).equals("engineering").toPredicate();
  Request request=PropertyHelper.getReadRequest(propertyIds);
  Set<Resource> resources=provider.getResources(request,predicate);
  Assert.assertEquals(1,resources.size());
  for (  Resource resource : resources) {
    String groupName=(String)resource.getPropertyValue(GroupResourceProvider.GROUP_GROUPNAME_PROPERTY_ID);
    Assert.assertEquals("engineering",groupName);
  }
  verify(managementController);
}
