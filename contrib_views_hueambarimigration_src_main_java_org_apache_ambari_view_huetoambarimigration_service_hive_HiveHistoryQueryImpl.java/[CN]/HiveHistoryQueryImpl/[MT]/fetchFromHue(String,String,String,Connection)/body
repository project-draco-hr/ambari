{
  int id=0;
  int i=0;
  String[] query=new String[100];
  try {
    connection.setAutoCommit(false);
    Statement statement=connection.createStatement();
    ResultSet rs1=null;
    if (username.equals("all")) {
    }
 else {
      ResultSet rs=statement.executeQuery("select id from auth_user where username='" + username + "';");
      while (rs.next()) {
        id=rs.getInt("id");
      }
    }
    if (startdate.equals("") && endtime.equals("")) {
      if (username.equals("all")) {
        rs1=statement.executeQuery("select query from beeswax_queryhistory;");
      }
 else {
        rs1=statement.executeQuery("select query from beeswax_queryhistory where owner_id =" + id + ";");
      }
    }
 else     if (!(startdate.equals("")) && !(endtime.equals(""))) {
      if (username.equals("all")) {
        rs1=statement.executeQuery("select query from beeswax_queryhistory where submission_date >= date('" + startdate + "') AND submission_date < date('"+ endtime+ "');");
      }
 else {
        rs1=statement.executeQuery("select query from beeswax_queryhistory where owner_id =" + id + " AND submission_date >= date('"+ startdate+ "') AND submission_date <= date('"+ endtime+ "');");
      }
    }
 else     if (!(startdate.equals("")) && (endtime.equals(""))) {
      if (username.equals("all")) {
        rs1=statement.executeQuery("select query from beeswax_queryhistory where submission_date >= date('" + startdate + "');");
      }
 else {
        rs1=statement.executeQuery("select query from beeswax_queryhistory where owner_id =" + id + " AND submission_date >= date('"+ startdate+ "');");
      }
    }
 else     if ((startdate.equals("")) && !(endtime.equals(""))) {
      if (username.equals("all")) {
        rs1=statement.executeQuery("select query from beeswax_queryhistory where submission_date < date('" + endtime + "');");
      }
 else {
        rs1=statement.executeQuery("select query from beeswax_queryhistory where owner_id =" + id + " AND submission_date < date('"+ endtime+ "');");
      }
    }
    while (rs1.next()) {
      query[i]=rs1.getString("query");
      i++;
    }
    connection.commit();
  }
 catch (  SQLException e) {
    connection.rollback();
  }
 finally {
    try {
      if (connection != null)       connection.close();
    }
 catch (    SQLException e) {
      logger.error("Sql exception error: " + e);
    }
  }
  return query;
}
