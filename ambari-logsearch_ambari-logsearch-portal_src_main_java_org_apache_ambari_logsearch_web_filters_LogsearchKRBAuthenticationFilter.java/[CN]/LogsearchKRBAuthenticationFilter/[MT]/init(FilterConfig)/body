{
  final FilterConfig globalConf=conf;
  String hostName=PropertiesUtil.getProperty(HOST_NAME,"localhost");
  final Map<String,String> params=new HashMap<String,String>();
  if (spnegoEnable) {
    authType=KerberosAuthenticationHandler.TYPE;
  }
  params.put(AUTH_TYPE,authType);
  params.put(NAME_RULES_PARAM,PropertiesUtil.getProperty(NAME_RULES,"DEFAULT"));
  params.put(TOKEN_VALID_PARAM,PropertiesUtil.getProperty(TOKEN_VALID,"30"));
  params.put(COOKIE_DOMAIN_PARAM,PropertiesUtil.getProperty(COOKIE_DOMAIN,hostName));
  params.put(COOKIE_PATH_PARAM,PropertiesUtil.getProperty(COOKIE_PATH,"/"));
  params.put(PRINCIPAL_PARAM,PropertiesUtil.getProperty(PRINCIPAL,""));
  params.put(KEYTAB_PARAM,PropertiesUtil.getProperty(KEYTAB,""));
  FilterConfig myConf=new FilterConfig(){
    @Override public ServletContext getServletContext(){
      if (globalConf != null) {
        return globalConf.getServletContext();
      }
 else {
        return NO_SERVLET_CONTEXT;
      }
    }
    @SuppressWarnings("unchecked") @Override public Enumeration<String> getInitParameterNames(){
      return new IteratorEnumeration(params.keySet().iterator());
    }
    @Override public String getInitParameter(    String param){
      return params.get(param);
    }
    @Override public String getFilterName(){
      return "KerberosFilter";
    }
  }
;
  super.init(myConf);
}
