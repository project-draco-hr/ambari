{
  final Map<String,UpgradePack> upgradePacks=ambariMetaInfo.getUpgradePacks(stackName,stackVersion);
  for (  Entry<String,UpgradePack> upgradePackEntry : upgradePacks.entrySet()) {
    final UpgradePack upgradePack=upgradePackEntry.getValue();
    final String upgradePackName=upgradePackEntry.getKey();
    if (StringUtils.isBlank(upgradePack.getTarget())) {
      LOG.error("Upgrade pack " + upgradePackName + " is corrupted, it should contain <target> node");
      continue;
    }
    String regexPattern=upgradePack.getTarget();
    regexPattern=regexPattern.replaceAll("\\.","\\\\.");
    regexPattern=regexPattern.replaceAll("\\\\\\.\\*","(\\\\\\.\\\\d+)?");
    regexPattern=regexPattern.concat("(-\\d+)?");
    if (Pattern.matches(regexPattern,repositoryVersion)) {
      return upgradePackName;
    }
  }
  throw new AmbariException("There were no suitable upgrade packs for stack " + stackName + " "+ stackVersion);
}
