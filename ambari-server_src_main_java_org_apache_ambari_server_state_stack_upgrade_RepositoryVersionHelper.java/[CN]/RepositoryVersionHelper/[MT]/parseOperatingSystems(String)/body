{
  final List<OperatingSystemEntity> operatingSystems=new ArrayList<OperatingSystemEntity>();
  final JsonArray rootJson=new JsonParser().parse(repositoriesJson).getAsJsonArray();
  for (  JsonElement operatingSystemJson : rootJson) {
    final OperatingSystemEntity operatingSystemEntity=new OperatingSystemEntity();
    operatingSystemEntity.setOsType(operatingSystemJson.getAsJsonObject().get(OperatingSystemResourceProvider.OPERATING_SYSTEM_OS_TYPE_PROPERTY_ID).getAsString());
    for (    JsonElement repositoryJson : operatingSystemJson.getAsJsonObject().get(RepositoryVersionResourceProvider.SUBRESOURCE_REPOSITORIES_PROPERTY_ID).getAsJsonArray()) {
      final RepositoryEntity repositoryEntity=new RepositoryEntity();
      repositoryEntity.setBaseUrl(repositoryJson.getAsJsonObject().get(RepositoryResourceProvider.REPOSITORY_BASE_URL_PROPERTY_ID).getAsString());
      repositoryEntity.setName(repositoryJson.getAsJsonObject().get(RepositoryResourceProvider.REPOSITORY_REPO_NAME_PROPERTY_ID).getAsString());
      repositoryEntity.setRepositoryId(repositoryJson.getAsJsonObject().get(RepositoryResourceProvider.REPOSITORY_REPO_ID_PROPERTY_ID).getAsString());
      operatingSystemEntity.getRepositories().add(repositoryEntity);
    }
    operatingSystems.add(operatingSystemEntity);
  }
  return operatingSystems;
}
