{
  HostEntity host1=hostDAO.findByName("test_host1");
  HostEntity host2=hostDAO.findByName("test_host2");
  HostEntity host3=hostDAO.findByName("test_host3");
  HostVersionEntity hostVersionEntity1=new HostVersionEntity(host1,helper.getOrCreateRepositoryVersion(HDP_22_STACK,"2.2.0.0-995"),RepositoryVersionState.CURRENT);
  hostVersionEntity1.setId(1L);
  HostVersionEntity hostVersionEntity2=new HostVersionEntity(host2,helper.getOrCreateRepositoryVersion(HDP_22_STACK,"2.2.0.0-995"),RepositoryVersionState.INSTALLED);
  hostVersionEntity2.setId(2L);
  HostVersionEntity hostVersionEntity3=new HostVersionEntity(host3,helper.getOrCreateRepositoryVersion(HDP_22_STACK,"2.2.0.0-995"),RepositoryVersionState.INSTALLED);
  hostVersionEntity3.setId(3L);
  Assert.assertEquals(hostVersionEntity1,hostVersionDAO.findByClusterStackVersionAndHost("test_cluster1",HDP_22_STACK,"2.2.0.0-995","test_host1"));
  Assert.assertEquals(hostVersionEntity2,hostVersionDAO.findByClusterStackVersionAndHost("test_cluster1",HDP_22_STACK,"2.2.0.0-995","test_host2"));
  Assert.assertEquals(hostVersionEntity3,hostVersionDAO.findByClusterStackVersionAndHost("test_cluster1",HDP_22_STACK,"2.2.0.0-995","test_host3"));
  Assert.assertEquals(null,hostVersionDAO.findByClusterStackVersionAndHost("non_existent_cluster",HDP_22_STACK,"2.2.0.0-995","test_host3"));
  Assert.assertEquals(null,hostVersionDAO.findByClusterStackVersionAndHost("test_cluster1",BAD_STACK,"2.2.0.0-995","test_host3"));
  Assert.assertEquals(null,hostVersionDAO.findByClusterStackVersionAndHost("test_cluster1",HDP_22_STACK,"non_existent_version","test_host3"));
  Assert.assertEquals(null,hostVersionDAO.findByClusterStackVersionAndHost("test_cluster1",HDP_22_STACK,"non_existent_version","non_existent_host"));
  addMoreVersions();
  HostVersionEntity hostVersionEntity1LastExpected=new HostVersionEntity(host1,helper.getOrCreateRepositoryVersion(HDP_22_STACK,"2.2.1.0-500"),RepositoryVersionState.INSTALLED);
  HostVersionEntity hostVersionEntity2LastExpected=new HostVersionEntity(host2,helper.getOrCreateRepositoryVersion(HDP_22_STACK,"2.2.1.0-500"),RepositoryVersionState.UPGRADING);
  HostVersionEntity hostVersionEntity3LastExpected=new HostVersionEntity(host3,helper.getOrCreateRepositoryVersion(HDP_22_STACK,"2.2.1.0-500"),RepositoryVersionState.UPGRADE_FAILED);
  HostVersionEntity hostVersionEntity1LastActual=hostVersionDAO.findByClusterStackVersionAndHost("test_cluster1",HDP_22_STACK,"2.2.1.0-500","test_host1");
  HostVersionEntity hostVersionEntity2LastActual=hostVersionDAO.findByClusterStackVersionAndHost("test_cluster1",HDP_22_STACK,"2.2.1.0-500","test_host2");
  HostVersionEntity hostVersionEntity3LastActual=hostVersionDAO.findByClusterStackVersionAndHost("test_cluster1",HDP_22_STACK,"2.2.1.0-500","test_host3");
  Assert.assertEquals(hostVersionEntity1LastExpected,new HostVersionEntity(hostVersionEntity1LastActual));
  Assert.assertEquals(hostVersionEntity2LastExpected,new HostVersionEntity(hostVersionEntity2LastActual));
  Assert.assertEquals(hostVersionEntity3LastExpected,new HostVersionEntity(hostVersionEntity3LastActual));
}
