def initialize_data(cls):
    '\n      Initialize internal data structures from file\n    '
    try:
        f = open(os.path.join(RESOURCES_DIR, OSFAMILY_JSON_RESOURCE))
        json_data = eval(f.read())
        f.close()
        if (JSON_OS_MAPPING not in json_data):
            raise Exception('Invalid {0}'.format(OSFAMILY_JSON_RESOURCE))
        json_mapping_data = json_data[JSON_OS_MAPPING]
        for family in json_mapping_data:
            cls.FAMILY_COLLECTION += [family]
            cls.OS_COLLECTION += json_mapping_data[family][JSON_OS_TYPE]
            cls.OS_FAMILY_COLLECTION += [{'name': family, 'os_list': json_mapping_data[family][JSON_OS_TYPE], }]
            if (JSON_EXTENDS in json_mapping_data[family]):
                cls.OS_FAMILY_COLLECTION[(-1)][JSON_EXTENDS] = json_mapping_data[family][JSON_EXTENDS]
            cls.OS_TYPE_ALIASES = (json_data[JSON_OS_ALIASES] if (JSON_OS_ALIASES in json_data) else {})
    except:
        raise Exception(("Couldn't load '%s' file" % OSFAMILY_JSON_RESOURCE))
