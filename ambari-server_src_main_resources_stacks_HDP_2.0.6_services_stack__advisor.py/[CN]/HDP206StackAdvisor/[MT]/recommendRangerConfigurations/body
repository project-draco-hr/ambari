def recommendRangerConfigurations(self, configurations, clusterData, services, hosts):
    ranger_sql_connector_dict = {'MYSQL': '/usr/share/java/mysql-connector-java.jar', 'ORACLE': '/usr/share/java/ojdbc6.jar', 'POSTGRES': '/usr/share/java/postgresql.jar', 'MSSQL': '/usr/share/java/sqljdbc4.jar', 'SQLA': '/path_to_driver/sqla-client-jdbc.tar.gz', }
    putRangerAdminProperty = self.putProperty(configurations, 'admin-properties', services)
    if (('admin-properties' in services['configurations']) and ('DB_FLAVOR' in services['configurations']['admin-properties']['properties'])):
        rangerDbFlavor = services['configurations']['admin-properties']['properties']['DB_FLAVOR']
        rangerSqlConnectorProperty = ranger_sql_connector_dict.get(rangerDbFlavor, ranger_sql_connector_dict['MYSQL'])
        putRangerAdminProperty('SQL_CONNECTOR_JAR', rangerSqlConnectorProperty)
    protocol = 'http'
    ranger_admin_host = 'localhost'
    port = '6080'
    if (('ranger-site' in services['configurations']) and ('http.enabled' in services['configurations']['ranger-site']['properties']) and (services['configurations']['ranger-site']['properties']['http.enabled'].lower() == 'false')):
        protocol = 'https'
        if (('ranger-admin-site' in services['configurations']) and ('ranger.service.https.port' in services['configurations']['ranger-admin-site']['properties'])):
            port = services['configurations']['ranger-admin-site']['properties']['ranger.service.https.port']
        elif (('ranger-site' in services['configurations']) and ('https.service.port' in services['configurations']['ranger-site']['properties'])):
            port = services['configurations']['ranger-site']['properties']['https.service.port']
    elif (('ranger-admin-site' in services['configurations']) and ('ranger.service.http.port' in services['configurations']['ranger-admin-site']['properties'])):
        port = services['configurations']['ranger-admin-site']['properties']['ranger.service.http.port']
    elif (('ranger-site' in services['configurations']) and ('http.service.port' in services['configurations']['ranger-site']['properties'])):
        port = services['configurations']['ranger-site']['properties']['http.service.port']
    ranger_admin_hosts = self.getComponentHostNames(services, 'RANGER', 'RANGER_ADMIN')
    if ranger_admin_hosts:
        ranger_admin_host = ranger_admin_hosts[0]
    policymgr_external_url = ('%s://%s:%s' % (protocol, ranger_admin_host, port))
    putRangerAdminProperty('policymgr_external_url', policymgr_external_url)
