def recommendYarnQueue(self, services, catalog_name=None, queue_property=None):
    old_queue_name = None
    if (services and ('configurations' in services)):
        configurations = services['configurations']
        if ((catalog_name in configurations) and (queue_property in configurations[catalog_name]['properties'])):
            old_queue_name = configurations[catalog_name]['properties'][queue_property]
        (capacity_scheduler_properties, _) = self.getCapacitySchedulerProperties(services)
        leaf_queues = sorted(self.getAllYarnLeafQueues(capacity_scheduler_properties))
        if (leaf_queues and ((old_queue_name is None) or (old_queue_name not in leaf_queues))):
            return leaf_queues.pop()
        elif (old_queue_name and (old_queue_name in leaf_queues)):
            return None
    return 'default'
