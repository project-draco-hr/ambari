def validateAmsHbaseSiteConfigurations(self, properties, recommendedDefaults, configurations, services, hosts):
    amsCollectorHosts = self.getComponentHostNames(services, 'AMBARI_METRICS', 'METRICS_COLLECTOR')
    ams_site = getSiteProperties(configurations, 'ams-site')
    recommendedDiskSpace = 10485760
    if (len(amsCollectorHosts) > 1):
        pass
    else:
        totalHostsCount = len(hosts['items'])
        if (totalHostsCount > 400):
            recommendedDiskSpace = 104857600
        elif (totalHostsCount > 100):
            recommendedDiskSpace = 52428800
        elif (totalHostsCount > 50):
            recommendedDiskSpace = 20971520
    validationItems = []
    for collectorHostName in amsCollectorHosts:
        for host in hosts['items']:
            if (host['Hosts']['host_name'] == collectorHostName):
                validationItems.extend([{'config-name': 'hbase.rootdir', 'item': self.validatorEnoughDiskSpace(properties, 'hbase.rootdir', host['Hosts'], recommendedDiskSpace), }])
                validationItems.extend([{'config-name': 'hbase.rootdir', 'item': self.validatorNotRootFs(properties, 'hbase.rootdir', host['Hosts']), }])
                validationItems.extend([{'config-name': 'hbase.tmp.dir', 'item': self.validatorNotRootFs(properties, 'hbase.tmp.dir', host['Hosts']), }])
                break
    rootdir_item = None
    op_mode = ams_site.get('timeline.metrics.service.operation.mode')
    hbase_rootdir = properties.get('hbase.rootdir')
    if ((op_mode == 'distributed') and (not hbase_rootdir.startswith('hdfs://'))):
        rootdir_item = self.getWarnItem('In distributed mode hbase.rootdir should point to HDFS. Collector will operate in embedded mode otherwise.')
        pass
    distributed_item = None
    distributed = properties.get('hbase.cluster.distributed')
    if (hbase_rootdir and hbase_rootdir.startswith('hdfs://') and (not (distributed.lower() == 'true'))):
        distributed_item = self.getErrorItem('Distributed property should be set to true if hbase.rootdir points to HDFS.')
    validationItems.extend([{'config-name': 'hbase.rootdir', 'item': rootdir_item, }, {'config-name': 'hbase.cluster.distributed', 'item': distributed_item, }])
    return self.toConfigurationValidationProblems(validationItems, 'ams-hbase-site')
