def validateConfigurations(self, services, hosts):
    'Returns array of Validation objects about issues with configuration values provided in services'
    stackName = services['Versions']['stack_name']
    stackVersion = services['Versions']['stack_version']
    validations = {'Versions': {'stack_name': stackName, 'stack_version': stackVersion, }, 'items': [], }
    items = validations['items']
    recommendations = self.recommendConfigurations(services, hosts)
    recommendedDefaults = recommendations['recommendations']['blueprint']['configurations']
    configurations = services['configurations']
    for service in services['services']:
        serviceName = service['StackServices']['service_name']
        validator = self.validateServiceConfigurations(serviceName)
        if (validator is not None):
            siteName = validator[0]
            method = validator[1]
            if (siteName in recommendedDefaults):
                siteProperties = getSiteProperties(configurations, siteName)
                if (siteProperties is not None):
                    resultItems = method(siteProperties, recommendedDefaults[siteName]['properties'])
                    items.extend(resultItems)
    return validations
    pass
