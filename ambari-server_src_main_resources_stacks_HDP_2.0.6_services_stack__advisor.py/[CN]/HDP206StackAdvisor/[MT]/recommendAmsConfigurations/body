def recommendAmsConfigurations(self, configurations, clusterData, services, hosts):
    putAmsEnvProperty = self.putProperty(configurations, 'ams-env', services)
    putAmsHbaseSiteProperty = self.putProperty(configurations, 'ams-hbase-site', services)
    putTimelineServiceProperty = self.putProperty(configurations, 'ams-site', services)
    putHbaseEnvProperty = self.putProperty(configurations, 'ams-hbase-env', services)
    amsCollectorHosts = self.getComponentHostNames(services, 'AMBARI_METRICS', 'METRICS_COLLECTOR')
    putHbaseEnvProperty('hbase_regionserver_heapsize', '1024m')
    putAmsHbaseSiteProperty('hfile.block.cache.size', 0.3)
    putAmsHbaseSiteProperty('hbase.regionserver.global.memstore.upperLimit', 0.35)
    putAmsHbaseSiteProperty('hbase.regionserver.global.memstore.lowerLimit', 0.3)
    putTimelineServiceProperty('timeline.metrics.host.aggregator.ttl', 86400)
    if (len(amsCollectorHosts) > 1):
        pass
    else:
        totalHostsCount = len(hosts['items'])
        if (totalHostsCount >= 400):
            putHbaseEnvProperty('hbase_regionserver_heapsize', '12288m')
            putAmsEnvProperty('metrics_collector_heapsize', '8192m')
            putAmsHbaseSiteProperty('hbase.regionserver.handler.count', 60)
            putAmsHbaseSiteProperty('hbase.regionserver.hlog.blocksize', 134217728)
            putAmsHbaseSiteProperty('hbase.regionserver.maxlogs', 64)
            putAmsHbaseSiteProperty('hbase.hregion.memstore.flush.size', 268435456)
            putAmsHbaseSiteProperty('hbase.regionserver.global.memstore.upperLimit', 0.3)
            putAmsHbaseSiteProperty('hbase.regionserver.global.memstore.lowerLimit', 0.25)
            putAmsHbaseSiteProperty('phoenix.query.maxGlobalMemoryPercentage', 20)
            putTimelineServiceProperty('phoenix.query.maxGlobalMemoryPercentage', 30)
            putAmsHbaseSiteProperty('hbase_master_xmn_size', '512m')
            putAmsHbaseSiteProperty('regionserver_xmn_size', '512m')
        elif (totalHostsCount >= 100):
            putHbaseEnvProperty('hbase_regionserver_heapsize', '6144m')
            putAmsEnvProperty('metrics_collector_heapsize', '4096m')
            putAmsHbaseSiteProperty('hbase.regionserver.handler.count', 60)
            putAmsHbaseSiteProperty('hbase.regionserver.hlog.blocksize', 134217728)
            putAmsHbaseSiteProperty('hbase.regionserver.maxlogs', 64)
            putAmsHbaseSiteProperty('hbase.hregion.memstore.flush.size', 268435456)
            putAmsHbaseSiteProperty('hbase_master_xmn_size', '512m')
        elif (totalHostsCount >= 50):
            putHbaseEnvProperty('hbase_regionserver_heapsize', '2048m')
            putHbaseEnvProperty('hbase_master_heapsize', '512m')
            putAmsEnvProperty('metrics_collector_heapsize', '2048m')
            putAmsHbaseSiteProperty('hbase_master_xmn_size', '256m')
        else:
            putHbaseEnvProperty('hbase_regionserver_heapsize', '512m')
            putHbaseEnvProperty('hbase_master_heapsize', '512m')
            putAmsEnvProperty('metrics_collector_heapsize', '512m')
            putAmsHbaseSiteProperty('hbase_master_xmn_size', '128m')
        pass
    rootDir = 'file:///var/lib/ambari-metrics-collector/hbase'
    tmpDir = '/var/lib/ambari-metrics-collector/hbase-tmp'
    mountpoint = '/'
    if ('ams-hbase-site' in services['configurations']):
        if ('hbase.rootdir' in services['configurations']['ams-hbase-site']['properties']):
            rootDir = services['configurations']['ams-hbase-site']['properties']['hbase.rootdir']
        if ('hbase.tmp.dir' in services['configurations']['ams-hbase-site']['properties']):
            tmpDir = services['configurations']['ams-hbase-site']['properties']['hbase.tmp.dir']
    for collectorHostName in amsCollectorHosts:
        for host in hosts['items']:
            if (host['Hosts']['host_name'] == collectorHostName):
                mountpoint = self.getProperMountPoint(host['Hosts'])
                break
    if (not rootDir.startswith('hdfs://')):
        rootDir = re.sub('^file:///|/', '', rootDir, count=1)
        rootDir = ('file://' + os.path.join(mountpoint, rootDir))
    tmpDir = re.sub('^file:///|/', '', tmpDir, count=1)
    tmpDir = os.path.join(mountpoint, tmpDir)
    putAmsHbaseSiteProperty('hbase.rootdir', rootDir)
    putAmsHbaseSiteProperty('hbase.tmp.dir', tmpDir)
    pass
