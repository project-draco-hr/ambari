{
  File stackRoot=new File(stackRootStr);
  StackInfo stackInfo=new StackInfo();
  stackInfo.setName("HDP");
  stackInfo.setVersion("2.0.6");
  StackExtensionHelper helper=new StackExtensionHelper(injector,stackRoot);
  helper.populateServicesForStack(stackInfo);
  helper.fillInfo();
  List<ServiceInfo> allServices=helper.getAllApplicableServices(stackInfo);
  for (  ServiceInfo serviceInfo : allServices) {
    if (serviceInfo.getName().equals("HDFS")) {
      assertEquals(5,serviceInfo.getConfigDependencies().size());
      assertEquals(5,serviceInfo.getConfigTypes().size());
      assertTrue(serviceInfo.getConfigDependencies().contains("core-site"));
      assertTrue(serviceInfo.getConfigDependencies().contains("global"));
      assertTrue(serviceInfo.getConfigDependencies().contains("hdfs-site"));
      assertTrue(serviceInfo.getConfigDependencies().contains("hdfs-log4j"));
      assertTrue(serviceInfo.getConfigDependencies().contains("hadoop-policy"));
      assertTrue(Boolean.valueOf(serviceInfo.getConfigTypes().get("core-site").get("supports").get("final")));
      assertFalse(Boolean.valueOf(serviceInfo.getConfigTypes().get("global").get("supports").get("final")));
    }
 else     if (serviceInfo.getName().equals("WEBHCAT")) {
      assertEquals(1,serviceInfo.getConfigDependencies().size());
      assertEquals(1,serviceInfo.getConfigTypes().size());
      assertTrue(serviceInfo.getConfigDependencies().contains("webhcat-site"));
      assertTrue(Boolean.valueOf(serviceInfo.getConfigTypes().get("webhcat-site").get("supports").get("final")));
    }
  }
}
