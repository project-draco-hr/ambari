{
  File configFile=new File("./src/test/resources/bad-stacks/HDP/0.1/services/YARN/configuration/capacity-scheduler.xml");
  ConfigurationXml config=StackExtensionHelper.unmarshal(ConfigurationXml.class,configFile);
  Map<QName,String> attributes=config.getAttributes();
  List<PropertyInfo> properties=config.getProperties();
  assertEquals(2,attributes.size());
  QName supportsFinal=new QName("","supports_final");
  assertTrue(attributes.containsKey(supportsFinal));
  assertEquals("true",attributes.get(supportsFinal));
  QName supportsDeletable=new QName("","supports_deletable");
  assertTrue(attributes.containsKey(supportsDeletable));
  assertEquals("false",attributes.get(supportsDeletable));
  assertEquals(3,properties.size());
  PropertyInfo propertyInfo;
  propertyInfo=properties.get(0);
  assertEquals("yarn.scheduler.capacity.maximum-applications",propertyInfo.getName());
  assertEquals("Maximum number of applications that can be pending and running.",propertyInfo.getDescription());
  assertEquals("10000",propertyInfo.getValue());
  assertEquals(1,propertyInfo.getAttributesMap().size());
  assertEquals("true",propertyInfo.getAttributesMap().get("final"));
  assertEquals(null,propertyInfo.getFilename());
  assertEquals(false,propertyInfo.isDeleted());
  assertEquals(false,propertyInfo.isRequireInput());
  assertEquals(PropertyInfo.PropertyType.DEFAULT,propertyInfo.getType());
  propertyInfo=properties.get(1);
  assertEquals("yarn.scheduler.capacity.maximum-am-resource-percent",propertyInfo.getName());
  assertEquals("Maximum percent of resources in the cluster.",propertyInfo.getDescription());
  assertEquals("0.2",propertyInfo.getValue());
  assertEquals(1,propertyInfo.getAttributesMap().size());
  assertEquals("false",propertyInfo.getAttributesMap().get("final"));
  assertEquals(null,propertyInfo.getFilename());
  assertEquals(true,propertyInfo.isDeleted());
  assertEquals(false,propertyInfo.isRequireInput());
  assertEquals(PropertyInfo.PropertyType.DEFAULT,propertyInfo.getType());
  propertyInfo=properties.get(2);
  assertEquals("yarn.scheduler.capacity.root.queues",propertyInfo.getName());
  assertEquals("The queues at the this level (root is the root queue).",propertyInfo.getDescription());
  assertEquals("default",propertyInfo.getValue());
  assertEquals(0,propertyInfo.getAttributesMap().size());
  assertEquals(null,propertyInfo.getFilename());
  assertEquals(false,propertyInfo.isDeleted());
  assertEquals(true,propertyInfo.isRequireInput());
  assertEquals(PropertyInfo.PropertyType.DEFAULT,propertyInfo.getType());
}
