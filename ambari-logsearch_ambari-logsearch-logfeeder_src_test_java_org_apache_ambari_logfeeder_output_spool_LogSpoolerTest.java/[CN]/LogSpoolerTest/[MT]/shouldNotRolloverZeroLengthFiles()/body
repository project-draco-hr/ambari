{
  final PrintWriter spoolWriter=mock(PrintWriter.class);
  spoolWriter.println("log event");
  spoolWriter.flush();
  spoolWriter.close();
  final File mockFile=mock(File.class);
  expect(mockFile.length()).andReturn(0L);
  LogSpoolerContext logSpoolerContext=new LogSpoolerContext(mockFile);
  expect(rolloverCondition.shouldRollover(cmp(logSpoolerContext,new LogSpoolerFileComparator(),LogicalOperator.EQUAL))).andReturn(true);
  replay(spoolWriter,rolloverCondition,mockFile);
  LogSpooler logSpooler=new LogSpooler(spoolDirectory,SOURCE_FILENAME_PREFIX,rolloverCondition,rolloverHandler){
    @Override protected PrintWriter initializeSpoolWriter(    File spoolFile) throws IOException {
      return spoolWriter;
    }
    @Override protected File initializeSpoolFile(){
      return mockFile;
    }
  }
;
  logSpooler.add("log event");
  verify(mockFile);
}
