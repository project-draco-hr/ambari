@safe_retry(times=5, sleep_time=8, backoff_factor=1.5, err_class=Fail, return_on_fail=None)
def create_repository_curl(self, component_user, component_user_keytab, component_user_principal, name, data, policy_user, is_keyadmin=False):
    '\n    :param component_user: service user for which call is to be made\n    :param component_user_keytab: keytab of service user\n    :param component_user_principal: principal of service user\n    :param name: name of the repository to be created\n    :param data: service definition of the repository\n    :return:\n    '
    try:
        search_repo_url = self.url_repos_pub
        if is_keyadmin:
            search_repo_url = '{0}?suser=keyadmin'.format(search_repo_url)
        header = 'Content-Type: application/json'
        method = 'POST'
        (response, error_message, time_in_millis) = self.call_curl_request(component_user, component_user_keytab, component_user_principal, search_repo_url, False, method, data, header)
        if (response and (len(response) > 0)):
            response_json = json.loads(response)
            if (('name' in response_json) and (response_json['name'].lower() == name.lower())):
                Logger.info('Repository created Successfully')
                return response_json
            elif ('exists' in response.lower()):
                Logger.info('Repository {name} already exists'.format(name=name))
                return response_json
            else:
                Logger.info('Repository creation failed')
                return None
        else:
            Logger.info('Repository creation failed')
            return None
    except Exception as err:
        raise Fail('Error in call for creating Ranger service:\n {0}'.format(err))
