def create_repository_urllib2(self, data, usernamepassword):
    '\n    :param data: json object to create repository\n    :param usernamepassword: user credentials using which repository needs to be searched. \n    :return: Returns created Ranger repository object\n    '
    try:
        search_repo_url = self.url_repos_pub
        base_64_string = base64.encodestring('{0}'.format(usernamepassword)).replace('\n', '')
        headers = {'Accept': 'application/json', 'Content-Type': 'application/json', }
        request = urllib2.Request(search_repo_url, data, headers)
        request.add_header('Authorization', 'Basic {0}'.format(base_64_string))
        result = urllib2.urlopen(request)
        response_code = result.getcode()
        response = json.loads(json.JSONEncoder().encode(result.read()))
        if (response_code == 200):
            Logger.info('Repository created Successfully')
            return response
        else:
            Logger.error(response_code)
            Logger.error(response)
            return None
    except urllib2.URLError as e:
        if isinstance(e, urllib2.HTTPError):
            Logger.error('HTTP Code: {0}'.format(e.code))
            Logger.error('HTTP Data: {0}'.format(e.read()))
        else:
            Logger.error('Error: {0}'.format(e.reason))
        return None
    except httplib.BadStatusLine:
        Logger.error('Ranger Admin service is not reachable, please restart the service and then try again')
        return None
