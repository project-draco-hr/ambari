def assert_configure_default(self):
    self.assertResourceCalled('Directory', '/var/run/hadoop-yarn', owner='yarn', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/run/hadoop-yarn/yarn', owner='yarn', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/log/hadoop-yarn/yarn', owner='yarn', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/run/hadoop-mapreduce', owner='mapred', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/run/hadoop-mapreduce/mapred', owner='mapred', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/log/hadoop-mapreduce', owner='mapred', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/log/hadoop-mapreduce/mapred', owner='mapred', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/log/hadoop-yarn', owner='yarn', group='hadoop', ignore_failures=True, create_parents=True, cd_access='a')
    self.assertResourceCalled('XmlConfig', 'core-site.xml', group='hadoop', conf_dir='/etc/hadoop/conf', mode=420, configuration_attributes={u'final': {u'hadoop.proxyuser.hive.groups': u'true', u'hadoop.proxyuser.oozie.hosts': u'true', u'webinterface.private.actions': u'true', }, }, owner='hdfs', configurations=self.getConfig()['configurations']['core-site'])
    self.assertResourceCalled('XmlConfig', 'hdfs-site.xml', group='hadoop', conf_dir='/etc/hadoop/conf', mode=420, configuration_attributes={u'final': {u'dfs.cluster.administrators': u'true', u'dfs.support.append': u'true', u'dfs.web.ugi': u'true', }, }, owner='hdfs', configurations=self.getConfig()['configurations']['hdfs-site'])
    self.assertResourceCalled('XmlConfig', 'mapred-site.xml', group='hadoop', conf_dir='/etc/hadoop/conf', mode=420, configuration_attributes={u'final': {u'mapred.healthChecker.script.path': u'true', u'mapreduce.jobtracker.staging.root.dir': u'true', }, }, owner='yarn', configurations=self.getConfig()['configurations']['mapred-site'])
    self.assertResourceCalled('XmlConfig', 'yarn-site.xml', group='hadoop', conf_dir='/etc/hadoop/conf', mode=420, configuration_attributes={u'final': {u'yarn.nodemanager.container-executor.class': u'true', u'yarn.nodemanager.disk-health-checker.min-healthy-disks': u'true', u'yarn.nodemanager.local-dirs': u'true', }, }, owner='yarn', configurations=self.getConfig()['configurations']['yarn-site'])
    self.assertResourceCalled('XmlConfig', 'capacity-scheduler.xml', group='hadoop', conf_dir='/etc/hadoop/conf', mode=420, configuration_attributes={u'final': {u'yarn.scheduler.capacity.node-locality-delay': u'true', }, }, owner='yarn', configurations=self.getConfig()['configurations']['capacity-scheduler'])
    self.assertResourceCalled('Directory', '/var/log/hadoop-yarn/timeline', owner='yarn', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('HdfsResource', '/ats', immutable_paths=self.DEFAULT_IMMUTABLE_PATHS, security_enabled=False, hadoop_bin_dir='/usr/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', dfs_type='', hdfs_site=self.getConfig()['configurations']['hdfs-site'], kinit_path_local='/usr/bin/kinit', principal_name=UnknownConfigurationMock(), user='hdfs', change_permissions_for_parents=True, owner='yarn', group='hadoop', hadoop_conf_dir='/etc/hadoop/conf', type='directory', action=['create_on_execute'], hdfs_resource_ignore_file='/var/lib/ambari-agent/data/.hdfs_resource_ignore', mode=493)
    self.assertResourceCalled('HdfsResource', '/ats/done', immutable_paths=self.DEFAULT_IMMUTABLE_PATHS, security_enabled=False, hadoop_bin_dir='/usr/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', dfs_type='', hdfs_site=self.getConfig()['configurations']['hdfs-site'], kinit_path_local='/usr/bin/kinit', principal_name=UnknownConfigurationMock(), user='hdfs', owner='yarn', group='hadoop', hadoop_conf_dir='/etc/hadoop/conf', type='directory', action=['create_on_execute'], hdfs_resource_ignore_file='/var/lib/ambari-agent/data/.hdfs_resource_ignore', mode=448)
    self.assertResourceCalled('HdfsResource', '/ats', immutable_paths=self.DEFAULT_IMMUTABLE_PATHS, security_enabled=False, hadoop_bin_dir='/usr/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', dfs_type='', hdfs_site=self.getConfig()['configurations']['hdfs-site'], kinit_path_local='/usr/bin/kinit', principal_name=UnknownConfigurationMock(), user='hdfs', change_permissions_for_parents=True, owner='yarn', group='hadoop', hadoop_conf_dir='/etc/hadoop/conf', type='directory', action=['create_on_execute'], hdfs_resource_ignore_file='/var/lib/ambari-agent/data/.hdfs_resource_ignore', mode=493)
    self.assertResourceCalled('HdfsResource', '/ats/active', immutable_paths=self.DEFAULT_IMMUTABLE_PATHS, security_enabled=False, hadoop_bin_dir='/usr/bin', keytab=UnknownConfigurationMock(), dfs_type='', default_fs='hdfs://c6401.ambari.apache.org:8020', hdfs_site=self.getConfig()['configurations']['hdfs-site'], kinit_path_local='/usr/bin/kinit', principal_name=UnknownConfigurationMock(), user='hdfs', owner='yarn', group='hadoop', hadoop_conf_dir='/etc/hadoop/conf', type='directory', action=['create_on_execute'], hdfs_resource_ignore_file='/var/lib/ambari-agent/data/.hdfs_resource_ignore', mode=1023)
    self.assertResourceCalled('HdfsResource', None, immutable_paths=self.DEFAULT_IMMUTABLE_PATHS, security_enabled=False, hadoop_bin_dir='/usr/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', dfs_type='', hdfs_site=self.getConfig()['configurations']['hdfs-site'], kinit_path_local='/usr/bin/kinit', principal_name=UnknownConfigurationMock(), user='hdfs', action=['execute'], hdfs_resource_ignore_file='/var/lib/ambari-agent/data/.hdfs_resource_ignore', hadoop_conf_dir='/etc/hadoop/conf')
    self.assertResourceCalled('File', '/etc/hadoop/conf/yarn.exclude', owner='yarn', group='hadoop')
    self.assertResourceCalled('File', '/etc/security/limits.d/yarn.conf', content=Template('yarn.conf.j2'), mode=420)
    self.assertResourceCalled('File', '/etc/security/limits.d/mapreduce.conf', content=Template('mapreduce.conf.j2'), mode=420)
    self.assertResourceCalled('File', '/etc/hadoop/conf/yarn-env.sh', content=InlineTemplate(self.getConfig()['configurations']['yarn-env']['content']), owner='yarn', group='hadoop', mode=493)
    self.assertResourceCalled('File', '/usr/lib/hadoop-yarn/bin/container-executor', group='hadoop', mode=1064)
    self.assertResourceCalled('File', '/etc/hadoop/conf/container-executor.cfg', content=Template('container-executor.cfg.j2'), group='hadoop', mode=420)
    self.assertResourceCalled('Directory', '/cgroups_test/cpu', mode=493, group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('File', '/etc/hadoop/conf/mapred-env.sh', content=InlineTemplate(self.getConfig()['configurations']['mapred-env']['content']), mode=493, owner='hdfs')
    self.assertResourceCalled('File', '/etc/hadoop/conf/taskcontroller.cfg', content=Template('taskcontroller.cfg.j2'), owner='hdfs')
    self.assertResourceCalled('XmlConfig', 'mapred-site.xml', owner='mapred', group='hadoop', conf_dir='/etc/hadoop/conf', configuration_attributes={u'final': {u'mapred.healthChecker.script.path': u'true', u'mapreduce.jobtracker.staging.root.dir': u'true', }, }, configurations=self.getConfig()['configurations']['mapred-site'])
    self.assertResourceCalled('XmlConfig', 'capacity-scheduler.xml', owner='hdfs', group='hadoop', conf_dir='/etc/hadoop/conf', configuration_attributes={u'final': {u'yarn.scheduler.capacity.node-locality-delay': u'true', }, }, configurations=self.getConfig()['configurations']['capacity-scheduler'])
    self.assertResourceCalled('File', '/etc/hadoop/conf/fair-scheduler.xml', owner='mapred', group='hadoop')
    self.assertResourceCalled('File', '/etc/hadoop/conf/ssl-client.xml.example', owner='mapred', group='hadoop')
    self.assertResourceCalled('File', '/etc/hadoop/conf/ssl-server.xml.example', owner='mapred', group='hadoop')
