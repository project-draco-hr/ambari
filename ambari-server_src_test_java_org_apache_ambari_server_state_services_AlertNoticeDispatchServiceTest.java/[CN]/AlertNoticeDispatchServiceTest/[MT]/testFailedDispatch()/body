{
  MockEmailDispatcher dispatcher=new MockEmailDispatcher();
  List<AlertNoticeEntity> notices=getSingleEmailMockNotice();
  AlertNoticeEntity notice=notices.get(0);
  EasyMock.expect(m_dao.findPendingNotices()).andReturn(notices).once();
  EasyMock.expect(m_dao.findNoticeByUuid(ALERT_NOTICE_UUID_1)).andReturn(notice).once();
  EasyMock.expect(m_dao.merge(getSingleEmailMockNotice().get(0))).andReturn(notice).once();
  EasyMock.expect(m_dispatchFactory.getDispatcher("EMAIL")).andReturn(dispatcher).once();
  EasyMock.replay(m_dao,m_dispatchFactory);
  AlertNoticeDispatchService service=m_injector.getInstance(AlertNoticeDispatchService.class);
  service.setExecutor(new MockExecutor());
  service.runOneIteration();
  EasyMock.verify(m_dao,m_dispatchFactory);
  Notification notification=dispatcher.getNotification();
  assertNull(notification);
}
