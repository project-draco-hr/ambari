'\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n"License"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n'
import os
import tarfile
from resource_management.libraries.script.script import Script
from resource_management.libraries.functions import conf_select, tar_archive
from resource_management.libraries.functions import hdp_select
from resource_management.libraries.functions.check_process_status import check_process_status
from resource_management.libraries.functions import format
from resource_management.libraries.functions.version import compare_versions, format_hdp_stack_version
from resource_management.libraries.functions import conf_select
from resource_management.libraries.functions import hdp_select
from resource_management.libraries.functions import Direction
from resource_management.libraries.functions.security_commons import build_expectations, cached_kinit_executor, validate_security_config_properties, get_params_from_filesystem, FILE_TYPE_XML
from resource_management.core.resources.system import File, Execute, Directory, Link
from resource_management.core.resources.service import Service
from resource_management.core.logger import Logger
from ambari_commons import OSConst, OSCheck
from ambari_commons.os_family_impl import OsFamilyFuncImpl, OsFamilyImpl
if OSCheck.is_windows_family():
    from resource_management.libraries.functions.windows_service_utils import check_windows_service_status
import upgrade
from knox import knox
from knox_ldap import ldap
from setup_ranger_knox import setup_ranger_knox
if (__name__ == '__main__'):
    KnoxGateway().execute()
