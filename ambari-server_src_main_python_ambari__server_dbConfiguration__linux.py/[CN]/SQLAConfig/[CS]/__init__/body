def __init__(self, options, properties, storage_type):
    super(SQLAConfig, self).__init__(options, properties, storage_type)
    self.dbms = 'sqlanywhere'
    self.dbms_full_name = 'SQL Anywhere'
    self.driver_class_name = 'sap.jdbc4.sqlanywhere.IDriver'
    self.driver_file_name = 'sajdbc4.jar'
    self.server_name = DBMSConfig._init_member_with_prop_default(options, 'sqla_server_name', properties, JDBC_SQLA_SERVER_NAME, 'ambari')
    self.driver_symlink_name = 'sqlanywhere-jdbc-driver.jar'
    self.client_tarball_pattern = '*sqla-client-jdbc*.tar.gz'
    self.client_folder = 'sqla-client-jdbc'
    self.database_storage_name = 'Database'
    self.database_port = DBMSConfig._init_member_with_prop_default(options, 'database_port', properties, JDBC_PORT_PROPERTY, '2638')
    self.database_url_pattern = 'jdbc:sqlanywhere:eng={0};dbf={1};host={2};port={3}'
    self.database_url_pattern_alt = 'jdbc:sqlanywhere:eng={0};dbf={1};host={2};port={3}'
    self.JDBC_DRIVER_INSTALL_MSG = 'Before starting Ambari Server, you must copy the {0} jdbc client tarball to {1}.'.format(self.dbms_full_name, configDefaults.SHARE_PATH)
    self.init_script_file = AmbariPath.get('/var/lib/ambari-server/resources/Ambari-DDL-SQLAnywhere-CREATE.sql')
    self.drop_tables_script_file = AmbariPath.get('/var/lib/ambari-server/resources/Ambari-DDL-SQLAnywhere-DROP.sql')
    self.client_tool_usage_pattern = 'stub string'
