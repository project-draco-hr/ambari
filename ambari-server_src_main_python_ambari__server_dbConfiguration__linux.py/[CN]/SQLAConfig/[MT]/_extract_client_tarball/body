def _extract_client_tarball(self, properties):
    files = []
    files.extend(glob.glob(((configDefaults.SHARE_PATH + os.sep) + self.client_tarball_pattern)))
    if (len(files) > 1):
        raise FatalException((-1), 'More than One SQl Anywhere client tarball detected')
    elif (len(files) == 0):
        raise FatalException((-1), self.JDBC_DRIVER_INSTALL_MSG)
    cmd = SQLAConfig.EXTRACT_CMD.format(files[0], get_resources_location(properties))
    process = subprocess.Popen(cmd.split(' '), stdout=subprocess.PIPE, stdin=subprocess.PIPE, stderr=subprocess.PIPE)
    (out, err) = process.communicate()
    retcode = process.returncode
    if (retcode != 0):
        raise FatalException((-1), ('Error extracting SQL Anywhere client tarball: ' + str(err)))
