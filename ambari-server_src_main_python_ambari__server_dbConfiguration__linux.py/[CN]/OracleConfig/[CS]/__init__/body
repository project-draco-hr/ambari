def __init__(self, options, properties, storage_type):
    super(OracleConfig, self).__init__(options, properties, storage_type)
    self.dbms = 'oracle'
    self.dbms_full_name = 'Oracle'
    self.driver_class_name = 'oracle.jdbc.driver.OracleDriver'
    self.driver_file_name = 'ojdbc6.jar'
    self.driver_symlink_name = 'oracle-jdbc-driver.jar'
    self.database_storage_name = 'Service'
    if ((hasattr(options, 'sid_or_sname') and (options.sid_or_sname == 'sname')) or (hasattr(options, 'jdbc_url') and options.jdbc_url and re.match(ORACLE_SNAME_PATTERN, options.jdbc_url))):
        print_info_msg('using SERVICE_NAME instead of SID for Oracle')
        self.sid_or_sname = 'sname'
    self.database_port = DBMSConfig._init_member_with_prop_default(options, 'database_port', properties, JDBC_PORT_PROPERTY, '1521')
    self.database_url_pattern = 'jdbc:oracle:thin:@{0}:{1}/{2}'
    self.database_url_pattern_alt = 'jdbc:oracle:thin:@{0}:{1}:{2}'
    self.JDBC_DRIVER_INSTALL_MSG = 'Before starting Ambari Server, you must copy the {0} JDBC driver JAR file to {1} and set property "server.jdbc.driver.path=[path/to/custom_jdbc_driver]" in ambari.properties.'.format(self.dbms_full_name, configDefaults.JAVA_SHARE_PATH)
    self.init_script_file = AmbariPath.get("/var/lib/ambari-server/resources/Ambari-DDL-Oracle-CREATE.sql'")
    self.drop_tables_script_file = AmbariPath.get('/var/lib/ambari-server/resources/Ambari-DDL-Oracle-DROP.sql')
    self.client_tool_usage_pattern = 'sqlplus {1}/{2} < {0}'
    self.jdbc_extra_params = [['oracle.net.CONNECT_TIMEOUT', '2000'], ['oracle.net.READ_TIMEOUT', '2000'], ['oracle.jdbc.ReadTimeout', '8000']]
