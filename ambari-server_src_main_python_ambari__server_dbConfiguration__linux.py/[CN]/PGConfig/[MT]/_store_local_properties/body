def _store_local_properties(self, properties):
    properties.removeOldProp(JDBC_DATABASE_PROPERTY)
    properties.removeOldProp(JDBC_DATABASE_NAME_PROPERTY)
    properties.removeOldProp(JDBC_POSTGRES_SCHEMA_PROPERTY)
    properties.removeOldProp(JDBC_HOSTNAME_PROPERTY)
    properties.removeOldProp(JDBC_RCA_DRIVER_PROPERTY)
    properties.removeOldProp(JDBC_RCA_URL_PROPERTY)
    properties.removeOldProp(JDBC_PORT_PROPERTY)
    properties.removeOldProp(JDBC_DRIVER_PROPERTY)
    properties.removeOldProp(JDBC_URL_PROPERTY)
    properties.process_pair(PERSISTENCE_TYPE_PROPERTY, self.persistence_type)
    properties.process_pair(JDBC_DATABASE_PROPERTY, self.dbms)
    properties.process_pair(JDBC_DATABASE_NAME_PROPERTY, self.database_name)
    properties.process_pair(JDBC_POSTGRES_SCHEMA_PROPERTY, self.postgres_schema)
    properties.process_pair(JDBC_USER_NAME_PROPERTY, self.database_username)
    if self.isSecure:
        encrypted_password = encrypt_password(JDBC_RCA_PASSWORD_ALIAS, self.database_password)
        if (self.database_password != encrypted_password):
            properties.process_pair(JDBC_PASSWORD_PROPERTY, encrypted_password)
    password_file = store_password_file(self.database_password, JDBC_PASSWORD_FILENAME)
    properties.process_pair(JDBC_PASSWORD_PROPERTY, password_file)
