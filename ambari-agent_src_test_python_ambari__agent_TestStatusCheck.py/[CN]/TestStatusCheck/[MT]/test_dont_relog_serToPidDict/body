@patch.object(OSCheck, 'os_distribution', new=MagicMock(return_value=os_distro_value))
@patch.object(logger, 'info')
def test_dont_relog_serToPidDict(self, logger_info_mock):
    TestStatusCheck.timesLogged = 0

    def my_side_effect(*args, **kwargs):
        TestStatusCheck.timesLogged += (args[0].find('Service to pid dictionary: ') + 1)
    logger_info_mock.side_effect = my_side_effect
    statusCheck = StatusCheck(self.serviceToPidDict, self.pidPathVars, self.globalConfig, self.servicesToLinuxUser)
    statusCheck = StatusCheck(self.serviceToPidDict, self.pidPathVars, self.globalConfig, self.servicesToLinuxUser)
    statusCheck = StatusCheck(self.serviceToPidDict, self.pidPathVars, self.globalConfig, self.servicesToLinuxUser)
    self.assert_((TestStatusCheck.timesLogged <= 1), 'test_dont_relog_serToPidDict logged more then once')
