{
  Set<String> clusterNamesForHost=new HashSet<>();
  String hostName=hostRequest.getHostname();
  if (null != hostRequest.getClusterName()) {
    clusterNamesForHost.add(hostRequest.getClusterName());
  }
 else {
    Set<Cluster> clustersForHost=clusters.getClustersForHost(hostRequest.getHostname());
    if (null != clustersForHost) {
      for (      Cluster c : clustersForHost) {
        clusterNamesForHost.add(c.getClusterName());
      }
    }
  }
  for (  String clusterName : clusterNamesForHost) {
    Cluster cluster=clusters.getCluster(clusterName);
    List<ServiceComponentHost> list=cluster.getServiceComponentHosts(hostName);
    if (!list.isEmpty()) {
      List<String> componentsToRemove=new ArrayList<>();
      for (      ServiceComponentHost sch : list) {
        componentsToRemove.add(sch.getServiceComponentName());
      }
      if (!componentsToRemove.isEmpty()) {
        StringBuilder reason=new StringBuilder("Cannot remove host ").append(hostName).append(" from ").append(hostRequest.getClusterName()).append(".  The following roles exist, and these components must be stopped if running, and then deleted: ");
        reason.append(StringUtils.join(componentsToRemove,", "));
        throw new AmbariException(reason.toString());
      }
    }
  }
}
