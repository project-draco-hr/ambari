{
  if (requests.isEmpty()) {
    LOG.warn("Received an empty requests set");
    return;
  }
  AmbariManagementController controller=getManagementController();
  Clusters clusters=controller.getClusters();
  for (  HostRequest request : requests) {
    if (request.getHostname() == null || request.getHostname().isEmpty()) {
      throw new IllegalArgumentException("Invalid arguments, hostname should be provided");
    }
  }
  for (  HostRequest request : requests) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Received an updateHost request" + ", hostname=" + request.getHostname() + ", request="+ request);
    }
    Host h=clusters.getHost(request.getHostname());
    try {
      clusters.mapHostToCluster(request.getHostname(),request.getClusterName());
    }
 catch (    DuplicateResourceException e) {
    }
    if (null != request.getHostAttributes()) {
      h.setHostAttributes(request.getHostAttributes());
    }
    if (null != request.getRackInfo()) {
      h.setRackInfo(request.getRackInfo());
    }
    if (null != request.getPublicHostName()) {
      h.setPublicHostName(request.getPublicHostName());
    }
    if (null != request.getClusterName() && null != request.getMaintenanceState()) {
      Cluster c=clusters.getCluster(request.getClusterName());
      MaintenanceState newState=MaintenanceState.valueOf(request.getMaintenanceState());
      MaintenanceState oldState=h.getMaintenanceState(c.getClusterId());
      if (!newState.equals(oldState)) {
        if (newState.equals(MaintenanceState.IMPLIED_FROM_HOST) || newState.equals(MaintenanceState.IMPLIED_FROM_SERVICE)) {
          throw new IllegalArgumentException("Invalid arguments, can only set " + "maintenance state to one of " + EnumSet.of(MaintenanceState.OFF,MaintenanceState.ON));
        }
 else {
          h.setMaintenanceState(c.getClusterId(),newState);
        }
      }
    }
    if (null != request.getClusterName() && null != request.getDesiredConfigs()) {
      Cluster c=clusters.getCluster(request.getClusterName());
      if (clusters.getHostsForCluster(request.getClusterName()).containsKey(h.getHostName())) {
        for (        ConfigurationRequest cr : request.getDesiredConfigs()) {
          if (null != cr.getProperties() && cr.getProperties().size() > 0) {
            LOG.info(MessageFormat.format("Applying configuration with tag ''{0}'' to host ''{1}'' in cluster ''{2}''",cr.getVersionTag(),request.getHostname(),request.getClusterName()));
            cr.setClusterName(c.getClusterName());
            controller.createConfiguration(cr);
          }
          Config baseConfig=c.getConfig(cr.getType(),cr.getVersionTag());
          if (null != baseConfig) {
            String authName=controller.getAuthName();
            DesiredConfig oldConfig=h.getDesiredConfigs(c.getClusterId()).get(cr.getType());
            if (h.addDesiredConfig(c.getClusterId(),cr.isSelected(),authName,baseConfig)) {
              Logger logger=LoggerFactory.getLogger("configchange");
              logger.info("cluster '" + c.getClusterName() + "', "+ "host '"+ h.getHostName()+ "' "+ "changed by: '"+ authName+ "'; "+ "type='"+ baseConfig.getType()+ "' "+ "version='"+ baseConfig.getVersion()+ "'"+ "tag='"+ baseConfig.getTag()+ "'"+ (null == oldConfig ? "" : ", from='" + oldConfig.getTag() + "'"));
            }
          }
        }
      }
    }
    if (null != request.getClusterName() && !request.getClusterName().isEmpty()) {
      clusters.getCluster(request.getClusterName()).recalculateAllClusterVersionStates();
    }
  }
}
