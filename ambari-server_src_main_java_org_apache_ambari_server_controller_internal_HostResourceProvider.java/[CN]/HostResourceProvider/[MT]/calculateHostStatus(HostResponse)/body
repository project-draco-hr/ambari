{
  HostHealthStatus.HealthStatus healthStatus=response.getHealthStatus().getHealthStatus();
  if (!healthStatus.equals(HostHealthStatus.HealthStatus.UNKNOWN)) {
    AmbariManagementController controller=getManagementController();
    AmbariMetaInfo ambariMetaInfo=controller.getAmbariMetaInfo();
    Clusters clusters=controller.getClusters();
    Cluster cluster=clusters.getCluster(response.getClusterName());
    StackId stackId=cluster.getDesiredStackVersion();
    ServiceComponentHostRequest request=new ServiceComponentHostRequest(response.getClusterName(),null,null,response.getHostname(),null,null);
    Set<ServiceComponentHostResponse> hostComponentResponses=controller.getHostComponents(Collections.singleton(request));
    int masterCount=0;
    int mastersRunning=0;
    int slaveCount=0;
    int slavesRunning=0;
    for (    ServiceComponentHostResponse hostComponentResponse : hostComponentResponses) {
      ComponentInfo componentInfo=ambariMetaInfo.getComponentCategory(stackId.getStackName(),stackId.getStackVersion(),hostComponentResponse.getServiceName(),hostComponentResponse.getComponentName());
      if (componentInfo != null) {
        String category=componentInfo.getCategory();
        String state=hostComponentResponse.getLiveState();
        if (category.equals("MASTER")) {
          ++masterCount;
          if (state.equals("STARTED")) {
            ++mastersRunning;
          }
        }
 else         if (category.equals("SLAVE")) {
          ++slaveCount;
          if (state.equals("STARTED")) {
            ++slavesRunning;
          }
        }
      }
    }
    if (masterCount == mastersRunning && slaveCount == slavesRunning) {
      healthStatus=HostHealthStatus.HealthStatus.HEALTHY;
    }
 else     if (masterCount > 0 && mastersRunning < masterCount) {
      healthStatus=HostHealthStatus.HealthStatus.UNHEALTHY;
    }
 else {
      healthStatus=HostHealthStatus.HealthStatus.ALERT;
    }
  }
  return healthStatus.toString();
}
