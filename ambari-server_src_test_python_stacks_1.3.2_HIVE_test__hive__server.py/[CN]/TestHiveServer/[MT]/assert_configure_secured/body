def assert_configure_secured(self):
    self.assertResourceCalled('Execute', 'hive mkdir -p /tmp/HDP-artifacts/ ; cp /usr/share/java/mysql-connector-java.jar /usr/lib/hive/lib//mysql-connector-java.jar', creates='/usr/lib/hive/lib//mysql-connector-java.jar', path=['/bin', 'usr/bin/'], not_if='test -f /usr/lib/hive/lib//mysql-connector-java.jar')
    self.assertResourceCalled('Directory', '/etc/hive/conf.server', owner='hive', group='hadoop', recursive=True)
    self.assertResourceCalled('XmlConfig', 'hive-site.xml', owner='hive', group='hadoop', mode=384, conf_dir='/etc/hive/conf.server', configurations=self.getConfig()['configurations']['hive-site'])
    self.assertResourceCalled('Execute', "/bin/sh -c 'cd /usr/lib/ambari-agent/ && curl -kf --retry 5 http://c6401.ambari.apache.org:8080/resources/DBConnectionVerification.jar -o DBConnectionVerification.jar'", not_if='[ -f DBConnectionVerification.jar]')
    self.assertResourceCalled('File', '/tmp/start_hiveserver2_script', content=StaticFile('startHiveserver2.sh'), mode=493)
    self.assertResourceCalled('Directory', '/var/run/hive', owner='hive', group='hadoop', mode=493, recursive=True)
    self.assertResourceCalled('Directory', '/var/log/hive', owner='hive', group='hadoop', mode=493, recursive=True)
    self.assertResourceCalled('Directory', '/var/lib/hive', owner='hive', group='hadoop', mode=493, recursive=True)
    self.assertResourceCalled('File', '/etc/hive/conf.server/hive-env.sh', content=Template('hive-env.sh.j2', conf_dir='/etc/hive/conf.server'), owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-default.xml.template', owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-env.sh.template', owner='hive', group='hadoop')
