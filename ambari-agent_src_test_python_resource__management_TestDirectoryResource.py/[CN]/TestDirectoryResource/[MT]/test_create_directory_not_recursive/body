@patch.object(sudo, 'path_exists')
@patch.object(os.path, 'dirname')
@patch.object(sudo, 'path_isdir')
@patch.object(sudo, 'makedir')
@patch.object(sudo, 'stat')
@patch.object(sudo, 'chmod')
@patch.object(sudo, 'chown')
@patch('resource_management.core.providers.system._coerce_uid')
@patch('resource_management.core.providers.system._coerce_gid')
def test_create_directory_not_recursive(self, _coerce_gid_mock, _coerce_uid_mock, os_chown_mock, os_chmod_mock, os_stat_mock, mkdir_mock, isdir_mock, os_dirname_mock, os_path_exists_mock):
    os_path_exists_mock.return_value = False
    os_dirname_mock.return_value = '/a/b/c'
    isdir_mock.return_value = True
    _coerce_uid_mock.return_value = 66
    _coerce_gid_mock.return_value = 77
    os_stat_mock.return_value = type('', (), dict(st_mode=493, st_uid=0, st_gid=0))()
    with Environment('/') as env:
        Directory('/a/b/c/d', action='create', mode=511, owner='hdfs', group='hadoop')
    mkdir_mock.assert_called_with('/a/b/c/d', 511)
    os_chmod_mock.assert_called_with('/a/b/c/d', 511)
    os_chown_mock.assert_any_call('/a/b/c/d', 'hdfs', None)
    os_chown_mock.assert_any_call('/a/b/c/d', None, 'hadoop')
