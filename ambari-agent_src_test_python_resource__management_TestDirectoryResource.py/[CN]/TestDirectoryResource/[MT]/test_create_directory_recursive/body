@patch('resource_management.core.sudo.path_exists')
@patch('resource_management.core.sudo.makedirs')
@patch('resource_management.core.sudo.path_isdir')
@patch('resource_management.core.sudo.stat')
@patch('resource_management.core.sudo.chmod')
@patch('resource_management.core.sudo.chown')
@patch('pwd.getpwnam')
@patch('grp.getgrnam')
def test_create_directory_recursive(self, getgrnam_mock, getpwnam_mock, os_chown_mock, os_chmod_mock, os_stat_mock, isdir_mock, os_makedirs_mock, os_path_exists_mock):
    os_path_exists_mock.return_value = False
    isdir_mock.return_value = True
    getpwnam_mock.return_value = MagicMock()
    getpwnam_mock.return_value.pw_uid = 66
    getgrnam_mock.return_value = MagicMock()
    getgrnam_mock.return_value.gr_gid = 77
    os_stat_mock.return_value = type('', (), dict(st_mode=493, st_uid=0, st_gid=0))()
    with Environment('/') as env:
        Directory('/a/b/c/d', action='create', mode=511, owner='hdfs', group='hadoop', recursive=True)
    os_makedirs_mock.assert_called_with('/a/b/c/d', 511)
    os_chmod_mock.assert_called_with('/a/b/c/d', 511)
    os_chown_mock.assert_any_call('/a/b/c/d', getpwnam_mock.return_value, getgrnam_mock.return_value)
