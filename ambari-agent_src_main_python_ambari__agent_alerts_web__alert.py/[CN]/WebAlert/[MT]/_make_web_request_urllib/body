def _make_web_request_urllib(self, url):
    '\n    Make a web request using urllib2. This function does not handle exceptions.\n    :param url: the URL to request\n    :return: a tuple of the response code and the total time in ms\n    '
    response = None
    error_message = None
    start_time = time.time()
    try:
        try:
            response = urllib2.urlopen(url, timeout=self.connection_timeout)
            response_code = response.getcode()
            time_millis = (time.time() - start_time)
            return (response_code, time_millis, error_message)
        except HTTPError as httpError:
            time_millis = (time.time() - start_time)
            error_message = str(httpError)
            return (httpError.code, time_millis, error_message)
    finally:
        if (response is not None):
            try:
                response.close()
            except Exception as exception:
                if logger.isEnabledFor(logging.DEBUG):
                    logger.exception('[Alert][{0}] Unable to close socket connection'.format(self.get_name()))
