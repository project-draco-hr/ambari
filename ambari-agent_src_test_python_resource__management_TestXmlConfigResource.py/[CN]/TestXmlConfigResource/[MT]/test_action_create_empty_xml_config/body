@patch('resource_management.core.providers.system._ensure_metadata')
@patch('__builtin__.open')
@patch.object(os.path, 'exists')
@patch.object(os.path, 'isdir')
@patch.object(time, 'asctime')
def test_action_create_empty_xml_config(self, time_asctime_mock, os_path_isdir_mock, os_path_exists_mock, open_mock, ensure_mock):
    "\n    Tests if 'create' action - creates new non existent xml file and write proper data\n    where configurations={}\n    "
    os_path_isdir_mock.side_effect = [False, True]
    os_path_exists_mock.return_value = False
    time_asctime_mock.return_value = 'Wed 2014-02'
    result_file = MagicMock()
    open_mock.return_value = result_file
    with Environment('/') as env:
        XmlConfig('file.xml', conf_dir='/dir/conf', configurations={}, configuration_attributes={})
    open_mock.assert_called_with('/dir/conf/file.xml', 'wb')
    result_file.__enter__().write.assert_called_with(u'<!--Wed 2014-02-->\n    <configuration>\n    \n  </configuration>\n')
