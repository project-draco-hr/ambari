@patch('resource_management.core.providers.system._ensure_metadata')
@patch('resource_management.core.sudo.create_file')
@patch('resource_management.core.sudo.path_exists')
@patch('resource_management.core.sudo.path_isdir')
@patch.object(time, 'asctime')
def test_action_create_xml_config_with_metacharacters(self, time_asctime_mock, os_path_isdir_mock, os_path_exists_mock, create_file_mock, ensure_mock):
    '\n    Tests if \'create\' action - creates new non existent xml file and write proper data\n    where configurations={"Some conf":"Some metacharacters"}\n    '
    os_path_isdir_mock.side_effect = [False, True]
    os_path_exists_mock.return_value = False
    time_asctime_mock.return_value = 'Wed 2014-02'
    with Environment('/') as env:
        XmlConfig('file.xml', conf_dir='/dir/conf', configurations={'': '', 'prop.1': "'.'yyyy-MM-dd-HH", 'prop.3': '%d{ISO8601} %5p %c{1}:%L - %m%n', 'prop.2': 'INFO, openjpa', 'prop.4': '${oozie.log.dir}/oozie.log', 'prop.empty': '', }, configuration_attributes={'': {'prop.1': 'should_not_be_printed', 'prop.2': 'should_not_be_printed', }, 'attr1': {'prop.1': 'x', 'prop.8': 'not_existed', }, 'attr2': {'prop.4': 'value4', 'prop.3': 'value3', }, 'attr_empty': {}, 'attr_value_empty': {'prop.4': '', 'prop.empty': '', }, })
    create_file_mock.assert_called_with('/dir/conf/file.xml', u'  <configuration>\n    \n    <property>\n      <name></name>\n      <value></value>\n    </property>\n    \n    <property>\n      <name>prop.1</name>\n      <value>&#39;.&#39;yyyy-MM-dd-HH</value>\n      <attr1>x</attr1>\n    </property>\n    \n    <property>\n      <name>prop.2</name>\n      <value>INFO, openjpa</value>\n    </property>\n    \n    <property>\n      <name>prop.3</name>\n      <value>%d{ISO8601} %5p %c{1}:%L - %m%n</value>\n      <attr2>value3</attr2>\n    </property>\n    \n    <property>\n      <name>prop.4</name>\n      <value>${oozie.log.dir}/oozie.log</value>\n      <attr_value_empty></attr_value_empty>\n      <attr2>value4</attr2>\n    </property>\n    \n    <property>\n      <name>prop.empty</name>\n      <value></value>\n      <attr_value_empty></attr_value_empty>\n    </property>\n    \n  </configuration>', encoding='UTF-8')
