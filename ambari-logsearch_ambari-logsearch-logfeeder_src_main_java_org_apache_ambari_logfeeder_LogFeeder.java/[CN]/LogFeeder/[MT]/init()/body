{
  LogFeederUtil.loadProperties("logfeeder.properties",inputParams);
  String configFiles=LogFeederUtil.getStringProperty("logfeeder.config.files");
  if (configFiles == null) {
    configFiles=LogFeederUtil.getStringProperty("config.file","config.json");
  }
  logger.info("logfeeder.config.files=" + configFiles);
  String[] configFileList=configFiles.split(",");
  for (  String configFileName : configFileList) {
    logger.info("Going to load config file:" + configFileName);
    File configFile=new File(configFileName);
    if (configFile.exists() && configFile.isFile()) {
      logger.info("Config file exists in path." + configFile.getAbsolutePath());
      loadConfigsUsingFile(configFile);
    }
 else {
      logger.info("Trying to load config file from classloader: " + configFileName);
      laodConfigsUsingClassLoader(configFileName);
      logger.info("Loaded config file from classloader: " + configFileName);
    }
  }
  mergeAllConfigs();
  outMgr.setOutputList(outputList);
  for (  Output output : outputList) {
    output.init();
  }
  inputMgr.init();
  metricsMgr.init();
  LogfeederScheduler.INSTANCE.start();
  logger.debug("==============");
}
