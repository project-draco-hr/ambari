def setUp(self):
    '\n    Import the class under test.\n    Because the class is present in a different folder, append its dir to the system path.\n    Also, shorten the import name and make it a global so the test functions can access it.\n    :return:\n    '
    sys.path.append(file_path)
    global alert
    import alert_metrics_deviation as alert
    global configs
    configs = {'{{hdfs-site/dfs.namenode.https-address}}': 'c6401.ambari.apache.org:50470', '{{hdfs-site/dfs.http.policy}}': 'HTTP_ONLY', '{{ams-site/timeline.metrics.service.webapp.address}}': 'c6401.ambari.apache.org:6188', '{{hdfs-site/dfs.namenode.http-address}}': 'c6401.ambari.apache.org:50070', '{{cluster-env/security_enabled}}': 'false', '{{cluster-env/smokeuser}}': 'ambari-qa', '{{hdfs-site}}': {'dfs.datanode.address': '0.0.0.0:50010', 'dfs.namenode.rpc-address': 'c6401.ambari.apache.org:8020', 'dfs.namenode.https-address': 'c6401.ambari.apache.org:50470', 'dfs.namenode.http-address': 'c6401.ambari.apache.org:50070', 'dfs.datanode.https.address': '0.0.0.0:50475', 'dfs.namenode.secondary.http-address': 'c6401.ambari.apache.org:50090', 'dfs.datanode.http.address': '0.0.0.0:50075', 'dfs.http.policy': 'HTTP_ONLY', 'dfs.journalnode.https-address': '0.0.0.0:8481', 'dfs.journalnode.http-address': '0.0.0.0:8480', }, }
    global parameters
    parameters = {'metric.deviation.warning.threshold': 100.0, 'mergeHaMetrics': 'false', 'interval': 60.0, 'metric.deviation.critical.threshold': 200.0, 'appId': 'NAMENODE', 'minimumValue': 30.0, 'kerberos.kinit.timer': 14400000L, 'metricName': 'metric1', }
