{
  parseCommandLine();
  ClientConfig config=new DefaultClientConfig();
  Client client=Client.create(config);
  WebResource service=client.resource(getBaseURI());
  String blueprintName=line.getOptionValue("name");
  boolean tree=line.hasOption("tree");
  ClientResponse response=service.path("blueprints/" + blueprintName + "/revisions").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  if (response.getStatus() == 404) {
    System.out.println("Stack [" + blueprintName + "] does not exist");
    System.exit(-1);
  }
  if (response.getStatus() == 204) {
    System.out.println("No revisions available for Stack [" + blueprintName + "]");
    System.exit(0);
  }
  if (response.getStatus() != 200) {
    System.err.println("Stack history command failed. Reason [Code: <" + response.getStatus() + ">, Message: <"+ response.getHeaders().getFirst("ErrorMessage")+ ">]");
    System.exit(-1);
  }
  List<StackInformation> bpInfos=response.getEntity(new GenericType<List<StackInformation>>(){
  }
);
  for (  StackInformation bpInfo : bpInfos) {
    printStackInformation(service,bpInfo,tree);
  }
}
