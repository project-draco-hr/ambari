@patch('time.sleep')
def test_post_upgrade_restart(self, time_mock):
    num_journalnodes = 3
    journalnode_jmx_file = os.path.join(RMFTestCase._getStackTestsFolder(), self.UPGRADE_STACK_VERSION, 'configs', 'journalnode-upgrade-jmx.json')
    namenode_jmx_file = os.path.join(RMFTestCase._getStackTestsFolder(), self.UPGRADE_STACK_VERSION, 'configs', 'journalnode-upgrade-namenode-jmx.json')
    namenode_status_active_file = os.path.join(RMFTestCase._getStackTestsFolder(), self.UPGRADE_STACK_VERSION, 'configs', 'journalnode-upgrade-namenode-status-active.json')
    namenode_status_standby_file = os.path.join(RMFTestCase._getStackTestsFolder(), self.UPGRADE_STACK_VERSION, 'configs', 'journalnode-upgrade-namenode-status-standby.json')
    journalnode_jmx = open(journalnode_jmx_file, 'r').read()
    namenode_jmx = open(namenode_jmx_file, 'r').read()
    namenode_status_active = open(namenode_status_active_file, 'r').read()
    namenode_status_standby = open(namenode_status_standby_file, 'r').read()
    import utils
    import urllib2
    from namenode_ha_state import NamenodeHAState
    url_stream_mock = MagicMock()
    url_stream_mock.read.side_effect = (num_journalnodes * [namenode_jmx, journalnode_jmx])
    urlopen_mock = MagicMock(return_value=url_stream_mock)
    curl_krb_request_mock = MagicMock(side_effect=(num_journalnodes * [(namenode_jmx, '', 1), (journalnode_jmx, '', 1)]))
    get_address_mock = MagicMock(return_value='c6406.ambari.apache.org')
    with patch.object(utils, 'curl_krb_request', curl_krb_request_mock):
        with patch.object(urllib2, 'urlopen', urlopen_mock):
            with patch.object(NamenodeHAState, 'get_address', get_address_mock):
                self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/journalnode.py'), classname='JournalNode', command='post_upgrade_restart', config_file='journalnode-upgrade.json', checked_call_mocks=[(0, str(namenode_status_active)), (0, str(namenode_status_standby))], stack_version=self.UPGRADE_STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    urlopen_mock.assert_called
    urlopen_mock.assert_called_with('http://c6407.ambari.apache.org:8480/jmx')
    url_stream_mock.reset_mock()
    curl_krb_request_mock.reset_mock()
    get_address_mock.reset_mock()
    with patch.object(utils, 'curl_krb_request', curl_krb_request_mock):
        with patch.object(urllib2, 'urlopen', urlopen_mock):
            with patch.object(NamenodeHAState, 'get_address', get_address_mock):
                self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/journalnode.py'), classname='JournalNode', command='post_upgrade_restart', config_file='journalnode-upgrade-hdfs-secure.json', checked_call_mocks=[(0, str(namenode_status_active)), (0, str(namenode_status_standby))], stack_version=self.UPGRADE_STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    curl_krb_request_mock.assert_called
    curl_krb_request_mock.assert_called_with('/tmp', '/etc/security/keytabs/smokeuser.headless.keytab', 'ambari-qa@EXAMPLE.COM', 'https://c6407.ambari.apache.org:8481/jmx', 'jn_upgrade', '/usr/bin/kinit', False, None, 'ambari-qa')
