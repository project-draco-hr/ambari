def up_cluster(argv):
    '\n    run all Ambari-agents in Docker container and VMs,\n    run Ambari-server if there is according to the configuration file\n    :param argv: sys.argv\n    :return: None\n    '
    if (len(argv) < 3):
        print_help()
        exit(1)
    cluster_name = argv[2]
    cluster = Cluster.load_from_json(cluster_name)
    if (cluster is None):
        print cluster_name, ' cluster not found'
        exit(1)
    if (cluster.state != Cluster.STATE_FREE):
        print cluster_name, ' cluster is already running'
        exit(1)
    ambari_server = cluster.get_ambari_server_vm()
    if (ambari_server is None):
        print 'Unable to run cluster', cluster_name, ' no Ambari-server in this cluster, you can only merge this cluster into another one'
        exit(1)
    print 'Configuring cluster'
    print 'Check output folder: ', Config.ATTRIBUTES['output_folder']
    cluster.run_cluster(ambari_server.weave_internal_ip, ambari_server.external_ip)
    data = Data()
    data.set_cluster_state(cluster_name, Cluster.STATE_RUNNING)
    subprocess.call(['reset'])
    print 'Complete'
