{
  StringReader stringReader=new StringReader(TEST_JSON_INPUT_LOG_LEVEL_QUERY);
  ObjectMapper mapper=new ObjectMapper();
  AnnotationIntrospector introspector=new JacksonAnnotationIntrospector();
  mapper.setAnnotationIntrospector(introspector);
  mapper.getSerializationConfig().setSerializationInclusion(JsonSerialize.Inclusion.NON_NULL);
  ObjectReader logLevelQueryResponseReader=mapper.reader(LogLevelQueryResponse.class);
  LogLevelQueryResponse result=logLevelQueryResponseReader.readValue(stringReader);
  assertEquals("startIndex not parsed properly","0",result.getStartIndex());
  assertEquals("pageSize not parsed properly","0",result.getPageSize());
  assertEquals("totalCount not parsed properly","0",result.getTotalCount());
  assertEquals("resultSize not parsed properly","6",result.getResultSize());
  assertEquals("queryTimeMS not parsed properly","1459970731998",result.getQueryTimeMS());
  assertEquals("Incorrect number of log level count items parsed",6,result.getNameValueList().size());
  List<NameValuePair> resultList=result.getNameValueList();
  assertNameValuePair("FATAL","0",resultList.get(0));
  assertNameValuePair("ERROR","0",resultList.get(1));
  assertNameValuePair("WARN","41",resultList.get(2));
  assertNameValuePair("INFO","186",resultList.get(3));
  assertNameValuePair("DEBUG","0",resultList.get(4));
  assertNameValuePair("TRACE","0",resultList.get(5));
}
