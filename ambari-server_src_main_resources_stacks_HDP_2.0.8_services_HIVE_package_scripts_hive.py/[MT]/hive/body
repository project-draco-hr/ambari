def hive(type=None, name=None):
    import params
    if (name == 'hiveserver2'):
        hive_config_dir = params.hive_server_conf_dir
        config_file_mode = 384
    else:
        hive_config_dir = params.hive_conf_dir
        config_file_mode = 420
    jdbc_connector()
    Directory(hive_config_dir, owner=params.hive_user, group=params.user_group, recursive=True)
    XmlConfig('hive-site.xml', conf_dir=hive_config_dir, configurations=params.config['configurations']['hive-site'], owner=params.hive_user, group=params.user_group, mode=config_file_mode)
    cmd = format("/bin/sh -c 'cd /usr/lib/ambari-agent/ && curl -kf --retry 5 {jdk_location}{check_db_connection_jar_name} -o {check_db_connection_jar_name}'")
    Execute(cmd, not_if=format('[ -f {check_db_connection_jar_name}]'))
    if (name == 'metastore'):
        File(params.start_metastore_path, mode=493, content=StaticFile('startMetastore.sh'))
    elif (name == 'hiveserver2'):
        File(params.start_hiveserver2_path, mode=493, content=StaticFile('startHiveserver2.sh'))
    if (type != 'client'):
        crt_directory(params.hive_pid_dir)
        crt_directory(params.hive_log_dir)
        crt_directory(params.hive_var_lib)
    File(format('{hive_config_dir}/hive-env.sh'), owner=params.hive_user, group=params.user_group, content=Template('hive-env.sh.j2', conf_dir=hive_config_dir))
    crt_file(format('{hive_conf_dir}/hive-default.xml.template'))
    crt_file(format('{hive_conf_dir}/hive-env.sh.template'))
    crt_file(format('{hive_conf_dir}/hive-exec-log4j.properties.template'))
    crt_file(format('{hive_conf_dir}/hive-log4j.properties.template'))
