{
  ResourceDefinition resourceDefinition=new ClusterResourceDefinition();
  Map<Resource.Type,String> mapIds=new HashMap<Resource.Type,String>();
  mapIds.put(Resource.Type.Cluster,"c1");
  ClusterController clusterController=createNiceMock(ClusterController.class);
  QueryResponse queryResponse=createNiceMock(QueryResponse.class);
  Schema schema=createNiceMock(Schema.class);
  Renderer renderer=createNiceMock(Renderer.class);
  expect(clusterController.getSchema(Resource.Type.Cluster)).andReturn(schema).anyTimes();
  expect(clusterController.getResources(eq(Resource.Type.Cluster),anyObject(org.apache.ambari.server.controller.spi.Request.class),anyObject(Predicate.class))).andReturn(queryResponse);
  expect(queryResponse.getResources()).andReturn(Collections.<Resource>emptySet()).anyTimes();
  expect(schema.getKeyPropertyId(Resource.Type.Cluster)).andReturn("Clusters/cluster_name").anyTimes();
  TreeNode<Set<String>> treeNode=new TreeNodeImpl<Set<String>>(null,Collections.EMPTY_SET,null);
  expect(renderer.finalizeProperties(anyObject(TreeNode.class),anyBoolean())).andReturn(treeNode).anyTimes();
  replay(clusterController,queryResponse,schema,renderer);
  QueryImpl query=new TestQuery(mapIds,resourceDefinition,clusterController);
  query.setRenderer(renderer);
  try {
    query.execute();
    fail("Expected NoSuchResourceException!");
  }
 catch (  NoSuchResourceException e) {
  }
  verify(clusterController,queryResponse,schema,renderer);
}
