{
  ResourceDefinition resource=createMock(ResourceDefinition.class);
  Schema schema=createMock(Schema.class);
  Map<String,Set<String>> mapSchemaProps=new HashMap<String,Set<String>>();
  Set<String> setProps=new HashSet<String>();
  setProps.add("property");
  setProps.add("property2");
  mapSchemaProps.put("category",setProps);
  mapSchemaProps.put(null,Collections.singleton("property3"));
  expect(resource.getType()).andReturn(Resource.Type.Service).atLeastOnce();
  expect(m_controller.getSchema(Resource.Type.Service)).andReturn(schema);
  expect(schema.getCategories()).andReturn(mapSchemaProps);
  replay(m_controller,resource,schema);
  Query query=new TestQuery(resource,null);
  query.addProperty(null,"category");
  assertEquals(1,query.getProperties().size());
  Set<String> setResultProps=query.getProperties().get("category");
  assertEquals(2,setResultProps.size());
  assertTrue(setResultProps.contains("property"));
  assertTrue(setResultProps.contains("property2"));
  verify(m_controller,resource,schema);
}
