{
  ResourceDefinition resource=createMock(ResourceDefinition.class);
  ResourceDefinition subResource=createMock(ResourceDefinition.class);
  Schema schema=createMock(Schema.class);
  Map<String,Set<String>> mapSchemaProps=new HashMap<String,Set<String>>();
  mapSchemaProps.put("category",Collections.singleton("property"));
  mapSchemaProps.put(null,Collections.singleton("property2"));
  expect(resource.getType()).andReturn(Resource.Type.Service).atLeastOnce();
  expect(m_controller.getSchema(Resource.Type.Service)).andReturn(schema);
  expect(schema.getCategories()).andReturn(mapSchemaProps);
  expect(resource.getSubResources()).andReturn(Collections.singletonMap("components",subResource));
  replay(m_controller,resource,subResource,schema);
  Query query=new TestQuery(resource,null);
  query.addProperty(null,"components");
  verify(m_controller,resource,subResource,schema);
}
