{
  Resource.Type type=Resource.Type.Service;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  TrackActionResponse response=createNiceMock(TrackActionResponse.class);
  expect(managementController.updateService(Matchers.serviceRequest("Cluster100","Service102",null,"DEPLOYED"))).andReturn(response).once();
  replay(managementController,response);
  ResourceProvider provider=ResourceProviderImpl.getResourceProvider(type,new LinkedList<PropertyProvider>(),PropertyHelper.getPropertyIds(type,"DB"),PropertyHelper.getKeyPropertyIds(type),managementController);
  Map<PropertyId,String> properties=new LinkedHashMap<PropertyId,String>();
  properties.put(ResourceProviderImpl.SERVICE_SERVICE_STATE_PROPERTY_ID,"DEPLOYED");
  Request request=PropertyHelper.getUpdateRequest(properties);
  Predicate predicate=new PredicateBuilder().property(ResourceProviderImpl.SERVICE_CLUSTER_NAME_PROPERTY_ID).equals("Cluster100").and().property(ResourceProviderImpl.SERVICE_SERVICE_NAME_PROPERTY_ID).equals("Service102").toPredicate();
  provider.updateResources(request,predicate);
  verify(managementController,response);
}
