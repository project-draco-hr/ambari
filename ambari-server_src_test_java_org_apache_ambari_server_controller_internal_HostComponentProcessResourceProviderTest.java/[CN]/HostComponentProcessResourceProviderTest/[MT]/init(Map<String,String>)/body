{
  Resource.Type type=Resource.Type.HostComponentProcess;
  AmbariManagementController amc=createMock(AmbariManagementController.class);
  Clusters clusters=createMock(Clusters.class);
  Cluster cluster=createMock(Cluster.class);
  ServiceComponentHost sch=createMock(ServiceComponentHost.class);
  List<ServiceComponentHost> schList=Arrays.asList(sch);
  List<Map<String,String>> procList=Arrays.asList(processes);
  expect(amc.getClusters()).andReturn(clusters);
  expect(clusters.getCluster("c1")).andReturn(cluster);
  expect(cluster.getServiceComponentHosts((String)anyObject())).andReturn(schList);
  expect(sch.getServiceComponentName()).andReturn("comp1");
  expect(sch.getHostName()).andReturn("h1").anyTimes();
  expect(sch.getProcesses()).andReturn(procList);
  replay(amc,clusters,cluster,sch);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),amc);
  return provider;
}
