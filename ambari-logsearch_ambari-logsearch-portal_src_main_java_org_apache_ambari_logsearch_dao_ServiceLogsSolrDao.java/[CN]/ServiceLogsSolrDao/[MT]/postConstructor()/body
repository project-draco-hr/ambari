{
  logger.info("postConstructor() called.");
  String solrUrl=PropertiesUtil.getProperty("logsearch.solr.url");
  String zkHosts=PropertiesUtil.getProperty("logsearch.solr.zkhosts");
  String collection=PropertiesUtil.getProperty("logsearch.solr.collection.service.logs","hadoop_logs");
  String splitInterval=PropertiesUtil.getProperty("logsearch.service.logs.split.interval.mins","none");
  String configName=PropertiesUtil.getProperty("logsearch.solr.service.logs.config.name","hadoop_logs");
  int numberOfShards=PropertiesUtil.getIntProperty("logsearch.collection.service.logs.numshards",1);
  int replicationFactor=PropertiesUtil.getIntProperty("logsearch.collection.service.logs.replication.factor",1);
  try {
    connectToSolr(solrUrl,zkHosts,collection);
    setupCollections(splitInterval,configName,numberOfShards,replicationFactor);
  }
 catch (  Exception e) {
    logger.error("error while connecting to Solr for service logs : solrUrl=" + solrUrl + ", zkHosts="+ zkHosts+ ", collection="+ collection,e);
  }
}
