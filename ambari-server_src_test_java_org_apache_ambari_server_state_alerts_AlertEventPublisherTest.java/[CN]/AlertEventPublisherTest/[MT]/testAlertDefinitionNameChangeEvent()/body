{
  installHdfsService();
  AlertDefinitionEntity definition=definitionDao.findAll().get(0);
  AlertHistoryEntity history=new AlertHistoryEntity();
  history.setServiceName(definition.getServiceName());
  history.setClusterId(cluster.getClusterId());
  history.setAlertDefinition(definition);
  history.setAlertLabel(definition.getLabel());
  history.setAlertText(definition.getDefinitionName());
  history.setAlertTimestamp(Long.valueOf(1L));
  history.setHostName(null);
  history.setAlertState(AlertState.OK);
  alertsDao.create(history);
  AlertHistoryEntity history2=new AlertHistoryEntity();
  history2.setServiceName(definition.getServiceName());
  history2.setClusterId(cluster.getClusterId());
  history2.setAlertDefinition(definition);
  history2.setAlertLabel(definition.getLabel());
  history2.setAlertText(definition.getDefinitionName());
  history2.setAlertTimestamp(Long.valueOf(1L));
  history2.setHostName(null);
  history2.setAlertState(AlertState.CRITICAL);
  AlertCurrentEntity current=new AlertCurrentEntity();
  current.setOriginalTimestamp(1L);
  current.setLatestTimestamp(2L);
  current.setAlertHistory(history2);
  alertsDao.create(current);
  definition.setLabel("testAlertDefinitionNameChangeEvent");
  definitionDao.merge(definition);
  history=alertsDao.findById(history.getAlertId());
  history2=alertsDao.findById(history2.getAlertId());
  Assert.assertFalse(definition.getLabel().equals(history.getAlertLabel()));
  Assert.assertEquals(definition.getLabel(),history2.getAlertLabel());
}
