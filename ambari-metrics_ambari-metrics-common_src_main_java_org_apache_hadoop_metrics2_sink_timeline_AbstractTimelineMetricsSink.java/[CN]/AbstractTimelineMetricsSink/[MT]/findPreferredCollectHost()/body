{
  if (!isInitializedForHA) {
    init();
  }
  shardExpired=false;
  if (targetCollectorHostSupplier != null) {
    String targetCollector=targetCollectorHostSupplier.get();
    if (targetCollector != null) {
      return targetCollector;
    }
  }
  refreshCollectorsFromConfigured();
  if (allKnownLiveCollectors.size() == 0 && getZookeeperQuorum() != null) {
    LOG.info("No live collectors from configuration. Requesting zookeeper...");
    allKnownLiveCollectors.addAll(collectorHAHelper.findLiveCollectorHostsFromZNode());
  }
  if (allKnownLiveCollectors.size() != 0) {
    targetCollectorHostSupplier=Suppliers.memoizeWithExpiration(new Supplier<String>(){
      @Override public String get(){
        if (shardExpired) {
          refreshCollectorsFromConfigured();
        }
        return metricSinkWriteShardStrategy.findCollectorShard(new ArrayList<>(allKnownLiveCollectors));
      }
    }
,rand.nextInt(COLLECTOR_HOST_CACHE_MAX_EXPIRATION_MINUTES - COLLECTOR_HOST_CACHE_MIN_EXPIRATION_MINUTES + 1) + COLLECTOR_HOST_CACHE_MIN_EXPIRATION_MINUTES,TimeUnit.MINUTES);
    String collectorHost=targetCollectorHostSupplier.get();
    shardExpired=true;
    return collectorHost;
  }
  LOG.warn("Couldn't find any live collectors. Returning null");
  shardExpired=true;
  return null;
}
