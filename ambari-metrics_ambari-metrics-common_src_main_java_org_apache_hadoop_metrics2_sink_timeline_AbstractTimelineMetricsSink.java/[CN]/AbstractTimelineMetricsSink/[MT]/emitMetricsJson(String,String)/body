{
  int timeout=getTimeoutSeconds() * 1000;
  HttpURLConnection connection=null;
  try {
    if (connectUrl == null) {
      throw new IOException("Unknown URL. Unable to connect to metrics collector.");
    }
    connection=connectUrl.startsWith("https") ? getSSLConnection(connectUrl) : getConnection(connectUrl);
    connection.setRequestMethod("POST");
    connection.setRequestProperty("Content-Type","application/json");
    connection.setRequestProperty("Connection","Keep-Alive");
    connection.setConnectTimeout(timeout);
    connection.setReadTimeout(timeout);
    connection.setDoOutput(true);
    if (jsonData != null) {
      try (OutputStream os=connection.getOutputStream()){
        os.write(jsonData.getBytes("UTF-8"));
      }
     }
    int statusCode=connection.getResponseCode();
    if (statusCode != 200) {
      LOG.info("Unable to POST metrics to collector, " + connectUrl + ", "+ "statusCode = "+ statusCode);
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Metrics posted to Collector " + connectUrl);
      }
    }
    cleanupInputStream(connection.getInputStream());
    failedCollectorConnectionsCounter.set(0);
    return true;
  }
 catch (  IOException ioe) {
    StringBuilder errorMessage=new StringBuilder("Unable to connect to collector, " + connectUrl + "\n"+ "This exceptions will be ignored for next "+ NUMBER_OF_SKIPPED_COLLECTOR_EXCEPTIONS+ " times\n");
    try {
      if ((connection != null)) {
        errorMessage.append(cleanupInputStream(connection.getErrorStream()));
      }
    }
 catch (    IOException e) {
    }
    if (failedCollectorConnectionsCounter.getAndIncrement() == 0) {
      if (LOG.isDebugEnabled()) {
        LOG.debug(errorMessage,ioe);
      }
 else {
        LOG.info(errorMessage);
      }
      throw new UnableToConnectException(ioe).setConnectUrl(connectUrl);
    }
 else {
      failedCollectorConnectionsCounter.compareAndSet(NUMBER_OF_SKIPPED_COLLECTOR_EXCEPTIONS,0);
      if (LOG.isDebugEnabled()) {
        LOG.debug(String.format("Ignoring %s AMS connection exceptions",NUMBER_OF_SKIPPED_COLLECTOR_EXCEPTIONS));
      }
    }
  }
catch (  AuthenticationException e) {
    LOG.error("AuthenticationException while posting metrics to metrics collector",e);
  }
  return false;
}
