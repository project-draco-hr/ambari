def server_hostname(config):
    global cached_server_hostname
    if (cached_server_hostname is not None):
        return cached_server_hostname
    if config.has_option('server', 'hostname_script'):
        scriptname = config.get('server', 'hostname_script')
        try:
            osStat = subprocess.Popen([scriptname], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            (out, err) = osStat.communicate()
            if ((0 == osStat.returncode) and (0 != len(out.strip()))):
                cached_server_hostname = out.strip()
                logger.info((('Read server hostname ' + cached_server_hostname) + 'using server:hostname_script'))
        except Exception as err:
            logger.info(('Unable to execute hostname_script for server hostname. ' + str(err)))
    if (cached_server_hostname is None):
        cached_server_hostname = config.get('server', 'hostname')
    return cached_server_hostname
