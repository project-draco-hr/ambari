def do_cleanup(self, argMap=None):
    if argMap:
        packageList = argMap.get(PACKAGE_SECTION)
        userList = argMap.get(USER_SECTION)
        dirList = argMap.get(DIR_SECTION)
        repoList = argMap.get(REPO_SECTION)
        procList = argMap.get(PROCESS_SECTION)
        alt_map = argMap.get(ALT_SECTION)
        if (procList and (not (PROCESS_SECTION in SKIP_LIST))):
            logger.info(((('\n' + "Killing pid's: ") + str(procList)) + '\n'))
            self.do_kill_processes(procList)
        if (packageList and (not (PACKAGE_SECTION in SKIP_LIST))):
            logger.info((('Deleting packages: ' + str(packageList)) + '\n'))
            self.do_erase_packages(packageList)
        if (userList and (not (USER_SECTION in SKIP_LIST))):
            logger.info((('\n' + 'Deleting users: ') + str(userList)))
            self.do_delete_users(userList)
        if (dirList and (not (DIR_SECTION in SKIP_LIST))):
            logger.info((('\n' + 'Deleting directories: ') + str(dirList)))
            self.do_erase_dir_silent(dirList)
        if (repoList and (not (REPO_SECTION in SKIP_LIST))):
            repoFiles = self.find_repo_files_for_repos(repoList)
            logger.info((('\n' + 'Deleting repo files: ') + str(repoFiles)))
            self.do_erase_files_silent(repoFiles)
        if (alt_map and (not (ALT_SECTION in SKIP_LIST))):
            logger.info(((('\n' + 'Erasing alternatives:') + str(alt_map)) + '\n'))
            self.do_erase_alternatives(alt_map)
    return 0
