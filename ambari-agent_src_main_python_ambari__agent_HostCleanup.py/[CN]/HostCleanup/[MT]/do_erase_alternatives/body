def do_erase_alternatives(self, alt_map):
    if alt_map:
        alt_list = alt_map.get(ALT_KEYS[0])
        if alt_list:
            for alt_name in alt_list:
                if alt_name:
                    out = self.get_alternatives_desc(alt_name)
                    if (not out):
                        logger.warn(('No alternatives found for: ' + alt_name))
                        continue
                    else:
                        alternates = out.split('\n')
                        if alternates:
                            for entry in alternates:
                                if entry:
                                    alt_path = entry.split()[0]
                                    logger.debug(((('Erasing alternative named: ' + alt_name) + ', path: ') + alt_path))
                                    command = ALT_ERASE_CMD.format(alt_name, alt_path)
                                    (returncode, stdoutdata, stderrdata) = self.run_os_command(command)
                                    if (returncode != 0):
                                        logger.warn(((((('Failed to remove alternative: ' + alt_name) + ', path: ') + alt_path) + ', error: ') + stderrdata))
        dir_list = alt_map.get(ALT_KEYS[1])
        if dir_list:
            self.do_erase_dir_silent(dir_list)
    return 0
