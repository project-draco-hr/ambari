{
  ClusterDefinition clusterDefinition=new ClusterDefinition(new TestStateProvider(),new TestClusterDefinitionProvider(),new TestHostInfoProvider());
  ComponentProvider provider=new ComponentProvider(clusterDefinition);
  Predicate predicate=new PredicateBuilder().property(ComponentProvider.COMPONENT_COMPONENT_NAME_PROPERTY_ID).equals("TASKTRACKER").toPredicate();
  Set<Resource> resources=provider.getResources(PropertyHelper.getReadRequest(),predicate);
  Assert.assertEquals(1,resources.size());
  predicate=new PredicateBuilder().property(ComponentProvider.COMPONENT_COMPONENT_NAME_PROPERTY_ID).equals("TASKTRACKER").or().property(ComponentProvider.COMPONENT_COMPONENT_NAME_PROPERTY_ID).equals("DATANODE").toPredicate();
  resources=provider.getResources(PropertyHelper.getReadRequest(),predicate);
  Assert.assertEquals(2,resources.size());
  predicate=new PredicateBuilder().property(ComponentProvider.COMPONENT_COMPONENT_NAME_PROPERTY_ID).equals("BadComponent").toPredicate();
  resources=provider.getResources(PropertyHelper.getReadRequest(),predicate);
  Assert.assertTrue(resources.isEmpty());
}
