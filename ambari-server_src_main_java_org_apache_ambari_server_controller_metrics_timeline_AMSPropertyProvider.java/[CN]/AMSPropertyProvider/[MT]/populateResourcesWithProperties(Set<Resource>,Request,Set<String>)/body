{
  Map<String,Map<TemporalInfo,MetricsRequest>> requestMap=getMetricsRequests(resources,request,propertyIds);
  for (  Map.Entry<String,Map<TemporalInfo,MetricsRequest>> clusterEntry : requestMap.entrySet()) {
    for (    MetricsRequest metricsRequest : clusterEntry.getValue().values()) {
      try {
        metricsRequest.populateResources();
      }
 catch (      IOException io) {
        if (io instanceof SocketTimeoutException) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Skip populating resources on socket timeout.");
          }
          break;
        }
      }
    }
  }
  return resources;
}
