{
  Map<String,Map<TemporalInfo,MetricsRequest>> requestMap=new HashMap<String,Map<TemporalInfo,MetricsRequest>>();
  String collectorHostName=null;
  String collectorPort=null;
  for (  Resource resource : resources) {
    String clusterName=(String)resource.getPropertyValue(clusterNamePropertyId);
    if (StringUtils.isEmpty(clusterName)) {
      continue;
    }
    if (!hostProvider.isCollectorHostLive(clusterName,TIMELINE_METRICS)) {
      LOG.info("METRICS_COLLECTOR host is not live. Skip populating " + "resources with metrics.");
      continue;
    }
    if (!hostProvider.isCollectorComponentLive(clusterName,TIMELINE_METRICS)) {
      LOG.info("METRICS_COLLECTOR is not live. Skip populating resources" + " with metrics.");
      continue;
    }
    Map<TemporalInfo,MetricsRequest> requests=requestMap.get(clusterName);
    if (requests == null) {
      requests=new HashMap<TemporalInfo,MetricsRequest>();
      requestMap.put(clusterName,requests);
    }
    if (collectorHostName == null) {
      collectorHostName=hostProvider.getCollectorHostName(clusterName,TIMELINE_METRICS);
    }
    if (collectorPort == null) {
      collectorPort=hostProvider.getCollectorPortName(clusterName,TIMELINE_METRICS);
    }
    for (    String id : ids) {
      Map<String,PropertyInfo> propertyInfoMap=new HashMap<String,PropertyInfo>();
      String componentName=getOverridenComponentName(resource);
      Map<String,PropertyInfo> componentMetricMap=getComponentMetrics().get(componentName);
      if (componentMetricMap != null && !componentMetricMap.containsKey(id)) {
        updateComponentMetricMap(componentMetricMap,id);
      }
      updatePropertyInfoMap(componentName,id,propertyInfoMap);
      for (      Map.Entry<String,PropertyInfo> entry : propertyInfoMap.entrySet()) {
        String propertyId=entry.getKey();
        PropertyInfo propertyInfo=entry.getValue();
        TemporalInfo temporalInfo=request.getTemporalInfo(id);
        if ((temporalInfo == null && propertyInfo.isPointInTime()) || (temporalInfo != null && propertyInfo.isTemporal())) {
          MetricsRequest metricsRequest=requests.get(temporalInfo);
          if (metricsRequest == null) {
            metricsRequest=new MetricsRequest(temporalInfo,getAMSUriBuilder(collectorHostName,collectorPort != null ? Integer.parseInt(collectorPort) : COLLECTOR_DEFAULT_PORT),(String)resource.getPropertyValue(clusterNamePropertyId));
            requests.put(temporalInfo,metricsRequest);
          }
          metricsRequest.putResource(getComponentName(resource),resource);
          metricsRequest.putPropertyId(propertyInfo.getPropertyId(),propertyId);
          if (propertyInfo.isAmsHostMetric()) {
            metricsRequest.putHosComponentHostMetric(propertyInfo.getPropertyId());
          }
        }
      }
    }
  }
  return requestMap;
}
