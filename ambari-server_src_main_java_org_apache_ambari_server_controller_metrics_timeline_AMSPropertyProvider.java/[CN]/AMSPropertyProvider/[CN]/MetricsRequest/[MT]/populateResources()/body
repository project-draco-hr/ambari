{
  if (temporalInfo != null && (temporalInfo.getStartTime() == null || temporalInfo.getEndTime() == null)) {
    return Collections.emptySet();
  }
  for (  Map.Entry<String,Set<Resource>> resourceEntry : resources.entrySet()) {
    String componentName=resourceEntry.getKey();
    Set<Resource> resourceSet=resourceEntry.getValue();
    TimelineMetrics timelineMetrics=new TimelineMetrics();
    Set<String> nonHostComponentMetrics=new HashSet<String>(metrics.keySet());
    nonHostComponentMetrics.removeAll(hostComponentHostMetrics);
    String hostnames=getHostnames(resources.get(componentName));
    if (!hostComponentHostMetrics.isEmpty()) {
      String hostComponentHostMetricParams=getSetString(processRegexps(hostComponentHostMetrics),-1);
      setQueryParams(hostComponentHostMetricParams,hostnames,true,componentName);
      TimelineMetrics metricsResponse=getTimelineMetricsFromCache(getTimelineAppMetricCacheKey(hostComponentHostMetrics,componentName,hostnames,uriBuilder.toString()),componentName);
      if (metricsResponse != null) {
        timelineMetrics.getMetrics().addAll(metricsResponse.getMetrics());
      }
    }
    if (!nonHostComponentMetrics.isEmpty()) {
      String nonHostComponentHostMetricParams=getSetString(processRegexps(nonHostComponentMetrics),-1);
      setQueryParams(nonHostComponentHostMetricParams,hostnames,false,componentName);
      TimelineMetrics metricsResponse=getTimelineMetricsFromCache(getTimelineAppMetricCacheKey(nonHostComponentMetrics,componentName,hostnames,uriBuilder.toString()),componentName);
      if (metricsResponse != null) {
        timelineMetrics.getMetrics().addAll(metricsResponse.getMetrics());
      }
    }
    Map<String,Set<TimelineMetric>> metricsMap=new HashMap<String,Set<TimelineMetric>>();
    Set<String> patterns=createPatterns(metrics.keySet());
    if (!timelineMetrics.getMetrics().isEmpty()) {
      for (      TimelineMetric metric : timelineMetrics.getMetrics()) {
        if (metric.getMetricName() != null && metric.getMetricValues() != null && checkMetricName(patterns,metric.getMetricName())) {
          String hostname=metric.getHostName();
          if (!metricsMap.containsKey(hostname)) {
            metricsMap.put(hostname,new HashSet<TimelineMetric>());
          }
          metricsMap.get(hostname).add(metric);
        }
      }
      for (      Resource resource : resourceSet) {
        String hostname=getHostName(resource);
        if (metricsMap.containsKey(hostname)) {
          for (          TimelineMetric metric : metricsMap.get(hostname)) {
            TimelineMetric timelineMetricClone=new TimelineMetric(metric);
            metricsPaddingMethod.applyPaddingStrategy(timelineMetricClone,temporalInfo);
            populateResource(resource,timelineMetricClone,temporalInfo);
          }
        }
      }
    }
  }
  return Collections.emptySet();
}
