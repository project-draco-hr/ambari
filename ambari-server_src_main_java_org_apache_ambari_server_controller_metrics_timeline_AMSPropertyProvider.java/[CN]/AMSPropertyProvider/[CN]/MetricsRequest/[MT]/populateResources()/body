{
  if (temporalInfo != null && (temporalInfo.getStartTime() == null || temporalInfo.getEndTime() == null)) {
    return Collections.emptySet();
  }
  for (  Map.Entry<String,Set<Resource>> resourceEntry : resources.entrySet()) {
    String hostname=resourceEntry.getKey();
    Set<Resource> resourceSet=resourceEntry.getValue();
    for (    Resource resource : resourceSet) {
      String clusterName=(String)resource.getPropertyValue(clusterNamePropertyId);
      if (!hostProvider.isCollectorHostLive(clusterName,TIMELINE_METRICS)) {
        LOG.info("METRICS_COLLECTOR host is not live. Skip populating " + "resources with metrics.");
        return Collections.emptySet();
      }
      if (!hostProvider.isCollectorComponentLive(clusterName,TIMELINE_METRICS)) {
        LOG.info("METRICS_COLLECTOR is not live. Skip populating resources" + " with metrics.");
        return Collections.emptySet();
      }
      TimelineMetrics timelineMetrics;
      if (hostComponentHostMetrics.isEmpty()) {
        String spec=getSpec(hostname,resource);
        timelineMetrics=getTimelineMetricsForSpec(spec);
      }
 else {
        Set<String> specs=getSpecsForHostComponentMetrics(hostname,resource);
        timelineMetrics=new TimelineMetrics();
        for (        String spec : specs) {
          if (!StringUtils.isEmpty(spec)) {
            TimelineMetrics metrics=getTimelineMetricsForSpec(spec);
            if (metrics != null) {
              timelineMetrics.getMetrics().addAll(metrics.getMetrics());
            }
          }
        }
      }
      Set<String> patterns=createPatterns(metrics.keySet());
      if (timelineMetrics != null) {
        for (        TimelineMetric metric : timelineMetrics.getMetrics()) {
          if (metric.getMetricName() != null && metric.getMetricValues() != null && checkMetricName(patterns,metric.getMetricName())) {
            populateResource(resource,metric);
          }
        }
      }
    }
  }
  return Collections.emptySet();
}
