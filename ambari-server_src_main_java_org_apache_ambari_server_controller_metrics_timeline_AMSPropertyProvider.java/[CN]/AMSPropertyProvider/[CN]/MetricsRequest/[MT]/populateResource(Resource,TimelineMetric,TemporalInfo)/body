{
  String metric_name=metric.getMetricName();
  Set<String> propertyIdSet=metrics.get(metric_name);
  List<String> parameterList=new LinkedList<String>();
  if (propertyIdSet == null) {
    for (    Map.Entry<String,Set<String>> entry : metrics.entrySet()) {
      String key=entry.getKey();
      Pattern pattern=Pattern.compile(key);
      Matcher matcher=pattern.matcher(metric_name);
      if (matcher.matches()) {
        propertyIdSet=entry.getValue();
        for (int i=0; i < matcher.groupCount(); ++i) {
          parameterList.add(matcher.group(i + 1));
        }
        break;
      }
    }
  }
  if (propertyIdSet != null) {
    Map<String,PropertyInfo> metricsMap=getComponentMetrics().get(getOverridenComponentName(resource));
    if (metricsMap != null) {
      for (      String propertyId : propertyIdSet) {
        if (propertyId != null) {
          if (metricsMap.containsKey(propertyId)) {
            if (containsArguments(propertyId)) {
              int i=1;
              for (              String param : parameterList) {
                propertyId=substituteArgument(propertyId,"$" + i,param);
                ++i;
              }
            }
            Object value=getValue(metric,temporalInfo);
            if (value != null) {
              resource.setProperty(propertyId,value);
            }
          }
        }
      }
    }
  }
}
