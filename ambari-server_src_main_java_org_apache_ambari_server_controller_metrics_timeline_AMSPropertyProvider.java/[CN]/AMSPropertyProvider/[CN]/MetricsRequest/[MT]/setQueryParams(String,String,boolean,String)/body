{
  uriBuilder.removeQuery();
  if (metricsParam.length() > 0) {
    uriBuilder.setParameter("metricNames",metricsParam);
    resolvedMetricsParams=Sets.newHashSet(metricsParam.split(","));
  }
  if (hostname != null && !hostname.isEmpty()) {
    uriBuilder.setParameter("hostname",hostname);
  }
  if (isHostMetric) {
    uriBuilder.setParameter("appId","HOST");
  }
 else {
    if (componentName != null && !componentName.isEmpty() && !componentName.equalsIgnoreCase("HOST")) {
      StackId stackId;
      try {
        AmbariManagementController managementController=AmbariServer.getController();
        stackId=managementController.getClusters().getCluster(clusterName).getCurrentStackVersion();
        if (stackId != null) {
          String stackName=stackId.getStackName();
          String version=stackId.getStackVersion();
          AmbariMetaInfo ambariMetaInfo=managementController.getAmbariMetaInfo();
          String serviceName=ambariMetaInfo.getComponentToService(stackName,version,componentName);
          String timeLineAppId=ambariMetaInfo.getComponent(stackName,version,serviceName,componentName).getTimelineAppid();
          if (timeLineAppId != null) {
            componentName=timeLineAppId;
          }
        }
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
    uriBuilder.setParameter("appId",componentName);
  }
  if (temporalInfo != null) {
    long startTime=temporalInfo.getStartTime();
    if (startTime != -1) {
      uriBuilder.setParameter("startTime",String.valueOf(startTime));
    }
    long endTime=temporalInfo.getEndTime();
    if (endTime != -1) {
      uriBuilder.setParameter("endTime",String.valueOf(endTime));
    }
  }
}
