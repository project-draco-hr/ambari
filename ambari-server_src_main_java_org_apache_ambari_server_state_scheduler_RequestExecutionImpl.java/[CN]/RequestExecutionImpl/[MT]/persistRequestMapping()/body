{
  if (isPersisted) {
    batchRequestDAO.removeByScheduleId(requestScheduleEntity.getScheduleId());
    requestScheduleEntity.getRequestScheduleBatchRequestEntities().clear();
  }
  if (batch != null) {
    List<BatchRequest> batchRequests=batch.getBatchRequests();
    if (batchRequests != null) {
      Collections.sort(batchRequests);
      Long batchId=1L;
      for (      BatchRequest batchRequest : batchRequests) {
        RequestScheduleBatchRequestEntity batchRequestEntity=new RequestScheduleBatchRequestEntity();
        batchRequestEntity.setBatchId(batchId);
        batchRequestEntity.setScheduleId(requestScheduleEntity.getScheduleId());
        batchRequestEntity.setRequestScheduleEntity(requestScheduleEntity);
        batchRequestEntity.setRequestType(batchRequest.getType());
        batchRequestEntity.setRequestUri(batchRequest.getUri());
        batchRequestEntity.setRequestBody(batchRequest.getBody());
        batchRequestEntity.setReturnCode(batchRequest.getReturnCode());
        batchRequestEntity.setReturnMessage(batchRequest.getResponseMsg());
        batchRequestEntity.setRequestStatus(batchRequest.getStatus());
        batchRequestDAO.create(batchRequestEntity);
        requestScheduleEntity.getRequestScheduleBatchRequestEntities().add(batchRequestEntity);
        requestScheduleDAO.merge(requestScheduleEntity);
        batchId++;
      }
    }
  }
}
