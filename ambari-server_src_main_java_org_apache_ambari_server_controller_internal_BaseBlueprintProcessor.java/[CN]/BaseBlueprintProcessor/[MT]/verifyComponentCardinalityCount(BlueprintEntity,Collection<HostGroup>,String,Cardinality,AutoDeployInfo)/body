{
  Collection<String> cardinalityFailures=new HashSet<String>();
  int actualCount=getHostGroupsForComponent(component,hostGroups).size();
  boolean autoDeployed=false;
  if (!cardinality.isValidCount(actualCount)) {
    if (autoDeploy != null && autoDeploy.isEnabled() && cardinality.cardinality.equals("1")) {
      String coLocateName=autoDeploy.getCoLocate();
      if (coLocateName != null && !coLocateName.isEmpty()) {
        Collection<HostGroup> coLocateHostGroups=getHostGroupsForComponent(coLocateName.split("/")[1],hostGroups);
        if (!coLocateHostGroups.isEmpty()) {
          autoDeployed=true;
          HostGroup group=coLocateHostGroups.iterator().next();
          if (group.addComponent(component)) {
            addComponentToBlueprint(blueprint,group.getEntity().getName(),component);
          }
        }
      }
    }
    if (!autoDeployed) {
      cardinalityFailures.add(component + "(actual=" + actualCount+ ", required="+ cardinality.cardinality+ ")");
    }
  }
  return cardinalityFailures;
}
