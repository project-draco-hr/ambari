{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  CredentialService CredentialService=new TestCredentialService("alias");
  Method m=CredentialService.getClass().getMethod("getCredential",HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{getHttpHeaders(),getUriInfo(),"alias"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,CredentialService,m,args,null));
  CredentialService=new TestCredentialService(null);
  m=CredentialService.getClass().getMethod("getCredentials",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,CredentialService,m,args,null));
  CredentialService=new TestCredentialService("alias");
  m=CredentialService.getClass().getMethod("createCredential",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"alias"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,CredentialService,m,args,"body"));
  CredentialService=new TestCredentialService("alias");
  m=CredentialService.getClass().getMethod("deleteCredential",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"alias"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,CredentialService,m,args,null));
  return listInvocations;
}
