{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  RepositoryVersionService repositoryVersionService;
  Method m;
  Object[] args;
  repositoryVersionService=new TestRepositoryVersionService();
  m=repositoryVersionService.getClass().getMethod("getRepositoryVersions",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,repositoryVersionService,m,args,null));
  repositoryVersionService=new TestRepositoryVersionService();
  m=repositoryVersionService.getClass().getMethod("getRepositoryVersion",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"RepositoryVersionName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,repositoryVersionService,m,args,null));
  repositoryVersionService=new TestRepositoryVersionService();
  m=repositoryVersionService.getClass().getMethod("createRepositoryVersion",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,repositoryVersionService,m,args,"body"));
  repositoryVersionService=new TestRepositoryVersionService();
  m=repositoryVersionService.getClass().getMethod("deleteRepositoryVersion",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"repositoryVersionName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,repositoryVersionService,m,args,null));
  repositoryVersionService=new TestRepositoryVersionService();
  m=repositoryVersionService.getClass().getMethod("updateRepositoryVersion",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"repositoryVersionName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,repositoryVersionService,m,args,"body"));
  return listInvocations;
}
