def _llap_stop(self, env):
    import params
    Logger.info('Stopping LLAP')
    SLIDER_APP_NAME = 'llap0'
    stop_cmd = ['slider', 'stop', SLIDER_APP_NAME]
    Logger.info(format('Command: {stop_cmd}'))
    (code, output, error) = shell.call(stop_cmd, user=params.hive_user, stderr=subprocess.PIPE, logoutput=True)
    if (code == 0):
        Logger.info(format('Stopped {SLIDER_APP_NAME} application on Slider successfully'))
    elif ((code == 69) and (output is not None) and ('Unknown application instance' in output)):
        Logger.info(format('Application {SLIDER_APP_NAME} was already stopped on Slider'))
    else:
        raise Fail(format('Could not stop application {SLIDER_APP_NAME} on Slider'))
    destroy_cmd = ['slider', 'destroy', SLIDER_APP_NAME, '--force']
    (code, output, error) = shell.call(destroy_cmd, user=params.hive_user, stderr=subprocess.PIPE)
    if (code == 0):
        Logger.info(format('Successfully removed slider app {SLIDER_APP_NAME}.'))
    else:
        message = format('Could not remove slider app {SLIDER_APP_NAME}.')
        if (error is not None):
            message += (' ' + error)
        raise Fail(message)
