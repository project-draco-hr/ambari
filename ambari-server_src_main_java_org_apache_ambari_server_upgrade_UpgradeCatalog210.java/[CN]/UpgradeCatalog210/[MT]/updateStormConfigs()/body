{
  AmbariManagementController ambariManagementController=injector.getInstance(AmbariManagementController.class);
  Clusters clusters=ambariManagementController.getClusters();
  if (clusters != null) {
    Map<String,Cluster> clusterMap=clusters.getClusters();
    if (clusterMap != null && !clusterMap.isEmpty()) {
      for (      final Cluster cluster : clusterMap.values()) {
        if (cluster.getDesiredConfigByType("cluster-env") != null && cluster.getDesiredConfigByType("cluster-env").getProperties().get("security_enabled").equals("true") && cluster.getDesiredConfigByType("storm-site") != null) {
          Map<String,String> newStormProps=new HashMap<String,String>();
          if (!cluster.getDesiredConfigByType("storm-site").getProperties().containsKey("java.security.auth.login.config")) {
            newStormProps.put("java.security.auth.login.config","{{conf_dir}}/storm_jaas.conf");
          }
          if (!cluster.getDesiredConfigByType("storm-site").getProperties().containsKey("nimbus.admins")) {
            newStormProps.put("nimbus.admins","['{{storm_user}}']");
          }
          if (!cluster.getDesiredConfigByType("storm-site").getProperties().containsKey("nimbus.supervisors.users")) {
            newStormProps.put("nimbus.supervisors.users","['{{storm_user}}']");
          }
          if (!cluster.getDesiredConfigByType("storm-site").getProperties().containsKey("storm.zookeeper.superACL")) {
            newStormProps.put("storm.zookeeper.superACL","sasl:{{storm_base_jaas_principal}}");
          }
          if (!cluster.getDesiredConfigByType("storm-site").getProperties().containsKey("ui.filter.params")) {
            newStormProps.put("ui.filter.params","{'type': 'kerberos', 'kerberos.principal': '{{storm_ui_jaas_principal}}', 'kerberos.keytab': '{{storm_ui_keytab_path}}', 'kerberos.name.rules': 'DEFAULT'}");
          }
          updateConfigurationPropertiesForCluster(cluster,"storm-site",newStormProps,false,true);
        }
      }
    }
  }
}
