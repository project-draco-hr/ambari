{
  ArrayList<DBColumnInfo> columns=new ArrayList<DBColumnInfo>();
  columns.add(new DBColumnInfo("stack_id",Long.class,null,null,false));
  columns.add(new DBColumnInfo("stack_name",String.class,255,null,false));
  columns.add(new DBColumnInfo("stack_version",String.class,255,null,false));
  dbAccessor.createTable(STACK_TABLE,columns,"stack_id");
  dbAccessor.addUniqueConstraint(STACK_TABLE,"unq_stack","stack_name","stack_version");
  addSequence("stack_id_seq",0L,false);
  dbAccessor.addColumn(CLUSTERS_TABLE,DESIRED_STACK_ID_COLUMN);
  dbAccessor.addColumn("hostcomponentdesiredstate",DESIRED_STACK_ID_COLUMN);
  dbAccessor.addColumn(SERVICE_COMPONENT_DESIRED_STATE_TABLE,DESIRED_STACK_ID_COLUMN);
  dbAccessor.addColumn("servicedesiredstate",DESIRED_STACK_ID_COLUMN);
  dbAccessor.addFKConstraint(CLUSTERS_TABLE,"fk_clusters_desired_stack_id",DESIRED_STACK_ID_COLUMN_NAME,STACK_TABLE,STACK_ID_COLUMN_NAME,true);
  dbAccessor.addFKConstraint("hostcomponentdesiredstate","fk_hcds_desired_stack_id",DESIRED_STACK_ID_COLUMN_NAME,STACK_TABLE,STACK_ID_COLUMN_NAME,true);
  dbAccessor.addFKConstraint(SERVICE_COMPONENT_DESIRED_STATE_TABLE,"fk_scds_desired_stack_id",DESIRED_STACK_ID_COLUMN_NAME,STACK_TABLE,STACK_ID_COLUMN_NAME,true);
  dbAccessor.addFKConstraint("servicedesiredstate","fk_sds_desired_stack_id",DESIRED_STACK_ID_COLUMN_NAME,STACK_TABLE,STACK_ID_COLUMN_NAME,true);
  dbAccessor.addColumn("clusterstate",CURRENT_STACK_ID_COLUMN);
  dbAccessor.addColumn("hostcomponentstate",CURRENT_STACK_ID_COLUMN);
  dbAccessor.addFKConstraint("clusterstate","fk_cs_current_stack_id",CURRENT_STACK_ID_COLUMN_NAME,STACK_TABLE,STACK_ID_COLUMN_NAME,true);
  dbAccessor.addFKConstraint("hostcomponentstate","fk_hcs_current_stack_id",CURRENT_STACK_ID_COLUMN_NAME,STACK_TABLE,STACK_ID_COLUMN_NAME,true);
  dbAccessor.addColumn("clusterconfig",STACK_ID_COLUMN);
  dbAccessor.addColumn("serviceconfig",STACK_ID_COLUMN);
  dbAccessor.addColumn("blueprint",STACK_ID_COLUMN);
  dbAccessor.addColumn(REPO_VERSION_TABLE,STACK_ID_COLUMN);
  dbAccessor.addFKConstraint("clusterconfig","fk_clusterconfig_stack_id",STACK_ID_COLUMN_NAME,STACK_TABLE,STACK_ID_COLUMN_NAME,true);
  dbAccessor.addFKConstraint("serviceconfig","fk_serviceconfig_stack_id",STACK_ID_COLUMN_NAME,STACK_TABLE,STACK_ID_COLUMN_NAME,true);
  dbAccessor.addFKConstraint("blueprint","fk_blueprint_stack_id",STACK_ID_COLUMN_NAME,STACK_TABLE,STACK_ID_COLUMN_NAME,true);
  dbAccessor.addFKConstraint(REPO_VERSION_TABLE,"fk_repoversion_stack_id",STACK_ID_COLUMN_NAME,STACK_TABLE,STACK_ID_COLUMN_NAME,true);
  dbAccessor.dropUniqueConstraint(REPO_VERSION_TABLE,"uq_repo_version_stack_version");
  dbAccessor.addUniqueConstraint("repo_version","uq_repo_version_stack_id","stack_id","version");
}
