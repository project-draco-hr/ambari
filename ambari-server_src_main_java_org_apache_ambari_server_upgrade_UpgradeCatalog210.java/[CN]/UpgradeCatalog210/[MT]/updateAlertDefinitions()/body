{
  AmbariManagementController ambariManagementController=injector.getInstance(AmbariManagementController.class);
  AlertDefinitionDAO alertDefinitionDAO=injector.getInstance(AlertDefinitionDAO.class);
  Clusters clusters=ambariManagementController.getClusters();
  List<String> metricAlerts=Arrays.asList("namenode_cpu","namenode_hdfs_blocks_health","namenode_hdfs_capacity_utilization","namenode_rpc_latency","namenode_directory_status","datanode_health_summary","datanode_storage");
  List<String> mapredAlerts=Arrays.asList("mapreduce_history_server_cpu","mapreduce_history_server_rpc_latency");
  List<String> rmAlerts=Arrays.asList("yarn_resourcemanager_cpu","yarn_resourcemanager_rpc_latency");
  if (clusters != null) {
    Map<String,Cluster> clusterMap=clusters.getClusters();
    if (clusterMap != null && !clusterMap.isEmpty()) {
      for (      final Cluster cluster : clusterMap.values()) {
        for (        String alertName : metricAlerts) {
          AlertDefinitionEntity alertDefinitionEntity=alertDefinitionDAO.findByName(cluster.getClusterId(),alertName);
          if (alertDefinitionEntity != null) {
            String source=alertDefinitionEntity.getSource();
            JsonObject rootJson=new JsonParser().parse(source).getAsJsonObject();
            rootJson.get("uri").getAsJsonObject().addProperty("kerberos_keytab","{{hdfs-site/dfs.web.authentication.kerberos.keytab}}");
            rootJson.get("uri").getAsJsonObject().addProperty("kerberos_principal","{{hdfs-site/dfs.web.authentication.kerberos.principal}}");
            updateAlertDefinitionEntitySource(alertName,rootJson.toString());
          }
        }
        for (        String alertName : mapredAlerts) {
          AlertDefinitionEntity alertDefinitionEntity=alertDefinitionDAO.findByName(cluster.getClusterId(),alertName);
          if (alertDefinitionEntity != null) {
            String source=alertDefinitionEntity.getSource();
            JsonObject rootJson=new JsonParser().parse(source).getAsJsonObject();
            rootJson.get("uri").getAsJsonObject().addProperty("kerberos_keytab","{{mapred-site/mapreduce.jobhistory.webapp.spnego-keytab-file}}");
            rootJson.get("uri").getAsJsonObject().addProperty("kerberos_principal","{{mapred-site/mapreduce.jobhistory.webapp.spnego-principal}}");
            updateAlertDefinitionEntitySource(alertName,rootJson.toString());
          }
        }
        for (        String alertName : rmAlerts) {
          AlertDefinitionEntity alertDefinitionEntity=alertDefinitionDAO.findByName(cluster.getClusterId(),alertName);
          if (alertDefinitionEntity != null) {
            String source=alertDefinitionEntity.getSource();
            JsonObject rootJson=new JsonParser().parse(source).getAsJsonObject();
            rootJson.get("uri").getAsJsonObject().addProperty("kerberos_keytab","{{yarn-site/yarn.resourcemanager.webapp.spnego-keytab-file}}");
            rootJson.get("uri").getAsJsonObject().addProperty("kerberos_principal","{{yarn-site/yarn.resourcemanager.webapp.spnego-principal}}");
            updateAlertDefinitionEntitySource(alertName,rootJson.toString());
          }
        }
      }
    }
  }
}
