@patch.object(OSCheck, 'os_distribution', new=MagicMock(return_value=os_distro_value))
@patch.object(ActualConfigHandler.ActualConfigHandler, 'read_actual_component')
@patch.object(StatusCheck.StatusCheck, 'getStatus')
def test_build_predefined(self, getStatus_mock, read_actual_component_mock):
    read_actual_component_mock.return_value = 'actual_component'
    '\n    Tests that if live status us defined (using default parameter),\n    then no StatusCheck is executed\n    '
    config = AmbariConfig().getConfig()
    config.set('agent', 'prefix', (('ambari_agent' + os.sep) + 'dummy_files'))
    livestatus = LiveStatus('', 'SOME_UNKNOWN_SERVICE', 'SOME_UNKNOWN_COMPONENT', {}, config, {})
    result = livestatus.build(component_status='STARTED')
    result_str = pprint.pformat(result)
    self.assertEqual(result_str, "{'clusterName': '',\n 'componentName': 'SOME_UNKNOWN_COMPONENT',\n 'configurationTags': 'actual_component',\n 'msg': '',\n 'serviceName': 'SOME_UNKNOWN_SERVICE',\n 'stackVersion': '',\n 'status': 'STARTED'}")
    self.assertFalse(getStatus_mock.called)
