@patch.object(ActualConfigHandler.ActualConfigHandler, 'read_actual_component')
def test_build(self, read_actual_component_mock):
    for component in LiveStatus.COMPONENTS:
        config = AmbariConfig().getConfig()
        config.set('agent', 'prefix', (('ambari_agent' + os.sep) + 'dummy_files'))
        livestatus = LiveStatus('', component['serviceName'], component['componentName'], {}, config)
        livestatus.versionsHandler.versionsFilePath = (((('ambari_agent' + os.sep) + 'dummy_files') + os.sep) + 'dummy_current_stack')
        result = livestatus.build()
        print 'LiveStatus of {0}: {1}'.format(component['serviceName'], str(result))
        self.assertEquals((len(result) > 0), True, 'Livestatus should not be empty')
        if (component['componentName'] == 'GANGLIA_SERVER'):
            self.assertEquals(result['stackVersion'], '{"stackName":"HDP","stackVersion":"1.2.2"}', 'Livestatus should contain component stack version')
    read_actual_component_mock.return_value = 'some tags'
    livestatus = LiveStatus('c1', 'HDFS', 'HDFS_CLIENT', {}, config)
    result = livestatus.build()
    self.assertTrue((len(result) > 0), 'Livestatus should not be empty')
    self.assertTrue(result.has_key('configurationTags'))
