{
  if (entity == null) {
    throw new RuntimeException("Request entity cannot be null.");
  }
  this.requestId=entity.getRequestId();
  this.clusterId=entity.getClusterId();
  if (-1L != this.clusterId) {
    try {
      this.clusterName=clusters.getClusterById(this.clusterId).getClusterName();
    }
 catch (    AmbariException e) {
      LOG.debug("Could not load cluster with id {}, the cluster may have been removed for request {}",Long.valueOf(clusterId),Long.valueOf(requestId));
    }
  }
  this.createTime=entity.getCreateTime();
  this.startTime=entity.getStartTime();
  this.endTime=entity.getEndTime();
  this.exclusive=entity.isExclusive();
  this.requestContext=entity.getRequestContext();
  this.inputs=entity.getInputs();
  this.requestType=entity.getRequestType();
  this.commandName=entity.getCommandName();
  this.status=entity.getStatus();
  if (entity.getRequestScheduleEntity() != null) {
    this.requestScheduleId=entity.getRequestScheduleEntity().getScheduleId();
  }
  Collection<StageEntity> stageEntities=entity.getStages();
  if (stageEntities == null || stageEntities.isEmpty()) {
    stages=Collections.emptyList();
  }
 else {
    List<StageEntity> stageEntityList;
    if (stageEntities instanceof List) {
      stageEntityList=(List<StageEntity>)stageEntities;
    }
 else {
      stageEntityList=new ArrayList<StageEntity>(stageEntities);
    }
    ParallelLoopResult<Stage> loopResult=Parallel.forLoop(stageEntityList,new LoopBody<StageEntity,Stage>(){
      @Override public Stage run(      StageEntity stageEntity){
        return stageFactory.createExisting(stageEntity);
      }
    }
);
    List<Stage> stageList;
    if (loopResult.getIsCompleted()) {
      stageList=loopResult.getResult();
    }
 else {
      stageList=loopResult.getResult();
      for (int i=0; i < stages.size(); i++) {
        if (stageList.get(i) == null) {
          stageList.set(i,stageFactory.createExisting(stageEntityList.get(i)));
        }
      }
    }
    stages=stageList;
  }
  resourceFilters=filtersFromEntity(entity);
  operationLevel=operationLevelFromEntity(entity);
}
