@patch('os.path.exists')
@patch('ambari_server.setupMpacks.get_replay_log_file')
@patch('ambari_server.setupMpacks.upgrade_mpack')
@patch('ambari_server.setupMpacks.install_mpack')
def test_replay_mpack_logs(self, install_mpack_mock, upgrade_mpack_mock, get_replay_log_file_mock, os_path_exists_mock):
    test_directory = os.path.dirname(os.path.abspath(__file__))
    resources_directory = os.path.join(test_directory, os.pardir, 'resources')
    get_replay_log_file_mock.return_value = os.path.join(resources_directory, 'mpacks_replay.log')
    os_path_exists_mock.return_value = True
    replay_mpack_logs()
    install_replay_options = {'purge': True, 'mpack_command': 'install-mpack', 'mpack_path': '/var/lib/ambari-server/resources/mpacks/cache/hdp-1.0.0.0.tar.gz', 'force': False, 'verbose': True, }
    upgrade_replay_options = {'purge': False, 'mpack_command': 'upgrade-mpack', 'mpack_path': '/var/lib/ambari-server/resources/mpacks/cache/hdp-1.0.0.1.tar.gz', 'force': True, 'verbose': True, }
    install_mpack_mock.assert_has_calls([call(install_replay_options, replay_mode=True)])
    upgrade_mpack_mock.assert_has_calls([call(upgrade_replay_options, replay_mode=True)])
