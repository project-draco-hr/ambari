@patch.object(ambari_server, 'update_properties')
@patch.object(ambari_server, 'save_master_key')
@patch.object(ambari_server, 'get_validated_string_input')
@patch.object(ambari_server, 'get_YN_input')
@patch.object(ambari_server, 'get_ambari_properties')
def test_setup_master_key_persist(self, get_ambari_properties_method, get_YN_input_method, get_validated_string_input_method, save_master_key_method, update_properties_method):
    out = StringIO.StringIO()
    sys.stdout = out
    configs = {ambari_server.SECURITY_MASTER_KEY_LOCATION: 'filepath', ambari_server.SECURITY_KEYS_DIR: tempfile.gettempdir(), ambari_server.SECURITY_KEY_IS_PERSISTED: None, }
    get_ambari_properties_method.return_value = configs
    get_YN_input_method.return_value = True
    get_validated_string_input_method.return_value = 'aaa'
    save_master_key_method.return_value = None
    update_properties_method.return_value = None
    ambari_server.setup_master_key(False)
    self.assertTrue(get_YN_input_method.called)
    self.assertTrue(get_validated_string_input_method.called)
    self.assertTrue(save_master_key_method.called)
    self.assertTrue(update_properties_method.called)
    sys.stdout = sys.__stdout__
