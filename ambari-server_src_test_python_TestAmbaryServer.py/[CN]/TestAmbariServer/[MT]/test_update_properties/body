@patch('__builtin__.open')
@patch.object(ambari_server, 'search_file')
@patch.object(ambari_server, 'backup_file_in_temp')
def test_update_properties(self, backup_file_in_temp_mock, search_file_mock, open_mock):
    conf_file = 'ambari.properties'
    propertyMap = {'1': '1', '2': '2', }
    properties = MagicMock()
    f = MagicMock(name='file')
    search_file_mock.return_value = conf_file
    open_mock.return_value = f
    ambari_server.update_properties(properties, propertyMap)
    properties.store.assert_called_with(f.__enter__.return_value)
    backup_file_in_temp_mock.assert_called_with(conf_file)
    self.assertEquals(2, properties.removeOldProp.call_count)
    self.assertEquals(2, properties.process_pair.call_count)
    properties = MagicMock()
    backup_file_in_temp_mock.reset_mock()
    open_mock.reset_mock()
    ambari_server.update_properties(properties, None)
    properties.store.assert_called_with(f.__enter__.return_value)
    backup_file_in_temp_mock.assert_called_with(conf_file)
    self.assertFalse(properties.removeOldProp.called)
    self.assertFalse(properties.process_pair.called)
    pass
