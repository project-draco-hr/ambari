@patch.object(ambari_server, 'save_passwd_for_alias')
@patch.object(ambari_server, 'read_password')
def test_configure_database_password(self, read_password_method, save_passwd_for_alias_method):
    out = StringIO.StringIO()
    sys.stdout = out
    read_password_method.return_value = 'fakepasswd'
    save_passwd_for_alias_method.return_value = 0
    result = ambari_server.configure_database_password(True, None, True)
    self.assertTrue(save_passwd_for_alias_method.called)
    self.assertTrue(read_password_method.called)
    save_passwd_for_alias_method.assert_called_with(ambari_server.JDBC_RCA_PASSWORD_ALIAS, 'fakepasswd', None)
    self.assertEquals(('fakepasswd', ambari_server.get_alias_string(ambari_server.JDBC_RCA_PASSWORD_ALIAS)), result)
    save_passwd_for_alias_method.reset_mock()
    result = ambari_server.configure_database_password(False, None, True)
    self.assertFalse(save_passwd_for_alias_method.called)
    self.assertEquals(('fakepasswd', None), result)
    save_passwd_for_alias_method.reset_mock()
    save_passwd_for_alias_method.return_value = (-1)
    result = ambari_server.configure_database_password(True, None, True)
    self.assertEquals(('fakepasswd', None), result)
    sys.stdout = sys.__stdout__
