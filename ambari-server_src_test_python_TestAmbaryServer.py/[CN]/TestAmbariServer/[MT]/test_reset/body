@patch('__builtin__.raw_input')
@patch.object(ambari_server, 'setup_db')
@patch.object(ambari_server, 'print_info_msg')
@patch.object(ambari_server, 'run_os_command')
@patch.object(ambari_server, 'configure_postgres_username_password')
def test_reset(self, configure_postgres_username_password_mock, run_os_command_mock, print_info_msg_mock, setup_db_mock, raw_inputMock):
    out = StringIO.StringIO()
    sys.stdout = out
    args = MagicMock()
    raw_inputMock.return_value = 'No'
    rcode = ambari_server.reset(args)
    self.assertEqual((-1), rcode)
    raw_inputMock.return_value = 'yes'
    run_os_command_mock.return_value = (1, None, None)
    rcode = ambari_server.reset(args)
    self.assertEqual(1, rcode)
    run_os_command_mock.return_value = (0, None, None)
    rcode = ambari_server.reset(args)
    self.assertEqual(None, rcode)
    self.assertTrue(setup_db_mock.called)
    sys.stdout = sys.__stdout__
