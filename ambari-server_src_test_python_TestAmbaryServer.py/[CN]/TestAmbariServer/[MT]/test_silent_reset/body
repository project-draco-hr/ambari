@patch.object(ambari_server, 'setup_db')
@patch.object(ambari_server, 'print_info_msg')
@patch.object(ambari_server, 'run_os_command')
@patch.object(ambari_server, 'parse_properties_file')
@patch.object(ambari_server, 'is_root')
def test_silent_reset(self, is_root_mock, parse_properties_file_mock, run_os_command_mock, print_info_msg_mock, setup_db_mock):
    is_root_mock.return_value = True
    args = MagicMock()
    ambari_server.SILENT = True
    self.assertTrue(ambari_server.SILENT)
    run_os_command_mock.return_value = (0, None, None)

    def signal_handler(signum, frame):
        self.fail('Timed out!')
    signal.signal(signal.SIGALRM, signal_handler)
    signal.alarm(5)
    rcode = ambari_server.reset(args)
    signal.alarm(0)
    self.assertEqual(None, rcode)
    self.assertTrue(setup_db_mock.called)
