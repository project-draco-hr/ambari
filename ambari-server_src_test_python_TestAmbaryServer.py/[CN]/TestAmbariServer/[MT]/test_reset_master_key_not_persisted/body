@patch.object(ambari_server, 'save_passwd_for_alias')
@patch.object(ambari_server, 'configure_ldap_password')
@patch.object(ambari_server, 'configure_database_password')
@patch.object(ambari_server, 'is_alias_string')
@patch.object(ambari_server, 'get_master_key_ispersisted')
@patch.object(ambari_server, 'update_properties')
@patch.object(ambari_server, 'save_master_key')
@patch.object(ambari_server, 'get_validated_string_input')
@patch.object(ambari_server, 'get_YN_input')
@patch.object(ambari_server, 'search_file')
@patch.object(ambari_server, 'get_ambari_properties')
@patch.object(ambari_server, 'is_root')
def test_reset_master_key_not_persisted(self, is_root_method, get_ambari_properties_method, search_file_message, get_YN_input_method, get_validated_string_input_method, save_master_key_method, update_properties_method, get_master_key_ispersisted_method, is_alias_string_method, configure_database_password_method, configure_ldap_password_method, save_passwd_for_alias_method):
    out = StringIO.StringIO()
    sys.stdout = out
    is_root_method.return_value = True
    search_file_message.return_value = 'filepath'
    configs = {ambari_server.SECURITY_MASTER_KEY_LOCATION: 'filepath', ambari_server.SECURITY_KEYS_DIR: tempfile.gettempdir(), ambari_server.SECURITY_KEY_IS_PERSISTED: 'false', ambari_server.JDBC_PASSWORD_PROPERTY: '${alias=fakealias}', ambari_server.LDAP_MGR_PASSWORD_PROPERTY: '${alias=fakealias}', }
    get_ambari_properties_method.return_value = configs
    get_master_key_ispersisted_method.return_value = False
    get_validated_string_input_method.return_value = 'aaa'
    get_YN_input_method.return_value = False
    is_alias_string_method.return_value = True
    ambari_server.reset_master_key()
    self.assertFalse(save_master_key_method.called)
    self.assertTrue(get_YN_input_method.called)
    self.assertTrue(get_validated_string_input_method.called)
    self.assertTrue(update_properties_method.called)
    self.assertTrue(configure_database_password_method.called)
    self.assertTrue(configure_ldap_password_method.called)
    self.assertFalse(save_master_key_method.called)
    sys.stdout = sys.__stdout__
