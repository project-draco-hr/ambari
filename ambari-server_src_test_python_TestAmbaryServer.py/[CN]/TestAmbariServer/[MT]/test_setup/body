@patch.object(ambari_server, 'configure_os_settings')
@patch.object(ambari_server, 'download_jdk')
@patch.object(ambari_server, 'configure_postgres')
@patch.object(ambari_server, 'setup_db')
@patch.object(ambari_server, 'check_postgre_up')
@patch.object(ambari_server, 'check_iptables')
@patch.object(ambari_server, 'check_selinux')
@patch.object(ambari_server, 'check_sudo')
def test_setup(self, check_sudo_mock, check_selinux_mock, check_iptables_mock, check_postgre_up_mock, setup_db_mock, configure_postgres_mock, download_jdk_mock, configure_os_settings_mock):
    out = StringIO.StringIO()
    sys.stdout = out
    args = MagicMock()
    check_sudo_mock.return_value = 0
    check_selinux_mock.return_value = 0
    check_iptables_mock.return_value = (0, 'other')
    check_postgre_up_mock.return_value = 0
    setup_db_mock.return_value = 0
    configure_postgres_mock.return_value = 0
    download_jdk_mock.return_value = 0
    configure_os_settings_mock.return_value = 0
    result = ambari_server.setup(args)
    self.assertEqual(None, result)
    sys.stdout = sys.__stdout__
