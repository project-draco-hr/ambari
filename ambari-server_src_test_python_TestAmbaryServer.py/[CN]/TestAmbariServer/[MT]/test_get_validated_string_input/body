@patch('re.search')
@patch('__builtin__.raw_input')
@patch('getpass.getpass')
def test_get_validated_string_input(self, get_pass_method, raw_input_method, re_search_method):
    out = StringIO.StringIO()
    sys.stdout = out
    prompt = 'blabla'
    default = 'default_pass'
    pattern = 'pattern_pp'
    description = 'blabla2'
    is_pass = True
    get_pass_method.return_value = 'dfdsfdsfds'
    result = ambari_server.get_validated_string_input(prompt, default, pattern, description, is_pass)
    self.assertEquals(get_pass_method.return_value, result)
    get_pass_method.assure_called_once(prompt)
    self.assertFalse(raw_input_method.called)
    get_pass_method.reset_mock()
    raw_input_method.reset_mock()
    is_pass = False
    raw_input_method.return_value = 'dkf90ewuf0'
    result = ambari_server.get_validated_string_input(prompt, default, pattern, description, is_pass)
    self.assertEquals(raw_input_method.return_value, result)
    self.assertFalse(get_pass_method.called)
    raw_input_method.assure_called_once(prompt)
    sys.stdout = sys.__stdout__
