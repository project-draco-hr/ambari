{
  final Set<Resource> resources=new HashSet<Resource>();
  final Set<String> requestedIds=getRequestPropertyIds(request,predicate);
  final Set<Map<String,Object>> propertyMaps=getPropertyMaps(predicate);
  for (  Map<String,Object> propertyMap : propertyMaps) {
    final String clusterName=propertyMap.get(UPGRADE_CHECK_CLUSTER_NAME_PROPERTY_ID).toString();
    final PreUpgradeCheckRequest upgradeCheckRequest=new PreUpgradeCheckRequest(clusterName);
    if (propertyMap.containsKey(UPGRADE_CHECK_REPOSITORY_VERSION_PROPERTY_ID)) {
      upgradeCheckRequest.setRepositoryVersion(propertyMap.get(UPGRADE_CHECK_REPOSITORY_VERSION_PROPERTY_ID).toString());
    }
    for (    UpgradeCheck upgradeCheck : upgradeChecks.performPreUpgradeChecks(upgradeCheckRequest)) {
      final Resource resource=new ResourceImpl(Resource.Type.PreUpgradeCheck);
      setResourceProperty(resource,UPGRADE_CHECK_ID_PROPERTY_ID,upgradeCheck.getId(),requestedIds);
      setResourceProperty(resource,UPGRADE_CHECK_CHECK_PROPERTY_ID,upgradeCheck.getDescription(),requestedIds);
      setResourceProperty(resource,UPGRADE_CHECK_STATUS_PROPERTY_ID,upgradeCheck.getStatus(),requestedIds);
      setResourceProperty(resource,UPGRADE_CHECK_REASON_PROPERTY_ID,upgradeCheck.getFailReason(),requestedIds);
      setResourceProperty(resource,UPGRADE_CHECK_FAILED_ON_PROPERTY_ID,upgradeCheck.getFailedOn(),requestedIds);
      setResourceProperty(resource,UPGRADE_CHECK_CHECK_TYPE_PROPERTY_ID,upgradeCheck.getType(),requestedIds);
      setResourceProperty(resource,UPGRADE_CHECK_CLUSTER_NAME_PROPERTY_ID,upgradeCheck.getClusterName(),requestedIds);
      if (upgradeCheckRequest.getRepositoryVersion() != null) {
        setResourceProperty(resource,UPGRADE_CHECK_REPOSITORY_VERSION_PROPERTY_ID,upgradeCheckRequest.getRepositoryVersion(),requestedIds);
      }
      resources.add(resource);
    }
  }
  return resources;
}
