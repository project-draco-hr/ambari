{
  final Configuration configuration=EasyMock.createMock(Configuration.class);
  expect(configuration.getDefaultApiAuthenticatedUser()).andReturn(null).anyTimes();
  final AuditLogger auditLogger=EasyMock.createNiceMock(AuditLogger.class);
  expect(auditLogger.isEnabled()).andReturn(false).anyTimes();
  Injector injector=Guice.createInjector(new AbstractModule(){
    @Override protected void configure(){
      bind(Configuration.class).toInstance(configuration);
      bind(Users.class).toInstance(EasyMock.createMock(Users.class));
      bind(EntityManager.class).toInstance(EasyMock.createMock(EntityManager.class));
      bind(UserDAO.class).toInstance(EasyMock.createMock(UserDAO.class));
      bind(DBAccessor.class).toInstance(EasyMock.createMock(DBAccessor.class));
      bind(PasswordEncoder.class).toInstance(EasyMock.createMock(PasswordEncoder.class));
      bind(OsFamily.class).toInstance(EasyMock.createMock(OsFamily.class));
      bind(AuditLogger.class).toInstance(auditLogger);
    }
  }
);
  injector.injectMembers(filter);
  replay(configuration,auditLogger);
}
