'\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n"License"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n'
from resource_management import *
from resource_management.libraries.functions.version import format_hdp_stack_version, compare_versions
from resource_management.libraries.functions.default import default
import status_params
config = Script.get_config()
exec_tmp_dir = status_params.tmp_dir
security_enabled = status_params.security_enabled
stack_version_unformatted = str(config['hostLevelParams']['stack_version'])
hdp_stack_version = format_hdp_stack_version(stack_version_unformatted)
has_secure_user_auth = True
if ((hdp_stack_version != '') and (compare_versions(hdp_stack_version, '2.2') == 0)):
    has_secure_user_auth = False
log_dir = config['configurations']['accumulo-env']['accumulo_log_dir']
conf_dir = status_params.conf_dir
server_conf_dir = '/etc/accumulo/conf/server'
client_script = '/usr/hdp/current/accumulo-client/bin/accumulo'
daemon_script = format('ACCUMULO_CONF_DIR={server_conf_dir} {client_script}')
hadoop_prefix = '/usr/hdp/current/hadoop-client'
hadoop_bin_dir = format('{hadoop_prefix}/bin')
hadoop_conf_dir = '/etc/hadoop/conf'
zookeeper_home = '/usr/hdp/current/zookeeper-client'
accumulo_user = status_params.accumulo_user
user_group = config['configurations']['cluster-env']['user_group']
pid_dir = status_params.pid_dir
java64_home = config['hostLevelParams']['java_home']
master_heapsize = config['configurations']['accumulo-env']['master_heapsize']
tserver_heapsize = config['configurations']['accumulo-env']['tserver_heapsize']
monitor_heapsize = config['configurations']['accumulo-env']['monitor_heapsize']
gc_heapsize = config['configurations']['accumulo-env']['gc_heapsize']
other_heapsize = config['configurations']['accumulo-env']['other_heapsize']
env_sh_template = config['configurations']['accumulo-env']['content']
server_env_sh_template = config['configurations']['accumulo-env']['server_content']
instance_name = config['configurations']['accumulo-env']['accumulo_instance_name']
instance_secret = config['configurations']['accumulo-env']['instance_secret']
root_password = config['configurations']['accumulo-env']['accumulo_root_password']
instance_volumes = config['configurations']['accumulo-site']['instance.volumes']
parent_dir = instance_volumes[0:instance_volumes.rfind('/')]
trace_user = config['configurations']['accumulo-site']['trace.user']
trace_password = config['configurations']['accumulo-env']['trace_password']
credential_provider = (parent_dir.replace('hdfs://', 'jceks://hdfs@') + '/accumulo-site.jceks')
smoke_test_user = config['configurations']['cluster-env']['smokeuser']
smoke_test_password = 'smoke'
smokeuser_principal = config['configurations']['cluster-env']['smokeuser_principal_name']
smoke_user_keytab = config['configurations']['cluster-env']['smokeuser_keytab']
log4j_props = config['configurations']['accumulo-log4j']['content']
audit_log_level = config['configurations']['accumulo-log4j']['audit_log_level']
monitor_forwarding_log_level = config['configurations']['accumulo-log4j']['monitor_forwarding_log_level']
debug_log_size = config['configurations']['accumulo-log4j']['debug_log_size']
debug_num_logs = config['configurations']['accumulo-log4j']['debug_num_logs']
info_log_size = config['configurations']['accumulo-log4j']['info_log_size']
info_num_logs = config['configurations']['accumulo-log4j']['info_num_logs']
ganglia_server_hosts = default('/clusterHostInfo/ganglia_server_host', [])
ganglia_server_host = ('' if (len(ganglia_server_hosts) == 0) else ganglia_server_hosts[0])
ams_collector_hosts = default('/clusterHostInfo/metrics_collector_hosts', [])
has_metric_collector = (not (len(ams_collector_hosts) == 0))
if has_metric_collector:
    metric_collector_host = ams_collector_hosts[0]
    metric_collector_port = default('/configurations/ams-site/timeline.metrics.service.webapp.address', '0.0.0.0:6188')
    if (metric_collector_port and (metric_collector_port.find(':') != (-1))):
        metric_collector_port = metric_collector_port.split(':')[1]
    pass
accumulo_user_keytab = config['configurations']['accumulo-env']['accumulo_user_keytab']
accumulo_principal_name = config['configurations']['accumulo-env']['accumulo_principal_name']
kinit_path_local = status_params.kinit_path_local
if security_enabled:
    kinit_cmd = format('{kinit_path_local} -kt {accumulo_user_keytab} {accumulo_principal_name};')
else:
    kinit_cmd = ''
hostname = status_params.hostname
hdfs_user_keytab = config['configurations']['hadoop-env']['hdfs_user_keytab']
hdfs_user = config['configurations']['hadoop-env']['hdfs_user']
hdfs_principal_name = config['configurations']['hadoop-env']['hdfs_principal_name']
import functools
HdfsDirectory = functools.partial(HdfsDirectory, conf_dir=hadoop_conf_dir, hdfs_user=hdfs_user, security_enabled=security_enabled, keytab=hdfs_user_keytab, kinit_path_local=kinit_path_local, bin_dir=hadoop_bin_dir)
