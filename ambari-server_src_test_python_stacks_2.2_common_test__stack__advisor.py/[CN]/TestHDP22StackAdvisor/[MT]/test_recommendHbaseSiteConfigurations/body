def test_recommendHbaseSiteConfigurations(self):
    servicesList = ['HBASE']
    configurations = {}
    components = []
    hosts = {'items': [{'Hosts': {'cpu_count': 6, 'total_mem': 50331648, 'disk_info': [{'mountpoint': '/', }, {'mountpoint': '/dev/shm', }, {'mountpoint': '/vagrant', }, {'mountpoint': '/', }, {'mountpoint': '/dev/shm', }, {'mountpoint': '/vagrant', }], }, }], }
    services = {'services': [], 'configurations': {'hbase-env': {'properties': {'phoenix_sql_enabled': 'true', }, }, 'hbase-site': {'properties': {}, }, }, }
    expected = {'hbase-site': {'properties': {'hbase.regionserver.wal.codec': 'org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec', 'hbase.rpc.controllerfactory.class': 'org.apache.hadoop.hbase.ipc.controller.ServerRpcControllerFactory', 'phoenix.functions.allowUserDefinedFunctions': 'true', 'hbase.regionserver.global.memstore.size': '0.4', 'hbase.coprocessor.region.classes': 'org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint', }, 'property_attributes': {'hbase.coprocessor.regionserver.classes': {'delete': 'true', }, 'hbase.bucketcache.size': {'delete': 'true', }, 'hbase.bucketcache.percentage.in.combinedcache': {'delete': 'true', }, 'hbase.coprocessor.regionserver.classes': {'delete': 'true', }, 'hbase.bucketcache.ioengine': {'delete': 'true', }, }, }, 'hbase-env': {'properties': {'hbase_master_heapsize': '8192', 'hbase_regionserver_heapsize': '8192', }, 'property_attributes': {'hbase_max_direct_memory_size': {'delete': 'true', }, }, }, }
    clusterData = self.stackAdvisor.getConfigurationClusterSummary(servicesList, hosts, components, None)
    self.assertEquals(clusterData['hbaseRam'], 8)
    self.stackAdvisor.recommendHBASEConfigurations(configurations, clusterData, services, None)
    self.assertEquals(configurations, expected)
    services['configurations']['hbase-env']['properties']['phoenix_sql_enabled'] = 'false'
    expected['hbase-site']['properties']['hbase.regionserver.wal.codec'] = 'org.apache.hadoop.hbase.regionserver.wal.WALCellCodec'
    expected['hbase-site']['property_attributes']['hbase.rpc.controllerfactory.class'] = {'delete': 'true', }
    expected['hbase-site']['property_attributes']['hbase.coprocessor.regionserver.classes'] = {'delete': 'true', }
    expected['hbase-site']['property_attributes']['phoenix.functions.allowUserDefinedFunctions'] = {'delete': 'true', }
    self.stackAdvisor.recommendHBASEConfigurations(configurations, clusterData, services, None)
    self.assertEquals(configurations, expected)
    hosts['items'][0]['Hosts']['host_name'] = 'host1'
    services['services'].append({'StackServices': {'service_name': 'HBASE', 'service_version': '2.6.0.2.2', }, 'components': [{'href': '/api/v1/stacks/HDP/versions/2.2/services/HBASE/components/HBASE_MASTER', 'StackServiceComponents': {'advertise_version': 'true', 'cardinality': '1+', 'component_name': 'HBASE_MASTER', 'custom_commands': [], 'display_name': 'DataNode', 'is_client': 'false', 'is_master': 'false', 'service_name': 'HBASE', 'stack_name': 'HDP', 'stack_version': '2.2', 'hostnames': ['host1'], }, 'dependencies': [], }], })
    services['configurations']['hbase-env']['properties']['phoenix_sql_enabled'] = 'false'
    expected['hbase-site']['properties']['hbase.regionserver.wal.codec'] = 'org.apache.hadoop.hbase.regionserver.wal.WALCellCodec'
    expected['hbase-site']['property_attributes']['hbase.rpc.controllerfactory.class'] = {'delete': 'true', }
    expected['hbase-site']['property_attributes']['hbase.coprocessor.regionserver.classes'] = {'delete': 'true', }
    expected['hbase-site']['property_attributes']['phoenix.functions.allowUserDefinedFunctions'] = {'delete': 'true', }
    expected['hbase-env']['property_attributes']['hbase_master_heapsize'] = {'maximum': '49152', }
    self.stackAdvisor.recommendHBASEConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['configurations']['hbase-site']['properties']['hbase.security.authentication'] = 'kerberos'
    expected['hbase-site']['properties']['hbase.coprocessor.region.classes'] = 'org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint'
    self.stackAdvisor.recommendHBASEConfigurations(configurations, clusterData, services, None)
    self.assertEquals(configurations, expected)
    services['configurations']['hbase-site']['properties']['hbase.security.authentication'] = 'simple'
    expected['hbase-site']['properties']['hbase.coprocessor.region.classes'] = 'org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint'
    self.stackAdvisor.recommendHBASEConfigurations(configurations, clusterData, services, None)
    self.assertEquals(configurations, expected)
    configurations['hbase-site']['properties'].pop('hbase.coprocessor.region.classes', None)
    services['configurations']['hbase-site']['properties']['hbase.security.authentication'] = 'kerberos'
    services['configurations']['hbase-site']['properties']['hbase.coprocessor.region.classes'] = 'a.b.c.d'
    expected['hbase-site']['properties']['hbase.coprocessor.region.classes'] = 'a.b.c.d,org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint'
    self.stackAdvisor.recommendHBASEConfigurations(configurations, clusterData, services, None)
    self.assertEquals(configurations, expected)
    configurations['hbase-site']['properties'].pop('hbase.coprocessor.region.classes', None)
    services['configurations']['hbase-site']['properties'].pop('hbase.coprocessor.region.classes', None)
    services['configurations']['hbase-site']['properties']['hbase.security.authentication'] = 'kerberos'
    services['configurations']['hbase-site']['properties']['hbase.security.authorization'] = 'true'
    expected['hbase-site']['properties']['hbase.coprocessor.master.classes'] = 'org.apache.hadoop.hbase.security.access.AccessController'
    expected['hbase-site']['properties']['hbase.coprocessor.region.classes'] = 'org.apache.hadoop.hbase.security.access.AccessController,org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint'
    expected['hbase-site']['properties']['hbase.coprocessor.regionserver.classes'] = 'org.apache.hadoop.hbase.security.access.AccessController'
    self.stackAdvisor.recommendHBASEConfigurations(configurations, clusterData, services, None)
    self.assertEquals(configurations, expected)
