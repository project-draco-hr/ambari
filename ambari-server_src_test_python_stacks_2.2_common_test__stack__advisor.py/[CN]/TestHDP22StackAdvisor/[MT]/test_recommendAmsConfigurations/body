def test_recommendAmsConfigurations(self):
    configurations = {}
    clusterData = {}
    services = {'services': [{'StackServices': {'service_name': 'AMBARI_METRICS', }, 'components': [{'StackServiceComponents': {'component_name': 'METRICS_COLLECTOR', 'hostnames': ['host1'], }, }, {'StackServiceComponents': {'component_name': 'METRICS_MONITOR', 'hostnames': ['host1'], }, }], }], 'configurations': [], }
    hosts = {'items': [{'Hosts': {'host_name': 'host1', }, }], }
    expected = {'ams-hbase-env': {'properties': {'hbase_master_xmn_size': '128m', 'hbase_master_heapsize': '512m', }, }, 'ams-env': {'properties': {'metrics_collector_heapsize': '512m', }, }, 'ams-hbase-site': {'properties': {'hbase.regionserver.global.memstore.lowerLimit': '0.3', 'hbase.regionserver.global.memstore.upperLimit': '0.35', 'hbase.hregion.memstore.flush.size': '134217728', 'hfile.block.cache.size': '0.3', 'hbase.rootdir': 'file:///var/lib/ambari-metrics-collector/hbase', 'hbase.tmp.dir': '/var/lib/ambari-metrics-collector/hbase-tmp', }, }, 'ams-site': {'properties': {'timeline.metrics.cluster.aggregate.splitpoints': ' ', 'timeline.metrics.host.aggregate.splitpoints': ' ', 'timeline.metrics.host.aggregator.ttl': '86400', }, }, }
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    for i in range(2, 201):
        hosts['items'].extend([{'Hosts': {'host_name': ('host' + str(i)), }, }])
    services['services'] = [{'StackServices': {'service_name': 'AMBARI_METRICS', }, 'components': [{'StackServiceComponents': {'component_name': 'METRICS_COLLECTOR', 'hostnames': ['host1'], }, }, {'StackServiceComponents': {'component_name': 'METRICS_MONITOR', 'hostnames': [('host' + str(i)) for i in range(1, 201)], }, }], }]
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '1408m'
    expected['ams-env']['properties']['metrics_collector_heapsize'] = '512m'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['services'] = [{'StackServices': {'service_name': 'HDFS', }, 'components': [{'StackServiceComponents': {'component_name': 'NAMENODE', 'hostnames': ['host1'], }, }, {'StackServiceComponents': {'component_name': 'DATANODE', 'hostnames': [('host' + str(i)) for i in range(1, 201)], }, }], }, {'StackServices': {'service_name': 'YARN', }, 'components': [{'StackServiceComponents': {'component_name': 'RESOURCEMANAGER', 'hostnames': ['host1'], }, }, {'StackServiceComponents': {'component_name': 'NODEMANAGER', 'hostnames': [('host' + str(i)) for i in range(1, 201)], }, }], }, {'StackServices': {'service_name': 'AMBARI_METRICS', }, 'components': [{'StackServiceComponents': {'component_name': 'METRICS_COLLECTOR', 'hostnames': ['host1'], }, }, {'StackServiceComponents': {'component_name': 'METRICS_MONITOR', 'hostnames': [('host' + str(i)) for i in range(1, 201)], }, }], }]
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '2432m'
    expected['ams-hbase-env']['properties']['hbase_master_xmn_size'] = '256m'
    expected['ams-env']['properties']['metrics_collector_heapsize'] = '640m'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['changed-configurations'] = [{'type': 'ams-hbase-env', 'name': 'hbase_master_heapsize', }]
    services['configurations'] = {'ams-hbase-site': {'properties': {}, }, 'ams-hbase-env': {'properties': {}, }, }
    services['configurations']['ams-hbase-env']['properties']['hbase_master_heapsize'] = '512m'
    services['configurations']['ams-hbase-site']['properties']['hbase.regionserver.global.memstore.lowerLimit'] = '0.3'
    services['configurations']['ams-hbase-site']['properties']['hbase.hregion.memstore.flush.size'] = '134217728'
    expected['ams-site']['properties']['timeline.metrics.host.aggregate.splitpoints'] = ' '
    expected['ams-site']['properties']['timeline.metrics.cluster.aggregate.splitpoints'] = ' '
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '512m'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['configurations']['ams-hbase-env']['properties']['hbase_master_heapsize'] = '4096m'
    expected['ams-site']['properties']['timeline.metrics.host.aggregate.splitpoints'] = 'jvm.JvmMetrics.MemHeapCommittedM,regionserver.Server.Increment_median'
    expected['ams-site']['properties']['timeline.metrics.cluster.aggregate.splitpoints'] = ' '
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '4096m'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['configurations']['ams-hbase-env']['properties']['hbase_master_heapsize'] = '8192m'
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '8192m'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(len(configurations['ams-site']['properties']['timeline.metrics.host.aggregate.splitpoints'].split(',')), 10)
    self.assertEquals(len(configurations['ams-site']['properties']['timeline.metrics.cluster.aggregate.splitpoints'].split(',')), 2)
    services['changed-configurations'] = [{'type': 'ams-hbase-env', 'name': 'hbase_regionserver_heapsize', }]
    services['configurations']['ams-hbase-site']['properties']['hbase.rootdir'] = 'hdfs://host1/amshbase'
    expected['ams-hbase-site']['properties']['hbase.rootdir'] = 'hdfs://host1/amshbase'
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '512m'
    expected['ams-hbase-site']['properties']['dfs.client.read.shortcircuit'] = 'true'
    services['configurations']['ams-hbase-env']['properties']['hbase_regionserver_heapsize'] = '512m'
    expected['ams-site']['properties']['timeline.metrics.host.aggregate.splitpoints'] = ' '
    expected['ams-site']['properties']['timeline.metrics.cluster.aggregate.splitpoints'] = ' '
    expected['ams-hbase-env']['properties']['hbase_regionserver_heapsize'] = '512m'
    expected['ams-hbase-env']['properties']['regionserver_xmn_size'] = '256m'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['configurations']['ams-hbase-env']['properties']['hbase_regionserver_heapsize'] = '8192m'
    expected['ams-hbase-env']['properties']['hbase_regionserver_heapsize'] = '8192m'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(len(configurations['ams-site']['properties']['timeline.metrics.host.aggregate.splitpoints'].split(',')), 10)
    self.assertEquals(len(configurations['ams-site']['properties']['timeline.metrics.cluster.aggregate.splitpoints'].split(',')), 2)
