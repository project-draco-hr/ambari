def test_recommendAmsConfigurations(self):
    configurations = {}
    clusterData = {}
    services = {'services': [{'StackServices': {'service_name': 'AMBARI_METRICS', }, 'components': [{'StackServiceComponents': {'component_name': 'METRICS_COLLECTOR', 'hostnames': ['host1'], }, }, {'StackServiceComponents': {'component_name': 'METRICS_MONITOR', 'hostnames': ['host1'], }, }], }], 'configurations': [], }
    hosts = {'items': [{'Hosts': {'host_name': 'host1', }, }], }
    expected = {'ams-hbase-env': {'properties': {'hbase_master_xmn_size': '192', 'hbase_master_heapsize': '512', 'hbase_regionserver_heapsize': '768', }, }, 'ams-grafana-env': {'properties': {}, 'property_attributes': {'metrics_grafana_password': {'visible': 'false', }, }, }, 'ams-env': {'properties': {'metrics_collector_heapsize': '512', }, }, 'ams-hbase-site': {'properties': {'phoenix.coprocessor.maxMetaDataCacheSize': '20480000', 'hbase.regionserver.global.memstore.lowerLimit': '0.3', 'hbase.regionserver.global.memstore.upperLimit': '0.35', 'hbase.hregion.memstore.flush.size': '134217728', 'hfile.block.cache.size': '0.3', 'hbase.cluster.distributed': 'false', 'hbase.rootdir': 'file:///var/lib/ambari-metrics-collector/hbase', 'hbase.tmp.dir': '/var/lib/ambari-metrics-collector/hbase-tmp', 'hbase.zookeeper.property.clientPort': '61181', }, }, 'ams-site': {'properties': {'timeline.metrics.cluster.aggregate.splitpoints': 'master.FileSystem.MetaHlogSplitTime_75th_percentile', 'timeline.metrics.host.aggregate.splitpoints': 'master.FileSystem.MetaHlogSplitTime_75th_percentile', 'timeline.metrics.host.aggregator.ttl': '86400', 'timeline.metrics.service.handler.thread.count': '20', 'timeline.metrics.service.webapp.address': 'host1:6188', 'timeline.metrics.service.watcher.disabled': 'false', }, }, }
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    for i in range(2, 201):
        hosts['items'].extend([{'Hosts': {'host_name': ('host' + str(i)), }, }])
    services['services'] = [{'StackServices': {'service_name': 'AMBARI_METRICS', }, 'components': [{'StackServiceComponents': {'component_name': 'METRICS_COLLECTOR', 'hostnames': ['host1'], }, }, {'StackServiceComponents': {'component_name': 'METRICS_MONITOR', 'hostnames': [('host' + str(i)) for i in range(1, 201)], }, }], }]
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '1408'
    expected['ams-hbase-env']['properties']['hbase_master_xmn_size'] = '320'
    expected['ams-env']['properties']['metrics_collector_heapsize'] = '512'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['services'] = [{'StackServices': {'service_name': 'HDFS', }, 'components': [{'StackServiceComponents': {'component_name': 'NAMENODE', 'hostnames': ['host1'], }, }, {'StackServiceComponents': {'component_name': 'DATANODE', 'hostnames': [('host' + str(i)) for i in range(1, 201)], }, }], }, {'StackServices': {'service_name': 'YARN', }, 'components': [{'StackServiceComponents': {'component_name': 'RESOURCEMANAGER', 'hostnames': ['host1'], }, }, {'StackServiceComponents': {'component_name': 'NODEMANAGER', 'hostnames': [('host' + str(i)) for i in range(1, 201)], }, }], }, {'StackServices': {'service_name': 'AMBARI_METRICS', }, 'components': [{'StackServiceComponents': {'component_name': 'METRICS_COLLECTOR', 'hostnames': ['host1'], }, }, {'StackServiceComponents': {'component_name': 'METRICS_MONITOR', 'hostnames': [('host' + str(i)) for i in range(1, 201)], }, }], }]
    expected['ams-site']['properties']['timeline.metrics.host.aggregate.splitpoints'] = 'master.Server.numDeadRegionServers'
    expected['ams-site']['properties']['timeline.metrics.cluster.aggregate.splitpoints'] = 'master.Server.numDeadRegionServers'
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '2432'
    expected['ams-hbase-env']['properties']['hbase_master_xmn_size'] = '512'
    expected['ams-env']['properties']['metrics_collector_heapsize'] = '640'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['changed-configurations'] = [{'type': 'ams-hbase-env', 'name': 'hbase_master_heapsize', 'old_value': '1024', }]
    services['configurations'] = {'core-site': {'properties': {}, }, 'ams-site': {'properties': {}, }, 'ams-hbase-site': {'properties': {}, }, 'ams-hbase-env': {'properties': {}, }, }
    services['configurations']['ams-hbase-env']['properties']['hbase_master_heapsize'] = '512'
    services['configurations']['ams-hbase-site']['properties']['hbase.regionserver.global.memstore.upperLimit'] = '0.4'
    services['configurations']['ams-hbase-site']['properties']['hbase.hregion.memstore.flush.size'] = '134217728'
    expected['ams-site']['properties']['timeline.metrics.host.aggregate.splitpoints'] = 'master.Server.numDeadRegionServers'
    expected['ams-site']['properties']['timeline.metrics.cluster.aggregate.splitpoints'] = 'master.Server.numDeadRegionServers'
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '512'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['configurations']['ams-hbase-env']['properties']['hbase_master_heapsize'] = '4096'
    expected['ams-site']['properties']['timeline.metrics.host.aggregate.splitpoints'] = 'dfs.datanode.WriteBlockOpNumOps,mapred.ShuffleMetrics.ShuffleOutputsFailed,read_bps,rpcdetailed.rpcdetailed.GetContainerStatusesAvgTime'
    expected['ams-site']['properties']['timeline.metrics.cluster.aggregate.splitpoints'] = 'master.Server.numDeadRegionServers'
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '4096'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['configurations']['ams-hbase-env']['properties']['hbase_master_heapsize'] = '8192'
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '8192'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(len(configurations['ams-site']['properties']['timeline.metrics.host.aggregate.splitpoints'].split(',')), 13)
    self.assertEquals(len(configurations['ams-site']['properties']['timeline.metrics.cluster.aggregate.splitpoints'].split(',')), 2)
    services['changed-configurations'] = [{'type': 'ams-hbase-env', 'name': 'hbase_regionserver_heapsize', 'old_value': '512', }]
    services['configurations']['ams-site']['properties']['timeline.metrics.service.operation.mode'] = 'distributed'
    services['configurations']['core-site']['properties']['fs.defaultFS'] = 'hdfs://host1:8020'
    expected['ams-hbase-site']['properties']['hbase.cluster.distributed'] = 'true'
    expected['ams-hbase-site']['properties']['hbase.rootdir'] = 'hdfs://host1:8020/user/ams/hbase'
    expected['ams-hbase-site']['properties']['hbase.zookeeper.property.clientPort'] = '2181'
    expected['ams-hbase-env']['properties']['hbase_master_heapsize'] = '512'
    expected['ams-hbase-site']['properties']['dfs.client.read.shortcircuit'] = 'true'
    services['configurations']['ams-hbase-env']['properties']['hbase_regionserver_heapsize'] = '512'
    expected['ams-site']['properties']['timeline.metrics.host.aggregate.splitpoints'] = 'master.Server.numDeadRegionServers'
    expected['ams-site']['properties']['timeline.metrics.cluster.aggregate.splitpoints'] = 'master.Server.numDeadRegionServers'
    expected['ams-hbase-env']['properties']['hbase_regionserver_heapsize'] = '512'
    expected['ams-hbase-env']['properties']['hbase_master_xmn_size'] = '102'
    expected['ams-hbase-env']['properties']['regionserver_xmn_size'] = '384'
    expected['ams-site']['properties']['timeline.metrics.host.aggregator.ttl'] = '259200'
    expected['ams-site']['properties']['timeline.metrics.service.watcher.disabled'] = 'true'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['configurations']['ams-hbase-env']['properties']['hbase_regionserver_heapsize'] = '8192'
    expected['ams-hbase-env']['properties']['hbase_regionserver_heapsize'] = '8192'
    self.stackAdvisor.recommendAmsConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(len(configurations['ams-site']['properties']['timeline.metrics.host.aggregate.splitpoints'].split(',')), 13)
    self.assertEquals(len(configurations['ams-site']['properties']['timeline.metrics.cluster.aggregate.splitpoints'].split(',')), 2)
