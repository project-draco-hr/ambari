def test_validateHiveServer2Configurations(self):
    properties = {'hive_security_authorization': 'None', 'hive.exec.orc.default.stripe.size': '8388608', 'hive.tez.container.size': '2048', 'hive.tez.java.opts': '-Xmx300m', 'hive.auto.convert.join.noconditionaltask.size': '1100000000', }
    recommendedDefaults = {'hive.tez.container.size': '1024', 'hive.tez.java.opts': '-Xmx256m', 'hive.auto.convert.join.noconditionaltask.size': '1000000000', }
    configurations = {'hive-site': {'properties': {'hive.security.authorization.enabled': 'true', }, }, 'hive-env': {'properties': {'hive_security_authorization': 'ranger', }, }, }
    services = {'services': [{'StackServices': {'service_name': 'RANGER', }, }], }
    res_expected = [{'config-type': 'hiveserver2-site', 'message': 'If Ranger Hive Plugin is enabled. hive.security.authorization.manager under hiveserver2-site needs to be set to com.xasecure.authorization.hive.authorizer.XaSecureHiveAuthorizerFactory', 'type': 'configuration', 'config-name': 'hive.security.authorization.manager', 'level': 'WARN', }, {'config-type': 'hiveserver2-site', 'message': 'If Ranger Hive Plugin is enabled. hive.security.authenticator.manager under hiveserver2-site needs to be set to org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator', 'type': 'configuration', 'config-name': 'hive.security.authenticator.manager', 'level': 'WARN', }, {'config-type': 'hiveserver2-site', 'message': 'If Ranger Hive Plugin is enabled. hive.conf.restricted.list under hiveserver2-site needs to contain missing value hive.security.authorization.enabled,hive.security.authorization.manager,hive.security.authenticator.manager', 'type': 'configuration', 'config-name': 'hive.conf.restricted.list', 'level': 'WARN', }]
    res = self.stackAdvisor.validateHiveServer2Configurations(properties, recommendedDefaults, configurations, services, {})
    self.assertEquals(res, res_expected)
