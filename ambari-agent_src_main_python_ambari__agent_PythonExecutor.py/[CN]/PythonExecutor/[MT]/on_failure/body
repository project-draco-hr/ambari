def on_failure(self, pythonCommand, result):
    '\n    Log some useful information after task failure.\n    '
    logger.info(((('Command ' + pprint.pformat(pythonCommand)) + ' failed with exitcode=') + str(result['exitcode'])))
    if OSCheck.is_windows_family():
        cmd_list = ['WMIC path win32_process get Caption,Processid,Commandline', 'netstat -an']
    else:
        cmd_list = ['ps faux', 'netstat -tulpn']
    shell_runner = shellRunner()
    for cmd in cmd_list:
        ret = shell_runner.run(cmd)
        logger.info("Command '{0}' returned {1}. {2}{3}".format(cmd, ret['exitCode'], ret['error'], ret['output']))
