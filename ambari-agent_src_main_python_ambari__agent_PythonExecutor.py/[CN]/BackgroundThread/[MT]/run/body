def run(self):
    (process_out, process_err) = self.pythonExecutor.open_subporcess_files(self.holder.out_file, self.holder.err_file, True)
    logger.info(('Starting process command %s' % self.holder.command))
    process = self.pythonExecutor.launch_python_subprocess(self.holder.command, process_out, process_err)
    logger.info(('Process has been started. Pid = %s' % process.pid))
    self.holder.handle.pid = process.pid
    self.holder.handle.status = BackgroundCommandExecutionHandle.RUNNING_STATUS
    self.holder.handle.on_background_command_started(self.holder.handle.command['taskId'], process.pid)
    process.communicate()
    self.holder.handle.exitCode = process.returncode
    process_condenced_result = self.pythonExecutor.prepare_process_result(process, self.holder.out_file, self.holder.err_file, self.holder.structured_out_file)
    logger.info(('Calling callback with args %s' % process_condenced_result))
    self.holder.handle.on_background_command_complete_callback(process_condenced_result, self.holder.handle)
    logger.info(('Exiting from thread for holder pid %s' % self.holder.handle.pid))
