{
  clusterGlobalLock.readLock().lock();
  try {
    readWriteLock.writeLock().lock();
    try {
      for (      Entry<String,Config> entry : configs.entrySet()) {
        boolean contains=false;
        for (        ServiceConfigMappingEntity serviceConfigMappingEntity : serviceEntity.getServiceConfigMappings()) {
          if (entry.getKey().equals(serviceConfigMappingEntity.getConfigType())) {
            contains=true;
            serviceConfigMappingEntity.setTimestamp(new Date().getTime());
            serviceConfigMappingEntity.setVersionTag(entry.getValue().getVersionTag());
          }
        }
        if (!contains) {
          ServiceConfigMappingEntity newEntity=new ServiceConfigMappingEntity();
          newEntity.setClusterId(serviceEntity.getClusterId());
          newEntity.setServiceName(serviceEntity.getServiceName());
          newEntity.setConfigType(entry.getKey());
          newEntity.setVersionTag(entry.getValue().getVersionTag());
          newEntity.setTimestamp(new Date().getTime());
          newEntity.setServiceEntity(serviceEntity);
          serviceEntity.getServiceConfigMappings().add(newEntity);
        }
        this.desiredConfigs.put(entry.getKey(),entry.getValue().getVersionTag());
      }
      saveIfPersisted();
    }
  finally {
      readWriteLock.writeLock().unlock();
    }
  }
  finally {
    clusterGlobalLock.readLock().unlock();
  }
}
