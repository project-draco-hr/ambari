{
  this.cluster=cluster;
  this.clusterDAO=clusterDAO;
  this.clusterServiceDAO=clusterServiceDAO;
  this.serviceDesiredStateDAO=serviceDesiredStateDAO;
  this.serviceComponentFactory=serviceComponentFactory;
  this.stackDAO=stackDAO;
  this.eventPublisher=eventPublisher;
  this.serviceName=serviceName;
  ClusterServiceEntity serviceEntity=new ClusterServiceEntity();
  serviceEntity.setClusterId(cluster.getClusterId());
  serviceEntity.setServiceName(serviceName);
  ServiceDesiredStateEntity serviceDesiredStateEntity=new ServiceDesiredStateEntity();
  serviceDesiredStateEntity.setServiceName(serviceName);
  serviceDesiredStateEntity.setClusterId(cluster.getClusterId());
  serviceDesiredStateEntityPK=getServiceDesiredStateEntityPK(serviceDesiredStateEntity);
  serviceEntityPK=getServiceEntityPK(serviceEntity);
  serviceDesiredStateEntity.setClusterServiceEntity(serviceEntity);
  serviceEntity.setServiceDesiredStateEntity(serviceDesiredStateEntity);
  StackId stackId=cluster.getDesiredStackVersion();
  StackEntity stackEntity=stackDAO.find(stackId.getStackName(),stackId.getStackVersion());
  serviceDesiredStateEntity.setDesiredStack(stackEntity);
  ServiceInfo sInfo=ambariMetaInfo.getService(stackId.getStackName(),stackId.getStackVersion(),serviceName);
  isClientOnlyService=sInfo.isClientOnlyService();
  persist(serviceEntity);
}
