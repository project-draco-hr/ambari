{
  injector.injectMembers(this);
  this.serviceEntity=serviceEntity;
  this.cluster=cluster;
  this.serviceDesiredStateEntity=serviceEntity.getServiceDesiredStateEntity();
  this.desiredConfigs=new HashMap<String,String>();
  this.components=new HashMap<String,ServiceComponent>();
  if (!serviceEntity.getServiceComponentDesiredStateEntities().isEmpty()) {
    for (    ServiceComponentDesiredStateEntity serviceComponentDesiredStateEntity : serviceEntity.getServiceComponentDesiredStateEntities()) {
      components.put(serviceComponentDesiredStateEntity.getComponentName(),serviceComponentFactory.createExisting(this,serviceComponentDesiredStateEntity));
    }
  }
  for (  ServiceConfigMappingEntity mappingEntity : serviceEntity.getServiceConfigMappings()) {
    desiredConfigs.put(mappingEntity.getConfigType(),mappingEntity.getVersionTag());
  }
  StackId stackId=getDesiredStackVersion();
  ServiceInfo sInfo=ambariMetaInfo.getServiceInfo(stackId.getStackName(),stackId.getStackVersion(),getName());
  this.isClientOnlyService=sInfo.isClientOnlyService();
  persisted=true;
}
