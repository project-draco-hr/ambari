{
  injector.injectMembers(this);
  clusterGlobalLock=cluster.getClusterGlobalLock();
  this.serviceEntity=serviceEntity;
  this.cluster=cluster;
  serviceDesiredStateEntity=serviceEntity.getServiceDesiredStateEntity();
  serviceDesiredStateEntityPK=getServiceDesiredStateEntityPK(serviceDesiredStateEntity);
  serviceEntityPK=getServiceEntityPK(serviceEntity);
  components=new HashMap<String,ServiceComponent>();
  if (!serviceEntity.getServiceComponentDesiredStateEntities().isEmpty()) {
    for (    ServiceComponentDesiredStateEntity serviceComponentDesiredStateEntity : serviceEntity.getServiceComponentDesiredStateEntities()) {
      try {
        components.put(serviceComponentDesiredStateEntity.getComponentName(),serviceComponentFactory.createExisting(this,serviceComponentDesiredStateEntity));
      }
 catch (      ProvisionException ex) {
        StackId stackId=cluster.getCurrentStackVersion();
        LOG.error(String.format("Can not get component info: stackName=%s, stackVersion=%s, serviceName=%s, componentName=%s",stackId.getStackName(),stackId.getStackVersion(),serviceEntity.getServiceName(),serviceComponentDesiredStateEntity.getComponentName()));
        ex.printStackTrace();
      }
    }
  }
  StackId stackId=getDesiredStackVersion();
  ServiceInfo sInfo=ambariMetaInfo.getService(stackId.getStackName(),stackId.getStackVersion(),getName());
  isClientOnlyService=sInfo.isClientOnlyService();
  persisted=true;
}
