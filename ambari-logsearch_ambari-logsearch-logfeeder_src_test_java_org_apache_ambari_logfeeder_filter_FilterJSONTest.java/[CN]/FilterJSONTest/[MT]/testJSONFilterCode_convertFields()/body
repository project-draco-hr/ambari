{
  LOG.info("testJSONFilterCode_convertFields()");
  init(new HashMap<String,Object>());
  mockOutputManager.write(EasyMock.capture(capture),EasyMock.anyObject(InputMarker.class));
  EasyMock.expectLastCall();
  EasyMock.replay(mockOutputManager);
  Date d=new Date();
  DateFormat sdf=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
  sdf.setTimeZone(TimeZone.getTimeZone("UTC"));
  String dateString=sdf.format(d);
  filterJson.apply("{ logtime: '" + d.getTime() + "', line_number: 100 }",new InputMarker(null,null,0));
  EasyMock.verify(mockOutputManager);
  Map<String,Object> jsonParams=capture.getValue();
  assertEquals("Incorrect decoding: log time",dateString,jsonParams.remove("logtime"));
  assertEquals("Incorrect decoding: line number",100l,jsonParams.remove("line_number"));
  assertTrue("jsonParams are not empty!",jsonParams.isEmpty());
}
