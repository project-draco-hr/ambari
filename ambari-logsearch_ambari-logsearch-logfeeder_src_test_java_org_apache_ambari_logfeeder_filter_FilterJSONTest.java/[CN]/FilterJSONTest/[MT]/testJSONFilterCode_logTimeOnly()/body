{
  LOG.info("testJSONFilterCode_logTimeOnly()");
  init(new HashMap<String,Object>());
  mockOutputMgr.write(EasyMock.capture(capture),EasyMock.anyObject(InputMarker.class));
  EasyMock.expectLastCall();
  EasyMock.replay(mockOutputMgr);
  Date d=new Date();
  DateFormat sdf=new SimpleDateFormat(LogFeederUtil.SOLR_DATE_FORMAT);
  sdf.setTimeZone(TimeZone.getTimeZone("UTC"));
  String dateString=sdf.format(d);
  filterJson.apply("{ logtime: '" + d.getTime() + "', some_field: 'abc' }",new InputMarker());
  EasyMock.verify(mockOutputMgr);
  Map<String,Object> jsonParams=capture.getValue();
  assertEquals("Incorrect decoding: log time",dateString,jsonParams.remove("logtime"));
  assertEquals("Incorrect decoding: some field","abc",jsonParams.remove("some_field"));
  assertTrue("jsonParams are not empty!",jsonParams.isEmpty());
}
