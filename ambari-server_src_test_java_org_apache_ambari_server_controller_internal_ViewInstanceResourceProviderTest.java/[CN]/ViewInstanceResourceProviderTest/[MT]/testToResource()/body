{
  ViewInstanceResourceProvider provider=new ViewInstanceResourceProvider();
  Set<String> propertyIds=new HashSet<String>();
  propertyIds.add(ViewInstanceResourceProvider.PROPERTIES_PROPERTY_ID);
  ViewInstanceEntity viewInstanceEntity=createNiceMock(ViewInstanceEntity.class);
  ViewEntity viewEntity=createNiceMock(ViewEntity.class);
  expect(viewInstanceEntity.getViewEntity()).andReturn(viewEntity);
  ViewInstancePropertyEntity propertyEntity1=createNiceMock(ViewInstancePropertyEntity.class);
  expect(propertyEntity1.getName()).andReturn("par1").anyTimes();
  expect(propertyEntity1.getValue()).andReturn("val1").anyTimes();
  ViewInstancePropertyEntity propertyEntity3=createNiceMock(ViewInstancePropertyEntity.class);
  expect(propertyEntity3.getName()).andReturn("par3").anyTimes();
  expect(propertyEntity3.getValue()).andReturn("val3").anyTimes();
  expect(viewInstanceEntity.getProperties()).andReturn(Arrays.asList(propertyEntity1,propertyEntity3));
  ViewParameterEntity parameter1=createNiceMock(ViewParameterEntity.class);
  expect(parameter1.getName()).andReturn("par1").anyTimes();
  ViewParameterEntity parameter2=createNiceMock(ViewParameterEntity.class);
  expect(parameter2.getName()).andReturn("par2").anyTimes();
  expect(viewEntity.getParameters()).andReturn(Arrays.asList(parameter1,parameter2));
  expect(viewInstanceEntity.getData()).andReturn(Collections.<ViewInstanceDataEntity>emptyList());
  replay(viewEntity,viewInstanceEntity,parameter1,parameter2,propertyEntity1,propertyEntity3);
  Resource resource=provider.toResource(viewInstanceEntity,propertyIds);
  Map<String,Map<String,Object>> properties=resource.getPropertiesMap();
  assertEquals(1,properties.size());
  Map<String,Object> props=properties.get("ViewInstanceInfo/properties");
  assertNotNull(props);
  assertEquals(3,props.size());
  assertEquals("val1",props.get("par1"));
  assertEquals("val3",props.get("par3"));
  assertNull(props.get("par2"));
}
