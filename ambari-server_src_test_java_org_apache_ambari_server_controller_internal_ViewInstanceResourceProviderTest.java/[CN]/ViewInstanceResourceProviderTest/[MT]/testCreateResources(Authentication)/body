{
  ViewInstanceResourceProvider provider=new ViewInstanceResourceProvider();
  Set<Map<String,Object>> properties=new HashSet<Map<String,Object>>();
  Map<String,Object> propertyMap=new HashMap<String,Object>();
  propertyMap.put(ViewInstanceResourceProvider.VIEW_NAME_PROPERTY_ID,"V1");
  propertyMap.put(ViewInstanceResourceProvider.VIEW_VERSION_PROPERTY_ID,"1.0.0");
  propertyMap.put(ViewInstanceResourceProvider.INSTANCE_NAME_PROPERTY_ID,"I1");
  propertyMap.put(ViewInstanceResourceProvider.PROPERTIES_PROPERTY_ID + "/test_property","test_value");
  properties.add(propertyMap);
  ViewInstanceEntity viewInstanceEntity=new ViewInstanceEntity();
  viewInstanceEntity.setViewName("V1{1.0.0}");
  viewInstanceEntity.setName("I1");
  ViewInstanceEntity viewInstanceEntity2=new ViewInstanceEntity();
  viewInstanceEntity2.setViewName("V1{1.0.0}");
  viewInstanceEntity2.setName("I1");
  ViewEntity viewEntity=new ViewEntity();
  viewEntity.setStatus(ViewDefinition.ViewStatus.DEPLOYED);
  viewEntity.setName("V1{1.0.0}");
  viewInstanceEntity.setViewEntity(viewEntity);
  viewInstanceEntity2.setViewEntity(viewEntity);
  expect(singleton.instanceExists(viewInstanceEntity)).andReturn(false);
  expect(singleton.instanceExists(viewInstanceEntity2)).andReturn(false);
  expect(singleton.getDefinition("V1","1.0.0")).andReturn(viewEntity).anyTimes();
  expect(singleton.getDefinition("V1",null)).andReturn(viewEntity).anyTimes();
  Capture<Map<String,String>> captureProperties=new Capture<Map<String,String>>();
  singleton.setViewInstanceProperties(eq(viewInstanceEntity),capture(captureProperties),anyObject(ViewConfig.class),anyObject(ClassLoader.class));
  Capture<ViewInstanceEntity> instanceEntityCapture=new Capture<ViewInstanceEntity>();
  singleton.installViewInstance(capture(instanceEntityCapture));
  expectLastCall().anyTimes();
  expect(singleton.checkAdmin()).andReturn(true);
  expect(singleton.checkAdmin()).andReturn(false);
  replay(singleton);
  SecurityContextHolder.getContext().setAuthentication(authentication);
  provider.createResources(PropertyHelper.getCreateRequest(properties,null));
  assertEquals(viewInstanceEntity,instanceEntityCapture.getValue());
  Map<String,String> props=captureProperties.getValue();
  assertEquals(1,props.size());
  assertEquals("test_value",props.get("test_property"));
  provider.createResources(PropertyHelper.getCreateRequest(properties,null));
  assertEquals(viewInstanceEntity2,instanceEntityCapture.getValue());
  props=viewInstanceEntity2.getPropertyMap();
  assertTrue(props.isEmpty());
  verify(singleton);
}
