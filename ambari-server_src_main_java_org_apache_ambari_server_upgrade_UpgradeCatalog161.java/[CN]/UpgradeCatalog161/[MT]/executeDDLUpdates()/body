{
  DatabaseType databaseType=configuration.getDatabaseType();
  List<DBColumnInfo> columns;
  columns=new ArrayList<DBColumnInfo>();
  columns.add(new DBColumnInfo("operation_level_id",Long.class,null,null,false));
  columns.add(new DBColumnInfo("request_id",Long.class,null,null,false));
  columns.add(new DBColumnInfo("level_name",String.class,255,null,true));
  columns.add(new DBColumnInfo("cluster_name",String.class,255,null,true));
  columns.add(new DBColumnInfo("service_name",String.class,255,null,true));
  columns.add(new DBColumnInfo("host_component_name",String.class,255,null,true));
  columns.add(new DBColumnInfo("host_name",String.class,255,null,true));
  dbAccessor.createTable("requestoperationlevel",columns,"operation_level_id");
  if (databaseType == DatabaseType.POSTGRES) {
    int columnType=dbAccessor.getColumnType("hostcomponentdesiredstate","restart_required");
    if (columnType == Types.BOOLEAN || columnType == Types.BIT) {
      dbAccessor.executeQuery("ALTER TABLE hostcomponentdesiredstate ALTER column restart_required TYPE SMALLINT USING CASE WHEN restart_required=true THEN 1 ELSE 0 END",true);
    }
  }
  if (databaseType == DatabaseType.ORACLE) {
    dbAccessor.executeQuery("ALTER TABLE hostcomponentdesiredstate MODIFY (restart_required DEFAULT 0)",true);
  }
 else {
    dbAccessor.executeQuery("ALTER TABLE hostcomponentdesiredstate ALTER column restart_required SET DEFAULT 0",true);
  }
  dbAccessor.addColumn("viewmain",new DBAccessor.DBColumnInfo("icon",String.class,255,null,true));
  dbAccessor.addColumn("viewmain",new DBAccessor.DBColumnInfo("icon64",String.class,255,null,true));
  dbAccessor.addColumn("viewinstancedata",new DBAccessor.DBColumnInfo("user_name",String.class,255," ",false));
  dbAccessor.dropConstraint("viewinstancedata","FK_viewinstdata_view_name");
  dbAccessor.dropConstraint("viewinstanceproperty","FK_viewinstprop_view_name");
  dbAccessor.dropConstraint("viewentity","FK_viewentity_view_name");
  dbAccessor.dropConstraint("viewinstance","FK_viewinst_view_name");
  if (databaseType == DatabaseType.ORACLE || databaseType == DatabaseType.MYSQL || databaseType == DatabaseType.DERBY) {
    dbAccessor.executeQuery("ALTER TABLE viewinstance DROP PRIMARY KEY",true);
    dbAccessor.executeQuery("ALTER TABLE viewinstancedata DROP PRIMARY KEY",true);
  }
 else   if (databaseType == DatabaseType.POSTGRES) {
    dbAccessor.executeQuery("ALTER TABLE viewinstance DROP CONSTRAINT viewinstance_pkey CASCADE",true);
    dbAccessor.executeQuery("ALTER TABLE viewinstancedata DROP CONSTRAINT viewinstancedata_pkey CASCADE",true);
  }
  dbAccessor.addColumn("viewinstance",new DBAccessor.DBColumnInfo("view_instance_id",Long.class,null,null,true));
  dbAccessor.addColumn("viewinstancedata",new DBAccessor.DBColumnInfo("view_instance_id",Long.class,null,null,true));
  if (databaseType == DatabaseType.ORACLE) {
    if (dbAccessor.tableHasData("viewinstancedata")) {
      dbAccessor.executeQuery("CREATE SEQUENCE TEMP_SEQ " + "  START WITH 1 " + "  MAXVALUE 999999999999999999999999999 "+ "  MINVALUE 1 "+ "  NOCYCLE "+ "  NOCACHE "+ "  NOORDER");
      dbAccessor.executeQuery("UPDATE viewinstance SET view_instance_id = TEMP_SEQ.NEXTVAL");
      dbAccessor.dropSequence("TEMP_SEQ");
    }
  }
 else   if (databaseType == DatabaseType.MYSQL) {
    if (dbAccessor.tableHasData("viewinstance")) {
      dbAccessor.executeQuery("UPDATE viewinstance " + "SET view_instance_id = (SELECT @a := @a + 1 FROM (SELECT @a := 1) s)");
    }
  }
 else   if (databaseType == DatabaseType.POSTGRES) {
    if (dbAccessor.tableHasData("viewinstance")) {
      dbAccessor.executeQuery("CREATE SEQUENCE temp_seq START WITH 1");
      dbAccessor.executeQuery("UPDATE viewinstance SET view_instance_id = nextval('temp_seq')");
      dbAccessor.dropSequence("temp_seq");
    }
  }
  if (databaseType == DatabaseType.DERBY) {
    dbAccessor.executeQuery("ALTER TABLE viewinstance ALTER COLUMN view_instance_id DEFAULT 0");
    dbAccessor.executeQuery("ALTER TABLE viewinstance ALTER COLUMN view_instance_id NOT NULL");
    dbAccessor.executeQuery("ALTER TABLE viewinstancedata ALTER COLUMN view_instance_id DEFAULT 0");
    dbAccessor.executeQuery("ALTER TABLE viewinstancedata ALTER COLUMN view_instance_id NOT NULL");
    dbAccessor.executeQuery("ALTER TABLE viewinstancedata ALTER COLUMN user_name DEFAULT ' '");
    dbAccessor.executeQuery("ALTER TABLE viewinstancedata ALTER COLUMN user_name NOT NULL");
  }
  dbAccessor.executeQuery("alter table viewinstance add primary key (view_instance_id)");
  dbAccessor.executeQuery("ALTER TABLE viewinstance ADD CONSTRAINT UQ_viewinstance_name UNIQUE (view_name, name)",true);
  dbAccessor.executeQuery("ALTER TABLE viewinstance ADD CONSTRAINT UQ_viewinstance_name_id UNIQUE (view_instance_id, view_name, name)",true);
  dbAccessor.addFKConstraint("viewinstanceproperty","FK_viewinstprop_view_name",new String[]{"view_name","view_instance_name"},"viewinstance",new String[]{"view_name","name"},true);
  dbAccessor.addFKConstraint("viewentity","FK_viewentity_view_name",new String[]{"view_name","view_instance_name"},"viewinstance",new String[]{"view_name","name"},true);
  dbAccessor.addFKConstraint("viewinstance","FK_viewinst_view_name","view_name","viewmain","view_name",true);
  if (databaseType == DatabaseType.POSTGRES) {
    dbAccessor.executeQuery("UPDATE viewinstancedata " + "SET view_instance_id = vi.view_instance_id FROM viewinstance AS vi " + "WHERE vi.name = viewinstancedata.view_instance_name AND vi.view_name = viewinstancedata.view_name");
  }
 else   if (databaseType == DatabaseType.ORACLE) {
    dbAccessor.executeQuery("UPDATE viewinstancedata vid SET view_instance_id = (" + "SELECT view_instance_id FROM viewinstance vi WHERE vi.name = vid.view_instance_name AND vi.view_name = vid.view_name)");
  }
 else   if (databaseType == DatabaseType.MYSQL) {
    dbAccessor.executeQuery("UPDATE viewinstancedata AS vid JOIN viewinstance AS vi " + "ON vi.name = vid.view_instance_name AND vi.view_name = vid.view_name " + "SET vid.view_instance_id = vi.view_instance_id");
  }
  dbAccessor.executeQuery("alter table viewinstancedata add primary key (view_instance_id, name, user_name)");
  dbAccessor.addFKConstraint("viewinstancedata","FK_viewinstdata_view_name",new String[]{"view_instance_id","view_name","view_instance_name"},"viewinstance",new String[]{"view_instance_id","view_name","name"},true);
  long count=1;
  ResultSet resultSet=null;
  try {
    resultSet=dbAccessor.executeSelect("SELECT count(*) FROM viewinstance");
    if (resultSet.next()) {
      count=resultSet.getLong(1) + 2;
    }
  }
  finally {
    if (resultSet != null) {
      resultSet.close();
    }
  }
  String valueColumnName="\"value\"";
  if (databaseType == DatabaseType.ORACLE || databaseType == DatabaseType.MYSQL) {
    valueColumnName="value";
  }
  dbAccessor.executeQuery("INSERT INTO ambari_sequences(sequence_name, " + valueColumnName + ") "+ "VALUES('view_instance_id_seq', "+ count+ ")",true);
  dbAccessor.addColumn("viewinstance",new DBAccessor.DBColumnInfo("label",String.class,255,null,true));
  dbAccessor.addColumn("viewinstance",new DBAccessor.DBColumnInfo("description",String.class,255,null,true));
  dbAccessor.addColumn("viewinstance",new DBAccessor.DBColumnInfo("visible",Character.class,1,null,true));
  dbAccessor.addColumn("viewinstance",new DBAccessor.DBColumnInfo("icon",String.class,255,null,true));
  dbAccessor.addColumn("viewinstance",new DBAccessor.DBColumnInfo("icon64",String.class,255,null,true));
  dbAccessor.addFKConstraint("requestoperationlevel","FK_req_op_level_req_id","request_id","request","request_id",true);
  dbAccessor.addColumn("clusters",new DBColumnInfo("provisioning_state",String.class,255,State.INIT.name(),false));
  dbAccessor.dropConstraint("stage","FK_stage_cluster_id",true);
  dbAccessor.dropConstraint("request","FK_request_cluster_id",true);
}
