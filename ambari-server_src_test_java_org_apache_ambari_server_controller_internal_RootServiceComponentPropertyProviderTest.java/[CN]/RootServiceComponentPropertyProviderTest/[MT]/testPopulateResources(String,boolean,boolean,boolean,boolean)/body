{
  RootServiceComponentPropertyProvider propertyProvider=new RootServiceComponentPropertyProvider();
  Resource resource=new ResourceImpl(Resource.Type.RootService);
  resource.setProperty(RootServiceComponentResourceProvider.COMPONENT_NAME_PROPERTY_ID,componentName);
  resource.setProperty(RootServiceComponentResourceProvider.SERVICE_NAME_PROPERTY_ID,RootServiceResponseFactory.Services.AMBARI.name());
  HashSet<String> requestIds=new HashSet<String>();
  if (requestCiphers) {
    requestIds.add(RootServiceComponentPropertyProvider.CIPHER_PROPERTIES_PROPERTY_ID);
  }
  if (requestJCEPolicy) {
    requestIds.add(RootServiceComponentPropertyProvider.JCE_POLICY_PROPERTY_ID);
  }
  Request request=PropertyHelper.getReadRequest(requestIds,new HashMap<String,TemporalInfo>());
  Set<Resource> resources=propertyProvider.populateResources(Collections.singleton(resource),request,null);
  Assert.assertEquals(1,resources.size());
  resource=resources.iterator().next();
  Map<String,Map<String,Object>> values=resource.getPropertiesMap();
  Assert.assertEquals(expectCiphers,values.containsKey(RootServiceComponentPropertyProvider.CIPHER_PROPERTIES_PROPERTY_ID));
  Assert.assertEquals(expectJCEPolicy,values.containsKey(RootServiceComponentPropertyProvider.JCE_POLICY_PROPERTY_ID));
}
