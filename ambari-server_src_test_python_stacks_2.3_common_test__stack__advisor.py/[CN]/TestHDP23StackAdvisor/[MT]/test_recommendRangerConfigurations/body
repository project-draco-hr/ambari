def test_recommendRangerConfigurations(self):
    clusterData = {}
    services = {'Versions': {'stack_version': '2.3', }, 'services': [{'StackServices': {'service_name': 'RANGER', 'service_version': '0.5.0.2.3', }, 'components': [{'StackServiceComponents': {'component_name': 'RANGER_ADMIN', 'hostnames': ['host1'], }, }], }], 'configurations': {'admin-properties': {'properties': {'DB_FLAVOR': 'NOT_EXISTING', }, }, 'ranger-admin-site': {'properties': {'ranger.service.http.port': '7777', 'ranger.service.http.enabled': 'true', }, }, }, 'ambari-server-properties': {'ambari.ldap.isConfigured': 'true', 'authentication.ldap.bindAnonymously': 'false', 'authentication.ldap.baseDn': 'dc=apache,dc=org', 'authentication.ldap.groupNamingAttr': 'cn', 'authentication.ldap.primaryUrl': 'c6403.ambari.apache.org:389', 'authentication.ldap.userObjectClass': 'posixAccount', 'authentication.ldap.secondaryUrl': 'c6403.ambari.apache.org:389', 'authentication.ldap.usernameAttribute': 'uid', 'authentication.ldap.dnAttribute': 'dn', 'authentication.ldap.useSSL': 'false', 'authentication.ldap.managerPassword': '/etc/ambari-server/conf/ldap-password.dat', 'authentication.ldap.groupMembershipAttr': 'memberUid', 'authentication.ldap.groupObjectClass': 'posixGroup', 'authentication.ldap.managerDn': 'uid=hdfs,ou=people,ou=dev,dc=apache,dc=org', }, }
    expected = {'admin-properties': {'properties': {'policymgr_external_url': 'http://host1:7777', }, }, 'ranger-ugsync-site': {'properties': {'ranger.usersync.group.objectclass': 'posixGroup', 'ranger.usersync.group.nameattribute': 'cn', 'ranger.usersync.group.memberattributename': 'memberUid', 'ranger.usersync.ldap.binddn': 'uid=hdfs,ou=people,ou=dev,dc=apache,dc=org', 'ranger.usersync.ldap.user.nameattribute': 'uid', 'ranger.usersync.ldap.user.objectclass': 'posixAccount', 'ranger.usersync.ldap.url': 'ldap://c6403.ambari.apache.org:389', 'ranger.usersync.ldap.searchBase': 'dc=apache,dc=org', }, }, 'ranger-admin-site': {'properties': {'ranger.audit.solr.zookeepers': 'NONE', 'ranger.audit.source.type': 'solr', }, }, 'ranger-env': {'properties': {'ranger-storm-plugin-enabled': 'No', }, }, }
    recommendedConfigurations = {}
    self.stackAdvisor.recommendRangerConfigurations(recommendedConfigurations, clusterData, services, None)
    self.assertEquals(recommendedConfigurations, expected)
    services['configurations']['ranger-env'] = {'properties': {'is_solrCloud_enabled': 'false', }, }
    recommendedConfigurations = {}
    self.stackAdvisor.recommendRangerConfigurations(recommendedConfigurations, clusterData, services, None)
    self.assertEquals(recommendedConfigurations['ranger-admin-site']['properties']['ranger.audit.solr.zookeepers'], 'NONE')
