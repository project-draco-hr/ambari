def test_validateHiveConfigurations(self):
    properties = {'hive_security_authorization': 'None', 'hive.exec.orc.default.stripe.size': '8388608', 'hive.tez.container.size': '2048', 'hive.tez.java.opts': '-server -Xmx546m -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps', 'hive.auto.convert.join.noconditionaltask.size': '1100000000', }
    recommendedDefaults = {'hive.tez.container.size': '1024', 'hive.tez.java.opts': '-server -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps', 'hive.auto.convert.join.noconditionaltask.size': '1000000000', }
    configurations = {'hive-site': {'properties': {'hive.security.authorization.enabled': 'true', 'hive.tez.java.opts': '-server -Djava.net.preferIPv4Stack=true', }, }, 'hive-env': {'properties': {'hive_security_authorization': 'None', }, }, }
    services = {'services': [], }
    res_expected = []
    res = self.stackAdvisor.validateHiveConfigurations(properties, recommendedDefaults, configurations, services, {})
    self.assertEquals(res, res_expected)
