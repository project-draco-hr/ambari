def test_recommendStormConfigurations(self):
    self.maxDiff = None
    configurations = {'storm-site': {'properties': {'storm.topology.submission.notifier.plugin.class': 'foo', }, }, 'ranger-storm-plugin-properties': {'properties': {'ranger-storm-plugin-enabled': 'No', }, }, }
    clusterData = {'cpu': 4, 'mapMemory': 3000, 'amMemory': 2000, 'reduceMemory': 2056, 'containers': 3, 'ramPerContainer': 256, }
    expected = {'storm-site': {'properties': {'storm.topology.submission.notifier.plugin.class': 'foo,org.apache.atlas.storm.hook.StormAtlasHook', }, 'property_attributes': {'nimbus.authorizer': {'delete': 'true', }, }, }, 'ranger-storm-plugin-properties': {'properties': {'ranger-storm-plugin-enabled': 'No', }, }, }
    services = {'services': [{'href': '/api/v1/stacks/HDP/versions/2.2/services/ATLAS', 'StackServices': {'service_name': 'ATLAS', 'service_version': '2.6.0.2.2', 'stack_name': 'HDP', 'stack_version': '2.3', }, 'components': [{'StackServiceComponents': {'advertise_version': 'false', 'cardinality': '1', 'component_category': 'MASTER', 'component_name': 'ATLAS_SERVER', 'display_name': 'Atlas Server', 'is_client': 'false', 'is_master': 'true', 'hostnames': [], }, 'dependencies': [], }], }], 'configurations': {'storm-site': {'properties': {'storm.topology.submission.notifier.plugin.class': 'foo', }, 'property-attributes': {}, }, 'ranger-storm-plugin-properties': {'properties': {'ranger-storm-plugin-enabled': 'No', }, }, }, 'changed-configurations': [], }
    hosts = {'items': [{'href': '/api/v1/hosts/c6401.ambari.apache.org', 'Hosts': {'cpu_count': 1, 'host_name': 'c6401.ambari.apache.org', 'os_arch': 'x86_64', 'os_type': 'centos6', 'ph_cpu_count': 1, 'public_host_name': 'c6401.ambari.apache.org', 'rack_info': '/default-rack', 'total_mem': 1922680, }, }], }
    self.stackAdvisor.recommendStormConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['ambari-server-properties'] = {'java.home': '/usr/jdk64/jdk1.7.3_23', }
    self.stackAdvisor.recommendStormConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    services['services'] = []
    services['configurations']['storm-site']['properties']['storm.topology.submission.notifier.plugin.class'] = 'org.apache.atlas.storm.hook.StormAtlasHook'
    self.stackAdvisor.recommendStormConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(True, ('storm.topology.submission.notifier.plugin.class' in configurations['storm-site']['property_attributes']))
