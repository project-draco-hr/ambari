def test_recommendHDFSConfigurations(self):
    configurations = {}
    clusterData = {'totalAvailableRam': 2048, 'hBaseInstalled': True, 'hbaseRam': 112, 'reservedRam': 128, }
    services = {'services': [{'StackServices': {'service_name': 'HDFS', 'service_version': '2.6.0.2.2', }, }], 'Versions': {'stack_version': '2.3', }, 'configurations': {'hdfs-site': {'properties': {'dfs.namenode.inode.attributes.provider.class': 'org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer', }, }, 'ranger-hdfs-plugin-properties': {'properties': {'ranger-hdfs-plugin-enabled': 'No', }, }, }, }
    self.stackAdvisor.recommendHDFSConfigurations(configurations, clusterData, services, None)
    self.assertEquals(configurations['hdfs-site']['property_attributes']['dfs.namenode.inode.attributes.provider.class'], {'delete': 'true', }, 'Test with Ranger HDFS plugin is disabled')
    configurations['hdfs-site']['properties'] = {}
    configurations['hdfs-site']['property_attributes'] = {}
    services['configurations']['ranger-hdfs-plugin-properties']['properties']['ranger-hdfs-plugin-enabled'] = 'Yes'
    self.stackAdvisor.recommendHDFSConfigurations(configurations, clusterData, services, None)
    self.assertEquals(configurations['hdfs-site']['properties']['dfs.namenode.inode.attributes.provider.class'], 'org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer', 'Test with Ranger HDFS plugin is enabled')
