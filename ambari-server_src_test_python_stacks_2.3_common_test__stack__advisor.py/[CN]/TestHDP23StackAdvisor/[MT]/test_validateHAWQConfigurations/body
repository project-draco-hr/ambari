def test_validateHAWQConfigurations(self):
    services = self.load_json('services-hawq-3-hosts.json')
    configurations = services['configurations']
    configurations['hawq-site'] = {'properties': {'hawq_rm_yarn_address': 'localhost:8032', 'hawq_rm_yarn_scheduler_address': 'localhost:8030', }, }
    configurations['yarn-site'] = {'properties': {'yarn.resourcemanager.address': 'host1:8050', 'yarn.resourcemanager.scheduler.address': 'host1:8030', }, }
    services['services'].append({'StackServices': {'service_name': 'YARN', }, 'components': [], })
    properties = configurations['hawq-site']['properties']
    defaults = {}
    hosts = {}
    expected_warnings = {'hawq_rm_yarn_address': {'config-type': 'hawq-site', 'message': 'Expected value: host1:8050 (this property should have the same value as the property yarn.resourcemanager.address in yarn-site)', 'type': 'configuration', 'config-name': 'hawq_rm_yarn_address', 'level': 'WARN', }, 'hawq_rm_yarn_scheduler_address': {'config-type': 'hawq-site', 'message': 'Expected value: host1:8030 (this property should have the same value as the property yarn.resourcemanager.scheduler.address in yarn-site)', 'type': 'configuration', 'config-name': 'hawq_rm_yarn_scheduler_address', 'level': 'WARN', }, }
    problems = self.stackAdvisor.validateHAWQConfigurations(properties, defaults, configurations, services, hosts)
    problems_dict = {}
    for problem in problems:
        problems_dict[problem['config-name']] = problem
    self.assertEqual(len(problems), 2)
    self.assertEqual(problems_dict, expected_warnings)
