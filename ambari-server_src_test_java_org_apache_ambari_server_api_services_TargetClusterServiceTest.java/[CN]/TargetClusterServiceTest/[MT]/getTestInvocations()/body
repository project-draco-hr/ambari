{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  TargetClusterService targetClusterService=new TestTargetClusterService("targetClusterName");
  Method m=targetClusterService.getClass().getMethod("getTargetCluster",HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{getHttpHeaders(),getUriInfo(),"targetClusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,targetClusterService,m,args,null));
  targetClusterService=new TestTargetClusterService(null);
  m=targetClusterService.getClass().getMethod("getTargetClusters",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,targetClusterService,m,args,null));
  targetClusterService=new TestTargetClusterService("targetClusterName");
  m=targetClusterService.getClass().getMethod("createTargetCluster",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"targetClusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,targetClusterService,m,args,"body"));
  targetClusterService=new TestTargetClusterService("targetClusterName");
  m=targetClusterService.getClass().getMethod("updateTargetCluster",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"targetClusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,targetClusterService,m,args,"body"));
  targetClusterService=new TestTargetClusterService("targetClusterName");
  m=targetClusterService.getClass().getMethod("deleteTargetCluster",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"targetClusterName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,targetClusterService,m,args,null));
  return listInvocations;
}
