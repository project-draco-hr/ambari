{
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  Request request=createMock(Request.class);
  CredentialResourceProvider credentialResourceProvider=new CredentialResourceProvider(managementController);
  injector.injectMembers(credentialResourceProvider);
  Set<Map<String,Object>> setProperties=getCredentialTestProperties("c1","alias1",null,"password1",CredentialStoreType.TEMPORARY);
  expect(request.getProperties()).andReturn(setProperties);
  ResourceProviderFactory factory=createMock(ResourceProviderFactory.class);
  expect(factory.getCredentialResourceProvider(anyObject(AmbariManagementController.class))).andReturn(credentialResourceProvider);
  replay(request,factory,managementController);
  AbstractControllerResourceProvider.init(factory);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(Resource.Type.Credential,PropertyHelper.getPropertyIds(Resource.Type.Credential),PropertyHelper.getKeyPropertyIds(Resource.Type.Credential),managementController);
  try {
    provider.createResources(request);
    Assert.fail("Expected exception due to missing alias");
  }
 catch (  IllegalArgumentException e) {
  }
  verify(request,factory,managementController);
}
