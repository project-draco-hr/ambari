def service_check(self, env):
    import params
    env.set_params(params)
    input_file = format('/user/{smokeuser}/passwd')
    output_dir = format('/user/{smokeuser}/pigsmoke.out')
    params.HdfsResource(output_dir, type='directory', action='delete_on_execute', user=params.smokeuser)
    params.HdfsResource(input_file, type='file', source='/etc/passwd', action='create_on_execute', user=params.smokeuser)
    params.HdfsResource(None, action='execute')
    File(format('{tmp_dir}/pigSmoke.sh'), content=StaticFile('pigSmoke.sh'), mode=493)
    Execute(format('pig {tmp_dir}/pigSmoke.sh'), tries=3, try_sleep=5, path=format('{pig_bin_dir}:/usr/sbin:/sbin:/usr/local/bin:/bin:/usr/bin'), user=params.smokeuser, logoutput=True)
    test_cmd = format('fs -test -e {output_dir}')
    ExecuteHadoop(test_cmd, user=params.smokeuser, conf_dir=params.hadoop_conf_dir, bin_dir=params.hadoop_bin_dir)
    if ((params.hdp_stack_version != '') and (compare_versions(params.hdp_stack_version, '2.2') >= 0)):
        params.HdfsResource(output_dir, type='directory', action='delete_on_execute', user=params.smokeuser)
        params.HdfsResource(input_file, type='file', source='/etc/passwd', action='create_on_execute', user=params.smokeuser)
        resource_created = copy_to_hdfs('tez', params.user_group, params.hdfs_user)
        if resource_created:
            params.HdfsResource(None, action='execute')
        if params.security_enabled:
            kinit_cmd = format('{kinit_path_local} -kt {smoke_user_keytab} {smokeuser_principal};')
            Execute(kinit_cmd, user=params.smokeuser)
        Execute(format('pig -x tez {tmp_dir}/pigSmoke.sh'), tries=3, try_sleep=5, path=format('{pig_bin_dir}:/usr/sbin:/sbin:/usr/local/bin:/bin:/usr/bin'), user=params.smokeuser, logoutput=True)
        ExecuteHadoop(test_cmd, user=params.smokeuser, conf_dir=params.hadoop_conf_dir, bin_dir=params.hadoop_bin_dir)
