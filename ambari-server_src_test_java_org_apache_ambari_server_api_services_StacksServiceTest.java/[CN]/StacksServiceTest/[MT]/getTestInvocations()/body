{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  StacksService service=new TestStacksService("stackName",null);
  Method m=service.getClass().getMethod("getStack",String.class,HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{null,getHttpHeaders(),getUriInfo(),"stackName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService(null,null);
  m=service.getClass().getMethod("getStacks",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getStackVersion",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo(),"stackName","stackVersion"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName",null);
  m=service.getClass().getMethod("getStackVersions",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo(),"stackName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName",null);
  m=service.getClass().getMethod("getStackService",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class,String.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo(),"stackName","stackVersion","service-name"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName",null);
  m=service.getClass().getMethod("getStackServices",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo(),"stackName","stackVersion"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getStackConfiguration",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class,String.class,String.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo(),"stackName","stackVersion","service-name","property-name"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName",null);
  m=service.getClass().getMethod("getStackConfigurations",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class,String.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo(),"stackName","stackVersion","service-name"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getServiceComponent",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class,String.class,String.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo(),"stackName","stackVersion","service-name","component-name"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getServiceComponents",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class,String.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo(),"stackName","stackVersion","service-name"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  return listInvocations;
}
