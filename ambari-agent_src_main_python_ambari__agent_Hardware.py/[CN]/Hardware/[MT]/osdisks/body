@staticmethod
@OsFamilyFuncImpl(OsFamilyImpl.DEFAULT)
def osdisks(config=None):
    ' Run df to find out the disks on the host. Only works on linux\n    platforms. Note that this parser ignores any filesystems with spaces\n    and any mounts with spaces. '
    mounts = []
    command = []
    timeout = Hardware.CHECK_REMOTE_MOUNTS_TIMEOUT_DEFAULT
    if (config and config.has_option(AmbariConfig.AMBARI_PROPERTIES_CATEGORY, Hardware.CHECK_REMOTE_MOUNTS_TIMEOUT_KEY) and (config.get(AmbariConfig.AMBARI_PROPERTIES_CATEGORY, Hardware.CHECK_REMOTE_MOUNTS_TIMEOUT_KEY) != '0')):
        timeout = config.get(AmbariConfig.AMBARI_PROPERTIES_CATEGORY, Hardware.CHECK_REMOTE_MOUNTS_TIMEOUT_KEY)
    command.append('timeout')
    command.append(timeout)
    command.append('df')
    command.append('-kPT')
    if (config and config.has_option(AmbariConfig.AMBARI_PROPERTIES_CATEGORY, Hardware.CHECK_REMOTE_MOUNTS_KEY) and (config.get(AmbariConfig.AMBARI_PROPERTIES_CATEGORY, Hardware.CHECK_REMOTE_MOUNTS_KEY).lower() == 'false')):
        command.append('-l')
    df = subprocess.Popen(command, stdout=subprocess.PIPE)
    dfdata = df.communicate()[0]
    lines = dfdata.splitlines()
    for l in lines:
        mountinfo = Hardware.extractMountInfo(l)
        if ((mountinfo != None) and Hardware._chk_mount(mountinfo['mountpoint'])):
            mounts.append(mountinfo)
        pass
    pass
    return mounts
