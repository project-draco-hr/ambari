@classmethod
@OsFamilyFuncImpl(OsFamilyImpl.DEFAULT)
def osdisks(cls, config=None):
    ' Run df to find out the disks on the host. Only works on linux\n    platforms. Note that this parser ignores any filesystems with spaces\n    and any mounts with spaces. '
    timeout = cls._get_mount_check_timeout(config)
    command = ['timeout', timeout, 'df', '-kPT']
    if (not cls._check_remote_mounts(config)):
        command.append('-l')
    df = subprocess.Popen(command, stdout=subprocess.PIPE)
    dfdata = df.communicate()[0]
    mounts = [cls._parse_df_line(line) for line in dfdata.splitlines() if line]
    result_mounts = []
    for mount in mounts:
        if (not mount):
            continue
        '\n      We need to filter mounts by several parameters:\n       - mounted device is not in the ignored list\n       - is accessible to user under which current process running\n       - it is not file-mount (docker environment)\n      '
        if ((mount['device'] not in cls.IGNORE_DEVICES) and (mount['mountpoint'].split('/')[0] not in cls.IGNORE_ROOT_MOUNTS) and cls._chk_writable_mount(mount['mountpoint']) and (not path_isfile(mount['mountpoint']))):
            result_mounts.append(mount)
    return result_mounts
