def facterInfo(self):
    facterHome = AmbariConfig.config.get('puppet', 'facter_home')
    facterEnv = os.environ
    logger.info(('Using facter home as: ' + facterHome))
    facterInfo = {}
    if os.path.exists(facterHome):
        rubyLib = ''
        if os.environ.has_key('RUBYLIB'):
            rubyLib = os.environ['RUBYLIB']
            logger.info(('Ruby Lib env from Env ' + rubyLib))
        rubyLib = ((rubyLib + ':') + self.facterLib(facterHome))
        facterEnv['RUBYLIB'] = rubyLib
        logger.info(('Setting RUBYLIB as: ' + rubyLib))
        facter = subprocess.Popen([self.facterBin(facterHome)], stdout=subprocess.PIPE, stderr=subprocess.PIPE, env=facterEnv)
        stderr_out = facter.communicate()
        if (facter.returncode != 0):
            logging.error(('Error getting facter info: ' + stderr_out[1]))
            pass
        facterOutput = stderr_out[0]
        infoDict = self.parseFacterOutput(facterOutput)
        facterInfo = infoDict
    else:
        pass
    return facterInfo
