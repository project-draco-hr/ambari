def main(argv=None):
    scriptDir = os.path.realpath(os.path.dirname(argv[0]))
    onlyargs = argv[1:]
    expected_hostname = onlyargs[0]
    passPhrase = onlyargs[1]
    hostname = onlyargs[2]
    projectVersion = None
    server_port = 8080
    if (len(onlyargs) > 3):
        projectVersion = onlyargs[3]
    if (len(onlyargs) > 4):
        server_port = onlyargs[4]
    try:
        server_port = int(server_port)
    except Exception as e:
        server_port = 8080
    checkServerReachability(hostname, server_port)
    if ((projectVersion is None) or (projectVersion == 'null') or (projectVersion == '{ambariVersion}') or (projectVersion == '')):
        retcode = getOptimalVersion('')
    else:
        retcode = getOptimalVersion(projectVersion)
    if ((retcode['exitstatus'] == 0) and (retcode['log'] != None) and (retcode['log'] != '') and (retcode['log'][0].strip() != '')):
        availiableProjectVersion = ('-' + retcode['log'].strip())
        if (not isAgentPackageAlreadyInstalled(availiableProjectVersion)):
            if is_suse():
                ret = installAgentSuse(availiableProjectVersion)
            else:
                ret = installAgent(availiableProjectVersion)
            if (not (ret['exitstatus'] == 0)):
                sys.exit(ret)
    elif ((retcode['exitstatus'] == 1) and (retcode['log'][0].strip() != '')):
        sys.exit({'exitstatus': 1, 'log': ((('Desired version (' + projectVersion) + ') of ambari-agent package is not available. Repository has following versions of ambari-agent:') + retcode['log'][0].strip()), })
    else:
        sys.exit(retcode)
    configureAgent(hostname)
    sys.exit(runAgent(passPhrase, expected_hostname))
