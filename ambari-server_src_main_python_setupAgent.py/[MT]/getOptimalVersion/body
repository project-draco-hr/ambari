def getOptimalVersion(initialProjectVersion):
    optimalVersion = initialProjectVersion
    if is_suse():
        ret = findNearestAgentPackageVersionSuse(optimalVersion)
    else:
        ret = findNearestAgentPackageVersion(optimalVersion)
    if ((ret['exitstatus'] == 0) and (ret['log'][0].strip() != '') and (ret['log'][0].strip() == initialProjectVersion)):
        optimalVersion = ret['log'][0].strip()
        retcode = 0
    else:
        if is_suse():
            ret = getAvaliableAgentPackageVersionsSuse()
        else:
            ret = getAvaliableAgentPackageVersions()
        retcode = 1
        optimalVersion = ret['log']
    return {'exitstatus': retcode, 'log': optimalVersion, }
