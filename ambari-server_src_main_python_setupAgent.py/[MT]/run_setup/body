@OsFamilyFuncImpl(OSConst.WINSRV_FAMILY)
def run_setup(argv=None):
    '\n  if the Agent is not downloaded or the download was interrupted\n    download the Agent msi package\n  install the Agent from the msi package\n  customize the Agent configuration\n  register the Ambari Agent Windows service\n  if JDK is not installed on the local machine\n    download and install JDK\n  set the machine-wide JAVA_HOME environment variable\n  if the Agent service is running from a previous session\n    stop the Agent service\n  create/switch the Agent dir symbolic link to the new version\n  start the Agent service\n  '
    retcode = parseArguments(argv)
    if (retcode['exitstatus'] != 0):
        return retcode
    (agent_url, server_hostname, projectVersion) = retcode['parsed_args']
    availableProjectVersion = getOptimalVersion(projectVersion)
    retcode = installAgent(agent_url, os.getcwd(), availableProjectVersion, retcode)
    if (not (retcode['exitstatus'] == 0)):
        return retcode
    retcode = configureAgent(server_hostname, retcode)
    if (retcode['exitstatus'] != 0):
        return retcode
    return runAgentService(retcode)
