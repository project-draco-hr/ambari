{
  final RepositoryVersionEntity entity=new RepositoryVersionEntity();
  final String stackName=properties.get(REPOSITORY_VERSION_STACK_NAME_PROPERTY_ID).toString();
  final String stackVersion=properties.get(REPOSITORY_VERSION_STACK_VERSION_PROPERTY_ID).toString();
  entity.setDisplayName(properties.get(REPOSITORY_VERSION_DISPLAY_NAME_PROPERTY_ID).toString());
  entity.setStack(new StackId(stackName,stackVersion).getStackId());
  entity.setUpgradePackage(properties.get(REPOSITORY_VERSION_UPGRADE_PACK_PROPERTY_ID).toString());
  entity.setVersion(properties.get(REPOSITORY_VERSION_REPOSITORY_VERSION_PROPERTY_ID).toString());
  final Object repositories=properties.get(REPOSITORY_VERSION_OPERATING_SYSTEMS_PROPERTY_ID);
  final String repositoriesJson=gson.toJson(repositories);
  try {
    parseRepositories(repositoriesJson);
  }
 catch (  Exception ex) {
    throw new AmbariException("Json structure for operating systems is incorrect",ex);
  }
  entity.setOperatingSystems(repositoriesJson);
  entity.setUpgradePackage(getUpgradePackageName(stackName,stackVersion,entity.getVersion()));
  return entity;
}
