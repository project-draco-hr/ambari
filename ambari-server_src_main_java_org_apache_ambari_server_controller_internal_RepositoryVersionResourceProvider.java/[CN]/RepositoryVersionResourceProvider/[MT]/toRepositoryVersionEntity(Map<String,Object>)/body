{
  final RepositoryVersionEntity entity=new RepositoryVersionEntity();
  final String stackName=properties.get(REPOSITORY_VERSION_STACK_NAME_PROPERTY_ID).toString();
  final String stackVersion=properties.get(REPOSITORY_VERSION_STACK_VERSION_PROPERTY_ID).toString();
  StackEntity stackEntity=stackDAO.find(stackName,stackVersion);
  entity.setDisplayName(properties.get(REPOSITORY_VERSION_DISPLAY_NAME_PROPERTY_ID).toString());
  entity.setStack(stackEntity);
  entity.setVersion(properties.get(REPOSITORY_VERSION_REPOSITORY_VERSION_PROPERTY_ID).toString());
  final Object operatingSystems=properties.get(SUBRESOURCE_OPERATING_SYSTEMS_PROPERTY_ID);
  final String operatingSystemsJson=gson.toJson(operatingSystems);
  try {
    repositoryVersionHelper.parseOperatingSystems(operatingSystemsJson);
  }
 catch (  Exception ex) {
    throw new AmbariException("Json structure for operating systems is incorrect",ex);
  }
  entity.setOperatingSystems(operatingSystemsJson);
  return entity;
}
