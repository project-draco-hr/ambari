{
  TestStreamProvider streamProvider=new TestStreamProvider("host_temporal_ganglia_data.txt");
  TestGangliaHostProvider hostProvider=new TestGangliaHostProvider();
  GangliaPropertyProvider propertyProvider=new GangliaHostPropertyProvider(PropertyHelper.getMetricPropertyIds(Resource.Type.Host),streamProvider,configuration,hostProvider,CLUSTER_NAME_PROPERTY_ID,HOST_NAME_PROPERTY_ID);
  Resource resource=new ResourceImpl(Resource.Type.Host);
  resource.setProperty(CLUSTER_NAME_PROPERTY_ID,"c1");
  resource.setProperty(HOST_NAME_PROPERTY_ID,"corp-hadoopda05.client.ext");
  Map<String,TemporalInfo> temporalInfoMap=new HashMap<String,TemporalInfo>();
  temporalInfoMap.put("metrics/process/proc_total",new TemporalInfoImpl(10L,20L,1L));
  Request request=PropertyHelper.getReadRequest(Collections.singleton("metrics/process/proc_total"),temporalInfoMap);
  Set<Resource> populateResources=propertyProvider.populateResources(Collections.singleton(resource),request,null);
  Assert.assertEquals(1,populateResources.size());
  Resource res=populateResources.iterator().next();
  Number[][] val=(Number[][])res.getPropertyValue("metrics/process/proc_total");
  Assert.assertEquals(226,val.length);
}
