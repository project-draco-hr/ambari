{
  injector=Guice.createInjector(new ControllerModule(properties));
  injector.getInstance(PersistService.class).start();
  ClusterDAO clusterDAO=injector.getInstance(ClusterDAO.class);
  clusterDAO.findAll();
  BlueprintDAO blueprintDAO=injector.getInstance(BlueprintDAO.class);
  blueprintDAO.findAll();
  ClusterServiceDAO clusterServiceDAO=injector.getInstance(ClusterServiceDAO.class);
  clusterServiceDAO.findAll();
  injector.getInstance(ClusterStateDAO.class).findAll();
  injector.getInstance(ConfigGroupConfigMappingDAO.class).findAll();
  injector.getInstance(ConfigGroupDAO.class).findAll();
  injector.getInstance(ConfigGroupHostMappingDAO.class).findAll();
  injector.getInstance(ExecutionCommandDAO.class).findAll();
  injector.getInstance(HostComponentDesiredStateDAO.class).findAll();
  injector.getInstance(HostComponentStateDAO.class).findAll();
  injector.getInstance(HostConfigMappingDAO.class).findAll();
  injector.getInstance(HostDAO.class).findAll();
  injector.getInstance(HostRoleCommandDAO.class).findAll();
  injector.getInstance(HostStateDAO.class).findAll();
  injector.getInstance(KeyValueDAO.class).findAll();
  injector.getInstance(MetainfoDAO.class).findAll();
  injector.getInstance(RequestDAO.class).findAll();
  injector.getInstance(RequestScheduleBatchRequestDAO.class).findAll();
  injector.getInstance(RequestScheduleDAO.class).findAll();
  injector.getInstance(RoleDAO.class).findAll();
  injector.getInstance(RoleSuccessCriteriaDAO.class).findAll();
  injector.getInstance(ServiceComponentDesiredStateDAO.class).findAll();
  injector.getInstance(ServiceDesiredStateDAO.class).findAll();
  injector.getInstance(StageDAO.class).findAll();
  injector.getInstance(UserDAO.class).findAll();
  injector.getInstance(PersistService.class).stop();
}
