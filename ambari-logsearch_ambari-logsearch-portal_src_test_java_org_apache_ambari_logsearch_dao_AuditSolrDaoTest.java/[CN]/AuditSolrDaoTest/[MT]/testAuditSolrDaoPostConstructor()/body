{
  SolrClient mockSolrClient=EasyMock.strictMock(SolrClient.class);
  NamedList<Object> response=new NamedList<Object>();
  NamedList<Object> header=new NamedList<Object>();
  header.add("status",0);
  response.add("responseHeader",header);
  response.add("collections",new ArrayList<String>());
  Capture<CollectionAdminRequest.Create> captureCreateRequest=EasyMock.newCapture(CaptureType.LAST);
  EasyMock.expect(mockSolrClient.request(EasyMock.anyObject(CollectionAdminRequest.List.class),EasyMock.anyString())).andReturn(response);
  mockSolrClient.request(EasyMock.capture(captureCreateRequest),EasyMock.anyString());
  EasyMock.expectLastCall().andReturn(response);
  EasyMock.replay(mockSolrClient);
  AuditSolrDao dao=new AuditSolrDao();
  dao.solrClient=mockSolrClient;
  dao.isZkConnectString=true;
  dao.postConstructor();
  EasyMock.verify(mockSolrClient);
  CollectionAdminRequest.Create createRequest=captureCreateRequest.getValue();
  Assert.assertEquals(createRequest.getConfigName(),"test_audit_logs_config_name");
  Assert.assertEquals(createRequest.getNumShards().intValue(),123);
  Assert.assertEquals(createRequest.getReplicationFactor().intValue(),456);
  Assert.assertEquals(createRequest.getCollectionName(),"test_audit_logs_collection");
}
