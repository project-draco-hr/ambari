{
  parseCommandLine();
  ClientConfig config=new DefaultClientConfig();
  Client client=Client.create(config);
  WebResource service=client.resource(getBaseURI());
  String clusterState;
  if (!line.hasOption("state")) {
    clusterState="ALL";
  }
 else {
    clusterState=line.getOptionValue("state");
  }
  ClientResponse response;
  response=service.path("clusters").queryParam("state",clusterState).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  if (response.getStatus() == 204) {
    System.exit(0);
  }
  if (response.getStatus() != 200) {
    System.err.println("Cluster list command failed. Reason [Code: <" + response.getStatus() + ">, Message: <"+ response.getHeaders().getFirst("ErrorMessage")+ ">]");
    System.exit(-1);
  }
  List<ClusterInformation> clsInfos=response.getEntity(new GenericType<List<ClusterInformation>>(){
  }
);
  if (!line.hasOption("verbose")) {
    System.out.println("[NAME]\t[STATE]\t[DATE_CREATED]\t[ACTIVE_SERVICES]\n");
    for (    ClusterInformation clsInfo : clsInfos) {
      System.out.println("[" + clsInfo.getDefinition().getName() + "]\t"+ "["+ clsInfo.getState().getState()+ "]\t"+ "["+ clsInfo.getState().getCreationTime()+ "]\t"+ "["+ clsInfo.getDefinition().getEnabledServices()+ "]\n");
    }
  }
 else {
    System.out.println("Cluster Information documents:\n");
    for (    ClusterInformation clsInfo : clsInfos) {
      printClusterInformation(clsInfo);
      System.out.println("\n");
    }
  }
}
