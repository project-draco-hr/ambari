{
  List<StageWrapper> results=new ArrayList<StageWrapper>();
  Set<String> serviceChecks=new HashSet<String>();
  for (  Entry<String,List<TaskProxy>> entry : wrappers.entrySet()) {
    StageWrapper wrapper=null;
    StageWrapper execwrapper=null;
    for (    TaskProxy t : entry.getValue()) {
      serviceChecks.add(t.service);
      if (!t.restart) {
        if (null == wrapper) {
          wrapper=new StageWrapper(StageWrapper.Type.RU_TASKS,t.message,t.getTasksArray());
        }
      }
 else {
        if (null == execwrapper) {
          execwrapper=new StageWrapper(StageWrapper.Type.RESTART,t.message,t.getTasksArray());
        }
      }
    }
    if (null != wrapper) {
      results.add(wrapper);
    }
    if (null != execwrapper) {
      results.add(execwrapper);
    }
  }
  if (serviceChecks.size() > 0) {
    List<TaskWrapper> tasks=new ArrayList<TaskWrapper>();
    for (    String service : serviceChecks) {
      tasks.add(new TaskWrapper(service,"",Collections.<String>emptySet(),new ServiceCheckTask()));
    }
    StageWrapper wrapper=new StageWrapper(StageWrapper.Type.SERVICE_CHECK,"Service Check " + StringUtils.join(serviceChecks,", "),tasks.toArray(new TaskWrapper[tasks.size()]));
    results.add(wrapper);
  }
  return results;
}
