@patch.object(ActionDependencyManager, 'read_dependencies')
@patch.object(ActionQueue, 'result')
@patch.object(ActionDependencyManager, 'is_action_group_available')
@patch.object(HostInfo, 'register')
def test_no_mapping(self, register_mock, is_action_group_available_mock, result_mock, read_dependencies_mock):
    result_mock.return_value = {'reports': [{'status': 'IN_PROGRESS', 'stderr': 'Read from /tmp/errors-3.txt', 'stdout': 'Read from /tmp/output-3.txt', 'clusterName': u'cc', 'roleCommand': u'INSTALL', 'serviceName': u'HDFS', 'role': u'DATANODE', 'actionId': '1-1', 'taskId': 3, 'exitCode': 777, }], 'componentStatus': [{'status': 'HEALTHY', 'componentName': 'NAMENODE', }], }
    actionQueue = ActionQueue(AmbariConfig.AmbariConfig().getConfig(), 'dummy_controller')
    heartbeat = Heartbeat(actionQueue)
    hb = heartbeat.build(id=10, state_interval=1, componentsMapped=True)
    self.assertEqual(register_mock.call_args_list[0][0][1], True)
    register_mock.reset_mock()
    hb = heartbeat.build(id=0, state_interval=1, componentsMapped=True)
    self.assertEqual(register_mock.call_args_list[0][0][1], False)
