{
  Injector injector=createStrictMock(Injector.class);
  Capture<AmbariManagementController> controllerCapture=new Capture<AmbariManagementController>();
  Clusters clusters=createNiceMock(Clusters.class);
  Cluster cluster=createNiceMock(Cluster.class);
  Host host=createNiceMock(Host.class);
  HostResponse response=createNiceMock(HostResponse.class);
  Set<Cluster> setCluster=Collections.singleton(cluster);
  HostRequest request1=new HostRequest("host1","cluster1",Collections.<String,String>emptyMap());
  Set<HostRequest> setRequests=new HashSet<HostRequest>();
  setRequests.add(request1);
  injector.injectMembers(capture(controllerCapture));
  expect(injector.getInstance(Gson.class)).andReturn(null);
  expect(clusters.getCluster("cluster1")).andReturn(cluster);
  expect(clusters.getHost("host1")).andReturn(host);
  expect(host.getHostName()).andReturn("host1").anyTimes();
  expect(clusters.getClustersForHost("host1")).andReturn(setCluster);
  expect(host.convertToResponse()).andReturn(response);
  response.setClusterName("cluster1");
  replay(injector,clusters,cluster,host,response);
  AmbariManagementController controller=new AmbariManagementControllerImpl(null,clusters,injector);
  Set<HostResponse> setResponses=getHosts(controller,setRequests);
  assertSame(controller,controllerCapture.getValue());
  assertEquals(1,setResponses.size());
  assertTrue(setResponses.contains(response));
  verify(injector,clusters,cluster,host,response);
}
