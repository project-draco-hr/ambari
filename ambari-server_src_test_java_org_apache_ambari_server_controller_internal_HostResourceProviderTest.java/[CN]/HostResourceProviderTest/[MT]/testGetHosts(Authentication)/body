{
  Injector injector=createInjector();
  AmbariManagementController managementController=injector.getInstance(AmbariManagementController.class);
  Clusters clusters=injector.getInstance(Clusters.class);
  Cluster cluster=createMock(Cluster.class);
  Host host=createNiceMock(Host.class);
  HostResponse response=createNiceMock(HostResponse.class);
  Set<Cluster> setCluster=Collections.singleton(cluster);
  HostRequest request1=new HostRequest("host1","cluster1",Collections.<String,String>emptyMap());
  Set<HostRequest> setRequests=new HashSet<HostRequest>();
  setRequests.add(request1);
  expect(managementController.getClusters()).andReturn(clusters).atLeastOnce();
  expect(clusters.getCluster("cluster1")).andReturn(cluster);
  expect(clusters.getHost("host1")).andReturn(host);
  expect(clusters.getClustersForHost("host1")).andReturn(setCluster);
  expect(clusters.getCluster("Cluster100")).andReturn(cluster).anyTimes();
  expect(cluster.getClusterId()).andReturn(2L).anyTimes();
  expect(host.getHostName()).andReturn("host1").anyTimes();
  expect(host.convertToResponse()).andReturn(response);
  response.setClusterName("cluster1");
  replayAll();
  SecurityContextHolder.getContext().setAuthentication(authentication);
  Set<HostResponse> setResponses=getHosts(managementController,setRequests);
  assertEquals(1,setResponses.size());
  assertTrue(setResponses.contains(response));
  verifyAll();
}
