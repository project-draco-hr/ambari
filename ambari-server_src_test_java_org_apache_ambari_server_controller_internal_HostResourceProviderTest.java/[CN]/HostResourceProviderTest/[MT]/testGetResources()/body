{
  Resource.Type type=Resource.Type.Host;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  Set<HostResponse> allResponse=new HashSet<HostResponse>();
  allResponse.add(new HostResponse("Host100","Cluster100","","",2,1,"","","",100000L,200000L,null,10L,0L,"rack info",null,null,new HostHealthStatus(HostHealthStatus.HealthStatus.HEALTHY,"HEALTHY"),"HEALTHY"));
  allResponse.add(new HostResponse("Host101","Cluster100","","",2,1,"","","",100000L,200000L,null,10L,0L,"rack info",null,null,new HostHealthStatus(HostHealthStatus.HealthStatus.HEALTHY,"HEALTHY"),"HEALTHY"));
  allResponse.add(new HostResponse("Host102","Cluster100","","",2,1,"","","",100000L,200000L,null,10L,0L,"rack info",null,null,new HostHealthStatus(HostHealthStatus.HealthStatus.HEALTHY,"HEALTHY"),"HEALTHY"));
  expect(managementController.getHosts(AbstractResourceProviderTest.Matcher.getHostRequestSet(null,"Cluster100",null))).andReturn(allResponse).once();
  replay(managementController);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  Set<String> propertyIds=new HashSet<String>();
  propertyIds.add(HostResourceProvider.HOST_CLUSTER_NAME_PROPERTY_ID);
  propertyIds.add(HostResourceProvider.HOST_NAME_PROPERTY_ID);
  Predicate predicate=new PredicateBuilder().property(HostResourceProvider.HOST_CLUSTER_NAME_PROPERTY_ID).equals("Cluster100").toPredicate();
  Request request=PropertyHelper.getReadRequest(propertyIds);
  Set<Resource> resources=provider.getResources(request,predicate);
  Assert.assertEquals(3,resources.size());
  Set<String> names=new HashSet<String>();
  for (  Resource resource : resources) {
    String clusterName=(String)resource.getPropertyValue(HostResourceProvider.HOST_CLUSTER_NAME_PROPERTY_ID);
    Assert.assertEquals("Cluster100",clusterName);
    names.add((String)resource.getPropertyValue(HostResourceProvider.HOST_NAME_PROPERTY_ID));
  }
  for (  HostResponse response : allResponse) {
    Assert.assertTrue(names.contains(response.getHostname()));
  }
  verify(managementController);
}
