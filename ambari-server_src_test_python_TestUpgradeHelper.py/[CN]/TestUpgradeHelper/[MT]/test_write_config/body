@patch('__builtin__.open')
@patch.object(os.path, 'isfile')
@patch('os.remove')
def test_write_config(self, remove_mock, isfile_mock, open_mock):
    test_data = {'test_field': 'test_value', }
    test_result = json.dumps(test_data)
    test_cfgtype = 'cfg.me'
    test_tag = 'tag.test'
    test_filename = ('%s_%s' % (test_cfgtype, test_tag))
    test_result = json.dumps(test_data)
    output = StringIO()
    isfile_mock.return_value = True
    open_mock.return_value = output
    upgradeHelper.write_config(test_data, test_cfgtype, test_tag)
    self.assertEquals(1, isfile_mock.call_count)
    self.assertEquals(1, remove_mock.call_count)
    self.assertEquals(1, open_mock.call_count)
    self.assertEquals(test_filename, isfile_mock.call_args[0][0])
    self.assertEquals(test_result, output.getvalue())
