@patch.object(upgradeHelper, 'curl')
@patch.object(upgradeHelper, 'write_mapping')
def test_get_mr1_mapping(self, write_mapping_mock, curl_mock):
    return_data = [{'host_components': [{'HostRoles': {'host_name': 'test.host.vm', }, }], }, {'host_components': [{'HostRoles': {'host_name': 'test1.host.vm', }, }], }, {'host_components': [{'HostRoles': {'host_name': 'test2.host.vm', }, }], }, {'host_components': [{'HostRoles': {'host_name': 'test3.host.vm', }, }], }]
    expect_data = {'MAPREDUCE_CLIENT': ['test.host.vm'], 'JOBTRACKER': ['test1.host.vm'], 'TASKTRACKER': ['test2.host.vm'], 'HISTORYSERVER': ['test3.host.vm'], }
    tricky_mock = MagicMock(side_effect=return_data)
    curl_mock.side_effect = tricky_mock
    upgradeHelper.get_mr1_mapping()
    self.assertEquals(write_mapping_mock.call_count, 1)
    self.assertEquals(expect_data, write_mapping_mock.call_args[0][0])
