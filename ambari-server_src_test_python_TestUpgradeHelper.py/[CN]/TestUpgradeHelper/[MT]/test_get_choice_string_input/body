@patch('__builtin__.raw_input')
def test_get_choice_string_input(self, raw_input_mock):
    yes = set(['yes', 'ye', 'y'])
    no = set(['no', 'n'])
    input_answers = ['yes', 'no', '']
    tricky_mock = MagicMock(side_effect=input_answers)
    raw_input_mock.side_effect = tricky_mock
    default = 'default value'
    expect_result = [True, False, default]
    actual_result = []
    for i in range(0, len(input_answers)):
        actual_result.append(upgradeHelper.get_choice_string_input('test prompt', default, yes, no))
    self.assertEquals(expect_result, actual_result)
