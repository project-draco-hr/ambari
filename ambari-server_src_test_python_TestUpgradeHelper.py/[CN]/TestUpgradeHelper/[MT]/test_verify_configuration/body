@patch.object(upgradeHelper, 'UpgradeCatalogFactory', autospec=True)
@patch.object(upgradeHelper, 'get_config_resp_all')
@patch.object(upgradeHelper, 'configuration_item_diff')
@patch.object(upgradeHelper, 'configuration_diff_analyze')
@patch('__builtin__.open')
def test_verify_configuration(self, open_mock, configuration_diff_analyze_mock, configuration_item_diff_mock, get_config_resp_all_mock, upgradecatalogfactory_mock):
    old_opt = upgradeHelper.Options.OPTIONS
    options = (lambda : '')
    options.from_stack = self.catalog_from
    options.to_stack = self.catalog_to
    options.upgrade_json = ''
    upgradeHelper.Options.OPTIONS = options
    upgradeHelper.Options.SERVICES = [self.required_service]
    upgradecatalogfactory_mock.return_value = UpgradeCatalogFactoryMock(self.test_catalog)
    get_config_resp_all_mock.return_value = {self.catalog_cfg_type: {'properties': {}, }, }
    upgradeHelper.verify_configuration()
    upgradeHelper.Options.OPTIONS = old_opt
    self.assertEqual(1, get_config_resp_all_mock.call_count)
    self.assertEqual(1, configuration_item_diff_mock.call_count)
    self.assertEqual(1, configuration_diff_analyze_mock.call_count)
    self.assertEqual(1, open_mock.call_count)
