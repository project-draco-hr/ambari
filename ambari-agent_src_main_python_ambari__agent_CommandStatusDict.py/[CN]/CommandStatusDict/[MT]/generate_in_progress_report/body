def generate_in_progress_report(self, command, report):
    '\n    Reads stdout/stderr for IN_PROGRESS command from disk file\n    and populates other fields of report.\n    '
    from ActionQueue import ActionQueue
    try:
        tmpout = open(report['tmpout'], 'r').read()
        tmperr = open(report['tmperr'], 'r').read()
    except Exception as err:
        logger.warn(err)
        tmpout = '...'
        tmperr = '...'
    try:
        with open(report['structuredOut'], 'r') as fp:
            tmpstructuredout = json.load(fp)
    except Exception:
        tmpstructuredout = '{}'
    grep = Grep()
    output = grep.tail(tmpout, Grep.OUTPUT_LAST_LINES)
    inprogress = self.generate_report_template(command)
    inprogress.update({'stdout': grep.filterMarkup(output), 'stderr': tmperr, 'structuredOut': tmpstructuredout, 'exitCode': 777, 'status': ActionQueue.IN_PROGRESS_STATUS, })
    return inprogress
