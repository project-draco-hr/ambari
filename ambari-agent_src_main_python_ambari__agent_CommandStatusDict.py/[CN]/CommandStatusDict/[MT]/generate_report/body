def generate_report(self):
    '\n    Generates status reports about commands that are IN_PROGRESS, COMPLETE or\n    FAILED. Statuses for COMPLETE or FAILED commands are forgotten after\n    generation\n    '
    from ActionQueue import ActionQueue
    with self.lock:
        resultReports = []
        resultComponentStatus = []
        for (key, item) in self.current_state.items():
            command = item[0]
            report = item[1]
            if (command['commandType'] in [ActionQueue.EXECUTION_COMMAND, ActionQueue.BACKGROUND_EXECUTION_COMMAND]):
                if (report['status'] != ActionQueue.IN_PROGRESS_STATUS):
                    resultReports.append(report)
                    del self.current_state[key]
                else:
                    in_progress_report = self.generate_in_progress_report(command, report)
                    resultReports.append(in_progress_report)
            elif (command['commandType'] == ActionQueue.STATUS_COMMAND):
                resultComponentStatus.append(report)
                del self.current_state[key]
            elif (command['commandType'] in [ActionQueue.AUTO_EXECUTION_COMMAND]):
                logger.debug(('AUTO_EXECUTION_COMMAND task deleted ' + str(command['commandId'])))
                del self.current_state[key]
                pass
        result = {'reports': resultReports, 'componentStatus': resultComponentStatus, }
        return result
