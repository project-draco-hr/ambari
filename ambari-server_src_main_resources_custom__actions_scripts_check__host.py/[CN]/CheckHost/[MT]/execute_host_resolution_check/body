def execute_host_resolution_check(self, config):
    print 'IP address forward resolution check started.'
    FORWARD_LOOKUP_REASON = 'FORWARD_LOOKUP'
    failedCount = 0
    failures = []
    if (config['commandParams']['hosts'] is not None):
        hosts = config['commandParams']['hosts'].split(',')
        successCount = len(hosts)
    else:
        successCount = 0
        hosts = ''
    socket.setdefaulttimeout(3)
    for host in hosts:
        try:
            host = host.strip()
            socket.gethostbyname(host)
        except socket.error as exception:
            successCount -= 1
            failedCount += 1
            failure = {'host': host, 'type': FORWARD_LOOKUP_REASON, 'cause': exception.args, }
            failures.append(failure)
    if (failedCount > 0):
        message = (('There were ' + str(failedCount)) + ' host(s) that could not resolve to an IP address.')
    else:
        message = 'All hosts resolved to an IP address.'
    print message
    host_resolution_check_structured_output = {'exit_code': 0, 'message': message, 'failed_count': failedCount, 'success_count': successCount, 'failures': failures, }
    return host_resolution_check_structured_output
