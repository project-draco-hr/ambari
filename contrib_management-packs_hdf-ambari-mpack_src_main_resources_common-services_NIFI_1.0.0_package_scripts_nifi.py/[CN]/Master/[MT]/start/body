def start(self, env):
    import params
    import status_params
    self.configure(env, is_starting=True)
    setup_ranger_nifi(upgrade_type=None)
    if (params.metrics_collector_host and params.nifi_ambari_reporting_enabled and self.check_is_fresh_install(self)):
        Execute(('echo "First time setup so generating flow.xml.gz" >> ' + params.nifi_node_log_file), user=params.nifi_user)
        flow_content = InlineTemplate(params.nifi_flow_content)
        File(format('{params.nifi_flow_config_dir}/flow.xml'), content=flow_content, owner=params.nifi_user, group=params.nifi_group, mode=384)
        Execute(format('cd {params.nifi_flow_config_dir}; mv flow.xml.gz flow_$(date +%d-%m-%Y).xml.gz ;'), user=params.nifi_user, ignore_failures=True)
        Execute(format('cd {params.nifi_flow_config_dir}; gzip flow.xml;'), user=params.nifi_user)
    Execute(((((('export JAVA_HOME=' + params.jdk64_home) + ';') + params.bin_dir) + '/nifi.sh start >> ') + params.nifi_node_log_file), user=params.nifi_user)
    if (not os.path.isfile((status_params.nifi_pid_dir + '/nifi.pid'))):
        Execute('sleep 5')
