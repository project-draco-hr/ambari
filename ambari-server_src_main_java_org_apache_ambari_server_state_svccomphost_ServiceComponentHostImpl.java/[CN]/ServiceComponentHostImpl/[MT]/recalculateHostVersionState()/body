{
  RepositoryVersionEntity repositoryVersion=null;
  String version=getVersion();
  if (getUpgradeState().equals(UpgradeState.IN_PROGRESS) || getUpgradeState().equals(UpgradeState.VERSION_MISMATCH) || State.UNKNOWN.toString().equals(version)) {
    return null;
  }
  final String hostName=getHostName();
  final long hostId=getHost().getHostId();
  final Set<Cluster> clustersForHost=clusters.getClustersForHost(hostName);
  if (clustersForHost.size() != 1) {
    throw new AmbariException("Host " + hostName + " should be assigned only to one cluster");
  }
  final Cluster cluster=clustersForHost.iterator().next();
  final StackId stackId=cluster.getDesiredStackVersion();
  final StackInfo stackInfo=ambariMetaInfo.getStack(stackId.getStackName(),stackId.getStackVersion());
  writeLock.lock();
  try {
    repositoryVersion=repositoryVersionDAO.findByStackNameAndVersion(stackId.getStackName(),version);
    if (null == repositoryVersion) {
      repositoryVersion=createRepositoryVersion(version,stackId,stackInfo);
    }
    final HostEntity host=hostDAO.findById(hostId);
    cluster.transitionHostVersionState(host,repositoryVersion,stackId);
  }
  finally {
    writeLock.unlock();
  }
  return repositoryVersion;
}
