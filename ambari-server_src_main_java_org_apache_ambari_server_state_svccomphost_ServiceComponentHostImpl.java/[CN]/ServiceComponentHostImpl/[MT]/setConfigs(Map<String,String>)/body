{
  try {
    writeLock.lock();
    Set<String> deletedTypes=new HashSet<String>();
    for (    String type : this.configs.keySet()) {
      if (!configs.containsKey(type)) {
        deletedTypes.add(type);
      }
    }
    long now=Long.valueOf(new java.util.Date().getTime());
    for (    Entry<String,String> entry : configs.entrySet()) {
      boolean contains=false;
      for (      HostComponentConfigMappingEntity mappingEntity : stateEntity.getHostComponentConfigMappingEntities()) {
        if (entry.getKey().equals(mappingEntity.getConfigType())) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Updating live config to ServiceComponentHost" + ", clusterId=" + stateEntity.getClusterId() + ", serviceName="+ stateEntity.getServiceName()+ ", componentName="+ stateEntity.getComponentName()+ ", hostname="+ stateEntity.getHostName()+ ", configType="+ entry.getKey()+ ", configVersionTag="+ entry.getValue());
          }
          contains=true;
          mappingEntity.setVersionTag(entry.getValue());
          mappingEntity.setTimestamp(now);
          break;
        }
      }
      if (!contains) {
        HostComponentConfigMappingEntity newEntity=new HostComponentConfigMappingEntity();
        newEntity.setClusterId(stateEntity.getClusterId());
        newEntity.setServiceName(stateEntity.getServiceName());
        newEntity.setComponentName(stateEntity.getComponentName());
        newEntity.setHostName(stateEntity.getHostName());
        newEntity.setConfigType(entry.getKey());
        newEntity.setVersionTag(entry.getValue());
        newEntity.setTimestamp(now);
        if (LOG.isDebugEnabled()) {
          LOG.debug("Adding new live config to ServiceComponentHost" + ", clusterId=" + stateEntity.getClusterId() + ", serviceName="+ stateEntity.getServiceName()+ ", componentName="+ stateEntity.getComponentName()+ ", hostname="+ stateEntity.getHostName()+ ", configType="+ entry.getKey()+ ", configVersionTag="+ entry.getValue());
        }
        stateEntity.getHostComponentConfigMappingEntities().add(newEntity);
        newEntity.setHostComponentStateEntity(stateEntity);
      }
    }
    if (!deletedTypes.isEmpty()) {
      List<HostComponentConfigMappingEntity> deleteEntities=hostComponentConfigMappingDAO.findByHostComponentAndType(stateEntity.getClusterId(),stateEntity.getServiceName(),stateEntity.getComponentName(),stateEntity.getHostName(),deletedTypes);
      for (      HostComponentConfigMappingEntity deleteEntity : deleteEntities) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Deleting live config to ServiceComponentHost" + ", clusterId=" + stateEntity.getClusterId() + ", serviceName="+ stateEntity.getServiceName()+ ", componentName="+ stateEntity.getComponentName()+ ", hostname="+ stateEntity.getHostName()+ ", configType="+ deleteEntity.getConfigType()+ ", configVersionTag="+ deleteEntity.getVersionTag());
        }
        stateEntity.getHostComponentConfigMappingEntities().remove(deleteEntity);
        if (persisted) {
          hostComponentConfigMappingDAO.remove(deleteEntity);
        }
      }
    }
    this.configs=configs;
    saveIfPersisted();
  }
  finally {
    writeLock.unlock();
  }
}
