{
  try {
    writeLock.lock();
    for (    Entry<String,Config> entry : configs.entrySet()) {
      HostComponentConfigMappingEntity newEntity=new HostComponentConfigMappingEntity();
      newEntity.setClusterId(desiredStateEntity.getClusterId());
      newEntity.setServiceName(desiredStateEntity.getServiceName());
      newEntity.setComponentName(desiredStateEntity.getComponentName());
      newEntity.setHostName(desiredStateEntity.getHostName());
      newEntity.setConfigType(entry.getKey());
      newEntity.setVersionTag(entry.getValue().getVersionTag());
      newEntity.setTimestamp(Long.valueOf(new java.util.Date().getTime()));
      if (!desiredStateEntity.getHostComponentConfigMappingEntities().contains(newEntity)) {
        newEntity.setHostComponentDesiredStateEntity(desiredStateEntity);
        desiredStateEntity.getHostComponentConfigMappingEntities().add(newEntity);
      }
 else {
        for (        HostComponentConfigMappingEntity entity : desiredStateEntity.getHostComponentConfigMappingEntities()) {
          if (entity.equals(newEntity)) {
            entity.setVersionTag(newEntity.getVersionTag());
            entity.setTimestamp(newEntity.getTimestamp());
          }
        }
      }
      this.desiredConfigs.put(entry.getKey(),entry.getValue().getVersionTag());
    }
  }
  finally {
    writeLock.unlock();
  }
}
