{
  Cluster cluster=null;
  Map<Long,ConfigGroup> configGroupMap=new HashMap<Long,ConfigGroup>();
  try {
    cluster=clusters.getClusterById(getClusterId());
    if (cluster != null) {
      configGroupMap=cluster.getConfigGroups();
    }
  }
 catch (  AmbariException ae) {
    LOG.warn("Unable to get cluster info for cluster id = " + getClusterId());
  }
  clusterGlobalLock.readLock().lock();
  try {
    writeLock.lock();
    try {
      actualConfigs=new HashMap<String,HostConfig>();
      for (      Entry<String,Map<String,String>> entry : configTags.entrySet()) {
        String type=entry.getKey();
        Map<String,String> values=new HashMap<String,String>(entry.getValue());
        String tag=values.get(ConfigHelper.CLUSTER_DEFAULT_TAG);
        values.remove(ConfigHelper.CLUSTER_DEFAULT_TAG);
        HostConfig hc=new HostConfig();
        hc.setDefaultVersionTag(tag);
        actualConfigs.put(type,hc);
        if (!values.isEmpty()) {
          for (          Entry<String,String> overrideEntry : values.entrySet()) {
            try {
              Long groupId=Long.parseLong(overrideEntry.getKey());
              ConfigGroup configGroup=configGroupMap.get(groupId);
              if (configGroup != null) {
                hc.getConfigGroupOverrides().put(groupId,overrideEntry.getValue());
              }
 else {
                LOG.info("Cannot find config group with id = " + groupId);
              }
            }
 catch (            Exception e) {
              LOG.warn("Unable to retrieve config group info for id = " + overrideEntry.getKey());
            }
          }
        }
      }
    }
  finally {
      writeLock.unlock();
    }
  }
  finally {
    clusterGlobalLock.readLock().unlock();
  }
}
