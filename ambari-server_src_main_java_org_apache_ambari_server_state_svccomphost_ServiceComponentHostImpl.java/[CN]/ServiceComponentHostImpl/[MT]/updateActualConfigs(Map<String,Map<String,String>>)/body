{
  Map<Long,ConfigGroup> configGroupMap;
  String clusterName=getClusterName();
  try {
    Cluster cluster=clusters.getCluster(clusterName);
    configGroupMap=cluster.getConfigGroups();
  }
 catch (  AmbariException e) {
    LOG.warn("Unable to find cluster, " + clusterName);
    return;
  }
  LOG.debug("Updating configuration tags for {}: {}",hostName,configTags);
  final ConcurrentMap<String,HostConfig> newActualConfigs=new ConcurrentHashMap<>();
  for (  Entry<String,Map<String,String>> entry : configTags.entrySet()) {
    String type=entry.getKey();
    Map<String,String> values=new HashMap<String,String>(entry.getValue());
    String tag=values.get(ConfigHelper.CLUSTER_DEFAULT_TAG);
    values.remove(ConfigHelper.CLUSTER_DEFAULT_TAG);
    HostConfig hc=new HostConfig();
    hc.setDefaultVersionTag(tag);
    newActualConfigs.put(type,hc);
    if (!values.isEmpty()) {
      for (      Entry<String,String> overrideEntry : values.entrySet()) {
        Long groupId=Long.parseLong(overrideEntry.getKey());
        hc.getConfigGroupOverrides().put(groupId,overrideEntry.getValue());
        if (!configGroupMap.containsKey(groupId)) {
          LOG.debug("Config group does not exist, id = " + groupId);
        }
      }
    }
  }
  actualConfigs=newActualConfigs;
}
