{
  injector.injectMembers(this);
  ReadWriteLock rwLock=new ReentrantReadWriteLock();
  this.readLock=rwLock.readLock();
  this.writeLock=rwLock.writeLock();
  this.serviceComponent=serviceComponent;
  this.desiredStateEntity=desiredStateEntity;
  this.stateEntity=stateEntity;
  this.stateMachine=clientStateMachineFactory.make(this);
  this.stateMachine.setCurrentState(stateEntity.getCurrentState());
  try {
    this.host=clusters.getHost(stateEntity.getHostName());
  }
 catch (  AmbariException e) {
    LOG.error("Host '{}' was not found",stateEntity.getHostName());
    throw new RuntimeException(e);
  }
  persisted=true;
}
