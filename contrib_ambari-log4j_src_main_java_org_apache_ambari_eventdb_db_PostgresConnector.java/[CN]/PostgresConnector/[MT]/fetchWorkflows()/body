{
  PreparedStatement ps=getPS(Statements.FW_PS);
  List<WorkflowDBEntry> workflows=new ArrayList<WorkflowDBEntry>();
  try {
    ResultSet rs=ps.executeQuery();
    while (rs.next()) {
      WorkflowDBEntry w=new WorkflowDBEntry();
      w.setWorkflowId(WorkflowFields.WORKFLOWID.getString(rs));
      w.setWorkflowName(WorkflowFields.WORKFLOWNAME.getString(rs));
      w.setUserName(WorkflowFields.USERNAME.getString(rs));
      w.setStartTime(WorkflowFields.STARTTIME.getLong(rs));
      long updateTime=WorkflowFields.LASTUPDATETIME.getLong(rs);
      if (updateTime > w.getStartTime())       w.setElapsedTime(updateTime - w.getStartTime());
 else       w.setElapsedTime(0);
      w.setNumJobsTotal(WorkflowFields.NUMJOBSTOTAL.getInt(rs));
      w.setNumJobsCompleted(WorkflowFields.NUMJOBSCOMPLETED.getInt(rs));
      w.setWorkflowContext(jsonMapper.readValue(WorkflowFields.WORKFLOWCONTEXT.getString(rs),WorkflowContext.class));
      workflows.add(w);
    }
    rs.close();
  }
 catch (  SQLException e) {
    throw new IOException(e);
  }
  return workflows;
}
