def action_create(self):
    with Environment.get_instance_copy() as env:
        with tempfile.NamedTemporaryFile() as tmpf:
            File(tmpf.name, content=Template(self.resource.repo_template, package_type=self.package_type, base_url=self.resource.base_url, components=' '.join(self.resource.components)))
            repo_file_name = format('{repo_file_name}.list', repo_file_name=self.resource.repo_file_name)
            repo_file_path = format('{repo_dir}/{repo_file_name}', repo_dir=self.repo_dir)
            if ((not os.path.isfile(repo_file_path)) or (not filecmp.cmp(tmpf.name, repo_file_path))):
                File(repo_file_path, content=StaticFile(tmpf.name))
                (retcode, out) = checked_call(format(self.update_cmd))
                missing_pkeys = set(re.findall(self.missing_pkey_regex, out))
                for pkey in missing_pkeys:
                    Execute(format(self.add_pkey_cmd), timeout=15, ignore_failures=True)
