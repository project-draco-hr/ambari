def __json_to_callable(self, json_definition):
    '\n    converts the json that represents all aspects of a definition\n    and makes an object that extends BaseAlert that is used for individual\n    '
    source = json_definition['source']
    source_type = source.get('type', '')
    if logger.isEnabledFor(logging.DEBUG):
        logger.debug('Creating job type {0} with {1}'.format(source_type, str(json_definition)))
    alert = None
    if (source_type == AlertSchedulerHandler.TYPE_METRIC):
        alert = MetricAlert(json_definition, source)
    elif (source_type == AlertSchedulerHandler.TYPE_PORT):
        alert = PortAlert(json_definition, source)
    elif (source_type == AlertSchedulerHandler.TYPE_SCRIPT):
        source['stacks_dir'] = self.stacks_dir
        alert = ScriptAlert(json_definition, source)
    return alert
