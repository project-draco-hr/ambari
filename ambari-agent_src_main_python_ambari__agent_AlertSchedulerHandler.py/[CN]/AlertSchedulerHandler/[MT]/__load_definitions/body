def __load_definitions(self):
    definitions = []
    try:
        for deffile in glob.glob(os.path.join(self.cachedir, '*.def')):
            with open(deffile, 'r') as f:
                command_json = json.load(f)
                for definition in command_json['alertDefinitions']:
                    obj = self.__json_to_callable(definition)
                    if (obj is not None):
                        obj.set_cluster(('' if (not ('clusterName' in command_json)) else command_json['clusterName']), ('' if (not ('hostName' in command_json)) else command_json['hostName']))
                        definitions.append(obj)
    except:
        import traceback
        traceback.print_exc()
        pass
    return definitions
