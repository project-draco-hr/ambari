def __init__(self, cachedir, stacks_dir, common_services_dir, host_scripts_dir, alert_grace_period, cluster_configuration, config, recovery_manager, in_minutes=True):
    self.cachedir = cachedir
    self.stacks_dir = stacks_dir
    self.common_services_dir = common_services_dir
    self.host_scripts_dir = host_scripts_dir
    self._cluster_configuration = cluster_configuration
    self._cluster_hashes = {}
    if (not os.path.exists(cachedir)):
        try:
            os.makedirs(cachedir)
        except:
            logger.critical('[AlertScheduler] Could not create the cache directory {0}'.format(cachedir))
    self.APS_CONFIG = {'apscheduler.threadpool.core_threads': 3, 'apscheduler.coalesce': True, 'apscheduler.standalone': False, 'apscheduler.misfire_grace_time': alert_grace_period, }
    self._collector = AlertCollector()
    self.__scheduler = Scheduler(self.APS_CONFIG)
    self.__in_minutes = in_minutes
    self.config = config
    self.recovery_manger = recovery_manager
    ExitHelper().register(self.exit_handler)
