{
  if (start < 0)   start=0;
  if (amount < 10 || amount > 100)   amount=10;
  boolean sortAscending=true;
  if (!sdir.toUpperCase().equals(PostgresConnector.SORT_ASC))   sortAscending=false;
  WorkflowFields field=null;
switch (col) {
case 0:
    field=WorkflowFields.WORKFLOWID;
  break;
case 1:
field=WorkflowFields.WORKFLOWNAME;
break;
case 2:
field=WorkflowFields.WORKFLOWID;
break;
case 3:
field=WorkflowFields.USERNAME;
break;
case 4:
field=WorkflowFields.WORKFLOWTAGS;
break;
case 5:
field=WorkflowFields.NUMJOBSTOTAL;
break;
case 6:
field=WorkflowFields.INPUTBYTES;
break;
case 7:
field=WorkflowFields.OUTPUTBYTES;
break;
case 8:
field=WorkflowFields.DURATION;
break;
case 9:
field=WorkflowFields.STARTTIME;
break;
case 10:
field=WorkflowFields.LASTUPDATETIME;
break;
default :
field=WorkflowFields.WORKFLOWID;
}
DataTable table=null;
PostgresConnector conn=null;
try {
conn=getConnector();
table=conn.fetchWorkflows(start,amount,searchTerm,echo,field,sortAscending,workflowId,workflowName,workflowType,userName,minJobs,maxJobs,minInputBytes,maxInputBytes,minOutputBytes,maxOutputBytes,minDuration,maxDuration,minStartTime,maxStartTime,minFinishTime,maxFinishTime,tagSearchTerm);
}
 catch (IOException e) {
LOG.error("Error interacting with RCA database ",e);
}
 finally {
if (conn != null) {
conn.close();
}
}
return table;
}
