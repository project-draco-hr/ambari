{
  TreeSet<Long> xPoints=new TreeSet<Long>();
  TreeSet<TaskAttempt> sortedAttempts=new TreeSet<TaskAttempt>(new Comparator<TaskAttempt>(){
    @Override public int compare(    TaskAttempt t1,    TaskAttempt t2){
      if (t1.getStartTime() < t2.getStartTime())       return -1;
 else       if (t1.getStartTime() > t2.getStartTime())       return 1;
      return t1.getTaskAttemptId().compareTo(t2.getTaskAttemptId());
    }
  }
);
  sortedAttempts.addAll(mapAttempts);
  sortedAttempts.addAll(reduceAttempts);
  getXPoints(sortedAttempts,xPoints);
  xPoints.add(submitTimeX);
  xPoints.add(finishTimeX);
  return xPoints;
}
