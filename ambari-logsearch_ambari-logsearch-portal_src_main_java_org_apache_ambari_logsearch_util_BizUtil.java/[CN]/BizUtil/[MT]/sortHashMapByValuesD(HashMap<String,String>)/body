{
  HashMap<String,String> sortedMap=new LinkedHashMap<String,String>();
  List<String> mapValues=new ArrayList<String>(passedMap.values());
  HashMap<String,String> invertedKeyValue=new HashMap<String,String>();
  Collections.sort(mapValues,new Comparator<String>(){
    @Override public int compare(    String s1,    String s2){
      return s1.compareToIgnoreCase(s2);
    }
  }
);
  Iterator<Entry<String,String>> it=passedMap.entrySet().iterator();
  while (it.hasNext()) {
    @SuppressWarnings("rawtypes") Map.Entry pair=(Map.Entry)it.next();
    invertedKeyValue.put("" + pair.getValue(),"" + pair.getKey());
    it.remove();
  }
  for (  String valueOfKey : mapValues) {
    sortedMap.put(invertedKeyValue.get(valueOfKey),valueOfKey);
  }
  return sortedMap;
}
