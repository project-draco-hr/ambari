{
  String textToSave="";
  HashMap<String,String> blankFieldsMap=new HashMap<String,String>();
  if (docList.isEmpty()) {
    return "no data";
  }
  SolrDocument docForBlankCaculation=docList.get(0);
  Collection<String> fieldsForBlankCaculation=docForBlankCaculation.getFieldNames();
  int maxLengthOfField=0;
  for (  String field : fieldsForBlankCaculation) {
    if (field.length() > maxLengthOfField)     maxLengthOfField=field.length();
  }
  for (  String field : fieldsForBlankCaculation) {
    blankFieldsMap.put(field,addBlanksToString(maxLengthOfField - field.length(),field));
  }
  for (  SolrDocument doc : docList) {
    StringBuffer textTowrite=new StringBuffer();
    if (doc.getFieldValue(LogSearchConstants.LOGTIME) != null) {
      textTowrite.append(doc.getFieldValue(LogSearchConstants.LOGTIME).toString() + " ");
    }
    if (doc.getFieldValue(LogSearchConstants.SOLR_LEVEL) != null) {
      textTowrite.append(doc.getFieldValue(LogSearchConstants.SOLR_LEVEL).toString()).append(" ");
    }
    if (doc.getFieldValue(LogSearchConstants.SOLR_THREAD_NAME) != null) {
      textTowrite.append(doc.getFieldValue(LogSearchConstants.SOLR_THREAD_NAME).toString().trim()).append(" ");
    }
    if (doc.getFieldValue(LogSearchConstants.SOLR_LOGGER_NAME) != null) {
      textTowrite.append(doc.getFieldValue(LogSearchConstants.SOLR_LOGGER_NAME).toString().trim()).append(" ");
    }
    if (doc.getFieldValue(LogSearchConstants.SOLR_FILE) != null && doc.getFieldValue(LogSearchConstants.SOLR_LINE_NUMBER) != null) {
      textTowrite.append(doc.getFieldValue(LogSearchConstants.SOLR_FILE).toString()).append(":").append(doc.getFieldValue(LogSearchConstants.SOLR_LINE_NUMBER).toString()).append(" ");
    }
    if (doc.getFieldValue(LogSearchConstants.SOLR_LOG_MESSAGE) != null) {
      textTowrite.append("- ").append(doc.getFieldValue(LogSearchConstants.SOLR_LOG_MESSAGE).toString());
    }
    textTowrite.append("\n");
    if (textTowrite != null)     textToSave+=textTowrite.toString();
  }
  return textToSave;
}
