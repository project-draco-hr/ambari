@patch('resource_management.libraries.functions.list_ambari_managed_repos.list_ambari_managed_repos')
@patch('ambari_commons.os_check.OSCheck.is_redhat_family')
@patch('resource_management.libraries.functions.packages_analyzer.allInstalledPackages')
@patch('resource_management.core.resources.packaging.Package.__new__')
@patch('resource_management.libraries.script.Script.put_structured_out')
def test_fail(self, put_structured_out_mock, Package__mock, allInstalledPackages_mock, is_redhat_family_mock, list_ambari_managed_repos_mock):
    allInstalledPackages_mock.side_effect = TestInstallPackages._add_packages_with_fail
    is_redhat_family_mock.return_value = True
    list_ambari_managed_repos_mock.return_value = []

    def side_effect(retcode):
        TestInstallPackages._install_failed = True
        raise Exception()
    Package__mock.side_effect = side_effect
    self.assertRaises(Fail, self.executeScript, 'scripts/install_packages.py', classname='InstallPackages', command='actionexecute', config_file='install_packages_config.json', target=RMFTestCase.TARGET_CUSTOM_ACTIONS, os_type=('Redhat', '6.4', 'Final'))
    self.assertTrue(put_structured_out_mock.called)
    self.assertEquals(put_structured_out_mock.call_args[0][0], {'stack_id': 'HDP-2.2', 'installed_repository_version': u'2.2.0.1-885', 'ambari_repositories': [], 'package_installation_result': 'FAIL', })
    self.assertResourceCalled('Repository', 'HDP-UTILS-2.2.0.1-885', base_url=u'http://repo1/HDP/centos5/2.x/updates/2.2.0.0', action=['create'], components=[u'HDP-UTILS', 'main'], repo_template=u'repo_suse_rhel.j2', repo_file_name=u'HDP-2.2.0.1-885', mirror_list=None, append_to_file=False)
    self.assertResourceCalled('Repository', 'HDP-2.2.0.1-885', base_url=u'http://repo1/HDP/centos5/2.x/updates/2.2.0.0', action=['create'], components=[u'HDP', 'main'], repo_template=u'repo_suse_rhel.j2', repo_file_name=u'HDP-2.2.0.1-885', mirror_list=None, append_to_file=True)
    self.assertNoMoreResources()
    TestInstallPackages._install_failed = False
