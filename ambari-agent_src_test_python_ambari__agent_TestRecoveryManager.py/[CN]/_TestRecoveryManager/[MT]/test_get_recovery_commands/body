@patch.object(RecoveryManager, '_now_')
def test_get_recovery_commands(self, time_mock):
    time_mock.side_effect = [1000, 1001, 1002, 1003, 1100, 1101, 1102, 1200, 1201, 1203, 4000, 4001, 4002, 4003, 4100, 4101, 4102, 4103, 4200, 4201, 4202, 4300, 4301, 4302, 4399, 4400, 4401, 4402]
    rm = RecoveryManager(tempfile.mktemp(), True)
    rm.update_config(15, 5, 1, 16, True, False, False, '', (-1))
    command1 = copy.deepcopy(self.command)
    rm.store_or_update_command(command1)
    rm.update_config(12, 5, 1, 15, True, False, False, 'NODEMANAGER', (-1))
    rm.update_current_status('NODEMANAGER', 'INSTALLED')
    rm.update_desired_status('NODEMANAGER', 'STARTED')
    self.assertEqual('INSTALLED', rm.get_current_status('NODEMANAGER'))
    self.assertEqual('STARTED', rm.get_desired_status('NODEMANAGER'))
    commands = rm.get_recovery_commands()
    self.assertEqual(1, len(commands))
    self.assertEqual('START', commands[0]['roleCommand'])
    rm.update_current_status('NODEMANAGER', 'INIT')
    rm.update_desired_status('NODEMANAGER', 'STARTED')
    commands = rm.get_recovery_commands()
    self.assertEqual(1, len(commands))
    self.assertEqual('INSTALL', commands[0]['roleCommand'])
    rm.update_current_status('NODEMANAGER', 'INIT')
    rm.update_desired_status('NODEMANAGER', 'INSTALLED')
    commands = rm.get_recovery_commands()
    self.assertEqual(1, len(commands))
    self.assertEqual('INSTALL', commands[0]['roleCommand'])
    rm.update_config(2, 5, 1, 5, True, True, False, '', (-1))
    rm.update_current_status('NODEMANAGER', 'INIT')
    rm.update_desired_status('NODEMANAGER', 'INSTALLED')
    commands = rm.get_recovery_commands()
    self.assertEqual(0, len(commands))
    rm.update_config(12, 5, 1, 15, True, False, False, 'NODEMANAGER', (-1))
    rm.update_current_status('NODEMANAGER', 'INIT')
    rm.update_desired_status('NODEMANAGER', 'INSTALLED')
    rm.store_or_update_command(command1)
    commands = rm.get_recovery_commands()
    self.assertEqual(1, len(commands))
    self.assertEqual('INSTALL', commands[0]['roleCommand'])
    rm.update_config_staleness('NODEMANAGER', False)
    rm.update_current_status('NODEMANAGER', 'INSTALLED')
    rm.update_desired_status('NODEMANAGER', 'INSTALLED')
    commands = rm.get_recovery_commands()
    self.assertEqual(0, len(commands))
    command_install = copy.deepcopy(self.command)
    command_install['desiredState'] = 'INSTALLED'
    rm.store_or_update_command(command_install)
    rm.update_config_staleness('NODEMANAGER', True)
    commands = rm.get_recovery_commands()
    self.assertEqual(1, len(commands))
    self.assertEqual('INSTALL', commands[0]['roleCommand'])
    rm.update_current_status('NODEMANAGER', 'STARTED')
    rm.update_desired_status('NODEMANAGER', 'STARTED')
    commands = rm.get_recovery_commands()
    self.assertEqual(1, len(commands))
    self.assertEqual('CUSTOM_COMMAND', commands[0]['roleCommand'])
    self.assertEqual('RESTART', commands[0]['hostLevelParams']['custom_command'])
    rm.update_current_status('NODEMANAGER', 'STARTED')
    rm.update_desired_status('NODEMANAGER', 'INSTALLED')
    commands = rm.get_recovery_commands()
    self.assertEqual(1, len(commands))
    self.assertEqual('STOP', commands[0]['roleCommand'])
    rm.update_config(12, 5, 1, 15, True, False, True, 'NODEMANAGER', (-1))
    rm.update_current_status('NODEMANAGER', 'INSTALL_FAILED')
    rm.update_desired_status('NODEMANAGER', 'INSTALLED')
    commands = rm.get_recovery_commands()
    self.assertEqual(1, len(commands))
    self.assertEqual('INSTALL', commands[0]['roleCommand'])
    pass
