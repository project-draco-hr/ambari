def test_recovery_required2(self):
    rm = RecoveryManager(tempfile.mktemp(), True, True)
    rm.update_config(15, 5, 1, 16, True, False, '', '')
    rm.update_current_status('NODEMANAGER', 'INSTALLED')
    rm.update_desired_status('NODEMANAGER', 'STARTED')
    self.assertTrue(rm.requires_recovery('NODEMANAGER'))
    rm = RecoveryManager(tempfile.mktemp(), True, True)
    rm.update_config(15, 5, 1, 16, True, False, 'NODEMANAGER', '')
    rm.update_current_status('NODEMANAGER', 'INSTALLED')
    rm.update_desired_status('NODEMANAGER', 'STARTED')
    self.assertTrue(rm.requires_recovery('NODEMANAGER'))
    rm.update_current_status('DATANODE', 'INSTALLED')
    rm.update_desired_status('DATANODE', 'STARTED')
    self.assertFalse(rm.requires_recovery('DATANODE'))
    rm = RecoveryManager(tempfile.mktemp(), True, True)
    rm.update_config(15, 5, 1, 16, True, False, '', 'NODEMANAGER')
    rm.update_current_status('NODEMANAGER', 'INSTALLED')
    rm.update_desired_status('NODEMANAGER', 'STARTED')
    self.assertFalse(rm.requires_recovery('NODEMANAGER'))
    rm.update_current_status('DATANODE', 'INSTALLED')
    rm.update_desired_status('DATANODE', 'STARTED')
    self.assertTrue(rm.requires_recovery('DATANODE'))
    rm.update_config(15, 5, 1, 16, True, False, '', 'NODEMANAGER')
    rm.update_config(15, 5, 1, 16, True, False, 'NODEMANAGER', '')
    rm.update_current_status('NODEMANAGER', 'INSTALLED')
    rm.update_desired_status('NODEMANAGER', 'STARTED')
    self.assertTrue(rm.requires_recovery('NODEMANAGER'))
    rm.update_current_status('DATANODE', 'INSTALLED')
    rm.update_desired_status('DATANODE', 'STARTED')
    self.assertFalse(rm.requires_recovery('DATANODE'))
    rm.update_config(15, 5, 1, 16, True, False, 'NODEMANAGER', 'NODEMANAGER')
    rm.update_current_status('NODEMANAGER', 'INSTALLED')
    rm.update_desired_status('NODEMANAGER', 'STARTED')
    self.assertTrue(rm.requires_recovery('NODEMANAGER'))
    rm.update_current_status('DATANODE', 'INSTALLED')
    rm.update_desired_status('DATANODE', 'STARTED')
    self.assertFalse(rm.requires_recovery('DATANODE'))
    pass
