{
  final Set<Map<String,Object>> propertyMaps=request.getProperties();
  modifyResources(new Command<Void>(){
    @Override public Void invoke() throws AmbariException {
      for (      Map<String,Object> propertyMap : propertyMaps) {
        Set<HashMap> widgetLayouts=(Set)propertyMap.get(WIDGETLAYOUT);
        for (        HashMap<String,String> widgetLayout : widgetLayouts) {
          final Long layoutId;
          try {
            layoutId=Long.parseLong(widgetLayout.get(ID));
          }
 catch (          Exception ex) {
            throw new AmbariException("WidgetLayout should have numerical id");
          }
          final WidgetLayoutEntity entity=widgetLayoutDAO.findById(layoutId);
          if (entity == null) {
            throw new AmbariException("There is no widget layout with id " + layoutId);
          }
        }
        UserEntity user=userDAO.findUserByName(propertyMap.get(WIDGETLAYOUT_USERNAME_PROPERTY_ID).toString());
        user.setActiveWidgetLayouts(gson.toJson(propertyMap.get(WIDGETLAYOUT)));
        userDAO.merge(user);
      }
      return null;
    }
  }
);
  return getRequestStatus(null);
}
