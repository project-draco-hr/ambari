{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  FeedService feedService=new TestFeedService("feedName");
  Method m=feedService.getClass().getMethod("getFeed",String.class,HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{null,getHttpHeaders(),getUriInfo(),"feedName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,feedService,m,args,null));
  feedService=new TestFeedService(null);
  m=feedService.getClass().getMethod("getFeeds",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{null,getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,feedService,m,args,null));
  feedService=new TestFeedService("feedName");
  m=feedService.getClass().getMethod("createFeed",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"feedName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,feedService,m,args,"body"));
  feedService=new TestFeedService("feedName");
  m=feedService.getClass().getMethod("updateFeed",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"feedName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,feedService,m,args,"body"));
  feedService=new TestFeedService("feedName");
  m=feedService.getClass().getMethod("deleteFeed",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"feedName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,feedService,m,args,null));
  return listInvocations;
}
