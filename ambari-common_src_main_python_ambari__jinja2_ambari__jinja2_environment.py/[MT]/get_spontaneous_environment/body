def get_spontaneous_environment(*args):
    'Return a new spontaneous environment.  A spontaneous environment is an\n    unnamed and unaccessible (in theory) environment that is used for\n    templates generated from a string and not from the file system.\n    '
    try:
        env = _spontaneous_environments.get(args)
    except TypeError:
        return Environment(*args)
    if (env is not None):
        return env
    _spontaneous_environments[args] = env = Environment(*args)
    env.shared = True
    return env
