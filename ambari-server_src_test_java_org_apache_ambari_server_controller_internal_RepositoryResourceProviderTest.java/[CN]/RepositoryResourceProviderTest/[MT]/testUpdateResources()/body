{
  Resource.Type type=Resource.Type.Repository;
  AmbariManagementController managementController=EasyMock.createMock(AmbariManagementController.class);
  RepositoryResponse rr=new RepositoryResponse(VAL_BASE_URL,VAL_OS,VAL_REPO_ID,VAL_REPO_NAME,null);
  Set<RepositoryResponse> allResponse=new HashSet<RepositoryResponse>();
  allResponse.add(rr);
  expect(managementController.getRepositories(EasyMock.<Set<RepositoryRequest>>anyObject())).andReturn(allResponse).times(1);
  managementController.updateRespositories(EasyMock.<Set<RepositoryRequest>>anyObject());
  replay(managementController);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put(RepositoryResourceProvider.REPOSITORY_BASE_URL_PROPERTY_ID,"http://bar.com");
  Request request=PropertyHelper.getUpdateRequest(properties,null);
  Predicate predicate=new PredicateBuilder().property(RepositoryResourceProvider.STACK_NAME_PROPERTY_ID).equals(VAL_STACK_NAME).and().property(RepositoryResourceProvider.STACK_VERSION_PROPERTY_ID).equals(VAL_STACK_VERSION).toPredicate();
  provider.updateResources(request,predicate);
  verify(managementController);
}
