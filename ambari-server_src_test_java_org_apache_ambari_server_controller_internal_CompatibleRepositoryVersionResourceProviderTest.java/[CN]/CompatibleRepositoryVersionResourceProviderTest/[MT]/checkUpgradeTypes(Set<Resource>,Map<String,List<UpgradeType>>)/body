{
  int count=0;
  Iterator<Resource> itr=resources.iterator();
  while (itr.hasNext()) {
    Resource res=itr.next();
    Map<String,Map<String,Object>> resPropMap=res.getPropertiesMap();
    for (    String resource : resPropMap.keySet()) {
      Map<String,Object> propMap=resPropMap.get(resource);
      String stackVersion=propMap.get("stack_version").toString();
      if (versionToUpgradeTypesMap.containsKey(stackVersion)) {
        List<UpgradeType> upgradeTypes=new ArrayList<>((Set<UpgradeType>)propMap.get("upgrade_types"));
        List<UpgradeType> expectedTypes=versionToUpgradeTypesMap.get(stackVersion);
        Collections.sort(upgradeTypes);
        Collections.sort(expectedTypes);
        assertEquals(expectedTypes,upgradeTypes);
        count++;
      }
    }
  }
  return count;
}
