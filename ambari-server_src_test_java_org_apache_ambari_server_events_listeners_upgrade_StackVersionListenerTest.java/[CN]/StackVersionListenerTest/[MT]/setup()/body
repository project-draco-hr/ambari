{
  cluster=createNiceMock(Cluster.class);
  sch=createNiceMock(ServiceComponentHost.class);
  service=createNiceMock(Service.class);
  serviceComponent=createNiceMock(ServiceComponent.class);
  componentInfo=createNiceMock(ComponentInfo.class);
  stackId=createNiceMock(StackId.class);
  ambariMetaInfo=createNiceMock(AmbariMetaInfo.class);
  expect(ambariMetaInfoProvider.get()).andReturn(ambariMetaInfo);
  expect(ambariMetaInfo.getComponent(anyString(),anyString(),anyString(),anyString())).andReturn(componentInfo);
  expect(cluster.getDesiredStackVersion()).andReturn(stackId).atLeastOnce();
  expect(stackId.getStackName()).andReturn(STACK_NAME);
  expect(stackId.getStackVersion()).andReturn(STACK_VERSION);
  expect(cluster.getClusterId()).andReturn(CLUSTER_ID);
  expect(cluster.getService(SERVICE_NAME)).andReturn(service).atLeastOnce();
  expect(service.getServiceComponent(SERVICE_COMPONENT_NAME)).andReturn(serviceComponent).atLeastOnce();
  expect(sch.getServiceName()).andReturn(SERVICE_NAME).atLeastOnce();
  expect(sch.getServiceComponentName()).andReturn(SERVICE_COMPONENT_NAME).atLeastOnce();
}
