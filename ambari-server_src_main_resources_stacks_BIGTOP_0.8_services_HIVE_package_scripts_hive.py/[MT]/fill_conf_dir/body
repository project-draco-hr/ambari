def fill_conf_dir(component_conf_dir):
    import params
    Directory(component_conf_dir, owner=params.hive_user, group=params.user_group, recursive=True)
    XmlConfig('mapred-site.xml', conf_dir=component_conf_dir, configurations=params.config['configurations']['mapred-site'], configuration_attributes=params.config['configuration_attributes']['mapred-site'], owner=params.hive_user, group=params.user_group, mode=420)
    XmlConfig('hive-site.xml', conf_dir=component_conf_dir, configurations=params.config['configurations']['hive-site'], configuration_attributes=params.config['configuration_attributes']['hive-site'], owner=params.hive_user, group=params.user_group, mode=420)
    File(format('{component_conf_dir}/hive-env.sh'), owner=params.hive_user, group=params.user_group, content=InlineTemplate(params.hive_env_sh_template))
    crt_file(format('{component_conf_dir}/hive-default.xml.template'))
    crt_file(format('{component_conf_dir}/hive-env.sh.template'))
    log4j_exec_filename = 'hive-exec-log4j.properties'
    if (params.log4j_exec_props != None):
        File(format('{component_conf_dir}/{log4j_exec_filename}'), mode=420, group=params.user_group, owner=params.hive_user, content=params.log4j_exec_props)
    elif os.path.exists('{component_conf_dir}/{log4j_exec_filename}.template'):
        File(format('{component_conf_dir}/{log4j_exec_filename}'), mode=420, group=params.user_group, owner=params.hive_user, content=StaticFile(format('{component_conf_dir}/{log4j_exec_filename}.template')))
    log4j_filename = 'hive-log4j.properties'
    if (params.log4j_props != None):
        File(format('{component_conf_dir}/{log4j_filename}'), mode=420, group=params.user_group, owner=params.hive_user, content=params.log4j_props)
    elif os.path.exists('{component_conf_dir}/{log4j_filename}.template'):
        File(format('{component_conf_dir}/{log4j_filename}'), mode=420, group=params.user_group, owner=params.hive_user, content=StaticFile(format('{component_conf_dir}/{log4j_filename}.template')))
