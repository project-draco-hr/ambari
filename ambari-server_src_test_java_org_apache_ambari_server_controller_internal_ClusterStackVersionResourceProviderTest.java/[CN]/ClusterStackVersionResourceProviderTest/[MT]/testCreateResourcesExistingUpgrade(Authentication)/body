{
  Resource.Type type=Resource.Type.ClusterStackVersion;
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  Clusters clusters=createNiceMock(Clusters.class);
  Cluster cluster=createNiceMock(Cluster.class);
  expect(managementController.getClusters()).andReturn(clusters).anyTimes();
  expect(managementController.getAmbariMetaInfo()).andReturn(ambariMetaInfo).anyTimes();
  expect(clusters.getCluster(anyObject(String.class))).andReturn(cluster);
  UpgradeEntity upgrade=new UpgradeEntity();
  upgrade.setDirection(Direction.UPGRADE);
  expect(cluster.getClusterName()).andReturn("c1").atLeastOnce();
  expect(cluster.getClusterId()).andReturn(1L).anyTimes();
  expect(cluster.getUpgradeInProgress()).andReturn(upgrade).once();
  replay(managementController,clusters,cluster);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(type,PropertyHelper.getPropertyIds(type),PropertyHelper.getKeyPropertyIds(type),managementController);
  injector.injectMembers(provider);
  Set<Map<String,Object>> propertySet=new LinkedHashSet<Map<String,Object>>();
  Map<String,Object> properties=new LinkedHashMap<String,Object>();
  properties.put(ClusterStackVersionResourceProvider.CLUSTER_STACK_VERSION_CLUSTER_NAME_PROPERTY_ID,"Cluster100");
  properties.put(ClusterStackVersionResourceProvider.CLUSTER_STACK_VERSION_REPOSITORY_VERSION_PROPERTY_ID,"2.2.0.1-885");
  properties.put(ClusterStackVersionResourceProvider.CLUSTER_STACK_VERSION_STACK_PROPERTY_ID,"HDP");
  properties.put(ClusterStackVersionResourceProvider.CLUSTER_STACK_VERSION_VERSION_PROPERTY_ID,"2.1.1");
  propertySet.add(properties);
  Request request=PropertyHelper.getCreateRequest(propertySet,null);
  SecurityContextHolder.getContext().setAuthentication(authentication);
  try {
    provider.createResources(request);
    Assert.fail("Expecting the create to fail due to an already installed version");
  }
 catch (  IllegalArgumentException iae) {
    Assert.assertEquals("Cluster c1 upgrade is in progress.  Cannot install packages.",iae.getMessage());
  }
  verify(cluster);
}
