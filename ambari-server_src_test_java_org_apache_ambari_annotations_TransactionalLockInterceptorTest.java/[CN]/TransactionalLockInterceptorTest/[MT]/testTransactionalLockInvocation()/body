{
  TransactionalLocks transactionalLocks=m_injector.getInstance(TransactionalLocks.class);
  ReadWriteLock readWriteLock=EasyMock.createStrictMock(ReadWriteLock.class);
  Lock readLock=EasyMock.createStrictMock(Lock.class);
  Lock writeLock=EasyMock.createStrictMock(Lock.class);
  EasyMock.expect(transactionalLocks.getLock(LockArea.HRC_STATUS_CACHE)).andReturn(readWriteLock).times(2);
  EasyMock.expect(readWriteLock.writeLock()).andReturn(writeLock).times(2);
  writeLock.lock();
  EasyMock.expectLastCall().once();
  writeLock.unlock();
  EasyMock.expectLastCall().once();
  EasyMock.replay(transactionalLocks,readWriteLock,readLock,writeLock);
  HostRoleCommandDAO hostRoleCommandDAO=m_injector.getInstance(HostRoleCommandDAO.class);
  hostRoleCommandDAO.mergeAll(new ArrayList<HostRoleCommandEntity>());
  EasyMock.verify(transactionalLocks,readWriteLock,readLock,writeLock);
}
