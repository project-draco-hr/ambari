{
  long timestamp=0;
  Assert.assertEquals(startState,impl.getState().getLiveState());
  ServiceComponentNodeEvent installEvent=createEvent(impl,++timestamp,startEvent);
  long startTime=timestamp;
  impl.handleEvent(installEvent);
  Assert.assertEquals(startTime,impl.getLastOpStartTime());
  Assert.assertEquals(-1,impl.getLastOpLastUpdateTime());
  Assert.assertEquals(-1,impl.getLastOpEndTime());
  Assert.assertEquals(inProgressState,impl.getState().getLiveState());
  ServiceComponentNodeEvent installEvent2=createEvent(impl,++timestamp,startEvent);
  boolean exceptionThrown=false;
  try {
    impl.handleEvent(installEvent2);
  }
 catch (  Exception e) {
    exceptionThrown=true;
  }
  Assert.assertTrue("Exception not thrown on invalid event",exceptionThrown);
  Assert.assertEquals(startTime,impl.getLastOpStartTime());
  Assert.assertEquals(-1,impl.getLastOpLastUpdateTime());
  Assert.assertEquals(-1,impl.getLastOpEndTime());
  Assert.assertEquals(inProgressState,impl.getState().getLiveState());
  ServiceComponentNodeOpInProgressEvent inProgressEvent1=new ServiceComponentNodeOpInProgressEvent(impl.getServiceComponentName(),impl.getNodeName(),++timestamp);
  impl.handleEvent(inProgressEvent1);
  Assert.assertEquals(startTime,impl.getLastOpStartTime());
  Assert.assertEquals(timestamp,impl.getLastOpLastUpdateTime());
  Assert.assertEquals(-1,impl.getLastOpEndTime());
  Assert.assertEquals(inProgressState,impl.getState().getLiveState());
  ServiceComponentNodeOpInProgressEvent inProgressEvent2=new ServiceComponentNodeOpInProgressEvent(impl.getServiceComponentName(),impl.getNodeName(),++timestamp);
  impl.handleEvent(inProgressEvent2);
  Assert.assertEquals(startTime,impl.getLastOpStartTime());
  Assert.assertEquals(timestamp,impl.getLastOpLastUpdateTime());
  Assert.assertEquals(-1,impl.getLastOpEndTime());
  Assert.assertEquals(inProgressState,impl.getState().getLiveState());
  ServiceComponentNodeOpFailedEvent failEvent=new ServiceComponentNodeOpFailedEvent(impl.getServiceComponentName(),impl.getNodeName(),++timestamp);
  long endTime=timestamp;
  impl.handleEvent(failEvent);
  Assert.assertEquals(startTime,impl.getLastOpStartTime());
  Assert.assertEquals(timestamp,impl.getLastOpLastUpdateTime());
  Assert.assertEquals(endTime,impl.getLastOpEndTime());
  Assert.assertEquals(failedState,impl.getState().getLiveState());
  ServiceComponentNodeOpRestartedEvent restartEvent=new ServiceComponentNodeOpRestartedEvent(impl.getServiceComponentName(),impl.getNodeName(),++timestamp);
  startTime=timestamp;
  impl.handleEvent(restartEvent);
  Assert.assertEquals(startTime,impl.getLastOpStartTime());
  Assert.assertEquals(-1,impl.getLastOpLastUpdateTime());
  Assert.assertEquals(-1,impl.getLastOpEndTime());
  Assert.assertEquals(inProgressState,impl.getState().getLiveState());
  ServiceComponentNodeOpInProgressEvent inProgressEvent3=new ServiceComponentNodeOpInProgressEvent(impl.getServiceComponentName(),impl.getNodeName(),++timestamp);
  impl.handleEvent(inProgressEvent3);
  Assert.assertEquals(startTime,impl.getLastOpStartTime());
  Assert.assertEquals(timestamp,impl.getLastOpLastUpdateTime());
  Assert.assertEquals(-1,impl.getLastOpEndTime());
  Assert.assertEquals(inProgressState,impl.getState().getLiveState());
  ServiceComponentNodeOpSucceededEvent succeededEvent=new ServiceComponentNodeOpSucceededEvent(impl.getServiceComponentName(),impl.getNodeName(),++timestamp);
  endTime=timestamp;
  impl.handleEvent(succeededEvent);
  Assert.assertEquals(startTime,impl.getLastOpStartTime());
  Assert.assertEquals(timestamp,impl.getLastOpLastUpdateTime());
  Assert.assertEquals(endTime,impl.getLastOpEndTime());
  Assert.assertEquals(completedState,impl.getState().getLiveState());
}
