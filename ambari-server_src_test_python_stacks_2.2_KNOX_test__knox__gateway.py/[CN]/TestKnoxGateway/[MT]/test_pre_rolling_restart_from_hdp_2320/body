@patch('os.remove')
@patch('os.path.exists')
@patch('os.path.isdir')
@patch('resource_management.core.shell.call')
def test_pre_rolling_restart_from_hdp_2320(self, call_mock, isdir_mock, path_exists_mock, remove_mock):
    '\n    In RU from HDP 2.3.2 to anything higher, should backup the data dir used by the source version, which\n    is /var/lib/knox/data_${source_version}\n    '
    isdir_mock.return_value = True
    config_file = (self.get_src_folder() + '/test/python/stacks/2.2/configs/knox_upgrade.json')
    with open(config_file, 'r') as f:
        json_content = json.load(f)
    source_version = '2.3.2.0-1000'
    version = '2.3.2.0-1001'
    json_content['commandParams']['version'] = version
    json_content['hostLevelParams']['current_version'] = source_version
    path_exists_mock.return_value = True
    mocks_dict = {}
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/knox_gateway.py'), classname='KnoxGateway', command='pre_rolling_restart', config_dict=json_content, hdp_stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES, call_mocks=[(0, None), (0, None)], mocks_dict=mocks_dict)
    self.assertResourceCalled('Execute', ('tar', '-zcvhf', '/tmp/knox-upgrade-backup/knox-conf-backup.tar', '/usr/hdp/current/knox-server/conf/'), sudo=True)
    self.assertResourceCalled('Execute', ('tar', '-zcvhf', '/tmp/knox-upgrade-backup/knox-data-backup.tar', ('/usr/hdp/%s/knox/data' % source_version)), sudo=True)
    "\n    self.assertResourceCalled('Execute', ('hdp-select', 'set', 'knox-server', version),\n        sudo = True,\n    )\n    self.assertResourceCalled('Execute', ('cp',\n     '/tmp/knox-upgrade-backup/knox-conf-backup.tar',\n     '/usr/hdp/current/knox-server/conf/knox-conf-backup.tar'),\n        sudo = True,\n    )\n    self.assertResourceCalled('Execute', ('tar',\n     '-xvf',\n     '/tmp/knox-upgrade-backup/knox-conf-backup.tar',\n     '-C',\n     '/usr/hdp/current/knox-server/conf/'),\n        sudo = True,\n    )\n    self.assertResourceCalled('File', '/usr/hdp/current/knox-server/conf/knox-conf-backup.tar',\n        action = ['delete'],\n    )\n    self.assertNoMoreResources()\n\n    self.assertEquals(1, mocks_dict['call'].call_count)\n    self.assertEquals(1, mocks_dict['checked_call'].call_count)\n    self.assertEquals(\n      ('conf-select', 'set-conf-dir', '--package', 'knox', '--stack-version', version, '--conf-version', '0'),\n       mocks_dict['checked_call'].call_args_list[0][0][0])\n    self.assertEquals(\n      ('conf-select', 'create-conf-dir', '--package', 'knox', '--stack-version', version, '--conf-version', '0'),\n       mocks_dict['call'].call_args_list[0][0][0])\n    "
