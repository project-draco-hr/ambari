{
  HdfsApi hdfsApi=createNiceMock(HdfsApi.class);
  hdfsApi.copy(eq("/tmp/script.pig"),startsWith("/tmp/.pigjobs/"));
  ByteArrayOutputStream do_stream=new ByteArrayOutputStream();
  FSDataOutputStream stream=new FSDataOutputStream(do_stream);
  expect(hdfsApi.create(anyString(),eq(true))).andReturn(stream);
  replay(hdfsApi);
  UserLocalObjects.setHdfsApi(hdfsApi,context);
  TempletonApi api=createStrictMock(TempletonApi.class);
  UserLocalObjects.setTempletonApi(api,context);
  TempletonApi.JobData data=api.new JobData();
  data.id="job_id_##";
  expect(api.runPigQuery((File)anyObject(),anyString(),eq("-useHCatalog"))).andReturn(data);
  replay(api);
  Response response=doCreateJob("Test","/tmp/script.pig","-useHCatalog",jobService);
  Assert.assertEquals(201,response.getStatus());
  reset(api);
  api.killJob(eq("job_id_##"));
  expect(api.checkJob(anyString())).andReturn(api.new JobInfo()).anyTimes();
  replay(api);
  JSONObject obj=(JSONObject)response.getEntity();
  PigJob job=((PigJob)obj.get("job"));
  response=jobService.killJob(job.getId(),"true");
  Assert.assertEquals(204,response.getStatus());
  thrown.expect(NotFoundFormattedException.class);
  jobService.getJob(job.getId());
}
