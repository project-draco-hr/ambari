def test_configure_managed_kdc(self):
    json_data = use_cases.get_manged_kdc_use_case()
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/kerberos_server.py'), classname='KerberosServer', command='configure', config_dict=json_data, stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    self.assertResourceCalled('Directory', use_cases.get_krb5_conf_dir(json_data), owner='root', group='root', mode=493, create_parents=True)
    file_path = ((use_cases.get_krb5_conf_dir(json_data) + '/') + use_cases.get_krb5_conf_file(json_data))
    self.assertResourceCalled('File', file_path, content=Template('krb5_conf.j2'), owner='root', group='root', mode=420)
    self.assertResourceCalled('Directory', use_cases.get_kdc_conf_dir(json_data), owner='root', group='root', mode=448, create_parents=True)
    file_path = ((use_cases.get_kdc_conf_dir(json_data) + '/') + use_cases.get_kdc_conf_file(json_data))
    self.assertResourceCalled('File', file_path, content=Template('kdc_conf.j2'), owner='root', group='root', mode=384)
    self.assertResourceCalled('Directory', use_cases.get_kadm5_acl_dir(json_data), owner='root', group='root', mode=448, create_parents=True)
    file_path = ((use_cases.get_kadm5_acl_dir(json_data) + '/') + use_cases.get_kadm5_acl_file(json_data))
    self.assertResourceCalled('File', file_path, content=Template('kadm5_acl.j2'), owner='root', group='root', mode=384)
