{
  StackId sourceStack=HDP_21_STACK;
  StackId targetStack=HDP_21_STACK;
  String sourceRepo=HDP_2_1_1_0;
  String targetRepo=HDP_2_1_1_1;
  makeUpgradeCluster(sourceStack,sourceRepo,targetStack,targetRepo);
  AmbariCustomCommandExecutionHelper helper=m_injector.getInstance(AmbariCustomCommandExecutionHelper.class);
  Host host=clusters.getHost("h1");
  Cluster cluster=clusters.getCluster(clusterName);
  Service service=installService(cluster,"HDFS");
  addServiceComponent(cluster,service,"NAMENODE");
  addServiceComponent(cluster,service,"DATANODE");
  ServiceComponentHost nnSCH=createNewServiceComponentHost(cluster,"HDFS","NAMENODE","h1");
  ServiceComponentHost dnSCH=createNewServiceComponentHost(cluster,"HDFS","DATANODE","h1");
  nnSCH.setStackVersion(nnSCH.getDesiredStackVersion());
  nnSCH.setVersion(targetRepo);
  dnSCH.setStackVersion(nnSCH.getDesiredStackVersion());
  dnSCH.setVersion(targetRepo);
  RequestEntity requestEntity=new RequestEntity();
  requestEntity.setClusterId(cluster.getClusterId());
  requestEntity.setRequestId(1L);
  requestEntity.setStartTime(System.currentTimeMillis());
  requestEntity.setCreateTime(System.currentTimeMillis());
  requestDAO.create(requestEntity);
  UpgradeEntity upgradeEntity=new UpgradeEntity();
  upgradeEntity.setId(1L);
  upgradeEntity.setClusterId(cluster.getClusterId());
  upgradeEntity.setRequestId(requestEntity.getRequestId());
  upgradeEntity.setUpgradePackage("");
  upgradeEntity.setFromVersion(sourceRepo);
  upgradeEntity.setToVersion(targetRepo);
  upgradeEntity.setUpgradeType(UpgradeType.NON_ROLLING);
  upgradeDAO.create(upgradeEntity);
  List<ServiceComponentHistoryEntity> historyEntites=serviceComponentDesiredStateDAO.findHistory(cluster.getClusterId(),nnSCH.getServiceName(),nnSCH.getServiceComponentName());
  assertEquals(0,historyEntites.size());
  RepositoryInfo repo=ambariMetaInfo.getRepository(sourceStack.getStackName(),sourceStack.getStackVersion(),"redhat6",sourceStack.getStackId());
  assertEquals(HDP_211_CENTOS6_REPO_URL,repo.getBaseUrl());
  verifyBaseRepoURL(helper,cluster,host,HDP_211_CENTOS6_REPO_URL);
  Map<String,String> commandParams=new HashMap<String,String>();
  commandParams.put(FinalizeUpgradeAction.REQUEST_ID,String.valueOf(requestEntity.getRequestId()));
  commandParams.put(FinalizeUpgradeAction.UPGRADE_DIRECTION_KEY,"upgrade");
  commandParams.put(FinalizeUpgradeAction.VERSION_KEY,targetRepo);
  ExecutionCommand executionCommand=new ExecutionCommand();
  executionCommand.setCommandParams(commandParams);
  executionCommand.setClusterName(clusterName);
  HostRoleCommand hostRoleCommand=hostRoleCommandFactory.create(null,null,null,null);
  hostRoleCommand.setExecutionCommandWrapper(new ExecutionCommandWrapper(executionCommand));
  finalizeUpgradeAction.setExecutionCommand(executionCommand);
  finalizeUpgradeAction.setHostRoleCommand(hostRoleCommand);
  CommandReport report=finalizeUpgradeAction.execute(null);
  assertNotNull(report);
  assertEquals(HostRoleStatus.COMPLETED.name(),report.getStatus());
  verifyBaseRepoURL(helper,cluster,host,"http://foo1");
  historyEntites=serviceComponentDesiredStateDAO.findHistory(cluster.getClusterId(),nnSCH.getServiceName(),nnSCH.getServiceComponentName());
  assertEquals(1,historyEntites.size());
}
