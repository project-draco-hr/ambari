{
  makeDowngradeCluster();
  Map<String,String> commandParams=new HashMap<String,String>();
  commandParams.put(FinalizeUpgradeAction.UPGRADE_DIRECTION_KEY,"downgrade");
  commandParams.put(FinalizeUpgradeAction.VERSION_KEY,HDP_2_2_0_0);
  ExecutionCommand executionCommand=new ExecutionCommand();
  executionCommand.setCommandParams(commandParams);
  executionCommand.setClusterName("c1");
  HostRoleCommand hostRoleCommand=hostRoleCommandFactory.create(null,null,null,null);
  hostRoleCommand.setExecutionCommandWrapper(new ExecutionCommandWrapper(executionCommand));
  FinalizeUpgradeAction action=m_injector.getInstance(FinalizeUpgradeAction.class);
  action.setExecutionCommand(executionCommand);
  action.setHostRoleCommand(hostRoleCommand);
  CommandReport report=action.execute(null);
  assertNotNull(report);
  assertEquals(HostRoleStatus.COMPLETED.name(),report.getStatus());
  for (  HostVersionEntity entity : hostVersionDAO.findByClusterAndHost("c1","h1")) {
    if (entity.getRepositoryVersion().getVersion().equals(HDP_2_2_0_0)) {
      assertEquals(RepositoryVersionState.CURRENT,entity.getState());
    }
 else     if (entity.getRepositoryVersion().getVersion().equals(HDP_2_2_1_0)) {
      assertEquals(RepositoryVersionState.INSTALLED,entity.getState());
    }
  }
  for (  ClusterVersionEntity entity : clusterVersionDAO.findByCluster("c1")) {
    if (entity.getRepositoryVersion().getVersion().equals(HDP_2_2_0_0)) {
      assertEquals(RepositoryVersionState.CURRENT,entity.getState());
    }
 else     if (entity.getRepositoryVersion().getVersion().equals(HDP_2_2_1_0)) {
      assertEquals(RepositoryVersionState.INSTALLED,entity.getState());
    }
  }
}
