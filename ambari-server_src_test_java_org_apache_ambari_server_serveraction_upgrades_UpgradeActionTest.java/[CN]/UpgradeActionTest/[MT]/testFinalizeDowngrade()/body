{
  StackId sourceStack=HDP_21_STACK;
  StackId targetStack=HDP_21_STACK;
  String sourceRepo=HDP_2_1_1_0;
  String targetRepo=HDP_2_1_1_1;
  makeDowngradeCluster(sourceStack,sourceRepo,targetStack,targetRepo);
  Map<String,String> commandParams=new HashMap<String,String>();
  commandParams.put(FinalizeUpgradeAction.UPGRADE_DIRECTION_KEY,"downgrade");
  commandParams.put(FinalizeUpgradeAction.VERSION_KEY,sourceRepo);
  commandParams.put(FinalizeUpgradeAction.ORIGINAL_STACK_KEY,sourceStack.getStackId());
  commandParams.put(FinalizeUpgradeAction.TARGET_STACK_KEY,targetStack.getStackId());
  ExecutionCommand executionCommand=new ExecutionCommand();
  executionCommand.setCommandParams(commandParams);
  executionCommand.setClusterName(clusterName);
  HostRoleCommand hostRoleCommand=hostRoleCommandFactory.create(null,null,null,null);
  hostRoleCommand.setExecutionCommandWrapper(new ExecutionCommandWrapper(executionCommand));
  finalizeUpgradeAction.setExecutionCommand(executionCommand);
  finalizeUpgradeAction.setHostRoleCommand(hostRoleCommand);
  CommandReport report=finalizeUpgradeAction.execute(null);
  assertNotNull(report);
  assertEquals(HostRoleStatus.COMPLETED.name(),report.getStatus());
  for (  HostVersionEntity entity : hostVersionDAO.findByClusterAndHost(clusterName,"h1")) {
    if (entity.getRepositoryVersion().getVersion().equals(sourceRepo)) {
      assertEquals(RepositoryVersionState.CURRENT,entity.getState());
    }
 else     if (entity.getRepositoryVersion().getVersion().equals(targetRepo)) {
      assertEquals(RepositoryVersionState.INSTALLED,entity.getState());
    }
  }
  for (  ClusterVersionEntity entity : clusterVersionDAO.findByCluster(clusterName)) {
    if (entity.getRepositoryVersion().getVersion().equals(sourceRepo)) {
      assertEquals(RepositoryVersionState.CURRENT,entity.getState());
    }
 else     if (entity.getRepositoryVersion().getVersion().equals(targetRepo)) {
      assertEquals(RepositoryVersionState.INSTALLED,entity.getState());
    }
  }
}
