{
  makeUpgradeCluster();
  Map<String,String> commandParams=new HashMap<String,String>();
  commandParams.put(FinalizeUpgradeAction.UPGRADE_DIRECTION_KEY,"upgrade");
  commandParams.put(FinalizeUpgradeAction.VERSION_KEY,HDP_2_2_1_0);
  ExecutionCommand executionCommand=new ExecutionCommand();
  executionCommand.setCommandParams(commandParams);
  executionCommand.setClusterName("c1");
  HostRoleCommand hostRoleCommand=hostRoleCommandFactory.create(null,null,null,null);
  hostRoleCommand.setExecutionCommandWrapper(new ExecutionCommandWrapper(executionCommand));
  FinalizeUpgradeAction action=m_injector.getInstance(FinalizeUpgradeAction.class);
  action.setExecutionCommand(executionCommand);
  action.setHostRoleCommand(hostRoleCommand);
  CommandReport report=action.execute(null);
  assertNotNull(report);
  assertEquals(HostRoleStatus.COMPLETED.name(),report.getStatus());
  AmbariMetaInfo metaInfo=m_injector.getInstance(AmbariMetaInfo.class);
  RepositoryInfo repo=metaInfo.getRepository("HDP","2.1.1","redhat6","HDP-2.1.1");
  assertEquals("http://s3.amazonaws.com/dev.hortonworks.com/HDP/centos6/2.x/BUILDS/2.1.1.0-118",repo.getBaseUrl());
  AmbariCustomCommandExecutionHelper helper=m_injector.getInstance(AmbariCustomCommandExecutionHelper.class);
  Clusters clusters=m_injector.getInstance(Clusters.class);
  Host host=clusters.getHost("h1");
  Cluster cluster=clusters.getCluster("c1");
  String repoInfo=helper.getRepoInfo(cluster,host);
  Gson gson=new Gson();
  JsonElement element=gson.fromJson(repoInfo,JsonElement.class);
  assertTrue(element.isJsonArray());
  JsonArray list=JsonArray.class.cast(element);
  assertEquals(1,list.size());
  JsonObject o=list.get(0).getAsJsonObject();
  assertTrue(o.has("baseUrl"));
  assertEquals("http://foo1",o.get("baseUrl").getAsString());
}
