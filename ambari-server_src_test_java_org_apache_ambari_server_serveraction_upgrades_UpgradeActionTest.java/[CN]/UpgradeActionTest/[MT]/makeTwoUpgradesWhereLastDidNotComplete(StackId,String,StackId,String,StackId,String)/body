{
  String hostName="h1";
  clusters.addCluster(clusterName,sourceStack);
  Cluster c=clusters.getCluster(clusterName);
  clusters.addHost(hostName);
  Host host=clusters.getHost(hostName);
  Map<String,String> hostAttributes=new HashMap<String,String>();
  hostAttributes.put("os_family","redhat");
  hostAttributes.put("os_release_version","6");
  host.setHostAttributes(hostAttributes);
  host.persist();
  m_helper.getOrCreateRepositoryVersion(sourceStack,sourceRepo);
  c.createClusterVersion(sourceStack,sourceRepo,"admin",RepositoryVersionState.UPGRADING);
  c.transitionClusterVersion(sourceStack,sourceRepo,RepositoryVersionState.CURRENT);
  m_helper.getOrCreateRepositoryVersion(midStack,midRepo);
  c.setDesiredStackVersion(midStack);
  c.createClusterVersion(midStack,midRepo,"admin",RepositoryVersionState.INSTALLING);
  c.transitionClusterVersion(midStack,midRepo,RepositoryVersionState.INSTALLED);
  c.transitionClusterVersion(midStack,midRepo,RepositoryVersionState.UPGRADING);
  c.transitionClusterVersion(midStack,midRepo,RepositoryVersionState.UPGRADED);
  c.transitionClusterVersion(midStack,midRepo,RepositoryVersionState.CURRENT);
  c.transitionClusterVersion(sourceStack,sourceRepo,RepositoryVersionState.INSTALLED);
  m_helper.getOrCreateRepositoryVersion(targetStack,targetRepo);
  c.setDesiredStackVersion(targetStack);
  c.createClusterVersion(targetStack,targetRepo,"admin",RepositoryVersionState.INSTALLING);
  c.transitionClusterVersion(targetStack,targetRepo,RepositoryVersionState.INSTALLED);
  c.transitionClusterVersion(targetStack,targetRepo,RepositoryVersionState.UPGRADING);
  c.transitionClusterVersion(targetStack,targetRepo,RepositoryVersionState.UPGRADED);
  HostVersionEntity entitySource=new HostVersionEntity();
  entitySource.setHostEntity(hostDAO.findByName(hostName));
  entitySource.setRepositoryVersion(repoVersionDAO.findByStackAndVersion(sourceStack,sourceRepo));
  entitySource.setState(RepositoryVersionState.INSTALL_FAILED);
  hostVersionDAO.create(entitySource);
  c.mapHostVersions(Collections.singleton(hostName),c.getCurrentClusterVersion(),RepositoryVersionState.CURRENT);
  HostVersionEntity entityTarget=new HostVersionEntity();
  entityTarget.setHostEntity(hostDAO.findByName(hostName));
  entityTarget.setRepositoryVersion(repoVersionDAO.findByStackAndVersion(targetStack,targetRepo));
  entityTarget.setState(RepositoryVersionState.UPGRADED);
  hostVersionDAO.create(entityTarget);
}
