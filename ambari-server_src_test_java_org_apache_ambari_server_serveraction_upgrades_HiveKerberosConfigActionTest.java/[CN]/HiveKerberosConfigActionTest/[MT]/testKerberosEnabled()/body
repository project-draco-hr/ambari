{
  final String zookeeperQuorum="c6401.ambari.apache.org:2181,c6402.ambari.apache.org:2181";
  PowerMockito.mockStatic(ZooKeeperQuorumCalculator.class);
  PowerMockito.when(ZooKeeperQuorumCalculator.getZooKeeperQuorumString(m_cluster)).thenReturn(zookeeperQuorum);
  Map<String,String> clusterEnvProperties=new HashMap<>();
  Map<String,String> hiveSiteProperties=new HashMap<>();
  clusterEnvProperties.put(HiveKerberosConfigAction.CLUSTER_ENV_SECURITY_ENABLED,"true");
  EasyMock.expect(m_clusterEnvConfig.getProperties()).andReturn(clusterEnvProperties).atLeastOnce();
  EasyMock.expect(m_hiveSiteConfig.getProperties()).andReturn(hiveSiteProperties).atLeastOnce();
  m_hiveSiteConfig.setProperties(EasyMock.anyObject(Map.class));
  EasyMock.expectLastCall().once();
  m_hiveSiteConfig.persist(false);
  EasyMock.expectLastCall().once();
  EasyMock.expect(m_cluster.getDesiredConfigByType(HiveKerberosConfigAction.CLUSTER_ENV_CONFIG_TYPE)).andReturn(m_clusterEnvConfig).atLeastOnce();
  EasyMock.expect(m_cluster.getDesiredConfigByType(HiveKerberosConfigAction.HIVE_SITE_CONFIG_TYPE)).andReturn(m_hiveSiteConfig).atLeastOnce();
  EasyMock.replay(m_executionCommand,m_clusters,m_cluster,m_clusterEnvConfig,m_hiveSiteConfig);
  m_action.execute(null);
  EasyMock.verify(m_executionCommand,m_clusters,m_cluster,m_clusterEnvConfig,m_hiveSiteConfig);
  Assert.assertEquals(zookeeperQuorum,hiveSiteProperties.get(HiveKerberosConfigAction.HIVE_SITE_ZK_QUORUM));
  Assert.assertEquals(zookeeperQuorum,hiveSiteProperties.get(HiveKerberosConfigAction.HIVE_SITE_ZK_CONNECT_STRING));
}
