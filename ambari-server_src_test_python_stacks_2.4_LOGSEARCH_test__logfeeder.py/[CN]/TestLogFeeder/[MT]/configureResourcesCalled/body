def configureResourcesCalled(self):
    self.assertResourceCalled('User', 'logfeeder', groups=['hadoop', 'agent_group'], fetch_nonlocal_groups=True)
    self.assertResourceCalled('Directory', '/var/log/ambari-logsearch-logfeeder', create_parents=True, owner='logfeeder', group='hadoop', cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/var/run/ambari-logsearch-logfeeder', create_parents=True, owner='logfeeder', group='hadoop', cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/etc/ambari-logsearch-logfeeder/conf/checkpoints', create_parents=True, owner='logfeeder', group='hadoop', cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/usr/lib/ambari-logsearch-logfeeder', create_parents=True, owner='logfeeder', group='hadoop', recursive_ownership=True, cd_access='a', mode=493)
    self.assertResourceCalled('Directory', '/etc/ambari-logsearch-logfeeder/conf', create_parents=True, recursive_ownership=True, owner='logfeeder', group='hadoop', cd_access='a', mode=493)
    self.assertResourceCalled('File', '/var/log/ambari-logsearch-logfeeder/logfeeder.out', mode=420, content='', owner='logfeeder', group='hadoop')
    self.assertResourceCalled('File', '/etc/ambari-logsearch-logfeeder/conf/logfeeder.properties', content=Template('logfeeder.properties.j2'), owner='logfeeder', group='hadoop')
    self.assertResourceCalled('File', '/etc/ambari-logsearch-logfeeder/conf/logfeeder-env.sh', mode=493, owner='logfeeder', group='hadoop', content=InlineTemplate(self.getConfig()['configurations']['logfeeder-env']['content']))
    self.assertResourceCalled('File', '/etc/ambari-logsearch-logfeeder/conf/log4j.xml', content=InlineTemplate(self.getConfig()['configurations']['logfeeder-log4j']['content']), owner='logfeeder', group='hadoop')
    self.assertResourceCalled('File', '/etc/ambari-logsearch-logfeeder/conf/grok-patterns', content=Template('grok-patterns.j2'), owner='logfeeder', group='hadoop', encoding='utf-8')
    logfeeder_supported_services = ['accumulo', 'ambari', 'ams', 'atlas', 'falcon', 'hbase', 'hdfs', 'hive', 'kafka', 'knox', 'logsearch', 'nifi', 'oozie', 'ranger', 'storm', 'yarn', 'zookeeper']
    logfeeder_config_file_names = (['global.config.json', 'output.config.json'] + [('input.config-%s.json' % tag) for tag in logfeeder_supported_services])
    for file_name in logfeeder_config_file_names:
        self.assertResourceCalled('File', ('/etc/ambari-logsearch-logfeeder/conf/' + file_name), content=Template((file_name + '.j2')), owner='logfeeder', group='hadoop')
