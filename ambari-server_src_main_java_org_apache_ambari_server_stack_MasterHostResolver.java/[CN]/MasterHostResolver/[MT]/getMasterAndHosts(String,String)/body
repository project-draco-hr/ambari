{
  HostsType hostsType=new HostsType();
  if (serviceName == null || componentName == null) {
    return null;
  }
  Set<String> componentHosts=cluster.getHosts(serviceName,componentName);
  if (0 == componentHosts.size()) {
    return null;
  }
  hostsType.hosts=componentHosts;
  Service s=null;
  try {
    s=Service.valueOf(serviceName.toUpperCase());
  }
 catch (  Exception e) {
    return hostsType;
  }
switch (s) {
case HDFS:
    if (componentName.equalsIgnoreCase("NAMENODE")) {
      Map<Status,String> pair=getNameNodePair(componentHosts);
      if (pair != null) {
        hostsType.master=pair.containsKey(Status.ACTIVE) ? pair.get(Status.ACTIVE) : null;
        hostsType.secondary=pair.containsKey(Status.STANDBY) ? pair.get(Status.STANDBY) : null;
      }
 else {
        hostsType.master=componentHosts.iterator().next();
      }
    }
  break;
case YARN:
if (componentName.equalsIgnoreCase("RESOURCEMANAGER")) {
  resolveResourceManagers(hostsType);
}
break;
case HBASE:
if (componentName.equalsIgnoreCase("HBASE_MASTER")) {
resolveHBaseMasters(hostsType);
}
break;
}
return hostsType;
}
