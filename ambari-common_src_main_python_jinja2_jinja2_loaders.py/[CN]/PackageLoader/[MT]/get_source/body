def get_source(self, environment, template):
    pieces = split_template_path(template)
    p = '/'.join(((self.package_path,) + tuple(pieces)))
    if (not self.provider.has_resource(p)):
        raise TemplateNotFound(template)
    filename = uptodate = None
    if self.filesystem_bound:
        filename = self.provider.get_resource_filename(self.manager, p)
        mtime = path.getmtime(filename)

        def uptodate():
            try:
                return (path.getmtime(filename) == mtime)
            except OSError:
                return False
    source = self.provider.get_resource_string(self.manager, p)
    return (source.decode(self.encoding), filename, uptodate)
