{
  ResourceDefinition resourceDefinition=createNiceMock(ResourceDefinition.class);
  Map<Resource.Type,String> mapIds=new HashMap<Resource.Type,String>();
  expect(resourceDefinition.getType()).andReturn(Resource.Type.Host).anyTimes();
  Set<SubResourceDefinition> setChildren=new HashSet<SubResourceDefinition>();
  expect(resourceDefinition.getSubResourceDefinitions()).andReturn(setChildren).anyTimes();
  replay(resourceDefinition);
  ResourceInstanceImpl instance=new TestQuery(mapIds,resourceDefinition);
  PredicateBuilder pb=new PredicateBuilder();
  Predicate predicate=pb.property("Hosts/host_name").equals("host:2").toPredicate();
  instance.setUserPredicate(predicate);
  Result result=instance.execute();
  verify(resourceDefinition);
  TreeNode<Resource> tree=result.getResultTree();
  Assert.assertEquals(1,tree.getChildren().size());
  TreeNode<Resource> hostNode=tree.getChild("Host:1");
  Assert.assertEquals("Host:1",hostNode.getName());
  Assert.assertEquals(Resource.Type.Host,hostNode.getObject().getType());
  Assert.assertEquals("host:2",hostNode.getObject().getPropertyValue("Hosts/host_name"));
}
