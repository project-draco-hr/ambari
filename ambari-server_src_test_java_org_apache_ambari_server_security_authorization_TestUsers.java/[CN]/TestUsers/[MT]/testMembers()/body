{
  final String groupName="engineering";
  final String groupName2="engineering2";
  users.createGroup(groupName);
  users.createGroup(groupName2);
  users.createUser("user1","user1");
  users.createUser("user2","user2");
  users.createUser("user3","user3");
  users.addMemberToGroup(groupName,"user1");
  users.addMemberToGroup(groupName,"user2");
  assertEquals(2,users.getAllMembers(groupName).size());
  assertEquals(0,users.getAllMembers(groupName2).size());
  try {
    users.getAllMembers("non existing");
    Assert.fail("It shouldn't be possible to call getAllMembers() on non-existing group");
  }
 catch (  Exception ex) {
  }
  assertEquals(users.getGroupMembers("unexisting"),null);
  users.removeMemberFromGroup(groupName,"user1");
  assertEquals(1,groupDAO.findGroupByName(groupName).getMemberEntities().size());
  assertEquals("user2",groupDAO.findGroupByName(groupName).getMemberEntities().iterator().next().getUser().getUserName());
}
