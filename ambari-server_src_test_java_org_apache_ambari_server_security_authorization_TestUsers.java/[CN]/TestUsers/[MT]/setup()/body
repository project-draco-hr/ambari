{
  InMemoryDefaultTestModule module=new InMemoryDefaultTestModule();
  injector=Guice.createInjector(module);
  injector.getInstance(GuiceJpaInitializer.class);
  injector.injectMembers(this);
  Authentication auth=new UsernamePasswordAuthenticationToken("admin",null);
  SecurityContextHolder.getContext().setAuthentication(auth);
  ResourceTypeEntity resourceTypeEntity=new ResourceTypeEntity();
  resourceTypeEntity.setId(ResourceType.AMBARI.getId());
  resourceTypeEntity.setName(ResourceType.AMBARI.name());
  resourceTypeDAO.create(resourceTypeEntity);
  ResourceEntity resourceEntity=new ResourceEntity();
  resourceEntity.setId(ResourceEntity.AMBARI_RESOURCE_ID);
  resourceEntity.setResourceType(resourceTypeEntity);
  resourceDAO.create(resourceEntity);
  PrincipalTypeEntity principalTypeEntity=new PrincipalTypeEntity();
  principalTypeEntity.setName("ROLE");
  principalTypeEntity=principalTypeDAO.merge(principalTypeEntity);
  PrincipalEntity principalEntity=new PrincipalEntity();
  principalEntity.setPrincipalType(principalTypeEntity);
  principalEntity=principalDAO.merge(principalEntity);
  PermissionEntity adminPermissionEntity=new PermissionEntity();
  adminPermissionEntity.setId(PermissionEntity.AMBARI_ADMINISTRATOR_PERMISSION);
  adminPermissionEntity.setPermissionName(PermissionEntity.AMBARI_ADMINISTRATOR_PERMISSION_NAME);
  adminPermissionEntity.setPrincipal(principalEntity);
  adminPermissionEntity.setResourceType(resourceTypeEntity);
  permissionDAO.create(adminPermissionEntity);
}
