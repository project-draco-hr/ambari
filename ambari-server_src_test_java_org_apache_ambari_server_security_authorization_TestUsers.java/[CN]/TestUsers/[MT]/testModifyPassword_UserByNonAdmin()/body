{
  Authentication auth=new UsernamePasswordAuthenticationToken("user2",null);
  SecurityContextHolder.getContext().setAuthentication(auth);
  users.createUser("user","user");
  users.createUser("user2","user2");
  UserEntity userEntity=userDAO.findLocalUserByName("user");
  assertNotSame("user",userEntity.getUserPassword());
  assertTrue(passwordEncoder.matches("user",userEntity.getUserPassword()));
  try {
    users.modifyPassword("user","user2","user_new_password");
    Assert.fail("Exception should be thrown here as user2 can't change password of user");
  }
 catch (  AmbariException ex) {
  }
}
