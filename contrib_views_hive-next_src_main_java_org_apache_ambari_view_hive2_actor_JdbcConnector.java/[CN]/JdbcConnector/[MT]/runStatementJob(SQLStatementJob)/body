{
  executing=true;
  jobId=message.getJobId();
  logFile=message.getLogFile();
  executionType=message.getType();
  commandSender=getSender();
  if (!checkConnection())   return;
  for (  String statement : message.getStatements()) {
    statementQueue.add(statement);
  }
  statementsCount=statementQueue.size();
  if (isAsync() && jobId.isPresent()) {
    updateJobStatus(jobId.get(),Job.JOB_STATE_RUNNING);
    startInactivityScheduler();
  }
  self().tell(new ExecuteNextStatement(),self());
}
