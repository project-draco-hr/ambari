{
  ConfigHelper configHelper=injector.getInstance(ConfigHelper.class);
  AmbariManagementController controller=injector.getInstance(AmbariManagementController.class);
  Clusters clusters=controller.getClusters();
  if (clusters == null) {
    return;
  }
  Map<String,Cluster> clusterMap=clusters.getClusters();
  if (clusterMap != null && !clusterMap.isEmpty()) {
    for (    Cluster cluster : clusterMap.values()) {
      Map<String,Set<String>> newProperties=new HashMap<String,Set<String>>();
      Map<String,Set<String>> overriddenProperties=new HashMap<String,Set<String>>();
      Set<PropertyInfo> stackProperties=configHelper.getStackProperties(cluster);
      for (      String serviceName : cluster.getServices().keySet()) {
        Set<PropertyInfo> properties=configHelper.getServiceProperties(cluster,serviceName);
        if (properties == null) {
          continue;
        }
        properties.addAll(stackProperties);
        for (        PropertyInfo property : properties) {
          if (property.getValue() == null) {
            continue;
          }
          String configType=ConfigHelper.fileNameToConfigType(property.getFilename());
          Config clusterConfigs=cluster.getDesiredConfigByType(configType);
        }
      }
      for (      Entry<String,Set<String>> newProperty : newProperties.entrySet()) {
        updateConfigurationPropertiesWithValuesFromXml(newProperty.getKey(),newProperty.getValue(),false,true);
      }
      for (      Entry<String,Set<String>> overriddenProperty : overriddenProperties.entrySet()) {
        updateConfigurationPropertiesWithValuesFromXml(overriddenProperty.getKey(),overriddenProperty.getValue(),true,true);
      }
    }
  }
}
