{
  ConfigHelper configHelper=injector.getInstance(ConfigHelper.class);
  AmbariManagementController controller=injector.getInstance(AmbariManagementController.class);
  Clusters clusters=controller.getClusters();
  if (clusters == null) {
    return;
  }
  Map<String,Cluster> clusterMap=clusters.getClusters();
  if (clusterMap != null && !clusterMap.isEmpty()) {
    for (    Cluster cluster : clusterMap.values()) {
      Map<String,Set<String>> toAddProperties=new HashMap<String,Set<String>>();
      Map<String,Set<String>> toUpdateProperties=new HashMap<String,Set<String>>();
      Map<String,Set<String>> toRemoveProperties=new HashMap<String,Set<String>>();
      Set<PropertyInfo> stackProperties=configHelper.getStackProperties(cluster);
      for (      String serviceName : cluster.getServices().keySet()) {
        Set<PropertyInfo> properties=configHelper.getServiceProperties(cluster,serviceName);
        if (properties == null) {
          continue;
        }
        properties.addAll(stackProperties);
        for (        PropertyInfo property : properties) {
          String configType=ConfigHelper.fileNameToConfigType(property.getFilename());
          Config clusterConfigs=cluster.getDesiredConfigByType(configType);
          PropertyUpgradeBehavior upgradeBehavior=property.getPropertyAmbariUpgradeBehavior();
          if (upgradeBehavior.isDelete()) {
            if (!toRemoveProperties.containsKey(configType)) {
              toRemoveProperties.put(configType,new HashSet<String>());
            }
            toRemoveProperties.get(configType).add(property.getName());
          }
 else           if (upgradeBehavior.isUpdate()) {
            if (!toUpdateProperties.containsKey(configType)) {
              toUpdateProperties.put(configType,new HashSet<String>());
            }
            toUpdateProperties.get(configType).add(property.getName());
          }
 else           if (upgradeBehavior.isAdd()) {
            if (!toAddProperties.containsKey(configType)) {
              toAddProperties.put(configType,new HashSet<String>());
            }
            toAddProperties.get(configType).add(property.getName());
          }
        }
      }
      for (      Entry<String,Set<String>> newProperty : toAddProperties.entrySet()) {
        String newPropertyKey=newProperty.getKey();
        updateConfigurationPropertiesWithValuesFromXml(newPropertyKey,newProperty.getValue(),false,true);
      }
      for (      Entry<String,Set<String>> newProperty : toUpdateProperties.entrySet()) {
        String newPropertyKey=newProperty.getKey();
        updateConfigurationPropertiesWithValuesFromXml(newPropertyKey,newProperty.getValue(),true,false);
      }
      for (      Entry<String,Set<String>> toRemove : toRemoveProperties.entrySet()) {
        String newPropertyKey=toRemove.getKey();
        updateConfigurationPropertiesWithValuesFromXml(newPropertyKey,Collections.<String>emptySet(),toRemove.getValue(),false,true);
      }
    }
  }
}
