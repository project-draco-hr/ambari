{
  String nameNodeUrl;
  String blockSizeString;
  logger.info("Entering init");
  currentServiceName=getFirstConfigPrefix(conf);
  databaseUrl=conf.getString(DATABASE_URL_KEY);
  if (databaseUrl == null)   throw new MetricsException("databaseUrl required in the metrics2 configuration for SqlServerSink.");
  try {
    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
  }
 catch (  ClassNotFoundException cnfe) {
    throw new MetricsException("SqlServerSink requires the Microsoft JDBC driver for SQL Server.");
  }
  hadoopConfig=new org.apache.hadoop.conf.Configuration();
  if (hadoopConfig != null) {
    nameNodeUrl=hadoopConfig.get(NAME_URL_KEY);
    if (nameNodeUrl != null) {
      Matcher matcher=NAME_URL_REGEX.matcher(nameNodeUrl);
      if (matcher.find()) {
        clusterName=matcher.group(1);
      }
    }
    blockSizeString=hadoopConfig.get(DFS_BLOCK_SIZE_KEY);
    if (blockSizeString != null) {
      try {
        blockSize=Integer.parseInt(blockSizeString);
      }
 catch (      NumberFormatException nfe) {
      }
    }
  }
  logger.info("Exit init, cluster name = " + clusterName);
}
