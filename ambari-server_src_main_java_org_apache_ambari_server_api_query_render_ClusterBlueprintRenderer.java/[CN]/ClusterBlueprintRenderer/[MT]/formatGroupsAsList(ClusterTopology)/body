{
  List<Map<String,Object>> listHostGroups=new ArrayList<Map<String,Object>>();
  for (  HostGroupInfo group : topology.getHostGroupInfo().values()) {
    Map<String,Object> mapGroupProperties=new HashMap<String,Object>();
    listHostGroups.add(mapGroupProperties);
    String name=group.getHostGroupName();
    mapGroupProperties.put("name",name);
    mapGroupProperties.put("cardinality",String.valueOf(group.getHostNames().size()));
    mapGroupProperties.put("components",processHostGroupComponents(topology.getBlueprint().getHostGroup(name)));
    Configuration configuration=topology.getHostGroupInfo().get(name).getConfiguration();
    List<Map<String,Map<String,String>>> configList=new ArrayList<Map<String,Map<String,String>>>();
    for (    Map.Entry<String,Map<String,String>> typeEntry : configuration.getProperties().entrySet()) {
      Map<String,Map<String,String>> propertyMap=Collections.singletonMap(typeEntry.getKey(),typeEntry.getValue());
      configList.add(propertyMap);
    }
    mapGroupProperties.put("configurations",configList);
  }
  return listHostGroups;
}
