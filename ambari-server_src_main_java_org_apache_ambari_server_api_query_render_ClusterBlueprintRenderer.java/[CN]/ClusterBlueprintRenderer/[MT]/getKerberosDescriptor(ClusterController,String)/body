{
  PredicateBuilder pb=new PredicateBuilder();
  Predicate predicate=pb.begin().property("Artifacts/cluster_name").equals(clusterName).and().property(ArtifactResourceProvider.ARTIFACT_NAME_PROPERTY).equals("kerberos_descriptor").end().toPredicate();
  ResourceProvider artifactProvider=clusterController.ensureResourceProvider(Resource.Type.Artifact);
  org.apache.ambari.server.controller.spi.Request request=new RequestImpl(Collections.<String>emptySet(),Collections.<Map<String,Object>>emptySet(),Collections.<String,String>emptyMap(),null);
  Set<Resource> response=null;
  try {
    response=artifactProvider.getResources(request,predicate);
  }
 catch (  SystemException|UnsupportedPropertyException|NoSuchResourceException|NoSuchParentResourceException e) {
    throw new AmbariException("An unknown error occurred while trying to obtain the cluster kerberos descriptor",e);
  }
  if (response != null && !response.isEmpty()) {
    Resource descriptorResource=response.iterator().next();
    Map<String,Map<String,Object>> propertyMap=descriptorResource.getPropertiesMap();
    if (propertyMap != null) {
      Map<String,Object> artifactData=propertyMap.get(ArtifactResourceProvider.ARTIFACT_DATA_PROPERTY);
      Map<String,Object> artifactDataProperties=propertyMap.get(ArtifactResourceProvider.ARTIFACT_DATA_PROPERTY + "/properties");
      HashMap<String,Object> data=new HashMap<String,Object>();
      if (artifactData != null) {
        data.putAll(artifactData);
      }
      if (artifactDataProperties != null) {
        data.put("properties",artifactDataProperties);
      }
      return data;
    }
  }
  return null;
}
