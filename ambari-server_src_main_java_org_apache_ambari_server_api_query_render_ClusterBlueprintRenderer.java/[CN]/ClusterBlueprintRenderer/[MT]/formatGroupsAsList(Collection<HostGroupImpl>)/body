{
  List<Map<String,Object>> listHostGroups=new ArrayList<Map<String,Object>>();
  for (  HostGroupImpl group : hostGroups) {
    Map<String,Object> mapGroupProperties=new HashMap<String,Object>();
    listHostGroups.add(mapGroupProperties);
    mapGroupProperties.put("name",group.getName());
    mapGroupProperties.put("cardinality",String.valueOf(group.getCardinality()));
    mapGroupProperties.put("components",processHostGroupComponents(group));
    List<Map<String,Map<String,String>>> hostConfigurations=new ArrayList<Map<String,Map<String,String>>>();
    for (    Configuration configuration : group.getConfigurations()) {
      Map<String,Map<String,String>> propertyMap=Collections.singletonMap(configuration.getType(),configuration.properties);
      BlueprintConfigurationProcessor configurationProcessor=new BlueprintConfigurationProcessor(propertyMap);
      Map<String,Map<String,String>> updatedProps=configurationProcessor.doUpdateForBlueprintExport(hostGroups);
      hostConfigurations.add(updatedProps);
    }
    mapGroupProperties.put("configurations",hostConfigurations);
  }
  return listHostGroups;
}
