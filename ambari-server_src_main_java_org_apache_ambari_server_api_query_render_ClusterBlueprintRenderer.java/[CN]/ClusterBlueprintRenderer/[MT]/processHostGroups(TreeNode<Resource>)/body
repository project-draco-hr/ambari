{
  Map<HostGroup,HostGroup> mapHostGroups=new HashMap<HostGroup,HostGroup>();
  for (  TreeNode<Resource> host : hostNode.getChildren()) {
    HostGroup group=HostGroup.parse(host);
    if (mapHostGroups.containsKey(group)) {
      mapHostGroups.get(group).incrementCardinality();
    }
 else {
      mapHostGroups.put(group,group);
    }
  }
  int count=1;
  List<Map<String,Object>> listHostGroups=new ArrayList<Map<String,Object>>();
  for (  HostGroup group : mapHostGroups.values()) {
    String groupName="host_group_" + count++;
    Map<String,Object> mapGroupProperties=new HashMap<String,Object>();
    listHostGroups.add(mapGroupProperties);
    mapGroupProperties.put("name",groupName);
    mapGroupProperties.put("cardinality",String.valueOf(group.getCardinality()));
    mapGroupProperties.put("components",processHostGroupComponents(group));
  }
  return listHostGroups;
}
