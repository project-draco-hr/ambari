def await_flume_process_termination(pid_file, try_count=20, retry_delay=2):
    '\n  Waits while the flume agent represented by the specified file is being stopped.\n  :param pid_file: the PID file of the agent to check\n  :param try_count: the count of checks\n  :param retry_delay: time between checks in seconds\n  :return: True if the agent was stopped, False otherwise\n  '
    for i in range(0, try_count):
        if (not is_flume_process_live(pid_file)):
            return True
        else:
            time.sleep(retry_delay)
    return (not is_flume_process_live(pid_file))
