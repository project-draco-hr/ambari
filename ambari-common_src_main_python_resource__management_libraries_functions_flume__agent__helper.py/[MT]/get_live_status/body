def get_live_status(pid_file, flume_conf_directory):
    '\n  Gets the status information of a flume agent, including source, sink, and\n  channel counts.\n  :param pid_file: the PID file of the agent to check\n  :param flume_conf_directory:  the configuration directory (ie /etc/flume/conf)\n  :return: a dictionary of information about the flume agent\n  '
    pid_file_part = pid_file.split(os.sep).pop()
    res = {}
    res['name'] = pid_file_part
    if pid_file_part.endswith('.pid'):
        res['name'] = pid_file_part[:(-4)]
    res['status'] = ('RUNNING' if is_flume_process_live(pid_file) else 'NOT_RUNNING')
    res['sources_count'] = 0
    res['sinks_count'] = 0
    res['channels_count'] = 0
    flume_agent_conf_dir = ((flume_conf_directory + os.sep) + res['name'])
    flume_agent_meta_file = ((flume_agent_conf_dir + os.sep) + 'ambari-meta.json')
    try:
        with open(flume_agent_meta_file) as fp:
            meta = json.load(fp)
            res['sources_count'] = meta['sources_count']
            res['sinks_count'] = meta['sinks_count']
            res['channels_count'] = meta['channels_count']
    except:
        Logger.logger.exception(format('Error reading {flume_agent_meta_file}: '))
    return res
