def set_current(options):
    (server_status, pid) = is_server_runing()
    if (not server_status):
        err = 'Ambari Server is not running.'
        raise FatalException(1, err)
    finalize_options = SetCurrentVersionOptions(options)
    if finalize_options.no_finalize_options_set():
        err = 'Must specify --cluster-name and --version-display-name. Please invoke ambari-server.py --help to print the options.'
        raise FatalException(1, err)
    admin_login = get_validated_string_input(prompt='Enter Ambari Admin login: ', default=None, pattern=None, description=None, is_pass=False, allowEmpty=False)
    admin_password = get_validated_string_input(prompt='Enter Ambari Admin password: ', default=None, pattern=None, description=None, is_pass=True, allowEmpty=False)
    properties = get_ambari_properties()
    if (properties == (-1)):
        raise FatalException(1, 'Failed to read properties file.')
    base_url = get_ambari_server_api_base(properties)
    url = (base_url + 'clusters/{0}/stack_versions'.format(finalize_options.cluster_name))
    admin_auth = base64.encodestring(('%s:%s' % (admin_login, admin_password))).replace('\n', '')
    request = urllib2.Request(url)
    request.add_header('Authorization', ('Basic %s' % admin_auth))
    request.add_header('X-Requested-By', 'ambari')
    data = {'ClusterStackVersions': {'repository_version': finalize_options.desired_repo_version, 'state': 'CURRENT', }, }
    if get_verbose():
        sys.stdout.write((((('\nCalling API ' + url) + ' : ') + str(data)) + '\n'))
    request.add_data(json.dumps(data))
    request.get_method = (lambda : 'PUT')
    try:
        response = urllib2.urlopen(request)
    except urllib2.HTTPError as e:
        code = e.getcode()
        content = e.read()
        err = 'Error during setting current version. Http status code - {0}. \n {1}'.format(code, content)
        raise FatalException(1, err)
    except Exception as e:
        err = ('Setting current version failed. Error details: %s' % e)
        raise FatalException(1, err)
    sys.stdout.write(('\nCurrent version successfully updated to ' + finalize_options.desired_repo_version))
    sys.stdout.write('\n')
    sys.stdout.flush()
