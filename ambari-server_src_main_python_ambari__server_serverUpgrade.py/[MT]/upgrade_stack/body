def upgrade_stack(args):
    if (not is_root()):
        err = 'Ambari-server upgradestack should be run with root-level privileges'
        raise FatalException(4, err)
    check_database_name_property()
    try:
        stack_id = args[1]
    except IndexError:
        raise FatalException('Invalid number of stack upgrade arguments')
    try:
        repo_url = args[2]
    except IndexError:
        repo_url = None
    try:
        repo_url_os = args[3]
    except IndexError:
        repo_url_os = None
    parser = optparse.OptionParser()
    parser.add_option('-d', type='int', dest='database_index')
    db = get_ambari_properties()[JDBC_DATABASE_PROPERTY]
    idx = LINUX_DBMS_KEYS_LIST.index(db)
    (options, opt_args) = parser.parse_args(['-d {0}'.format(idx)])
    (stack_name, stack_version) = stack_id.split(STACK_NAME_VER_SEP)
    retcode = run_stack_upgrade(options, stack_name, stack_version, repo_url, repo_url_os)
    if (not (retcode == 0)):
        raise FatalException(retcode, 'Stack upgrade failed.')
    return retcode
