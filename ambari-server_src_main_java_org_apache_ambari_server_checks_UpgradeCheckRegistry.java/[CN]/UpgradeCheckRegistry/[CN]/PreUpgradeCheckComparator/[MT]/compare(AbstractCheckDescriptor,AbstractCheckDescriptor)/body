{
  Class<? extends AbstractCheckDescriptor> clazz1=check1.getClass();
  Class<? extends AbstractCheckDescriptor> clazz2=check2.getClass();
  UpgradeCheck annotation1=clazz1.getAnnotation(UpgradeCheck.class);
  UpgradeCheck annotation2=clazz2.getAnnotation(UpgradeCheck.class);
  UpgradeCheckGroup group1=UpgradeCheckGroup.DEFAULT;
  UpgradeCheckGroup group2=UpgradeCheckGroup.DEFAULT;
  Float groupOrder1=Float.valueOf(group1.getOrder());
  Float groupOrder2=Float.valueOf(group2.getOrder());
  Float order1=1.0f;
  Float order2=1.0f;
  if (null != annotation1) {
    group1=annotation1.group();
    groupOrder1=Float.valueOf(group1.getOrder());
    order1=Float.valueOf(annotation1.order());
  }
  if (null != annotation2) {
    group2=annotation2.group();
    groupOrder2=Float.valueOf(group2.getOrder());
    order2=Float.valueOf(annotation2.order());
  }
  int groupComparison=groupOrder1.compareTo(groupOrder2);
  if (groupComparison != 0) {
    return groupComparison;
  }
  int orderComparison=order1.compareTo(order2);
  if (orderComparison != 0) {
    return orderComparison;
  }
  return clazz1.getName().compareTo(clazz2.getName());
}
