{
  int timeoutMillis=udpTimeout * 1000;
  final KdcConfig config=KdcConfig.getDefaultConfig();
  config.setHostName(server);
  config.setKdcPort(port);
  config.setUseUdp(true);
  config.setTimeout(timeoutMillis);
  final KdcConnection connection=getKdcUdpConnection(config);
  FutureTask<Boolean> future=new FutureTask<Boolean>(new Callable<Boolean>(){
    @Override public Boolean call(){
      try {
        connection.getTgt("noUser@noRealm","noPassword");
      }
 catch (      KerberosException e) {
        return !(e.getErrorCode() == ErrorType.KRB_ERR_GENERIC.getValue() && e.getMessage().contains("TimeOut"));
      }
catch (      Exception e) {
        throw new RuntimeException(e);
      }
      return true;
    }
  }
);
  new Thread(future).start();
  Boolean result;
  try {
    result=future.get(timeoutMillis,TimeUnit.MILLISECONDS);
  }
 catch (  InterruptedException e) {
    LOG.error("Interrupted while trying to communicate with KDC server over UDP");
    result=false;
    future.cancel(true);
  }
catch (  ExecutionException e) {
    LOG.error("An unexpected exception occurred while attempting to communicate with the KDC server over UDP",e);
    result=false;
  }
catch (  TimeoutException e) {
    LOG.error("Timeout occurred while attempting to to communicate with KDC server over UDP");
    result=false;
    future.cancel(true);
  }
  return result;
}
