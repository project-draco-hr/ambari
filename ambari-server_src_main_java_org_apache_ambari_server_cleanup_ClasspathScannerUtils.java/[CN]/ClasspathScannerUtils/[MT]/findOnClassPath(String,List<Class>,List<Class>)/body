{
  Set<Class> bindingSet=new HashSet<>();
  try {
    ClassPath classpath=ClassPath.from(ClasspathScannerUtils.class.getClassLoader());
    LOGGER.info("Checking package [{}] for binding candidates.",packageName);
    for (    ClassPath.ClassInfo classInfo : classpath.getTopLevelClassesRecursive(packageName)) {
      Class candidate=classInfo.load();
      if (exclusions.contains(candidate)) {
        LOGGER.debug("Candidate [{}] is excluded excluded.",candidate);
        continue;
      }
      if (isEligible(candidate,selectors)) {
        LOGGER.info("Found class [{}]",candidate);
        bindingSet.add(candidate);
      }
 else {
        LOGGER.debug("Candidate [{}] doesn't match.",candidate);
      }
    }
  }
 catch (  IOException e) {
    LOGGER.error("Failure during configuring JUICE bindings.",e);
    throw new IllegalArgumentException(e);
  }
  return bindingSet;
}
