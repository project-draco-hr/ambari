{
  topologyTasks.add(new PersistHostResourcesTask());
  topologyTasks.add(new RegisterWithConfigGroupTask());
  InstallHostTask installTask=new InstallHostTask();
  topologyTasks.add(installTask);
  logicalTaskMap.put(installTask,new HashMap<String,Long>());
  boolean skipStartTaskCreate=topology.getProvisionAction().equals(INSTALL_ONLY);
  StartHostTask startTask=null;
  if (!skipStartTaskCreate) {
    startTask=new StartHostTask();
    topologyTasks.add(startTask);
    logicalTaskMap.put(startTask,new HashMap<String,Long>());
  }
 else {
    LOG.info("Skipping Start task creation since provision action = " + topology.getProvisionAction());
  }
  HostGroup hostGroup=getHostGroup();
  for (  String component : hostGroup.getComponents()) {
    if (component == null || component.equals("AMBARI_SERVER")) {
      LOG.info("Skipping component {} when creating request\n",component);
      continue;
    }
    String hostName=getHostName() != null ? getHostName() : "PENDING HOST ASSIGNMENT : HOSTGROUP=" + getHostgroupName();
    AmbariContext context=topology.getAmbariContext();
    HostRoleCommand logicalInstallTask=context.createAmbariTask(getRequestId(),id,component,hostName,AmbariContext.TaskType.INSTALL);
    logicalTasks.put(logicalInstallTask.getTaskId(),logicalInstallTask);
    logicalTaskMap.get(installTask).put(component,logicalInstallTask.getTaskId());
    Stack stack=hostGroup.getStack();
    if (!skipStartTaskCreate && stack != null && !stack.getComponentInfo(component).isClient()) {
      HostRoleCommand logicalStartTask=context.createAmbariTask(getRequestId(),id,component,hostName,AmbariContext.TaskType.START);
      logicalTasks.put(logicalStartTask.getTaskId(),logicalStartTask);
      logicalTaskMap.get(startTask).put(component,logicalStartTask.getTaskId());
    }
  }
}
