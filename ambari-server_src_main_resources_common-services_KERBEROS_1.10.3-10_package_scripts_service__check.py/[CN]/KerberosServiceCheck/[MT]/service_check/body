def service_check(self, env):
    import params
    if ((params.smoke_test_principal is not None) and (params.smoke_test_keytab_file is not None) and os.path.isfile(params.smoke_test_keytab_file)):
        print ('Performing kinit using %s' % params.smoke_test_principal)
        ccache_file_name = _md5('{0}|{1}'.format(params.smoke_test_principal, params.smoke_test_keytab_file)).hexdigest()
        ccache_file_path = '{0}{1}kerberos_service_check_cc_{2}'.format(params.tmp_dir, os.sep, ccache_file_name)
        kinit_path_local = functions.get_kinit_path(default('/configurations/kerberos-env/executable_search_paths', None))
        kinit_command = '{0} -c {1} -kt {2} {3}'.format(kinit_path_local, ccache_file_path, params.smoke_test_keytab_file, params.smoke_test_principal)
        try:
            Execute(kinit_command, user=params.smoke_user)
        finally:
            File(ccache_file_path, action='delete')
    elif params.manage_identities:
        err_msg = Logger.filter_text('Failed to execute kinit test due to principal or keytab not found or available')
        raise Fail(err_msg)
    else:
        print "Skipping this service check since Ambari is not managing Kerberos identities and the smoke user credentials are not available. To execute this service check, the smoke user principal name and keytab file location must be set in the cluster_env and the smoke user's keytab file mustexist in the configured location."
