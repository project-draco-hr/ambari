@staticmethod
def get_subdict(name, dic):
    '\n    "a:b:c" => a[b][c]\n    \n    can use prefixes\n    '
    prefixes = list(Substitutor.default_prefixes)
    prefixes.insert(0, None)
    name_parts = name.split(':')
    is_found = False
    result = None
    for prefix in prefixes:
        curr = (Substitutor._get_subdict(prefix, dic) if prefix else dic)
        try:
            for x in name_parts:
                curr = curr[x]
        except (KeyError, TypeError):
            continue
        if is_found:
            raise Fail(('Variable ${%s} found more than one time, please check your default prefixes!' % name))
        is_found = True
        result = curr
    if (not result):
        raise Fail(('Configuration on ${%s} cannot be resolved' % name))
    return result
