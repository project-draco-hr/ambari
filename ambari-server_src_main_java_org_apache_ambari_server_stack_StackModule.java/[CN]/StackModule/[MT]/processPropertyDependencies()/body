{
  Map<PropertyDependencyInfo,Set<PropertyDependencyInfo>> dependedByMap=new HashMap<PropertyDependencyInfo,Set<PropertyDependencyInfo>>();
  for (  ServiceModule serviceModule : serviceModules.values()) {
    for (    PropertyInfo pi : serviceModule.getModuleInfo().getProperties()) {
      for (      PropertyDependencyInfo pdi : pi.getDependsOnProperties()) {
        PropertyDependencyInfo propertyDependency=new PropertyDependencyInfo(pi.getFilename(),pi.getName());
        if (dependedByMap.keySet().contains(pdi)) {
          dependedByMap.get(pdi).add(propertyDependency);
        }
 else {
          Set<PropertyDependencyInfo> newDependenciesSet=new HashSet<PropertyDependencyInfo>();
          newDependenciesSet.add(propertyDependency);
          dependedByMap.put(pdi,newDependenciesSet);
        }
      }
    }
  }
  for (  ServiceModule serviceModule : serviceModules.values()) {
    for (    PropertyInfo pi : serviceModule.getModuleInfo().getProperties()) {
      Set<PropertyDependencyInfo> set=dependedByMap.remove(new PropertyDependencyInfo(pi.getFilename(),pi.getName()));
      if (set != null) {
        pi.getDependedByProperties().addAll(set);
      }
    }
  }
}
