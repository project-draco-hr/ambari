{
  List<Grouping> originalGroups=pack.getAllGroups();
  Map<String,List<Grouping>> allGroupMap=new HashMap<>();
  for (  Grouping group : originalGroups) {
    List<Grouping> list=new ArrayList<>();
    list.add(group);
    allGroupMap.put(group.name,list);
  }
  for (  UpgradePack servicePack : servicePacks) {
    for (    Grouping group : servicePack.getAllGroups()) {
      if (allGroupMap.containsKey(group.name)) {
        List<Grouping> list=allGroupMap.get(group.name);
        Grouping first=list.get(0);
        if (!first.getClass().equals(group.getClass())) {
          throw new AmbariException("Expected class: " + first.getClass() + " instead of "+ group.getClass());
        }
        if (group.addAfterGroupEntry == null && first.addAfterGroupEntry != null) {
          list.add(0,group);
        }
 else {
          list.add(group);
        }
      }
 else {
        List<Grouping> list=new ArrayList<>();
        list.add(group);
        allGroupMap.put(group.name,list);
      }
    }
  }
  Map<String,Grouping> mergedGroupMap=new HashMap<>();
  for (  String key : allGroupMap.keySet()) {
    Iterator<Grouping> iterator=allGroupMap.get(key).iterator();
    Grouping group=iterator.next();
    if (iterator.hasNext()) {
      group.merge(iterator);
    }
    mergedGroupMap.put(key,group);
  }
  orderGroups(originalGroups,mergedGroupMap);
}
