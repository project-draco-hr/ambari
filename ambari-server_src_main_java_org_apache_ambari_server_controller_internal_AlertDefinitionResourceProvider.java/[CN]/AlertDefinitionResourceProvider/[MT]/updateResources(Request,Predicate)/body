{
  String clusterName=null;
  Clusters clusters=getManagementController().getClusters();
  if (null != predicate) {
    Set<Map<String,Object>> predicateMaps=getPropertyMaps(predicate);
    for (    Map<String,Object> propertyMap : predicateMaps) {
      String runNow=(String)propertyMap.get(ALERT_DEF_ACTION_RUN_NOW);
      if (null != runNow) {
        if (Boolean.valueOf(runNow) == Boolean.TRUE) {
          scheduleImmediateAlert(propertyMap);
        }
      }
    }
  }
  Set<String> invalidatedHosts=new HashSet<String>();
  for (  Map<String,Object> requestPropMap : request.getProperties()) {
    for (    Map<String,Object> propertyMap : getPropertyMaps(requestPropMap,predicate)) {
      String stringId=(String)propertyMap.get(ALERT_DEF_ID);
      long id=Long.parseLong(stringId);
      AlertDefinitionEntity entity=alertDefinitionDAO.findById(id);
      if (null == entity) {
        continue;
      }
      if (null == clusterName) {
        try {
          Cluster cluster=clusters.getClusterById(entity.getClusterId());
          if (null != cluster) {
            clusterName=cluster.getClusterName();
          }
        }
 catch (        AmbariException ae) {
          throw new IllegalArgumentException("Invalid cluster ID",ae);
        }
      }
      try {
        populateEntity(entity,propertyMap);
        alertDefinitionDAO.merge(entity);
        invalidatedHosts.addAll(alertDefinitionHash.invalidateHosts(entity));
      }
 catch (      AmbariException ae) {
        LOG.error("Unable to find cluster when updating alert definition",ae);
      }
    }
  }
  if (invalidatedHosts.size() > 0) {
    alertDefinitionHash.enqueueAgentCommands(clusterName,invalidatedHosts);
    notifyUpdate(Resource.Type.AlertDefinition,request,predicate);
  }
  return getRequestStatus(null);
}
