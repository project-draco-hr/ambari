{
  Map<String,String> requestInfoProps=request.getRequestInfoProperties();
  if (null != requestInfoProps && requestInfoProps.containsKey(AlertDefResourceDefinition.EXECUTE_IMMEDIATE_DIRECTIVE)) {
    Set<Map<String,Object>> predicateMaps=getPropertyMaps(predicate);
    for (    Map<String,Object> propertyMap : predicateMaps) {
      scheduleImmediateAlert(propertyMap);
    }
    return getRequestStatus(null);
  }
  for (  Map<String,Object> requestPropMap : request.getProperties()) {
    for (    Map<String,Object> propertyMap : getPropertyMaps(requestPropMap,predicate)) {
      String stringId=(String)propertyMap.get(ALERT_DEF_ID);
      long id=Long.parseLong(stringId);
      AlertDefinitionEntity entity=alertDefinitionDAO.findById(id);
      if (null == entity) {
        continue;
      }
      boolean oldEnabled=entity.getEnabled();
      try {
        populateEntity(entity,propertyMap);
        alertDefinitionDAO.merge(entity);
        Set<String> invalidatedHosts=alertDefinitionHash.invalidateHosts(entity);
        AlertHashInvalidationEvent event=new AlertHashInvalidationEvent(entity.getClusterId(),invalidatedHosts);
        eventPublisher.publish(event);
      }
 catch (      AmbariException ae) {
        LOG.error("Unable to find cluster when updating alert definition",ae);
      }
      if (oldEnabled && !entity.getEnabled()) {
        AlertDefinitionDisabledEvent event=new AlertDefinitionDisabledEvent(entity.getClusterId(),entity.getDefinitionId());
        eventPublisher.publish(event);
      }
    }
  }
  notifyUpdate(Resource.Type.AlertDefinition,request,predicate);
  return getRequestStatus(null);
}
