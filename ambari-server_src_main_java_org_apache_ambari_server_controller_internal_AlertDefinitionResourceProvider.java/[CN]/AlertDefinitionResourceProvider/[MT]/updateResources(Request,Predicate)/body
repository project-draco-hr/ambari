{
  for (  Map<String,Object> requestPropMap : request.getProperties()) {
    for (    Map<String,Object> propertyMap : getPropertyMaps(requestPropMap,predicate)) {
      Long id=(Long)propertyMap.get(ALERT_DEF_ID);
      AlertDefinitionEntity entity=alertDefinitionDAO.findById(id.longValue());
      if (null == entity)       continue;
      if (propertyMap.containsKey(ALERT_DEF_NAME))       entity.setDefinitionName((String)propertyMap.get(ALERT_DEF_NAME));
      if (propertyMap.containsKey(ALERT_DEF_ENABLED)) {
        entity.setEnabled(Boolean.parseBoolean((String)propertyMap.get(ALERT_DEF_ENABLED)));
      }
      if (propertyMap.containsKey(ALERT_DEF_INTERVAL)) {
        entity.setScheduleInterval(Long.valueOf((String)propertyMap.get(ALERT_DEF_INTERVAL)));
      }
      if (propertyMap.containsKey(ALERT_DEF_SCOPE))       entity.setScope((String)propertyMap.get(ALERT_DEF_SCOPE));
      if (propertyMap.containsKey(ALERT_DEF_SOURCE_TYPE))       entity.setSourceType((String)propertyMap.get(ALERT_DEF_SOURCE_TYPE));
      JsonObject jsonObj=new JsonObject();
      for (      Entry<String,Object> entry : propertyMap.entrySet()) {
        String propCat=PropertyHelper.getPropertyCategory(entry.getKey());
        String propName=PropertyHelper.getPropertyName(entry.getKey());
        if (propCat.equals(ALERT_DEF_SOURCE)) {
          jsonObj.addProperty(propName,entry.getValue().toString());
        }
      }
      entity.setHash(UUID.randomUUID().toString());
      alertDefinitionDAO.merge(entity);
    }
  }
  notifyUpdate(Resource.Type.AlertDefinition,request,predicate);
  return getRequestStatus(null);
}
