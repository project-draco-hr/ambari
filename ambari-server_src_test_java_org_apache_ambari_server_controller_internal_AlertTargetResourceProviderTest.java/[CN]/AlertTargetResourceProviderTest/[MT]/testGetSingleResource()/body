{
  Request request=PropertyHelper.getReadRequest(AlertTargetResourceProvider.ALERT_TARGET_DESCRIPTION,AlertTargetResourceProvider.ALERT_TARGET_ID,AlertTargetResourceProvider.ALERT_TARGET_NAME,AlertTargetResourceProvider.ALERT_TARGET_NOTIFICATION_TYPE);
  Predicate predicate=new PredicateBuilder().property(AlertTargetResourceProvider.ALERT_TARGET_ID).equals(ALERT_TARGET_ID.toString()).toPredicate();
  expect(m_dao.findTargetById(ALERT_TARGET_ID.longValue())).andReturn(getMockEntities().get(0));
  replay(m_amc,m_dao);
  AlertTargetResourceProvider provider=createProvider(m_amc);
  Set<Resource> results=provider.getResources(request,predicate);
  assertEquals(1,results.size());
  Resource r=results.iterator().next();
  Assert.assertEquals(ALERT_TARGET_ID,r.getPropertyValue(AlertTargetResourceProvider.ALERT_TARGET_ID));
  Assert.assertEquals(ALERT_TARGET_NAME,r.getPropertyValue(AlertTargetResourceProvider.ALERT_TARGET_NAME));
  Map<String,String> properties=(Map<String,String>)r.getPropertyValue(AlertTargetResourceProvider.ALERT_TARGET_PROPERTIES);
  assertEquals("bar",properties.get("foo"));
  assertEquals("baz",properties.get("foobar"));
  verify(m_amc,m_dao);
}
