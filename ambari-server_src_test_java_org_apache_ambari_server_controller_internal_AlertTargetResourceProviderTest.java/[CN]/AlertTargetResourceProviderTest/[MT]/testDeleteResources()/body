{
  Capture<AlertTargetEntity> entityCapture=new Capture<AlertTargetEntity>();
  m_dao.create(capture(entityCapture));
  expectLastCall().times(1);
  replay(m_amc,m_dao);
  AlertTargetResourceProvider provider=createProvider(m_amc);
  Map<String,Object> requestProps=getCreationProperties();
  Request request=PropertyHelper.getCreateRequest(Collections.singleton(requestProps),null);
  provider.createResources(request);
  Assert.assertTrue(entityCapture.hasCaptured());
  AlertTargetEntity entity=entityCapture.getValue();
  Assert.assertNotNull(entity);
  Predicate p=new PredicateBuilder().property(AlertTargetResourceProvider.ALERT_TARGET_ID).equals(ALERT_TARGET_ID.toString()).toPredicate();
  entity.setTargetId(ALERT_TARGET_ID);
  resetToStrict(m_dao);
  expect(m_dao.findTargetById(ALERT_TARGET_ID.longValue())).andReturn(entity).anyTimes();
  m_dao.remove(capture(entityCapture));
  expectLastCall();
  replay(m_dao);
  provider.deleteResources(p);
  AlertTargetEntity entity1=entityCapture.getValue();
  Assert.assertEquals(ALERT_TARGET_ID,entity1.getTargetId());
  verify(m_amc,m_dao);
}
