{
  if (request.getClusterName() == null || request.getClusterName().isEmpty() || request.getServiceName() == null || request.getServiceName().isEmpty() || request.getComponentName() == null || request.getComponentName().isEmpty() || request.getHostname() == null || request.getHostname().isEmpty()) {
    throw new AmbariException("Invalid arguments");
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Received a createHostComponent request" + ", clusterName=" + request.getClusterName() + ", serviceName="+ request.getServiceName()+ ", componentName="+ request.getComponentName()+ ", hostname="+ request.getHostname()+ ", request="+ request);
  }
  final Cluster cluster=clusters.getCluster(request.getClusterName());
  final Service s=cluster.getService(request.getServiceName());
  final ServiceComponent sc=s.getServiceComponent(request.getComponentName());
  final ServiceComponentHost sch=sc.getServiceComponentHost(request.getHostname());
  if (request.getConfigVersions() != null) {
    throw new AmbariException("Unsupported operation - config updates not" + " allowed");
  }
  if (request.getDesiredState() == null) {
    return null;
  }
  State newState=State.valueOf(request.getDesiredState());
  if (!newState.isValidDesiredState()) {
    throw new AmbariException("Invalid desired state");
  }
  State oldState=sch.getDesiredState();
  if (newState == oldState) {
    return null;
  }
  long nowTimestamp=System.currentTimeMillis();
  long requestId=requestCounter.incrementAndGet();
  List<Stage> stages=new ArrayList<Stage>();
  Stage stage=createNewStage(cluster,requestId);
  Map<String,Config> configs=null;
  ServiceComponentHostEvent event;
  State oldSchState=sch.getDesiredState();
switch (newState) {
case INSTALLED:
    if (oldSchState == State.INIT || oldSchState == State.UNINSTALLED || oldSchState == State.INSTALLED) {
      event=new ServiceComponentHostInstallEvent(sch.getServiceComponentName(),sch.getHostName(),nowTimestamp);
    }
 else     if (oldSchState == State.STARTED) {
      event=new ServiceComponentHostStopEvent(sch.getServiceComponentName(),sch.getHostName(),nowTimestamp);
    }
 else {
      throw new AmbariException("Invalid transition" + ", oldDesiredState=" + oldSchState + ", newDesiredState"+ newState);
    }
  break;
case STARTED:
if (oldSchState == State.INSTALLED) {
  event=new ServiceComponentHostStartEvent(sch.getServiceComponentName(),sch.getHostName(),nowTimestamp);
}
 else {
  throw new AmbariException("Invalid transition" + ", oldDesiredState=" + oldSchState + ", newDesiredState"+ newState);
}
break;
default :
throw new AmbariException("Unsupported state change operation");
}
HostAction ha=createHostAction(stage,sch,configs,event,nowTimestamp);
stage.addHostAction(sch.getHostName(),ha);
sch.setDesiredState(newState);
actionManager.sendActions(stages);
return new TrackActionResponse(requestId);
}
