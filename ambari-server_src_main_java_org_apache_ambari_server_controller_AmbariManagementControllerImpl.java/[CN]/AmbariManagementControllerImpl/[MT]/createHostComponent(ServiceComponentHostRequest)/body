{
  if (request.getClusterName() == null || request.getClusterName().isEmpty() || request.getComponentName() == null || request.getComponentName().isEmpty() || request.getHostname() == null || request.getHostname().isEmpty()) {
    throw new AmbariException("Invalid arguments");
  }
  if (request.getServiceName() == null || request.getServiceName().isEmpty()) {
    request.setServiceName("HDFS");
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Received a createHostComponent request" + ", clusterName=" + request.getClusterName() + ", serviceName="+ request.getServiceName()+ ", componentName="+ request.getComponentName()+ ", hostname="+ request.getHostname());
  }
  final Cluster cluster=clusters.getCluster(request.getClusterName());
  final Service s=cluster.getService(request.getServiceName());
  final ServiceComponent sc=s.getServiceComponent(request.getComponentName());
  ServiceComponentHost sch=null;
  try {
    sch=sc.getServiceComponentHost(request.getHostname());
    if (sch != null) {
      throw new AmbariException("ServiceComponentHost already exists " + "within cluster" + ", clusterName=" + cluster.getClusterName() + ", clusterId="+ cluster.getClusterId()+ ", serviceName="+ s.getName()+ ", serviceComponentName"+ sc.getName()+ ", hostname="+ sch.getHostName());
    }
  }
 catch (  AmbariException e) {
  }
  boolean isClient=true;
  if (sc.getName().equals("NAMENODE") || sc.getName().equals("DATANODE") || sc.getName().equals("SECONDARY_NAMENODE")) {
    isClient=false;
  }
  sch=new ServiceComponentHostImpl(sc,request.getHostname(),isClient);
  if (request.getDesiredState() != null && !request.getDesiredState().isEmpty()) {
    State state=State.valueOf(request.getDesiredState());
    if (!state.isValidDesiredState() || state != State.INIT) {
      throw new AmbariException("Invalid desired state");
    }
    sch.setDesiredState(state);
  }
 else {
    sch.setDesiredState(sc.getDesiredState());
  }
  sch.setDesiredStackVersion(sc.getDesiredStackVersion());
  Map<String,Config> configs=new HashMap<String,Config>();
  if (request.getConfigVersions() == null) {
  }
 else {
  }
  sch.updateDesiredConfigs(configs);
  sc.addServiceComponentHost(sch);
  if (State.INIT == sch.getDesiredState()) {
    return null;
  }
 else {
  }
  return null;
}
