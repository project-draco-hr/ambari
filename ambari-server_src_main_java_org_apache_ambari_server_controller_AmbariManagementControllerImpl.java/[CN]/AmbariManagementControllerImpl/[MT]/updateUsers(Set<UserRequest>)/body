{
  boolean isUserAdministrator=AuthorizationHelper.isAuthorized(ResourceType.AMBARI,null,RoleAuthorization.AMBARI_MANAGE_USERS);
  String authenticatedUsername=AuthorizationHelper.getAuthenticatedName();
  for (  UserRequest request : requests) {
    String requestedUsername=request.getUsername();
    if (!isUserAdministrator && (!authenticatedUsername.equalsIgnoreCase(requestedUsername))) {
      throw new AuthorizationException();
    }
    User u=users.getAnyUser(requestedUsername);
    if (null == u) {
      continue;
    }
    if (null != request.isActive()) {
      if (!isUserAdministrator) {
        throw new AuthorizationException("The authenticated user is not authorized to update the requested resource property");
      }
      users.setUserActive(u.getUserName(),request.isActive());
    }
    if (null != request.isAdmin()) {
      if (!isUserAdministrator) {
        throw new AuthorizationException("The authenticated user is not authorized to update the requested resource property");
      }
      if (request.isAdmin()) {
        users.grantAdminPrivilege(u.getUserId());
      }
 else {
        users.revokeAdminPrivilege(u.getUserId());
      }
    }
    if (null != request.getOldPassword() && null != request.getPassword()) {
      users.modifyPassword(u.getUserName(),request.getOldPassword(),request.getPassword());
    }
  }
}
