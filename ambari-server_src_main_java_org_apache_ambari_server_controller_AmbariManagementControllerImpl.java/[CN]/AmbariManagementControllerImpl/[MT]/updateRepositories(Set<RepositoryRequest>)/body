{
  for (  RepositoryRequest rr : requests) {
    if (null == rr.getStackVersion() || rr.getStackVersion().isEmpty()) {
      throw new AmbariException("Stack version must be specified.");
    }
    String stackVersion=rr.getStackVersion();
    String baseUrlDeprecatedStackVersion=configs.getConfigsMap().get(Configuration.BASEURL_API_DEPRECATED_STACK_VERSION);
    try {
      if (VersionUtils.compareVersions(stackVersion,baseUrlDeprecatedStackVersion) >= 0) {
        throw new AmbariException("Stack version (" + stackVersion + ") is not supported");
      }
    }
 catch (    NumberFormatException e) {
      throw new AmbariException("Stack version (" + stackVersion + ") is not supported");
    }
    if (null == rr.getStackName() || rr.getStackName().isEmpty()) {
      throw new AmbariException("Stack name must be specified.");
    }
    if (null == rr.getOsType() || rr.getOsType().isEmpty()) {
      throw new AmbariException("OS type must be specified.");
    }
    if (null == rr.getRepoId() || rr.getRepoId().isEmpty()) {
      throw new AmbariException("Repo ID must be specified.");
    }
    if (null != rr.getBaseUrl()) {
      if (rr.isVerifyBaseUrl()) {
        verifyRepository(rr);
      }
      if (rr.getRepositoryVersionId() != null) {
        throw new AmbariException("Can't directly update repositories in repository_version, update the repository_version instead");
      }
      ambariMetaInfo.updateRepoBaseURL(rr.getStackName(),rr.getStackVersion(),rr.getOsType(),rr.getRepoId(),rr.getBaseUrl());
    }
  }
}
