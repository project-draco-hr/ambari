{
  for (  Entry<String,DesiredConfig> entry : clusterDesiredConfigs.entrySet()) {
    String type=entry.getKey();
    String tag=entry.getValue().getVersion();
    Config config=cluster.getConfig(type,tag);
    if (null == config)     continue;
    Map<String,String> props=new HashMap<String,String>(config.getProperties());
    Map<String,String> tags=new HashMap<String,String>();
    tags.put("tag",config.getVersionTag());
    Service service=cluster.getService(serviceName);
    Config svcConfig=service.getDesiredConfigs().get(type);
    if (null != svcConfig && !svcConfig.getVersionTag().equals(tag)) {
      props.putAll(svcConfig.getProperties());
    }
    DesiredConfig dc=desiredConfigMap.get(type);
    if (null != dc) {
      Config hostConfig=cluster.getConfig(type,dc.getVersion());
      if (null != hostConfig) {
        props.putAll(hostConfig.getProperties());
        tags.put("host_override_tag",hostConfig.getVersionTag());
      }
    }
    configurations.put(type,props);
    configTags.put(type,tags);
  }
  Service service=cluster.getService(serviceName);
  for (  Config c : service.getDesiredConfigs().values()) {
    String type=c.getType();
    if (!configurations.containsKey(type)) {
      configurations.put(type,new HashMap<String,String>(c.getProperties()));
      HashMap<String,String> tags=new HashMap<String,String>();
      tags.put("tag",c.getVersionTag());
      configTags.put(type,tags);
    }
  }
}
