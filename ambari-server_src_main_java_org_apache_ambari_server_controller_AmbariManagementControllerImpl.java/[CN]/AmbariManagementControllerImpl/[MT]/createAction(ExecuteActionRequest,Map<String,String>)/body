{
  String clusterName;
  String requestContext="";
  if (requestProperties != null) {
    requestContext=requestProperties.get(REQUEST_CONTEXT_PROPERTY);
    if (requestContext == null) {
      requestContext="";
    }
  }
  if (actionRequest.getClusterName() == null || actionRequest.getClusterName().isEmpty()) {
    throw new AmbariException("Invalid request, cluster name must be specified");
  }
  clusterName=actionRequest.getClusterName();
  Cluster cluster=clusters.getCluster(clusterName);
  ActionExecutionContext actionExecContext=null;
  if (actionRequest.isCommand()) {
    customCommandExecutionHelper.validateCustomCommand(actionRequest);
  }
 else {
    actionExecContext=actionExecutionHelper.validateCustomAction(actionRequest,cluster);
  }
  Map<String,Set<String>> clusterHostInfo=StageUtils.getClusterHostInfo(clusters.getHostsForCluster(cluster.getClusterName()),cluster);
  String clusterHostInfoJson=StageUtils.getGson().toJson(clusterHostInfo);
  Stage stage=createNewStage(cluster,actionManager.getNextRequestId(),requestContext,clusterHostInfoJson);
  Map<String,String> params=createDefaultHostParams(cluster);
  if (actionRequest.isCommand()) {
    customCommandExecutionHelper.addAction(actionRequest,stage,params);
  }
 else {
    actionExecutionHelper.addAction(actionExecContext,stage,configs,hostsMap,params);
  }
  RoleCommandOrder rco=this.getRoleCommandOrder(cluster);
  RoleGraph rg=new RoleGraph(rco);
  rg.build(stage);
  List<Stage> stages=rg.getStages();
  if (stages != null && !stages.isEmpty()) {
    actionManager.sendActions(stages,actionRequest);
    return getRequestStatusResponse(stage.getRequestId());
  }
 else {
    throw new AmbariException("Stage was not created");
  }
}
