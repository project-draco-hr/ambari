{
  String clusterName=actionRequest.getClusterName();
  String requestContext="";
  if (requestProperties != null) {
    requestContext=requestProperties.get(REQUEST_CONTEXT_PROPERTY);
    if (requestContext == null) {
      requestContext="";
    }
  }
  Cluster cluster=null;
  if (null != clusterName) {
    cluster=clusters.getCluster(clusterName);
    LOG.info("Received action execution request" + ", clusterName=" + actionRequest.getClusterName() + ", request="+ actionRequest.toString());
  }
  ActionExecutionContext actionExecContext=getActionExecutionContext(actionRequest);
  if (actionRequest.isCommand()) {
    customCommandExecutionHelper.validateAction(actionRequest);
  }
 else {
    actionExecutionHelper.validateAction(actionRequest);
  }
  long requestId=actionManager.getNextRequestId();
  RequestStageContainer requestStageContainer=new RequestStageContainer(requestId,null,requestFactory,actionManager,actionRequest);
  if (Role.KERBEROS_SERVICE_CHECK.name().equals(actionRequest.getCommandName())) {
    try {
      requestStageContainer=kerberosHelper.ensureIdentities(cluster,Collections.<String,Collection<String>>singletonMap(Service.Type.KERBEROS.name(),null),Collections.singleton("/smokeuser"),requestStageContainer);
    }
 catch (    KerberosOperationException e) {
      throw new IllegalArgumentException(e.getMessage(),e);
    }
  }
  ExecuteCommandJson jsons=customCommandExecutionHelper.getCommandJson(actionExecContext,cluster);
  Stage stage=createNewStage(requestStageContainer.getLastStageId(),cluster,requestId,requestContext,jsons.getClusterHostInfo(),jsons.getCommandParamsForStage(),jsons.getHostParamsForStage());
  if (actionRequest.isCommand()) {
    customCommandExecutionHelper.addExecutionCommandsToStage(actionExecContext,stage,requestProperties,false);
  }
 else {
    actionExecutionHelper.addExecutionCommandsToStage(actionExecContext,stage,false);
  }
  RoleGraph rg;
  if (null != cluster) {
    RoleCommandOrder rco=getRoleCommandOrder(cluster);
    rg=new RoleGraph(rco);
  }
 else {
    rg=new RoleGraph();
  }
  rg.build(stage);
  List<Stage> stages=rg.getStages();
  if (stages != null && !stages.isEmpty()) {
    requestStageContainer.addStages(stages);
  }
  if (Role.KERBEROS_SERVICE_CHECK.name().equals(actionRequest.getCommandName()) && !kerberosHelper.isClusterKerberosEnabled(cluster)) {
    try {
      requestStageContainer=kerberosHelper.deleteIdentities(cluster,Collections.<String,Collection<String>>singletonMap(Service.Type.KERBEROS.name(),null),Collections.singleton("/smokeuser"),requestStageContainer);
    }
 catch (    KerberosOperationException e) {
      throw new IllegalArgumentException(e.getMessage(),e);
    }
  }
  requestStageContainer.persist();
  return requestStageContainer.getRequestStatusResponse();
}
