{
  String clusterName=null;
  String requestContext="";
  if (requestProperties != null) {
    requestContext=requestProperties.get(REQUEST_CONTEXT_PROPERTY);
    if (requestContext == null) {
      requestContext="";
    }
  }
  String logDir="";
  if (actionRequest.getClusterName() == null || actionRequest.getClusterName().isEmpty() || actionRequest.getServiceName() == null || actionRequest.getServiceName().isEmpty() || actionRequest.getCommandName() == null || actionRequest.getCommandName().isEmpty()) {
    throw new AmbariException("Invalid action request : " + "cluster=" + actionRequest.getClusterName() + ", service="+ actionRequest.getServiceName()+ ", command="+ actionRequest.getCommandName());
  }
  clusterName=actionRequest.getClusterName();
  Stage stage=stageFactory.createNew(actionManager.getNextRequestId(),logDir,clusterName,requestContext);
  stage.setStageId(0);
  LOG.info("Received a createAction request" + ", clusterName=" + actionRequest.getClusterName() + ", serviceName="+ actionRequest.getServiceName()+ ", request="+ actionRequest.toString());
  if (!isValidCommand(actionRequest.getCommandName(),actionRequest.getServiceName())) {
    throw new AmbariException("Unsupported action " + actionRequest.getCommandName() + " for "+ actionRequest.getServiceName());
  }
  if (actionRequest.getCommandName().contains("SERVICE_CHECK")) {
    addServiceCheckAction(actionRequest,stage);
  }
 else   if (actionRequest.getCommandName().equals("DECOMMISSION_DATANODE")) {
    addDecommissionDatanodeAction(actionRequest,stage);
  }
 else {
    throw new AmbariException("Unsupported action " + actionRequest.getCommandName());
  }
  Cluster cluster=clusters.getCluster(clusterName);
  RoleCommandOrder rco=this.getRoleCommandOrder(cluster);
  RoleGraph rg=new RoleGraph(rco);
  rg.build(stage);
  List<Stage> stages=rg.getStages();
  if (stages != null && !stages.isEmpty()) {
    actionManager.sendActions(stages);
    return getRequestStatusResponse(stage.getRequestId());
  }
 else {
    throw new AmbariException("Stage was not created");
  }
}
