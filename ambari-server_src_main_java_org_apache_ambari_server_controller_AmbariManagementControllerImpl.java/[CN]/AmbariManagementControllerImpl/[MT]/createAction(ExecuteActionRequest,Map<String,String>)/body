{
  String clusterName=actionRequest.getClusterName();
  String requestContext="";
  if (requestProperties != null) {
    requestContext=requestProperties.get(REQUEST_CONTEXT_PROPERTY);
    if (requestContext == null) {
      requestContext="";
    }
  }
  Cluster cluster=null;
  if (null != clusterName) {
    cluster=clusters.getCluster(clusterName);
    LOG.info("Received action execution request" + ", clusterName=" + actionRequest.getClusterName() + ", request="+ actionRequest.toString());
  }
  ActionExecutionContext actionExecContext=getActionExecutionContext(actionRequest);
  if (actionRequest.isCommand()) {
    customCommandExecutionHelper.validateAction(actionRequest);
  }
 else {
    actionExecutionHelper.validateAction(actionRequest);
  }
  Map<String,String> commandParamsStage=StageUtils.getCommandParamsStage(actionExecContext);
  Map<String,String> hostParamsStage=new HashMap<String,String>();
  Map<String,Set<String>> clusterHostInfo;
  String clusterHostInfoJson="{}";
  if (null != cluster) {
    clusterHostInfo=StageUtils.getClusterHostInfo(clusters.getHostsForCluster(cluster.getClusterName()),cluster);
    hostParamsStage=createDefaultHostParams(cluster);
    clusterHostInfoJson=StageUtils.getGson().toJson(clusterHostInfo);
  }
  String hostParamsStageJson=StageUtils.getGson().toJson(hostParamsStage);
  String commandParamsStageJson=StageUtils.getGson().toJson(commandParamsStage);
  Stage stage=createNewStage(0,cluster,actionManager.getNextRequestId(),requestContext,clusterHostInfoJson,commandParamsStageJson,hostParamsStageJson);
  if (actionRequest.isCommand()) {
    customCommandExecutionHelper.addExecutionCommandsToStage(actionExecContext,stage,requestProperties);
  }
 else {
    actionExecutionHelper.addExecutionCommandsToStage(actionExecContext,stage);
  }
  RoleGraph rg;
  if (null != cluster) {
    RoleCommandOrder rco=getRoleCommandOrder(cluster);
    rg=new RoleGraph(rco);
  }
 else {
    rg=new RoleGraph();
  }
  rg.build(stage);
  List<Stage> stages=rg.getStages();
  if (stages != null && !stages.isEmpty()) {
    actionManager.sendActions(stages,actionRequest);
    return getRequestStatusResponse(stage.getRequestId());
  }
 else {
    throw new AmbariException("Stage was not created");
  }
}
