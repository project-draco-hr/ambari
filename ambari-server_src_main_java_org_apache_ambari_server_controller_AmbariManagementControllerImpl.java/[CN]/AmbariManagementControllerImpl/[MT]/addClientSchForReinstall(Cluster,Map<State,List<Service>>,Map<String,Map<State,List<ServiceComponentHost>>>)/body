{
  Set<String> services=new HashSet<String>();
  if (changedServices != null) {
    for (    Entry<State,List<Service>> entry : changedServices.entrySet()) {
      if (State.STARTED != entry.getKey()) {
        continue;
      }
      for (      Service s : entry.getValue()) {
        if (State.INSTALLED == s.getDesiredState()) {
          services.add(s.getName());
        }
      }
    }
  }
  List<ServiceComponentHost> serviceComponentHosts=new ArrayList<ServiceComponentHost>();
  if (changedScHosts != null && !changedScHosts.isEmpty()) {
    for (    String sc : changedScHosts.keySet()) {
      for (      State s : changedScHosts.get(sc).keySet())       if (s == State.STARTED) {
        serviceComponentHosts.addAll(changedScHosts.get(sc).get(s));
      }
    }
  }
  if (!serviceComponentHosts.isEmpty()) {
    for (    ServiceComponentHost sch : serviceComponentHosts) {
      services.add(sch.getServiceName());
    }
  }
  if (services == null || services.isEmpty())   return;
  Map<String,List<ServiceComponentHost>> clientSchs=new HashMap<String,List<ServiceComponentHost>>();
  for (  String serviceName : services) {
    Service s=cluster.getService(serviceName);
    for (    String component : s.getServiceComponents().keySet()) {
      List<ServiceComponentHost> potentialHosts=new ArrayList<ServiceComponentHost>();
      ServiceComponent sc=s.getServiceComponents().get(component);
      if (sc.isClientComponent()) {
        for (        ServiceComponentHost potentialSch : sc.getServiceComponentHosts().values()) {
          if (!potentialSch.getHostState().equals(HostState.HEARTBEAT_LOST)) {
            potentialHosts.add(potentialSch);
          }
        }
      }
      if (potentialHosts != null && !potentialHosts.isEmpty()) {
        clientSchs.put(sc.getName(),potentialHosts);
      }
    }
  }
  LOG.info("Client hosts for reinstall : " + clientSchs.size());
  for (  String sc : clientSchs.keySet()) {
    Map<State,List<ServiceComponentHost>> schMap=new HashMap<State,List<ServiceComponentHost>>();
    schMap.put(State.INSTALLED,clientSchs.get(sc));
    changedScHosts.put(sc,schMap);
  }
}
