{
  Set<OperatingSystemResponse> responses=new HashSet<OperatingSystemResponse>();
  String stackName=request.getStackName();
  String stackVersion=request.getStackVersion();
  String osType=request.getOsType();
  Long repositoryVersionId=request.getRepositoryVersionId();
  if (repositoryVersionId != null) {
    final RepositoryVersionEntity repositoryVersion=repositoryVersionDAO.findByPK(repositoryVersionId);
    if (repositoryVersion != null) {
      for (      OperatingSystemEntity operatingSystem : repositoryVersion.getOperatingSystems()) {
        final OperatingSystemResponse response=new OperatingSystemResponse(operatingSystem.getOsType());
        response.setRepositoryVersionId(repositoryVersionId);
        response.setStackName(repositoryVersion.getStackName());
        response.setStackVersion(repositoryVersion.getStackVersion());
        responses.add(response);
      }
    }
  }
 else {
    if (osType != null) {
      OperatingSystemInfo operatingSystem=ambariMetaInfo.getOperatingSystem(stackName,stackVersion,osType);
      responses=Collections.singleton(operatingSystem.convertToResponse());
    }
 else {
      Set<OperatingSystemInfo> operatingSystems=ambariMetaInfo.getOperatingSystems(stackName,stackVersion);
      for (      OperatingSystemInfo operatingSystem : operatingSystems) {
        responses.add(operatingSystem.convertToResponse());
      }
    }
  }
  return responses;
}
