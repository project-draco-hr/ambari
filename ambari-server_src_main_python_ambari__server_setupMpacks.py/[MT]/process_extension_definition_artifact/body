def process_extension_definition_artifact(artifact, artifact_source_dir, options):
    '\n  Process extension-definition artifact\n  Creates a link from <extension_location>/<extension_name>/<extension_version>\n  to the artifact_source_dir.\n  Ex: resources/extensions/EXT/1.0 -> resources/mpacks/myext/extensions/EXT/1.0\n  :param artifact: Artifact metadata\n  :param artifact_source_dir: Location of artifact in the management pack\n  :param options: Command line options\n  '
    (stack_location, extension_location, service_definitions_location, mpacks_staging_location) = get_mpack_properties()
    extension_name = None
    if ('extension_name' in artifact):
        extension_name = artifact.extension_name
    if (not extension_name):
        print_error_msg('Must provide extension name for extension-definition artifact!')
        raise FatalException((-1), 'Must provide extension name for extension-definition artifact!')
    extension_version = None
    if ('extension_version' in artifact):
        extension_version = artifact.extension_version
    if (not extension_version):
        print_error_msg('Must provide extension version for extension-definition artifact!')
        raise FatalException((-1), 'Must provide extension version for extension-definition artifact!')
    extension_dir = os.path.join(extension_location, extension_name)
    dest_link = os.path.join(extension_dir, extension_version)
    if (not os.path.exists(extension_location)):
        sudo.makedir(extension_location, 493)
    if (not os.path.exists(extension_dir)):
        sudo.makedir(extension_dir, 493)
    if (options.force and os.path.islink(dest_link)):
        sudo.unlink(dest_link)
    sudo.symlink(artifact_source_dir, dest_link)
