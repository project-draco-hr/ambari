def upgrade_mpack(options, replay_mode=False):
    '\n  Upgrade management pack\n  :param options: command line options\n  :param replay_mode: Flag to indicate if executing command in replay mode\n  '
    mpack_path = options.mpack_path
    if options.purge:
        print_error_msg('Purge is not supported with upgrade_mpack action!')
        raise FatalException((-1), 'Purge is not supported with upgrade_mpack action!')
    if (not mpack_path):
        print_error_msg('Management pack not specified!')
        raise FatalException((-1), 'Management pack not specified!')
    (mpack_name, mpack_version) = _get_mpack_name_version(mpack_path)
    results = search_mpacks(mpack_name, mpack_version)
    if (not results):
        print_error_msg('No management packs found that can be upgraded!')
        raise FatalException((-1), 'No management packs found that can be upgraded!')
    print_info_msg('Upgrading management pack {0}'.format(mpack_path))
    options.force = True
    (mpack_name, mpack_version, mpack_staging_dir, mpack_archive_path) = _install_mpack(options, replay_mode)
    uninstall_mpacks(mpack_name, mpack_version)
    print_info_msg('Management pack {0}-{1} successfully upgraded!'.format(mpack_name, mpack_version))
    if (not replay_mode):
        add_replay_log(UPGRADE_MPACK_ACTION, mpack_archive_path, options.purge, options.force, options.verbose)
