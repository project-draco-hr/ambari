def purge_stacks_and_mpacks(purge_list, replay_mode=False):
    '\n  Purge all stacks and management packs\n  :param replay_mode: Flag to indicate if purging in replay mode\n  '
    (stack_location, service_definitions_location, mpacks_staging_location) = get_mpack_properties()
    print_info_msg('Purging existing stack definitions and management packs')
    if (not purge_list):
        print_info_msg('Nothing to purge')
        return
    if ((STACK_DEFINITIONS_RESOURCE_NAME in purge_list) and os.path.exists(stack_location)):
        print_info_msg(('Purging stack location: ' + stack_location))
        for file in sorted(os.listdir(stack_location)):
            path = os.path.join(stack_location, file)
            if os.path.isdir(path):
                sudo.rmtree(path)
    if ((SERVICE_DEFINITIONS_RESOURCE_NAME in purge_list) and os.path.exists(service_definitions_location)):
        print_info_msg(('Purging service definitions location: ' + service_definitions_location))
        sudo.rmtree(service_definitions_location)
    if ((MPACKS_RESOURCE_NAME in purge_list) and (not replay_mode) and os.path.exists(mpacks_staging_location)):
        print_info_msg(('Purging mpacks staging location: ' + mpacks_staging_location))
        sudo.rmtree(mpacks_staging_location)
        sudo.makedir(mpacks_staging_location, 493)
