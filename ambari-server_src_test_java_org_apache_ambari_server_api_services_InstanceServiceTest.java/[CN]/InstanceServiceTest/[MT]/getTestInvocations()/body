{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  InstanceService service=new TestInstanceService("clusterName","instanceName");
  Method m=service.getClass().getMethod("getInstance",HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{getHttpHeaders(),getUriInfo(),"instanceName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestInstanceService("clusterName",null);
  m=service.getClass().getMethod("getInstances",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestInstanceService("clusterName","instanceName");
  m=service.getClass().getMethod("createInstance",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"instanceName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,service,m,args,"body"));
  service=new TestInstanceService("clusterName","instanceName");
  m=service.getClass().getMethod("updateInstance",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"instanceName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,service,m,args,"body"));
  service=new TestInstanceService("clusterName","instanceName");
  m=service.getClass().getMethod("deleteInstance",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"instanceName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,service,m,args,null));
  return listInvocations;
}
