def authenticate_client(self, connection, method, service_url, body, headers):
    service = ('HTTP@%s' % connection.host.lower())
    logger.debug('connection: %s', connection)
    logger.debug('service: %s', service)
    auth_header = self.get_authorization_header(service)
    logger.debug(('Authorization: %s' % auth_header))
    headers['Authorization'] = auth_header
    try:
        connection.request(method, service_url, body, headers)
        response = connection.getresponse()
    except Exception as e:
        logger.warn(('2nd HTTP request exception from server: %s' % str(e)))
        return None
    pass
    if response:
        logger.debug('2nd HTTP response from server: retcode = {0}, reason = {1}'.format(response.status, response.reason))
        logger.debug(str(response.read()))
        logger.debug('response headers: {0}'.format(response.getheaders()))
    return response
