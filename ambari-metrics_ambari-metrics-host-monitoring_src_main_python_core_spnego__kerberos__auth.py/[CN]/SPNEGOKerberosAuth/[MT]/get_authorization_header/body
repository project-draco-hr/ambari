def get_authorization_header(self, service):
    try:
        (result, self.krb_context) = kerberos.authGSSClientInit(service)
        if (result == (-1)):
            logger.warn('authGSSClientInit result: {0}'.format(result))
            return None
    except kerberos.GSSError as e:
        logger.warn(('authGSSClientInit exception: %s' % str(e)))
        return None
    pass
    try:
        result = kerberos.authGSSClientStep(self.krb_context, '')
        if (result == (-1)):
            logger.warn('authGSSClientStep result for authenticate client: {0}'.format(result))
            return None
    except kerberos.GSSError as e:
        logger.warn(('authGSSClientStep exception for authenticate client: %s' % str(e)))
        return None
    pass
    try:
        negotiate_value = kerberos.authGSSClientResponse(self.krb_context)
        logger.debug('authGSSClientResponse response:{0}'.format(negotiate_value))
    except kerberos.GSSError as e:
        logger.warn(('authGSSClientResponse exception: %s' % str(e)))
        return None
    pass
    return ('Negotiate %s' % negotiate_value)
