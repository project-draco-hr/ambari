{
  String stackVersion="0.2";
  String buildDir=tmpFolder.getRoot().getAbsolutePath();
  TestAmbariMetaInfo ambariMetaInfo=setupTempAmbariMetaInfo(buildDir);
  String newBaseUrl="http://myprivate-repo-1.hortonworks.com/HDP-Utils/centos6/2.x/updates/2.0.6.0";
  ambariMetaInfo.updateRepo(STACK_NAME_HDP,stackVersion,"redhat6",REPO_ID,newBaseUrl,null);
  RepositoryInfo repoInfo=ambariMetaInfo.getRepository(STACK_NAME_HDP,stackVersion,"redhat6",REPO_ID);
  assertEquals(newBaseUrl,repoInfo.getBaseUrl());
  String prevBaseUrl=repoInfo.getDefaultBaseUrl();
  MetainfoDAO metainfoDAO=ambariMetaInfo.metaInfoDAO;
  reset(metainfoDAO);
  MetainfoEntity entity=createNiceMock(MetainfoEntity.class);
  expect(metainfoDAO.findByKey("repo:/HDP/0.2/redhat6/HDP-UTILS-1.1.0.15:baseurl")).andReturn(entity).atLeastOnce();
  expect(entity.getMetainfoValue()).andReturn(newBaseUrl).atLeastOnce();
  replay(metainfoDAO,entity);
  ambariMetaInfo.init();
  List<RepositoryInfo> redhat6Repo=ambariMetaInfo.getRepositories(STACK_NAME_HDP,stackVersion,"redhat6");
  assertNotNull(redhat6Repo);
  for (  RepositoryInfo ri : redhat6Repo) {
    if (HDP_UTILS_REPO_NAME.equals(ri.getRepoName())) {
      assertEquals(newBaseUrl,ri.getBaseUrl());
      assertFalse(ri.getBaseUrl().equals(ri.getDefaultBaseUrl()));
    }
  }
  ambariMetaInfo.updateRepo(STACK_NAME_HDP,stackVersion,"redhat6",REPO_ID,prevBaseUrl,null);
}
