{
  Injector injector=Guice.createInjector(Modules.override(new InMemoryDefaultTestModule()).with(new MockModule()));
  injector.getInstance(GuiceJpaInitializer.class);
  injector.getInstance(EntityManager.class);
  injector.getInstance(OrmTestHelper.class).createCluster();
  metaInfo.alertDefinitionDao=injector.getInstance(AlertDefinitionDAO.class);
  Class<?> c=metaInfo.getClass().getSuperclass();
  Field f=c.getDeclaredField("agentAlertDefinitions");
  f.setAccessible(true);
  f.set(metaInfo,injector.getInstance(AgentAlertDefinitions.class));
  Clusters clusters=injector.getInstance(Clusters.class);
  Cluster cluster=clusters.getClusterById(1);
  cluster.setDesiredStackVersion(new StackId(STACK_NAME_HDP,"2.0.6"));
  cluster.addService("HDFS");
  metaInfo.reconcileAlertDefinitions(clusters);
  AlertDefinitionDAO dao=injector.getInstance(AlertDefinitionDAO.class);
  List<AlertDefinitionEntity> definitions=dao.findAll();
  assertEquals(7,definitions.size());
  int hostAlertCount=0;
  for (  AlertDefinitionEntity definition : definitions) {
    if (definition.getServiceName().equals("AMBARI") && definition.getComponentName().equals("AMBARI_AGENT")) {
      hostAlertCount++;
    }
  }
  assertEquals(1,hostAlertCount);
  assertEquals(6,definitions.size() - hostAlertCount);
  for (  AlertDefinitionEntity definition : definitions) {
    definition.setScheduleInterval(28);
    dao.merge(definition);
  }
  metaInfo.reconcileAlertDefinitions(clusters);
  definitions=dao.findAll();
  assertEquals(7,definitions.size());
  for (  AlertDefinitionEntity definition : definitions) {
    assertEquals(28,definition.getScheduleInterval().intValue());
  }
}
