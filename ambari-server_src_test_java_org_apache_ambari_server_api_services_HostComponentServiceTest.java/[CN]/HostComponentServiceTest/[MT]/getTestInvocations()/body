{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  HostComponentService componentService=new TestHostComponentService("clusterName","serviceName","componentName");
  Method m=componentService.getClass().getMethod("getHostComponent",HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{getHttpHeaders(),getUriInfo(),"componentName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,componentService,m,args,null));
  componentService=new TestHostComponentService("clusterName","serviceName",null);
  m=componentService.getClass().getMethod("getHostComponents",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,componentService,m,args,null));
  componentService=new TestHostComponentService("clusterName","serviceName","componentName");
  m=componentService.getClass().getMethod("createHostComponent",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"componentName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,componentService,m,args,"body"));
  componentService=new TestHostComponentService("clusterName","serviceName",null);
  m=componentService.getClass().getMethod("createHostComponents",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,componentService,m,args,"body"));
  componentService=new TestHostComponentService("clusterName","serviceName","componentName");
  m=componentService.getClass().getMethod("updateHostComponent",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"componentName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,componentService,m,args,"body"));
  componentService=new TestHostComponentService("clusterName","serviceName",null);
  m=componentService.getClass().getMethod("updateHostComponents",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,componentService,m,args,"body"));
  componentService=new TestHostComponentService("clusterName","serviceName","componentName");
  m=componentService.getClass().getMethod("deleteHostComponent",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"componentName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,componentService,m,args,null));
  return listInvocations;
}
