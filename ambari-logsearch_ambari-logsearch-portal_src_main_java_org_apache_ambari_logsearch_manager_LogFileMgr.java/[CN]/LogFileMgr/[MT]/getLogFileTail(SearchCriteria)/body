{
  String host=(String)searchCriteria.getParamValue("host");
  String logFile=(String)searchCriteria.getParamValue("name");
  String component=(String)searchCriteria.getParamValue("component");
  String tailSize=(String)searchCriteria.getParamValue("tailSize");
  if (stringUtil.isEmpty(host)) {
    throw restErrorUtil.createRESTException("missing Host Name",MessageEnums.ERROR_SYSTEM);
  }
  tailSize=(stringUtil.isEmpty(tailSize)) ? "10" : tailSize;
  SolrQuery logFileTailQuery=new SolrQuery();
  try {
    int tail=Integer.parseInt(tailSize);
    tail=tail > 100 ? 100 : tail;
    queryGenrator.setMainQuery(logFileTailQuery,null);
    queryGenrator.setSingleIncludeFilter(logFileTailQuery,LogSearchConstants.SOLR_HOST,host);
    if (!stringUtil.isEmpty(logFile)) {
      queryGenrator.setSingleIncludeFilter(logFileTailQuery,LogSearchConstants.SOLR_PATH,solrUtil.makeSolrSearchString(logFile));
    }
 else     if (!stringUtil.isEmpty(component)) {
      queryGenrator.setSingleIncludeFilter(logFileTailQuery,LogSearchConstants.SOLR_COMPONENT,component);
    }
 else {
      throw restErrorUtil.createRESTException("component or logfile parameter must be present",MessageEnums.ERROR_SYSTEM);
    }
    queryGenrator.setRowCount(logFileTailQuery,tail);
    queryGenrator.setSortOrderDefaultServiceLog(logFileTailQuery,new SearchCriteria());
    VSolrLogList solrLogList=getLogAsPaginationProvided(logFileTailQuery,serviceLogsSolrDao);
    return convertObjToString(solrLogList);
  }
 catch (  SolrException|IOException e) {
    throw restErrorUtil.createRESTException(e.getMessage(),MessageEnums.ERROR_SYSTEM);
  }
catch (  NumberFormatException ne) {
    throw restErrorUtil.createRESTException(ne.getMessage(),MessageEnums.ERROR_SYSTEM);
  }
}
