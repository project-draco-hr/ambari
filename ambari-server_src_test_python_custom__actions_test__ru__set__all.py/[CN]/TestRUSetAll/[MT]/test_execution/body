@patch('resource_management.core.shell.call')
@patch.object(Script, 'get_config')
@patch.object(OSCheck, 'is_redhat_family')
def test_execution(self, family_mock, get_config_mock, call_mock):
    json_file_path = os.path.join(self.get_custom_actions_dir(), 'ru_execute_tasks_namenode_prepare.json')
    self.assertTrue(os.path.isfile(json_file_path))
    with open(json_file_path, 'r') as json_file:
        json_payload = json.load(json_file)
    config_dict = ConfigDictionary(json_payload)
    family_mock.return_value = True
    get_config_mock.return_value = config_dict
    call_mock.side_effect = fake_call
    stack_name = default('/hostLevelParams/stack_name', None)
    stack_version = default('/hostLevelParams/stack_version', None)
    service_package_folder = default('/roleParams/service_package_folder', None)
    self.assertEqual(stack_name, 'HDP')
    self.assertEqual(stack_version, '2.2')
    self.assertEqual(service_package_folder, 'common-services/HDFS/2.1.0.2.0/package')
    ru_execute = UpgradeSetAll()
    ru_execute.actionexecute(None)
    call_mock.assert_called_with(('ambari-python-wrap', '/usr/bin/hdp-select', 'set', 'all', u'2.2.1.0-2260'), sudo=True)
