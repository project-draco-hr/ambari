{
  if (null == cluster) {
    return;
  }
  JsonObject rootJsonObject=new JsonObject();
  JsonArray repositories=new JsonArray();
  ClusterVersionEntity clusterVersionEntity=clusterVersionDAO.findByClusterAndStateCurrent(cluster.getClusterName());
  if (clusterVersionEntity != null && clusterVersionEntity.getRepositoryVersion() != null) {
    String hostOsFamily=clusters.getHost(hostName).getOsFamily();
    for (    OperatingSystemEntity operatingSystemEntity : clusterVersionEntity.getRepositoryVersion().getOperatingSystems()) {
      if (operatingSystemEntity.getOsType().equals(hostOsFamily)) {
        for (        RepositoryEntity repositoryEntity : operatingSystemEntity.getRepositories()) {
          JsonObject repositoryInfo=new JsonObject();
          repositoryInfo.addProperty("base_url",repositoryEntity.getBaseUrl());
          repositoryInfo.addProperty("repo_name",repositoryEntity.getName());
          repositoryInfo.addProperty("repo_id",repositoryEntity.getRepositoryId());
          repositories.add(repositoryInfo);
        }
        rootJsonObject.add("repositories",repositories);
      }
    }
  }
  hostLevelParams.put(REPO_INFO,rootJsonObject.toString());
  StackId stackId=cluster.getCurrentStackVersion();
  hostLevelParams.put(STACK_NAME,stackId.getStackName());
  hostLevelParams.put(STACK_VERSION,stackId.getStackVersion());
}
