@patch.object(subprocess, 'Popen')
def test_attribute_environment(self, popen_mock):
    expected_dict = {'JAVA_HOME': '/test/java/home', }
    subproc_mock = MagicMock()
    subproc_mock.returncode = 0
    subproc_mock.stdout.readline = MagicMock(side_effect=['OK'])
    subproc_mock.communicate.side_effect = [['1']]
    popen_mock.return_value = subproc_mock
    with Environment('/') as env:
        Execute('echo "1"', environment=expected_dict)
    self.assertEqual(popen_mock.call_args_list[0][1]['env'], expected_dict)
    pass
