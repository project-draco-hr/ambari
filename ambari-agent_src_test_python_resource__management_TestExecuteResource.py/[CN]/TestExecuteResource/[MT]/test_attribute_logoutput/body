@patch.object(os, 'read')
@patch.object(select, 'select')
@patch.object(logging.Logger, 'info')
@patch.object(subprocess, 'Popen')
def test_attribute_logoutput(self, popen_mock, info_mock, select_mock, os_read_mock):
    subproc_mock = MagicMock()
    subproc_mock.wait.return_value = MagicMock()
    subproc_mock.stdout = MagicMock()
    subproc_mock.returncode = 0
    popen_mock.return_value = subproc_mock
    select_mock.return_value = ([subproc_mock.stdout], None, None)
    os_read_mock.return_value = None
    with Environment('/') as env:
        Execute('echo "1"', logoutput=True)
        Execute('echo "2"', logoutput=False)
    info_mock.assert_called('1')
    self.assertTrue(("call('2')" not in str(info_mock.mock_calls)))
