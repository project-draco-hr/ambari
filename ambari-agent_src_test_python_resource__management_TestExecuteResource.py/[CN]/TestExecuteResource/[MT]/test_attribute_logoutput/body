@patch.object(logging.Logger, 'info')
@patch.object(subprocess, 'Popen')
def test_attribute_logoutput(self, popen_mock, info_mock):
    subproc_mock = MagicMock()
    subproc_mock.returncode = 0
    subproc_mock.communicate.side_effect = [['1'], ['2']]
    popen_mock.return_value = subproc_mock
    with Environment('/') as env:
        Execute('echo "1"', logoutput=True)
        Execute('echo "2"', logoutput=False)
    info_mock.assert_called('1')
    self.assertTrue(("call('2')" not in str(info_mock.mock_calls)))
