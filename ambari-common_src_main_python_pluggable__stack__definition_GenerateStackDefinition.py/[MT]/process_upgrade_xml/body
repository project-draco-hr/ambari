def process_upgrade_xml(file_path, target_version, config_data, stack_version_changes):
    tree = ET.parse(file_path)
    root = tree.getroot()
    for target_tag in root.findall('target'):
        version = '.'.join([el for el in target_tag.text.split('.') if (el != '*')])
        if (version in stack_version_changes):
            target_tag.text = target_tag.text.replace(version, stack_version_changes[version])
            tree.write(file_path)
    for target_tag in root.findall('target-stack'):
        (base_stack_name, base_stack_version) = target_tag.text.split('-')
        new_target_stack_text = target_tag.text.replace(base_stack_name, config_data.stackName)
        if (base_stack_version in stack_version_changes):
            new_target_stack_text = new_target_stack_text.replace(base_stack_version, stack_version_changes[base_stack_version])
        target_tag.text = new_target_stack_text
        tree.write(file_path)
    new_file_path = file_path
    if (target_version in stack_version_changes):
        new_file_path = os.path.join(os.path.dirname(file_path), 'upgrade-{0}.xml'.format(stack_version_changes[target_version]))
        os.rename(file_path, new_file_path)
    return new_file_path
