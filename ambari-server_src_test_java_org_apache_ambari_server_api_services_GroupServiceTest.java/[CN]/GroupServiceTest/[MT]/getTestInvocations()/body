{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  GroupService groupService;
  Method m;
  Object[] args;
  groupService=new TestGroupService();
  m=groupService.getClass().getMethod("getGroups",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,groupService,m,args,null));
  groupService=new TestGroupService();
  m=groupService.getClass().getMethod("getGroup",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"groupname"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,groupService,m,args,null));
  groupService=new TestGroupService();
  m=groupService.getClass().getMethod("createGroup",String.class,HttpHeaders.class,UriInfo.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,groupService,m,args,"body"));
  groupService=new TestGroupService();
  m=groupService.getClass().getMethod("createGroup",String.class,HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"groupname"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.POST,groupService,m,args,"body"));
  groupService=new TestGroupService();
  m=groupService.getClass().getMethod("deleteGroup",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"groupname"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE,groupService,m,args,null));
  return listInvocations;
}
