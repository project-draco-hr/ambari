def test_configure_secured(self):
    self.executeScript('2.0.6/services/HIVE/package/scripts/hive_client.py', classname='HiveClient', command='configure', config_file='secured.json')
    self.assertResourceCalled('Directory', '/etc/hive/conf', owner='hive', group='hadoop', recursive=True)
    self.assertResourceCalled('XmlConfig', 'mapred-site.xml', owner='hive', group='hadoop', mode=420, conf_dir='/etc/hive/conf', configurations=self.getConfig()['configurations']['mapred-site'])
    self.assertResourceCalled('XmlConfig', 'hive-site.xml', owner='hive', group='hadoop', mode=420, conf_dir='/etc/hive/conf', configurations=self.getConfig()['configurations']['hive-site'])
    self.assertResourceCalled('Execute', "/bin/sh -c 'cd /usr/lib/ambari-agent/ && curl -kf --retry 5 http://c6401.ambari.apache.org:8080/resources/DBConnectionVerification.jar -o DBConnectionVerification.jar'", not_if='[ -f DBConnectionVerification.jar]')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-env.sh', content=Template('hive-env.sh.j2', conf_dir='/etc/hive/conf'), owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-default.xml.template', owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-env.sh.template', owner='hive', group='hadoop')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-exec-log4j.properties', mode=420, group='hadoop', owner='hive', content='log4jproperties\nline2')
    self.assertResourceCalled('File', '/etc/hive/conf/hive-log4j.properties', mode=420, group='hadoop', owner='hive', content='log4jproperties\nline2')
    self.assertNoMoreResources()
