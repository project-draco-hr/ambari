def __init__(self, cluster_config_cache_dir):
    '\n    Initializes the configuration cache.\n    :param cluster_config_cache_dir:\n    :return:\n    '
    self.cluster_config_cache_dir = cluster_config_cache_dir
    self.__configurations = {}
    self.__file_lock = threading.RLock()
    self.__cache_lock = threading.RLock()
    self.__config_json_file = os.path.join(self.cluster_config_cache_dir, self.FILENAME)
    if (not os.path.exists(cluster_config_cache_dir)):
        try:
            os.makedirs(cluster_config_cache_dir)
        except:
            logger.critical('Could not create the cluster configuration cache directory {0}'.format(cluster_config_cache_dir))
    try:
        if os.path.isfile(self.__config_json_file):
            with open(self.__config_json_file, 'r') as fp:
                self.__configurations = json.load(fp)
    except Exception as exception:
        logger.warning('Unable to load configurations from {0}. This file will be regenerated on registration'.format(self.__config_json_file))
