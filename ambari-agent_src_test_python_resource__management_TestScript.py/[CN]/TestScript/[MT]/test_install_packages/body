@patch('resource_management.core.providers.package.PackageProvider')
def test_install_packages(self, package_provider_mock):
    no_such_entry_config = {}
    empty_config = {'hostLevelParams': {'package_list': '', }, }
    dummy_config = {'hostLevelParams': {'package_list': '[{"type":"rpm","name":"hbase"},{"type":"rpm","name":"yet-another-package"}]', }, }
    with Environment('.', test_mode=True) as env:
        script = Script()
        Script.config = no_such_entry_config
        script.install_packages(env)
    self.assertEquals(len(env.resource_list), 0)
    with Environment('.', test_mode=True) as env:
        script = Script()
        Script.config = empty_config
        script.install_packages(env)
    self.assertEquals(len(env.resource_list), 0)
    with Environment('.', test_mode=True) as env:
        Script.config = dummy_config
        script.install_packages('env')
    resource_dump = pprint.pformat(env.resource_list)
    self.assertEqual(resource_dump, "[Package['hbase'], Package['yet-another-package']]")
