{
  final Set<GroupRequest> requests=new HashSet<GroupRequest>();
  if (predicate == null) {
    requests.add(getRequest(null));
  }
 else {
    for (    Map<String,Object> propertyMap : getPropertyMaps(predicate)) {
      requests.add(getRequest(propertyMap));
    }
  }
  Set<GroupResponse> responses=getResources(new Command<Set<GroupResponse>>(){
    @Override public Set<GroupResponse> invoke() throws AmbariException {
      return getManagementController().getGroups(requests);
    }
  }
);
  LOG.debug("Found group responses matching get group request" + ", groupRequestSize=" + requests.size() + ", groupResponseSize="+ responses.size());
  Set<String> requestedIds=getRequestPropertyIds(request,predicate);
  Set<Resource> resources=new HashSet<Resource>();
  for (  GroupResponse groupResponse : responses) {
    ResourceImpl resource=new ResourceImpl(Resource.Type.Group);
    setResourceProperty(resource,GROUP_GROUPNAME_PROPERTY_ID,groupResponse.getGroupName(),requestedIds);
    setResourceProperty(resource,GROUP_LDAP_GROUP_PROPERTY_ID,groupResponse.isLdapGroup(),requestedIds);
    resources.add(resource);
  }
  return resources;
}
