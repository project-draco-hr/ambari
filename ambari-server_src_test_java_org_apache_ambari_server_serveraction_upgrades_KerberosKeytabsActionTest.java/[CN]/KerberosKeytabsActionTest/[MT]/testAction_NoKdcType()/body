{
  reset(m_kerberosHelper);
  expect(m_kerberosHelper.isClusterKerberosEnabled(EasyMock.anyObject(Cluster.class))).andReturn(Boolean.TRUE).atLeastOnce();
  replay(m_kerberosHelper);
  Map<String,String> commandParams=new HashMap<String,String>();
  commandParams.put("clusterName","c1");
  ExecutionCommand executionCommand=new ExecutionCommand();
  executionCommand.setCommandParams(commandParams);
  executionCommand.setClusterName("c1");
  HostRoleCommand hrc=EasyMock.createMock(HostRoleCommand.class);
  expect(hrc.getRequestId()).andReturn(1L).anyTimes();
  expect(hrc.getStageId()).andReturn(2L).anyTimes();
  expect(hrc.getExecutionCommandWrapper()).andReturn(new ExecutionCommandWrapper(executionCommand)).anyTimes();
  replay(hrc);
  KerberosKeytabsAction action=m_injector.getInstance(KerberosKeytabsAction.class);
  action.setExecutionCommand(executionCommand);
  action.setHostRoleCommand(hrc);
  CommandReport report=action.execute(null);
  assertNotNull(report);
  Assert.assertEquals(HostRoleStatus.COMPLETED.name(),report.getStatus());
  Assert.assertTrue(StringUtils.contains(report.getStdOut(),"KDC Type is NONE"));
  Assert.assertTrue(StringUtils.contains(report.getStdOut(),"No action required."));
}
