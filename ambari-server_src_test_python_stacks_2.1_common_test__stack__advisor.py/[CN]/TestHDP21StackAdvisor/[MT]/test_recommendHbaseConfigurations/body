def test_recommendHbaseConfigurations(self):
    servicesList = ['HBASE']
    configurations = {}
    components = []
    host_item = {'Hosts': {'cpu_count': 6, 'total_mem': 50331648, 'disk_info': [{'mountpoint': '/', }, {'mountpoint': '/dev/shm', }, {'mountpoint': '/vagrant', }, {'mountpoint': '/', }, {'mountpoint': '/dev/shm', }, {'mountpoint': '/vagrant', }], }, }
    hosts = {'items': [host_item for i in range(1, 600)], }
    services = {'services': [], 'configurations': {'hbase-site': {'properties': {'hbase.superuser': 'hbase', }, }, 'hbase-env': {'properties': {'hbase_user': 'hbase123', }, }, }, }
    expected = {'hbase-site': {'properties': {'hbase.superuser': 'hbase123', }, }, 'hbase-env': {'properties': {'hbase_master_heapsize': '8192', 'hbase_regionserver_heapsize': '8192', }, }, }
    clusterData = self.stackAdvisor.getConfigurationClusterSummary(servicesList, hosts, components, None)
    self.assertEquals(clusterData['hbaseRam'], 8)
    self.stackAdvisor.recommendHbaseConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
