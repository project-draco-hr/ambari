def test_recommendHiveConfigurations_jdbcUrl(self):
    services = {'services': [{'StackServices': {'service_name': 'HIVE', }, 'components': [{'StackServiceComponents': {'component_name': 'HIVE_METASTORE', 'service_name': 'HIVE', 'hostnames': ['example.com'], }, }], }], 'configurations': {}, }
    hosts = json.load(open(os.path.join(self.testDirectory, 'hosts.json')))
    clusterData = {'mapMemory': 3000, 'reduceMemory': 2056, 'containers': 3, 'ramPerContainer': 256, }
    configurations = {'hive-site': {'properties': {'javax.jdo.option.ConnectionDriverName': '', 'ambari.hive.db.schema.name': 'hive_name', 'javax.jdo.option.ConnectionURL': '', }, }, 'hive-env': {'properties': {'hive_database': 'New MySQL Database', }, }, }
    services['configurations'] = configurations
    hosts = {'items': [{'Hosts': {'host_name': 'example.com', }, }], }
    self.stackAdvisor.recommendHiveConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations['hive-site']['properties']['javax.jdo.option.ConnectionURL'], 'jdbc:mysql://example.com/hive_name?createDatabaseIfNotExist=true')
    self.assertEquals(configurations['hive-site']['properties']['javax.jdo.option.ConnectionDriverName'], 'com.mysql.jdbc.Driver')
    services['configurations']['hive-env']['properties']['hive_database'] = 'Existing MySQL Database'
    self.stackAdvisor.recommendHiveConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations['hive-site']['properties']['javax.jdo.option.ConnectionURL'], 'jdbc:mysql://example.com/hive_name')
    self.assertEquals(configurations['hive-site']['properties']['javax.jdo.option.ConnectionDriverName'], 'com.mysql.jdbc.Driver')
    services['configurations']['hive-env']['properties']['hive_database'] = 'Existing PostgreSQL Database'
    self.stackAdvisor.recommendHiveConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations['hive-site']['properties']['javax.jdo.option.ConnectionURL'], 'jdbc:postgresql://example.com:5432/hive_name')
    self.assertEquals(configurations['hive-site']['properties']['javax.jdo.option.ConnectionDriverName'], 'org.postgresql.Driver')
    services['configurations']['hive-env']['properties']['hive_database'] = 'Existing Oracle Database'
    self.stackAdvisor.recommendHiveConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations['hive-site']['properties']['javax.jdo.option.ConnectionURL'], 'jdbc:oracle:thin:@//example.com:1521/hive_name')
    self.assertEquals(configurations['hive-site']['properties']['javax.jdo.option.ConnectionDriverName'], 'oracle.jdbc.driver.OracleDriver')
    services['configurations']['hive-env']['properties']['hive_database'] = 'Existing SQL Anywhere Database'
    self.stackAdvisor.recommendHiveConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations['hive-site']['properties']['javax.jdo.option.ConnectionURL'], 'jdbc:sqlanywhere:host=example.com;database=hive_name')
    self.assertEquals(configurations['hive-site']['properties']['javax.jdo.option.ConnectionDriverName'], 'sap.jdbc4.sqlanywhere.IDriver')
