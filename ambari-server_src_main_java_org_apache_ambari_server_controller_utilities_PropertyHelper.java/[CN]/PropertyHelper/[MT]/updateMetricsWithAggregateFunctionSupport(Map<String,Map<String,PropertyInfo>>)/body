{
  if (metrics == null || metrics.isEmpty()) {
    return;
  }
  for (  Map.Entry<String,Map<String,PropertyInfo>> metricInfoEntry : metrics.entrySet()) {
    Map<String,PropertyInfo> metricInfo=metricInfoEntry.getValue();
    Map<String,PropertyInfo> aggregateMetrics=new HashMap<String,PropertyInfo>();
    for (    Map.Entry<String,PropertyInfo> metricEntry : metricInfo.entrySet()) {
      for (      String identifierToAdd : AGGREGATE_FUNCTION_IDENTIFIERS) {
        String metricInfoKey=metricEntry.getKey() + identifierToAdd;
        if (metricInfo.containsKey(metricInfoKey)) {
          continue;
        }
        PropertyInfo propertyInfo=metricEntry.getValue();
        PropertyInfo metricInfoValue=new PropertyInfo(propertyInfo.getPropertyId() + identifierToAdd,propertyInfo.isTemporal(),propertyInfo.isPointInTime());
        metricInfoValue.setAmsHostMetric(propertyInfo.isAmsHostMetric());
        metricInfoValue.setAmsId(!StringUtils.isEmpty(propertyInfo.getAmsId()) ? propertyInfo.getAmsId() + identifierToAdd : null);
        metricInfoValue.setUnit(propertyInfo.getUnit());
        aggregateMetrics.put(metricInfoKey,metricInfoValue);
      }
    }
    metricInfo.putAll(aggregateMetrics);
  }
}
