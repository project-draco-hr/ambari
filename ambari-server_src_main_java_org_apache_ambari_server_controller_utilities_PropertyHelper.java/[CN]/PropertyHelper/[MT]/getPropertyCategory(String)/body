{
  int lastPathSep=-1;
  if (!containsArguments(property)) {
    lastPathSep=property.lastIndexOf(EXTERNAL_PATH_SEP);
    return lastPathSep == -1 ? null : property.substring(0,lastPathSep);
  }
  String[] tokens=METRIC_CATEGORY_TOKENIZE_REGEX.split(property);
  if (null == tokens || tokens.length == 0) {
    return null;
  }
  StringBuilder categoryBuilder=new StringBuilder();
  for (int i=0; i < tokens.length - 1; i++) {
    String token=tokens[i];
    if (containsArguments(token)) {
      int methodIndex=token.indexOf('.');
      if (methodIndex != -1) {
        int parensIndex=token.lastIndexOf(')');
        if (parensIndex < token.length() - 1) {
          String temp=token.substring(0,methodIndex);
          temp+=token.substring(parensIndex + 1);
          token=temp;
        }
 else {
          token=token.substring(0,methodIndex);
        }
      }
    }
    categoryBuilder.append(token);
    if (i < tokens.length - 2) {
      categoryBuilder.append('/');
    }
  }
  String category=categoryBuilder.toString();
  return category;
}
