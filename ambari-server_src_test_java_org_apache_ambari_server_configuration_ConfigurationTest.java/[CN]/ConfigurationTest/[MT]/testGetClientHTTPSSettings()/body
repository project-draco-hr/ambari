{
  File passFile=File.createTempFile("https.pass.","txt");
  passFile.deleteOnExit();
  String password="pass12345";
  FileUtils.writeStringToFile(passFile,password);
  Properties ambariProperties=new Properties();
  ambariProperties.setProperty(Configuration.API_USE_SSL.getKey(),"true");
  ambariProperties.setProperty(Configuration.CLIENT_API_SSL_KSTR_DIR_NAME.getKey(),passFile.getParent());
  ambariProperties.setProperty(Configuration.CLIENT_API_SSL_CRT_PASS_FILE_NAME.getKey(),passFile.getName());
  String oneWayPort=RandomStringUtils.randomNumeric(4);
  String twoWayPort=RandomStringUtils.randomNumeric(4);
  ambariProperties.setProperty(Configuration.SRVR_TWO_WAY_SSL_PORT.getKey(),twoWayPort.toString());
  ambariProperties.setProperty(Configuration.SRVR_ONE_WAY_SSL_PORT.getKey(),oneWayPort.toString());
  Configuration conf=new Configuration(ambariProperties);
  Assert.assertTrue(conf.getApiSSLAuthentication());
  Assert.assertFalse(conf.getConfigsMap().get(Configuration.KSTR_NAME.getKey()).equals(conf.getConfigsMap().get(Configuration.CLIENT_API_SSL_KSTR_NAME.getKey())));
  Assert.assertEquals("keystore.p12",conf.getConfigsMap().get(Configuration.KSTR_NAME.getKey()));
  Assert.assertEquals("PKCS12",conf.getConfigsMap().get(Configuration.KSTR_TYPE.getKey()));
  Assert.assertEquals("keystore.p12",conf.getConfigsMap().get(Configuration.TSTR_NAME.getKey()));
  Assert.assertEquals("PKCS12",conf.getConfigsMap().get(Configuration.TSTR_TYPE.getKey()));
  Assert.assertEquals("https.keystore.p12",conf.getConfigsMap().get(Configuration.CLIENT_API_SSL_KSTR_NAME.getKey()));
  Assert.assertEquals("PKCS12",conf.getConfigsMap().get(Configuration.CLIENT_API_SSL_KSTR_TYPE.getKey()));
  Assert.assertEquals("https.keystore.p12",conf.getConfigsMap().get(Configuration.CLIENT_API_SSL_TSTR_NAME.getKey()));
  Assert.assertEquals("PKCS12",conf.getConfigsMap().get(Configuration.CLIENT_API_SSL_TSTR_TYPE.getKey()));
  Assert.assertEquals(passFile.getName(),conf.getConfigsMap().get(Configuration.CLIENT_API_SSL_CRT_PASS_FILE_NAME.getKey()));
  Assert.assertEquals(password,conf.getConfigsMap().get(Configuration.CLIENT_API_SSL_CRT_PASS.getKey()));
  Assert.assertEquals(Integer.parseInt(twoWayPort),conf.getTwoWayAuthPort());
  Assert.assertEquals(Integer.parseInt(oneWayPort),conf.getOneWayAuthPort());
}
