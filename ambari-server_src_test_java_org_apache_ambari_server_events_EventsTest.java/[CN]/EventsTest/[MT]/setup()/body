{
  m_injector=Guice.createInjector(new InMemoryDefaultTestModule());
  m_injector.getInstance(GuiceJpaInitializer.class);
  m_helper=m_injector.getInstance(OrmTestHelper.class);
  EventBus synchronizedBus=EventBusSynchronizer.synchronizeAmbariEventPublisher(m_injector);
  m_listener=m_injector.getInstance(MockEventListener.class);
  synchronizedBus.register(m_listener);
  m_clusters=m_injector.getInstance(Clusters.class);
  m_serviceFactory=m_injector.getInstance(ServiceFactory.class);
  m_componentFactory=m_injector.getInstance(ServiceComponentFactory.class);
  m_schFactory=m_injector.getInstance(ServiceComponentHostFactory.class);
  m_definitionDao=m_injector.getInstance(AlertDefinitionDAO.class);
  m_alertDispatchDao=m_injector.getInstance(AlertDispatchDAO.class);
  m_clusterName="foo";
  StackId stackId=new StackId("HDP","2.0.6");
  m_clusters.addCluster(m_clusterName,stackId);
  m_clusters.addHost(HOSTNAME);
  Host host=m_clusters.getHost(HOSTNAME);
  Map<String,String> hostAttributes=new HashMap<String,String>();
  hostAttributes.put("os_family","redhat");
  hostAttributes.put("os_release_version","6.4");
  host.setHostAttributes(hostAttributes);
  host.setState(HostState.HEALTHY);
  host.persist();
  m_cluster=m_clusters.getCluster(m_clusterName);
  Assert.assertNotNull(m_cluster);
  m_cluster.setDesiredStackVersion(stackId);
  m_helper.getOrCreateRepositoryVersion(stackId,stackId.getStackVersion());
  m_cluster.createClusterVersion(stackId,stackId.getStackVersion(),"admin",RepositoryVersionState.INSTALLING);
  m_clusters.mapHostToCluster(HOSTNAME,m_clusterName);
}
