def execute(parameters=None, host_name=None):
    '\n  Returns a tuple containing the result code and a pre-formatted result label\n\n  Keyword arguments:\n  parameters (dictionary): a mapping of parameter key to value\n  host_name (string): the name of this host where the alert is running\n  '
    if (parameters is None):
        return ('UNKNOWN', ['There were no parameters supplied to the script.'])
    thrift_port = THRIFT_PORT_DEFAULT
    if (HIVE_SERVER_THRIFT_PORT_KEY in parameters):
        thrift_port = int(parameters[HIVE_SERVER_THRIFT_PORT_KEY])
    security_enabled = False
    if (SECURITY_ENABLED_KEY in parameters):
        security_enabled = bool(parameters[SECURITY_ENABLED_KEY])
    result_code = None
    try:
        if (host_name is None):
            host_name = socket.getfqdn()
        start_time = time.time()
        is_thrift_port_ok = hive_check.check_thrift_port_sasl(host_name, thrift_port, security_enabled=security_enabled)
        if (is_thrift_port_ok == True):
            result_code = 'OK'
            total_time = (time.time() - start_time)
            label = (OK_MESSAGE % (total_time, thrift_port))
        else:
            result_code = 'CRITICAL'
            label = CRITICAL_MESSAGE.format(host_name, thrift_port)
    except Exception as e:
        label = str(e)
        result_code = 'UNKNOWN'
    return (result_code, [label])
