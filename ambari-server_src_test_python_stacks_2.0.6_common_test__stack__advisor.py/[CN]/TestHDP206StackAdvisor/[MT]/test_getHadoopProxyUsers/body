def test_getHadoopProxyUsers(self):
    configurations = {'hadoop-env': {'properties': {'hdfs_user': 'hdfs-user', }, }, 'yarn-env': {'properties': {'yarn_user': 'yarn-user', }, }, }
    services = {'services': [{'StackServices': {'service_name': 'HDFS', }, }, {'StackServices': {'service_name': 'YARN', }, 'components': [{'StackServiceComponents': {'component_name': 'RESOURCEMANAGER', 'hostnames': ['host1', 'host2'], }, }], }], 'ambari-server-properties': {'ambari-server.user': 'ambari-user', }, 'configurations': configurations, }
    hosts = {'items': [{'Hosts': {'host_name': 'host1', }, }, {'Hosts': {'host_name': 'host2', }, }], }
    res_expected = {'hdfs-user': {'propertyName': 'hdfs_user', 'config': 'hadoop-env', 'propertyHosts': '*', 'propertyGroups': '*', }, 'yarn-user': {'propertyName': 'yarn_user', 'config': 'yarn-env', 'propertyHosts': 'host1,host2', }, }
    res = self.stackAdvisor.getHadoopProxyUsers(services, hosts)
    self.assertEquals(res, res_expected)
    services['services'][1]['components'][0]['StackServiceComponents']['hostnames'] = ['host1']
    res_expected = {'hdfs-user': {'propertyName': 'hdfs_user', 'config': 'hadoop-env', 'propertyHosts': '*', 'propertyGroups': '*', }, }
    res = self.stackAdvisor.getHadoopProxyUsers(services, hosts)
    self.assertEquals(res, res_expected)
