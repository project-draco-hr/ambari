def test_recommendHDFSConfigurations(self):
    configurations = {'hadoop-env': {'properties': {'hdfs_user': 'hdfs', 'proxyuser_group': 'users', }, }, 'hive-env': {'properties': {'webhcat_user': 'webhcat', 'hive_user': 'hive', }, }, 'oozie-env': {'properties': {'oozie_user': 'oozie', }, }, 'falcon-env': {'properties': {'falcon_user': 'falcon', }, }, }
    hosts = {'items': [{'href': '/api/v1/hosts/host1', 'Hosts': {'cpu_count': 1, 'host_name': 'c6401.ambari.apache.org', 'os_arch': 'x86_64', 'os_type': 'centos6', 'ph_cpu_count': 1, 'public_host_name': 'c6401.ambari.apache.org', 'rack_info': '/default-rack', 'total_mem': 2097152, 'disk_info': [{'size': '8', 'mountpoint': '/', }], }, }, {'href': '/api/v1/hosts/host2', 'Hosts': {'cpu_count': 1, 'host_name': 'c6402.ambari.apache.org', 'os_arch': 'x86_64', 'os_type': 'centos6', 'ph_cpu_count': 1, 'public_host_name': 'c6402.ambari.apache.org', 'rack_info': '/default-rack', 'total_mem': 1048576, 'disk_info': [{'size': '8', 'mountpoint': '/', }], }, }], }
    services = {'services': [{'StackServices': {'service_name': 'HDFS', }, 'components': [], }, {'StackServices': {'service_name': 'FALCON', }, 'components': [], }, {'StackServices': {'service_name': 'HIVE', }, 'components': [{'href': '/api/v1/stacks/HDP/versions/2.0.6/services/HIVE/components/HIVE_SERVER', 'StackServiceComponents': {'advertise_version': 'true', 'cardinality': '1', 'component_category': 'MASTER', 'component_name': 'HIVE_SERVER', 'custom_commands': [], 'display_name': 'Hive Server', 'is_client': 'false', 'is_master': 'true', 'service_name': 'HIVE', 'stack_name': 'HDP', 'stack_version': '2.0.6', 'hostnames': ['c6401.ambari.apache.org', 'c6402.ambari.apache.org'], }, }, {'href': '/api/v1/stacks/HDP/versions/2.0.6/services/HIVE/components/WEBHCAT_SERVER', 'StackServiceComponents': {'advertise_version': 'true', 'cardinality': '1', 'component_category': 'MASTER', 'component_name': 'WEBHCAT_SERVER', 'custom_commands': [], 'display_name': 'WebHCat Server', 'is_client': 'false', 'is_master': 'true', 'service_name': 'HIVE', 'stack_name': 'HDP', 'stack_version': '2.0.6', 'hostnames': ['c6401.ambari.apache.org', 'c6402.ambari.apache.org'], }, }], }, {'StackServices': {'service_name': 'OOZIE', }, 'components': [{'href': '/api/v1/stacks/HDP/versions/2.0.6/services/HIVE/components/OOZIE_SERVER', 'StackServiceComponents': {'advertise_version': 'true', 'cardinality': '1', 'component_category': 'MASTER', 'component_name': 'OOZIE_SERVER', 'custom_commands': [], 'display_name': 'Oozie Server', 'is_client': 'false', 'is_master': 'true', 'service_name': 'HIVE', 'stack_name': 'HDP', 'stack_version': '2.0.6', 'hostnames': ['c6401.ambari.apache.org', 'c6402.ambari.apache.org'], }, }], }], 'configurations': configurations, 'ambari-server-properties': {'ambari-server.user': 'ambari_user', }, }
    clusterData = {'totalAvailableRam': 2048, }
    ambariHostName = socket.getfqdn()
    expected = {'oozie-env': {'properties': {'oozie_user': 'oozie', }, }, 'core-site': {'properties': {'hadoop.proxyuser.ambari_user.groups': '*', 'hadoop.proxyuser.ambari_user.hosts': ambariHostName, 'hadoop.proxyuser.oozie.groups': '*', 'hadoop.proxyuser.hive.groups': '*', 'hadoop.proxyuser.webhcat.hosts': 'c6401.ambari.apache.org,c6402.ambari.apache.org', 'hadoop.proxyuser.falcon.hosts': '*', 'hadoop.proxyuser.webhcat.groups': '*', 'hadoop.proxyuser.hdfs.groups': '*', 'hadoop.proxyuser.hdfs.hosts': '*', 'hadoop.proxyuser.hive.hosts': 'c6401.ambari.apache.org,c6402.ambari.apache.org', 'hadoop.proxyuser.oozie.hosts': 'c6401.ambari.apache.org,c6402.ambari.apache.org', 'hadoop.proxyuser.falcon.groups': '*', }, }, 'falcon-env': {'properties': {'falcon_user': 'falcon', }, }, 'hdfs-site': {'properties': {'dfs.datanode.data.dir': '/hadoop/hdfs/data', 'dfs.datanode.du.reserved': '1024', }, }, 'hive-env': {'properties': {'hive_user': 'hive', 'webhcat_user': 'webhcat', }, }, 'hadoop-env': {'properties': {'hdfs_user': 'hdfs', 'namenode_heapsize': '1024', 'proxyuser_group': 'users', 'namenode_opt_maxnewsize': '256', 'namenode_opt_newsize': '256', }, }, }
    self.stackAdvisor.recommendHDFSConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    configurations['hadoop-env']['properties']['hdfs_user'] = 'hdfs1'
    changedConfigurations = [{'type': 'hadoop-env', 'name': 'hdfs_user', 'old_value': 'hdfs', }]
    services['changed-configurations'] = changedConfigurations
    services['configurations'] = configurations
    expected = {'oozie-env': {'properties': {'oozie_user': 'oozie', }, }, 'core-site': {'properties': {'hadoop.proxyuser.ambari_user.groups': '*', 'hadoop.proxyuser.ambari_user.hosts': ambariHostName, 'hadoop.proxyuser.oozie.groups': '*', 'hadoop.proxyuser.hive.groups': '*', 'hadoop.proxyuser.hdfs1.groups': '*', 'hadoop.proxyuser.hdfs1.hosts': '*', 'hadoop.proxyuser.webhcat.hosts': 'c6401.ambari.apache.org,c6402.ambari.apache.org', 'hadoop.proxyuser.falcon.hosts': '*', 'hadoop.proxyuser.webhcat.groups': '*', 'hadoop.proxyuser.hdfs.groups': '*', 'hadoop.proxyuser.hdfs.hosts': '*', 'hadoop.proxyuser.hive.hosts': 'c6401.ambari.apache.org,c6402.ambari.apache.org', 'hadoop.proxyuser.oozie.hosts': 'c6401.ambari.apache.org,c6402.ambari.apache.org', 'hadoop.proxyuser.falcon.groups': '*', }, 'property_attributes': {'hadoop.proxyuser.hdfs.groups': {'delete': 'true', }, 'hadoop.proxyuser.hdfs.hosts': {'delete': 'true', }, }, }, 'falcon-env': {'properties': {'falcon_user': 'falcon', }, }, 'hive-env': {'properties': {'hive_user': 'hive', 'webhcat_user': 'webhcat', }, }, 'hdfs-site': {'properties': {'dfs.datanode.data.dir': '/hadoop/hdfs/data', 'dfs.datanode.du.reserved': '1024', }, }, 'hadoop-env': {'properties': {'hdfs_user': 'hdfs1', 'namenode_heapsize': '1024', 'proxyuser_group': 'users', 'namenode_opt_maxnewsize': '256', 'namenode_opt_newsize': '256', }, }, }
    self.stackAdvisor.recommendHDFSConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
    configurations['hdfs-site']['properties']['dfs.internal.nameservices'] = 'mycluster'
    configurations['hdfs-site']['properties']['dfs.ha.namenodes.mycluster'] = 'nn1,nn2'
    services['configurations'] = configurations
    expected['hdfs-site'] = {'properties': {'dfs.datanode.data.dir': '/hadoop/hdfs/data', 'dfs.datanode.du.reserved': '1024', 'dfs.internal.nameservices': 'mycluster', 'dfs.ha.namenodes.mycluster': 'nn1,nn2', }, 'property_attributes': {'dfs.namenode.rpc-address': {'delete': 'true', }, }, }
    self.stackAdvisor.recommendHDFSConfigurations(configurations, clusterData, services, hosts)
    self.assertEquals(configurations, expected)
