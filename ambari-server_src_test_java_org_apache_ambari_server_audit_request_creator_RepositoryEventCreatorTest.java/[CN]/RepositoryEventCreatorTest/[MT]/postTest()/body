{
  RepositoryEventCreator creator=new RepositoryEventCreator();
  Map<String,Object> properties=new HashMap<>();
  properties.put(RepositoryResourceProvider.REPOSITORY_REPO_ID_PROPERTY_ID,"Repo1");
  properties.put(RepositoryResourceProvider.REPOSITORY_STACK_NAME_PROPERTY_ID,"StackName");
  properties.put(RepositoryResourceProvider.REPOSITORY_STACK_VERSION_PROPERTY_ID,"1.2-56");
  properties.put(RepositoryResourceProvider.REPOSITORY_OS_TYPE_PROPERTY_ID,"redhat7");
  properties.put(RepositoryResourceProvider.REPOSITORY_BASE_URL_PROPERTY_ID,"http://example.com");
  Request request=AuditEventCreatorTestHelper.createRequest(Request.Type.POST,Resource.Type.Repository,properties,null);
  Result result=AuditEventCreatorTestHelper.createResult(new ResultStatus(ResultStatus.STATUS.OK));
  AuditEvent event=AuditEventCreatorTestHelper.getEvent(creator,request,result);
  String actual=event.getAuditMessage();
  String expected="User(" + userName + "), RemoteIp(1.2.3.4), Operation(Repository addition), RequestType(POST), url(http://example.com:8080/api/v1/test), ResultStatus(200 OK), Stack(StackName), Stack version(1.2-56), OS(redhat7), Repo id(Repo1), Base URL(http://example.com)";
  Assert.assertTrue("Class mismatch",event instanceof AddRepositoryRequestAuditEvent);
  Assert.assertEquals(expected,actual);
  Assert.assertTrue(actual.contains(userName));
}
