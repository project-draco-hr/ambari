def terminate_thread(thread):
    'Terminates a python thread abruptly from another thread.\n  \n  This is consider a bad pattern to do this. \n  If possible, please consider handling stopping of the thread from inside of it\n  or creating thread as a separate process (multiprocessing module).\n\n  :param thread: a threading.Thread instance\n  '
    import ctypes
    if (not thread.isAlive()):
        return
    exc = ctypes.py_object(SystemExit)
    res = ctypes.pythonapi.PyThreadState_SetAsyncExc(ctypes.c_long(thread.ident), exc)
    if (res == 0):
        raise ValueError('nonexistent thread id')
    elif (res > 1):
        ctypes.pythonapi.PyThreadState_SetAsyncExc(thread.ident, None)
        raise SystemError('PyThreadState_SetAsyncExc failed')
