def _get_all_configuration(resource_root, cluster_name, type):
    '\n  Gets ALL configuration of a cluster of a given type\n  @param resource_root: The root Resource .\n  @param cluster_name: cluster_name\n  @param type: type of config\n  @return: A ConfigModel object\n  '
    dic = resource_root.get((paths.CONFIGURATION_ALL_PATH % (cluster_name, type)))
    if (len(dic['items']) == 0):
        return None
    objects = []
    for cfgm in dic['items']:
        config_model = utils.ModelUtils.create_model(ConfigModel, cfgm, resource_root, 'NO_KEY')
        ref_clss = utils.getREF_class_name('cluster_name')
        config_model._setattr(ref_clss, cfgm['Config']['cluster_name'])
        objects.append(config_model)
    return ModelList(objects)
