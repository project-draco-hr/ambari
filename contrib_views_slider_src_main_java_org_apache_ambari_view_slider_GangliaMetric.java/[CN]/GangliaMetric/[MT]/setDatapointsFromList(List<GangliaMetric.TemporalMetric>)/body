{
  Number[][] datapointsArray=new Number[listTemporalMetrics.size()][2];
  int cnt=0;
  if (PERCENTAGE_METRIC.contains(metric_name)) {
    int firstIndex=0;
    int lastIndex=listTemporalMetrics.size() - 1;
    for (int i=firstIndex; i <= lastIndex; ++i) {
      GangliaMetric.TemporalMetric m=listTemporalMetrics.get(i);
      Number val=m.getValue();
      if (100.0 >= val.doubleValue()) {
        datapointsArray[cnt][0]=val;
        datapointsArray[cnt][1]=m.getTime();
        cnt++;
      }
    }
  }
 else {
    int firstIndex=0;
    int lastIndex=listTemporalMetrics.size() - 1;
    for (int i=firstIndex; i <= lastIndex; ++i) {
      GangliaMetric.TemporalMetric m=listTemporalMetrics.get(i);
      datapointsArray[i][0]=m.getValue();
      datapointsArray[i][1]=m.getTime();
      cnt++;
    }
  }
  this.datapoints=new Number[cnt][2];
  for (int i=0; i < this.datapoints.length; i++) {
    this.datapoints[i][0]=datapointsArray[i][0];
    this.datapoints[i][1]=datapointsArray[i][1];
  }
}
