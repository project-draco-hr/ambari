{
  TimelineClusterMetric existingMetric=null;
  MetricHostAggregate hostAggregate=null;
  Map<TimelineClusterMetric,MetricHostAggregate> hostAggregateMap=new HashMap<TimelineClusterMetric,MetricHostAggregate>();
  while (rs.next()) {
    TimelineClusterMetric currentMetric=readHelper.fromResultSet(rs);
    MetricClusterAggregate currentHostAggregate=isClusterPrecisionInputTable ? readHelper.getMetricClusterAggregateFromResultSet(rs) : readHelper.getMetricClusterTimeAggregateFromResultSet(rs);
    if (existingMetric == null) {
      existingMetric=currentMetric;
      hostAggregate=new MetricHostAggregate();
      hostAggregateMap.put(currentMetric,hostAggregate);
    }
    if (existingMetric.equalsExceptTime(currentMetric)) {
      updateAggregatesFromHost(hostAggregate,currentHostAggregate);
    }
 else {
      hostAggregate=new MetricHostAggregate();
      updateAggregatesFromHost(hostAggregate,currentHostAggregate);
      hostAggregateMap.put(currentMetric,hostAggregate);
      existingMetric=currentMetric;
    }
  }
  return hostAggregateMap;
}
