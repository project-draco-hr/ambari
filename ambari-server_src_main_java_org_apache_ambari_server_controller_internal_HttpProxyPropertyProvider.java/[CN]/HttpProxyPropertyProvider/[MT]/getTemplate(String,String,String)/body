{
  String template=URL_TEMPLATES.get(componentName);
  if (componentName.equals(COMPONENT_RESOURCEMANAGER)) {
    try {
      Cluster cluster=this.clusters.getCluster(clusterName);
      Map<String,String> yarnConfigProperties=cluster.getDesiredConfigByType(CONFIG_YARN_SITE).getProperties();
      Map<String,String> coreConfigProperties=cluster.getDesiredConfigByType(CONFIG_CORE_SITE).getProperties();
      String yarnHttpPolicy=yarnConfigProperties.get(PROPERTY_YARN_HTTP_POLICY);
      String hadoopSslEnabled=coreConfigProperties.get(PROPERTY_HADOOP_SSL_ENABLED);
      boolean useHttps=(yarnHttpPolicy != null && yarnHttpPolicy.equals(PROPERTY_YARN_HTTP_POLICY_VALUE_HTTPS_ONLY)) || hadoopSslEnabled != null && hadoopSslEnabled.equals(PROPERTY_HADOOP_SSL_ENABLED_VALUE_TRUE);
      if (useHttps) {
        template=template.replace("http","https");
      }
      String port;
      if (!yarnConfigProperties.containsKey(PROPERTY_RESOURCEMANAGER_HA_RM_IDS)) {
        if (useHttps) {
          port=getPortFromProperty(yarnConfigProperties,PROPERTY_RESOURCEMANAGER_WEBAPP_HTTPS_ADDRESS,"8090");
        }
 else {
          port=getPortFromProperty(yarnConfigProperties,PROPERTY_RESOURCEMANAGER_WEBAPP_ADDRESS,"8088");
        }
      }
 else {
        String rmId=null;
        for (        String id : yarnConfigProperties.get(PROPERTY_RESOURCEMANAGER_HA_RM_IDS).split(",")) {
          String hostNameProperty=String.format(PROPERTY_RESOURCEMANAGER_HOSTNAME_TEMPLATE,id);
          String hostNameById=yarnConfigProperties.get(hostNameProperty);
          if (hostNameById.equals(hostName)) {
            rmId=id;
            break;
          }
        }
        if (useHttps) {
          String httpsAddressPoperty=String.format(PROPERTY_RESOURCEMANAGER_WEBAPP_HTTPS_ADDRESS_TEMPLATE,rmId);
          port=getPortFromProperty(yarnConfigProperties,httpsAddressPoperty,"8090");
        }
 else {
          String httpAddressPoperty=String.format(PROPERTY_RESOURCEMANAGER_WEBAPP_ADDRESS_TEMPLATE,rmId);
          port=getPortFromProperty(yarnConfigProperties,httpAddressPoperty,"8088");
        }
      }
      template=String.format(template,"%s",port);
    }
 catch (    AmbariException e) {
      LOG.debug(String.format("Could not load cluster with name %s. %s",clusterName,e.getMessage()));
      throw new SystemException(String.format("Could not load cluster with name %s.",clusterName),e);
    }
  }
  return template;
}
