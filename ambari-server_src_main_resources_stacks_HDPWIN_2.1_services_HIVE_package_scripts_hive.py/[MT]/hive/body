def hive(name=None):
    import params
    XmlConfig('hive-site.xml', conf_dir=params.hive_conf_dir, configurations=params.config['configurations']['hive-site'], owner=params.hive_user, configuration_attributes=params.config['configuration_attributes']['hive-site'])
    if (name in ['hiveserver2', 'metastore']):
        Execute(format('cmd /c hadoop fs -mkdir -p {hive_warehouse_dir}'), logoutput=True, user=params.hadoop_user)
    if (name == 'metastore'):
        if params.init_metastore_schema:
            check_schema_created_cmd = format('cmd /c "{hive_bin}\\hive.cmd --service schematool -info -dbType {hive_metastore_db_type} -userName {hive_metastore_user_name} -passWord {hive_metastore_user_passwd!p}&set EXITCODE=%ERRORLEVEL%&exit /B %EXITCODE%"', hive_bin=params.hive_bin, hive_metastore_db_type=params.hive_metastore_db_type, hive_metastore_user_name=params.hive_metastore_user_name, hive_metastore_user_passwd=params.hive_metastore_user_passwd)
            try:
                Execute(check_schema_created_cmd)
            except Fail:
                create_schema_cmd = format('cmd /c {hive_bin}\\hive.cmd --service schematool -initSchema -dbType {hive_metastore_db_type} -userName {hive_metastore_user_name} -passWord {hive_metastore_user_passwd!p}', hive_bin=params.hive_bin, hive_metastore_db_type=params.hive_metastore_db_type, hive_metastore_user_name=params.hive_metastore_user_name, hive_metastore_user_passwd=params.hive_metastore_user_passwd)
                Execute(create_schema_cmd, user=params.hive_user, logoutput=True)
