def test_unpack_archive(self):
    tmpdir = tempfile.mkdtemp()
    dummy_archive_name = os.path.join('ambari_agent', 'dummy_files', 'dummy_archive.zip')
    archive_file = open(dummy_archive_name, 'rb')
    fileCache = FileCache(self.config)
    fileCache.unpack_archive(archive_file, tmpdir)
    total_size = 0
    total_files = 0
    total_dirs = 0
    for (dirpath, dirnames, filenames) in os.walk(tmpdir):
        total_dirs += 1
        for f in filenames:
            fp = os.path.join(dirpath, f)
            total_size += os.path.getsize(fp)
            total_files += 1
    self.assertEquals(total_size, 51258L)
    self.assertEquals(total_files, 28)
    self.assertEquals(total_dirs, 8)
    shutil.rmtree(tmpdir)
    with patch('os.path.isdir') as isdir_mock:
        isdir_mock.side_effect = self.exc_side_effect
        try:
            fileCache.unpack_archive(archive_file, tmpdir)
            self.fail('CachingException not thrown')
        except CachingException:
            pass
        except Exception as e:
            self.fail(('Unexpected exception thrown:' + str(e)))
