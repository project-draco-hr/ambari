def assert_configure_default(self, role):
    self.assertResourceCalled('Directory', '/var/log/druid', mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('Directory', '/var/run/druid', mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('Directory', format('/usr/hdp/current/{role}/conf/_common'), mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('Directory', format('/usr/hdp/current/{role}/conf/coordinator'), mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('Directory', format('/usr/hdp/current/{role}/conf/broker'), mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('Directory', format('/usr/hdp/current/{role}/conf/middleManager'), mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('Directory', format('/usr/hdp/current/{role}/conf/historical'), mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('Directory', format('/usr/hdp/current/{role}/conf/overlord'), mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('Directory', format('/usr/hdp/current/{role}/conf/router'), mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('Directory', '/apps/druid/segmentCache', mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('File', format('/usr/hdp/current/{role}/conf/druid-env.sh'), owner='druid', content=InlineTemplate(self.getConfig()['configurations']['druid-env']['content']))
    druid_common_config = mutable_config_dict(self.getConfig()['configurations']['druid-common'])
    druid_common_config['druid.host'] = 'c6401.ambari.apache.org'
    druid_common_config['druid.extensions.directory'] = format('/usr/hdp/current/{role}/extensions')
    druid_common_config['druid.extensions.hadoopDependenciesDir'] = format('/usr/hdp/current/{role}/hadoop-dependencies')
    druid_common_config['druid.selectors.indexing.serviceName'] = 'druid/overlord'
    druid_common_config['druid.selectors.coordinator.serviceName'] = 'druid/coordinator'
    self.assertResourceCalled('PropertiesFile', 'common.runtime.properties', dir=format('/usr/hdp/current/{role}/conf/_common'), properties=druid_common_config, owner='druid', group='hadoop')
    self.assertResourceCalled('File', format('/usr/hdp/current/{role}/conf/_common/druid-log4j.xml'), mode=420, owner='druid', group='hadoop', content=InlineTemplate(self.getConfig()['configurations']['druid-log4j']['content']))
    self.assertResourceCalled('File', '/etc/logrotate.d/druid', mode=420, owner='root', group='root', content=InlineTemplate(self.getConfig()['configurations']['druid-logrotate']['content']))
    self.assertResourceCalled('XmlConfig', 'core-site.xml', conf_dir=format('/usr/hdp/current/{role}/conf/_common'), configurations=self.getConfig()['configurations']['core-site'], configuration_attributes=self.getConfig()['configuration_attributes']['core-site'], owner='druid', group='hadoop')
    self.assertResourceCalled('XmlConfig', 'yarn-site.xml', conf_dir=format('/usr/hdp/current/{role}/conf/_common'), configurations=self.getConfig()['configurations']['yarn-site'], configuration_attributes=self.getConfig()['configuration_attributes']['yarn-site'], owner='druid', group='hadoop')
    self.assertResourceCalled('XmlConfig', 'hdfs-site.xml', conf_dir=format('/usr/hdp/current/{role}/conf/_common'), configurations=self.getConfig()['configurations']['hdfs-site'], configuration_attributes=self.getConfig()['configuration_attributes']['hdfs-site'], owner='druid', group='hadoop')
    self.assertResourceCalled('PropertiesFile', 'runtime.properties', dir=format('/usr/hdp/current/{role}/conf/coordinator'), properties=self.getConfig()['configurations']['druid-coordinator'], owner='druid', group='hadoop')
    self.assertResourceCalled('File', format('/usr/hdp/current/{role}/conf/coordinator/jvm.config'), owner='druid', group='hadoop', content=InlineTemplate('-server \n-Xms{{node_heap_memory}}m \n-Xmx{{node_heap_memory}}m \n-XX:MaxDirectMemorySize={{node_direct_memory}}m \n-Dlog4j.configurationFile={{log4j_config_file}} \n-Dlog4j.debug \n{{node_jvm_opts}}', node_heap_memory=1024, node_direct_memory=2048, node_jvm_opts='-Duser.timezone=UTC -Dfile.encoding=UTF-8', log4j_config_file=format('/usr/hdp/current/{role}/conf/_common/druid-log4j.xml')))
    self.assertResourceCalled('PropertiesFile', 'runtime.properties', dir=format('/usr/hdp/current/{role}/conf/overlord'), properties=self.getConfig()['configurations']['druid-overlord'], owner='druid', group='hadoop')
    self.assertResourceCalled('File', format('/usr/hdp/current/{role}/conf/overlord/jvm.config'), owner='druid', group='hadoop', content=InlineTemplate('-server \n-Xms{{node_heap_memory}}m \n-Xmx{{node_heap_memory}}m \n-XX:MaxDirectMemorySize={{node_direct_memory}}m \n-Dlog4j.configurationFile={{log4j_config_file}} \n-Dlog4j.debug \n{{node_jvm_opts}}', node_heap_memory=1024, node_direct_memory=2048, node_jvm_opts='-Duser.timezone=UTC -Dfile.encoding=UTF-8', log4j_config_file=format('/usr/hdp/current/{role}/conf/_common/druid-log4j.xml')))
    self.assertResourceCalled('PropertiesFile', 'runtime.properties', dir=format('/usr/hdp/current/{role}/conf/historical'), properties=self.getConfig()['configurations']['druid-historical'], owner='druid', group='hadoop')
    self.assertResourceCalled('File', format('/usr/hdp/current/{role}/conf/historical/jvm.config'), owner='druid', group='hadoop', content=InlineTemplate('-server \n-Xms{{node_heap_memory}}m \n-Xmx{{node_heap_memory}}m \n-XX:MaxDirectMemorySize={{node_direct_memory}}m \n-Dlog4j.configurationFile={{log4j_config_file}} \n-Dlog4j.debug \n{{node_jvm_opts}}', node_heap_memory=1024, node_direct_memory=2048, node_jvm_opts='-Duser.timezone=UTC -Dfile.encoding=UTF-8', log4j_config_file=format('/usr/hdp/current/{role}/conf/_common/druid-log4j.xml')))
    self.assertResourceCalled('PropertiesFile', 'runtime.properties', dir=format('/usr/hdp/current/{role}/conf/broker'), properties=self.getConfig()['configurations']['druid-broker'], owner='druid', group='hadoop')
    self.assertResourceCalled('File', format('/usr/hdp/current/{role}/conf/broker/jvm.config'), owner='druid', group='hadoop', content=InlineTemplate('-server \n-Xms{{node_heap_memory}}m \n-Xmx{{node_heap_memory}}m \n-XX:MaxDirectMemorySize={{node_direct_memory}}m \n-Dlog4j.configurationFile={{log4j_config_file}} \n-Dlog4j.debug \n{{node_jvm_opts}}', node_heap_memory=1024, node_direct_memory=2048, node_jvm_opts='-Duser.timezone=UTC -Dfile.encoding=UTF-8', log4j_config_file=format('/usr/hdp/current/{role}/conf/_common/druid-log4j.xml')))
    self.assertResourceCalled('PropertiesFile', 'runtime.properties', dir=format('/usr/hdp/current/{role}/conf/middleManager'), properties=self.getConfig()['configurations']['druid-middlemanager'], owner='druid', group='hadoop')
    self.assertResourceCalled('File', format('/usr/hdp/current/{role}/conf/middleManager/jvm.config'), owner='druid', group='hadoop', content=InlineTemplate('-server \n-Xms{{node_heap_memory}}m \n-Xmx{{node_heap_memory}}m \n-XX:MaxDirectMemorySize={{node_direct_memory}}m \n-Dlog4j.configurationFile={{log4j_config_file}} \n-Dlog4j.debug \n{{node_jvm_opts}}', node_heap_memory=1024, node_direct_memory=2048, node_jvm_opts='-Duser.timezone=UTC -Dfile.encoding=UTF-8', log4j_config_file=format('/usr/hdp/current/{role}/conf/_common/druid-log4j.xml')))
    self.assertResourceCalled('PropertiesFile', 'runtime.properties', dir=format('/usr/hdp/current/{role}/conf/router'), properties=self.getConfig()['configurations']['druid-router'], owner='druid', group='hadoop')
    self.assertResourceCalled('File', format('/usr/hdp/current/{role}/conf/router/jvm.config'), owner='druid', group='hadoop', content=InlineTemplate('-server \n-Xms{{node_heap_memory}}m \n-Xmx{{node_heap_memory}}m \n-XX:MaxDirectMemorySize={{node_direct_memory}}m \n-Dlog4j.configurationFile={{log4j_config_file}} \n-Dlog4j.debug \n{{node_jvm_opts}}', node_heap_memory=1024, node_direct_memory=2048, node_jvm_opts='-Duser.timezone=UTC -Dfile.encoding=UTF-8', log4j_config_file=format('/usr/hdp/current/{role}/conf/_common/druid-log4j.xml')))
    self.assertResourceCalled('HdfsResource', '/user/druid', immutable_paths=self.DEFAULT_IMMUTABLE_PATHS, security_enabled=False, hadoop_bin_dir='/usr/hdp/current/hadoop-client/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', hdfs_site={u'a': u'b', }, kinit_path_local='/usr/bin/kinit', principal_name='missing_principal', user='hdfs', owner='druid', hadoop_conf_dir='/usr/hdp/current/hadoop-client/conf', type='directory', action=['create_on_execute'], hdfs_resource_ignore_file='/var/lib/ambari-agent/data/.hdfs_resource_ignore', dfs_type='', recursive_chown=True, recursive_chmod=True)
    self.assertResourceCalled('HdfsResource', '/user/druid/data', immutable_paths=self.DEFAULT_IMMUTABLE_PATHS, security_enabled=False, hadoop_bin_dir='/usr/hdp/current/hadoop-client/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', hdfs_site={u'a': u'b', }, kinit_path_local='/usr/bin/kinit', principal_name='missing_principal', user='hdfs', owner='druid', hadoop_conf_dir='/usr/hdp/current/hadoop-client/conf', type='directory', action=['create_on_execute'], hdfs_resource_ignore_file='/var/lib/ambari-agent/data/.hdfs_resource_ignore', dfs_type='', mode=493)
    self.assertResourceCalled('HdfsResource', '/tmp/druid-indexing', immutable_paths=self.DEFAULT_IMMUTABLE_PATHS, security_enabled=False, hadoop_bin_dir='/usr/hdp/current/hadoop-client/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', hdfs_site={u'a': u'b', }, kinit_path_local='/usr/bin/kinit', principal_name='missing_principal', user='hdfs', owner='druid', hadoop_conf_dir='/usr/hdp/current/hadoop-client/conf', type='directory', action=['create_on_execute'], hdfs_resource_ignore_file='/var/lib/ambari-agent/data/.hdfs_resource_ignore', dfs_type='', mode=493)
    self.assertResourceCalled('HdfsResource', '/user/druid/logs', immutable_paths=self.DEFAULT_IMMUTABLE_PATHS, security_enabled=False, hadoop_bin_dir='/usr/hdp/current/hadoop-client/bin', keytab=UnknownConfigurationMock(), default_fs='hdfs://c6401.ambari.apache.org:8020', hdfs_site={u'a': u'b', }, kinit_path_local='/usr/bin/kinit', principal_name='missing_principal', user='hdfs', owner='druid', hadoop_conf_dir='/usr/hdp/current/hadoop-client/conf', type='directory', action=['create_on_execute'], hdfs_resource_ignore_file='/var/lib/ambari-agent/data/.hdfs_resource_ignore', dfs_type='', mode=493)
    self.assertResourceCalled('Directory', format('/usr/hdp/current/{role}/extensions'), mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('Directory', format('/usr/hdp/current/{role}/hadoop-dependencies'), mode=493, cd_access='a', owner='druid', group='hadoop', create_parents=True, recursive_ownership=True)
    self.assertResourceCalled('Execute', format("source /usr/hdp/current/{role}/conf/druid-env.sh ; java -classpath '/usr/hdp/current/{role}/lib/*' -Ddruid.extensions.loadList=[] -Ddruid.extensions.directory=/usr/hdp/current/{role}/extensions -Ddruid.extensions.hadoopDependenciesDir=/usr/hdp/current/{role}/hadoop-dependencies io.druid.cli.Main tools pull-deps -c mysql-metadata-storage --no-default-hadoop"), user='druid')
