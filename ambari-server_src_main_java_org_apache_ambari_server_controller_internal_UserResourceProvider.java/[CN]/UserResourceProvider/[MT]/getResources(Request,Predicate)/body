{
  final Set<UserRequest> requests=new HashSet<UserRequest>();
  if (predicate == null) {
    requests.add(getRequest(null));
  }
 else {
    for (    Map<String,Object> propertyMap : getPropertyMaps(predicate)) {
      requests.add(getRequest(propertyMap));
    }
  }
  Set<UserResponse> responses=getResources(new Command<Set<UserResponse>>(){
    @Override public Set<UserResponse> invoke() throws AmbariException {
      return getManagementController().getUsers(requests);
    }
  }
);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Found user responses matching get user request" + ", userRequestSize=" + requests.size() + ", userResponseSize="+ responses.size());
  }
  Set<String> requestedIds=getRequestPropertyIds(request,predicate);
  Set<Resource> resources=new HashSet<Resource>();
  for (  UserResponse userResponse : responses) {
    ResourceImpl resource=new ResourceImpl(Resource.Type.User);
    setResourceProperty(resource,USER_USERNAME_PROPERTY_ID,userResponse.getUsername(),requestedIds);
    setResourceProperty(resource,USER_ROLES_PROPERTY_ID,userResponse.getRoles(),requestedIds);
    setResourceProperty(resource,USER_LDAP_USER_PROPERTY_ID,userResponse.isLdapUser(),requestedIds);
    setResourceProperty(resource,USER_ACTIVE_PROPERTY_ID,userResponse.isActive(),requestedIds);
    setResourceProperty(resource,USER_GROUPS_PROPERTY_ID,userResponse.getGroups(),requestedIds);
    resources.add(resource);
  }
  return resources;
}
