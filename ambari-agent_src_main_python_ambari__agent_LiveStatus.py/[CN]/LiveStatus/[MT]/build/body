def build(self):
    global SERVICES, COMPONENTS, LIVE_STATUS, DEAD_STATUS
    statusCheck = StatusCheck(AmbariConfig.servicesToPidNames, AmbariConfig.pidPathesVars, self.globalConfig, AmbariConfig.linuxUserPattern)
    livestatus = None
    for component in self.COMPONENTS:
        if ((component['serviceName'] == self.service) and (component['componentName'] == self.component)):
            serviceStatus = statusCheck.getStatus(component['componentName'])
            if (serviceStatus is None):
                logger.warn(('There is no service to pid mapping for ' + component['componentName']))
            status = (self.LIVE_STATUS if serviceStatus else self.DEAD_STATUS)
            livestatus = {'componentName': component['componentName'], 'msg': '', 'status': status, 'clusterName': self.cluster, 'serviceName': self.service, 'stackVersion': self.versionsHandler.read_stack_version(component['componentName']), }
            active_config = self.actualConfigHandler.read_actual_component(component['componentName'])
            if (not (active_config is None)):
                livestatus['configurationTags'] = active_config
            break
    logger.debug(((((('The live status for component ' + str(self.component)) + ' of service ') + str(self.service)) + ' is ') + str(livestatus)))
    return livestatus
