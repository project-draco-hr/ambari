{
  LOG.info("Preparing Storm Metrics Sink");
  try {
    hostname=InetAddress.getLocalHost().getHostName();
    if ((hostname == null) || (!hostname.contains("."))) {
      hostname=InetAddress.getLocalHost().getCanonicalHostName();
    }
  }
 catch (  UnknownHostException e) {
    LOG.error("Could not identify hostname.");
    throw new RuntimeException("Could not identify hostname.",e);
  }
  Configuration configuration=new Configuration("/storm-metrics2.properties");
  timeoutSeconds=Integer.parseInt(configuration.getProperty(METRICS_POST_TIMEOUT_SECONDS,String.valueOf(DEFAULT_POST_TIMEOUT_SECONDS)));
  int maxRowCacheSize=Integer.parseInt(configuration.getProperty(MAX_METRIC_ROW_CACHE_SIZE,String.valueOf(MAX_RECS_PER_NAME_DEFAULT)));
  int metricsSendInterval=Integer.parseInt(configuration.getProperty(METRICS_SEND_INTERVAL,String.valueOf(MAX_EVICTION_TIME_MILLIS)));
  metricsCache=new TimelineMetricsCache(maxRowCacheSize,metricsSendInterval);
  collectorUri=configuration.getProperty(COLLECTOR_PROPERTY) + WS_V1_TIMELINE_METRICS;
  if (collectorUri.toLowerCase().startsWith("https://")) {
    String trustStorePath=configuration.getProperty(SSL_KEYSTORE_PATH_PROPERTY).trim();
    String trustStoreType=configuration.getProperty(SSL_KEYSTORE_TYPE_PROPERTY).trim();
    String trustStorePwd=configuration.getProperty(SSL_KEYSTORE_PASSWORD_PROPERTY).trim();
    loadTruststore(trustStorePath,trustStoreType,trustStorePwd);
  }
}
