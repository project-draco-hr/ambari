{
  if (executionCommand != null) {
    return executionCommand;
  }
 else   if (jsonExecutionCommand != null) {
    executionCommand=StageUtils.getGson().fromJson(jsonExecutionCommand,ExecutionCommand.class);
    if (injector == null) {
      throw new RuntimeException("Injector not found, configuration cannot be restored");
    }
 else     if ((executionCommand.getConfigurations() == null || executionCommand.getConfigurations().isEmpty()) && executionCommand.getConfigurationTags() != null && !executionCommand.getConfigurationTags().isEmpty()) {
      Clusters clusters=injector.getInstance(Clusters.class);
      HostRoleCommandDAO hostRoleCommandDAO=injector.getInstance(HostRoleCommandDAO.class);
      Long clusterId=hostRoleCommandDAO.findByPK(executionCommand.getTaskId()).getStage().getCluster().getClusterId();
      try {
        Cluster cluster=clusters.getClusterById(clusterId);
        Map<String,Map<String,String>> configurations=new HashMap<String,Map<String,String>>();
        for (        Map.Entry<String,Map<String,String>> entry : executionCommand.getConfigurationTags().entrySet()) {
          String type=entry.getKey();
          Map<String,String> tags=entry.getValue();
          if (!configurations.containsKey(type)) {
            configurations.put(type,new HashMap<String,String>());
          }
          String tag;
          tag=tags.get("host_override_tag");
          tag=tag == null ? tags.get("service_override_tag") : tag;
          tag=tag == null ? tags.get("tag") : tag;
          if (tag != null) {
            Config config=cluster.getConfig(type,tag);
            configurations.get(type).putAll(config.getProperties());
          }
        }
        executionCommand.setConfigurations(configurations);
      }
 catch (      AmbariException e) {
        throw new RuntimeException(e);
      }
    }
    return executionCommand;
  }
 else {
    throw new RuntimeException("Invalid ExecutionCommandWrapper, both object and string" + " representations are null");
  }
}
