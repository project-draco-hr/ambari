{
  Cluster cluster=EasyMock.createMock(Cluster.class);
  Config config=EasyMock.createMock(Config.class);
  expect(config.getProperties()).andReturn(m_configMap).anyTimes();
  expect(cluster.getService("HDFS")).andReturn(EasyMock.createMock(Service.class));
  expect(cluster.getDesiredConfigByType("hdfs-site")).andReturn(config).anyTimes();
  expect(m_clusters.getCluster((String)anyObject())).andReturn(cluster).anyTimes();
  replay(m_clusters,cluster,config);
  Configuration configuration=EasyMock.createMock(Configuration.class);
  expect(configuration.getRollingUpgradeMinStack()).andReturn("HDP-2.2").anyTimes();
  expect(configuration.getRollingUpgradeMaxStack()).andReturn("").anyTimes();
  replay(configuration);
  m_check.config=configuration;
  m_check.clustersProvider=new Provider<Clusters>(){
    @Override public Clusters get(){
      return m_clusters;
    }
  }
;
}
