def seed_current_data_directory():
    '\n  HDP stack example:\n\n  Knox uses "versioned" data directories in some stacks:\n  /usr/hdp/2.2.0.0-1234/knox/data -> /var/lib/knox/data\n  /usr/hdp/2.3.0.0-4567/knox/data -> /var/lib/knox/data-2.3.0.0-4567\n\n  If the stack being upgraded to supports versioned data directories for Knox, then we should\n  seed the data from the prior version. This is mainly because Knox keeps things like keystores\n  in the data directory and if those aren\'t copied over then it will re-create self-signed\n  versions. This side-effect behavior causes loss of service in clusters where Knox is using\n  custom keystores.\n\n  cp -R -p -f /usr/hdp/<old>/knox-server/data/. /usr/hdp/current/knox-server/data\n  :return:\n  '
    import params
    if ((params.version is None) or (params.upgrade_from_version is None)):
        raise Fail('The source and target versions are required')
    if check_stack_feature(StackFeature.KNOX_VERSIONED_DATA_DIR, params.version):
        Logger.info('Seeding Knox data from prior version...')
        source_data_dir = os.path.join(params.stack_root, params.upgrade_from_version, 'knox', 'data', '.')
        target_data_dir = os.path.join(params.stack_root, 'current', 'knox-server', 'data')
        Execute(('cp', '-R', '-p', '-f', source_data_dir, target_data_dir), sudo=True)
