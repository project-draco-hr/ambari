{
  if (setHostGroups == null || setHostGroups.isEmpty()) {
    throw new IllegalArgumentException("At least one host group must be specified in a blueprint");
  }
  Collection<HostGroupEntity> entities=new ArrayList<HostGroupEntity>();
  Collection<String> stackComponentNames=getAllStackComponents(blueprint.getStackName(),blueprint.getStackVersion());
  for (  HashMap<String,Object> hostGroupProperties : setHostGroups) {
    HostGroupEntity hostGroup=new HostGroupEntity();
    entities.add(hostGroup);
    String hostGroupName=(String)hostGroupProperties.get(HOST_GROUP_NAME_PROPERTY_ID);
    if (hostGroupName == null || hostGroupName.isEmpty()) {
      throw new IllegalArgumentException("Every host group must include a non-null 'name' property");
    }
    hostGroup.setName(hostGroupName);
    hostGroup.setBlueprintEntity(blueprint);
    hostGroup.setBlueprintName(blueprint.getBlueprintName());
    hostGroup.setCardinality((String)hostGroupProperties.get(HOST_GROUP_CARDINALITY_PROPERTY_ID));
    createHostGroupConfigEntities((Collection<Map<String,String>>)hostGroupProperties.get(CONFIGURATION_PROPERTY_ID),hostGroup);
    createComponentEntities(hostGroup,(HashSet<HashMap<String,String>>)hostGroupProperties.get(COMPONENT_PROPERTY_ID),stackComponentNames);
  }
  blueprint.setHostGroups(entities);
}
