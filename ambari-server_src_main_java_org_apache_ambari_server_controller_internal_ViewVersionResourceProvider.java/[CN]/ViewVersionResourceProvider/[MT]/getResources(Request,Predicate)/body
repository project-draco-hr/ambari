{
  Set<Resource> resources=new HashSet<Resource>();
  ViewRegistry viewRegistry=ViewRegistry.getInstance();
  Set<String> requestedIds=getRequestPropertyIds(request,predicate);
  Set<Map<String,Object>> propertyMaps=getPropertyMaps(predicate);
  if (propertyMaps.isEmpty()) {
    propertyMaps.add(Collections.<String,Object>emptyMap());
  }
  for (  Map<String,Object> propertyMap : propertyMaps) {
    String viewName=(String)propertyMap.get(VIEW_NAME_PROPERTY_ID);
    String viewVersion=(String)propertyMap.get(VIEW_VERSION_PROPERTY_ID);
    for (    ViewEntity viewDefinition : viewRegistry.getDefinitions()) {
      if (viewName == null || viewName.equals(viewDefinition.getCommonName())) {
        if (viewVersion == null || viewVersion.equals(viewDefinition.getVersion())) {
          Resource resource=new ResourceImpl(Resource.Type.ViewVersion);
          setResourceProperty(resource,VIEW_NAME_PROPERTY_ID,viewDefinition.getCommonName(),requestedIds);
          setResourceProperty(resource,VIEW_VERSION_PROPERTY_ID,viewDefinition.getVersion(),requestedIds);
          setResourceProperty(resource,LABEL_PROPERTY_ID,viewDefinition.getLabel(),requestedIds);
          setResourceProperty(resource,DESCRIPTION_PROPERTY_ID,viewDefinition.getDescription(),requestedIds);
          setResourceProperty(resource,VERSION_PROPERTY_ID,viewDefinition.getVersion(),requestedIds);
          setResourceProperty(resource,PARAMETERS_PROPERTY_ID,viewDefinition.getConfiguration().getParameters(),requestedIds);
          setResourceProperty(resource,ARCHIVE_PROPERTY_ID,viewDefinition.getArchive(),requestedIds);
          setResourceProperty(resource,MASKER_CLASS_PROPERTY_ID,viewDefinition.getMask(),requestedIds);
          resources.add(resource);
        }
      }
    }
  }
  return resources;
}
