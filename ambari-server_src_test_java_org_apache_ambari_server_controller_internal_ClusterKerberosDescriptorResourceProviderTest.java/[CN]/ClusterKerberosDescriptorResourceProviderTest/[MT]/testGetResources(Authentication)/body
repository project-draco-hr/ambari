{
  Cluster cluster=createMock(Cluster.class);
  expect(cluster.getResourceId()).andReturn(4L).atLeastOnce();
  Clusters clusters=createMock(Clusters.class);
  expect(clusters.getCluster("c1")).andReturn(cluster).atLeastOnce();
  AmbariManagementController managementController=createMock(AmbariManagementController.class);
  expect(managementController.getClusters()).andReturn(clusters).atLeastOnce();
  Request request=createMock(Request.class);
  expect(request.getPropertyIds()).andReturn(null).once();
  replayAll();
  SecurityContextHolder.getContext().setAuthentication(authentication);
  ResourceProvider provider=AbstractControllerResourceProvider.getResourceProvider(Resource.Type.ClusterKerberosDescriptor,PropertyHelper.getPropertyIds(Resource.Type.ClusterKerberosDescriptor),PropertyHelper.getKeyPropertyIds(Resource.Type.ClusterKerberosDescriptor),managementController);
  Predicate predicate=new PredicateBuilder().property(ClusterKerberosDescriptorResourceProvider.CLUSTER_KERBEROS_DESCRIPTOR_CLUSTER_NAME_PROPERTY_ID).equals("c1").toPredicate();
  Set<Resource> results=provider.getResources(request,predicate);
  Assert.assertEquals(3,results.size());
  verifyAll();
}
