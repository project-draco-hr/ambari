{
  Assert.assertNotNull(componentDescriptor);
  Assert.assertTrue(componentDescriptor.isContainer());
  Assert.assertEquals("COMPONENT_NAME",componentDescriptor.getName());
  List<KerberosIdentityDescriptor> identities=componentDescriptor.getIdentities();
  Assert.assertNotNull(identities);
  Assert.assertEquals(1,identities.size());
  Map<String,KerberosConfigurationDescriptor> configurations=componentDescriptor.getConfigurations();
  Assert.assertNotNull(configurations);
  Assert.assertEquals(1,configurations.size());
  KerberosConfigurationDescriptor configuration=configurations.get("service-site");
  Assert.assertNotNull(configuration);
  Map<String,String> properties=configuration.getProperties();
  Assert.assertEquals("service-site",configuration.getType());
  Assert.assertNotNull(properties);
  Assert.assertEquals(2,properties.size());
  Assert.assertEquals("value1",properties.get("service.component.property1"));
  Assert.assertEquals("value2",properties.get("service.component.property2"));
  Set<String> authToLocalProperties=componentDescriptor.getAuthToLocalProperties();
  Assert.assertNotNull(authToLocalProperties);
  Assert.assertEquals(1,authToLocalProperties.size());
  Assert.assertEquals("component.name.rules1",authToLocalProperties.iterator().next());
}
