{
  if (metricName == null || metricName.isEmpty()) {
    throw new IllegalArgumentException("No metric name filter specified.");
  }
  if ((startTime == null && endTime != null) || (startTime != null && endTime == null)) {
    throw new IllegalArgumentException("Open ended query not supported ");
  }
  if (limit != null && limit > PhoenixHBaseAccessor.RESULTSET_LIMIT) {
    throw new IllegalArgumentException("Limit too big");
  }
  Map<String,List<Function>> metricFunctions=parseMetricNamesToAggregationFunctions(Collections.singletonList(metricName));
  Condition condition=new DefaultCondition(new ArrayList<String>(metricFunctions.keySet()),hostname,applicationId,instanceId,startTime,endTime,precision,limit,true);
  TimelineMetrics metrics=hBaseAccessor.getMetricRecords(condition,metricFunctions);
  metrics=postProcessMetrics(metrics);
  TimelineMetric metric=new TimelineMetric();
  List<TimelineMetric> metricList=metrics.getMetrics();
  if (metricList != null && !metricList.isEmpty()) {
    metric.setMetricName(metricList.get(0).getMetricName());
    metric.setAppId(metricList.get(0).getAppId());
    metric.setInstanceId(metricList.get(0).getInstanceId());
    metric.setHostName(metricList.get(0).getHostName());
    metric.setStartTime(metricList.get(0).getStartTime());
    Map<Long,Double> metricRecords=new TreeMap<Long,Double>();
    for (    TimelineMetric timelineMetric : metricList) {
      metricRecords.putAll(timelineMetric.getMetricValues());
    }
    metric.setMetricValues(metricRecords);
  }
  return metric;
}
