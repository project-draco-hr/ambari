{
  hBaseAccessor=new PhoenixHBaseAccessor(hbaseConf,metricsConf);
  hBaseAccessor.initMetricSchema();
  TimelineMetricClusterAggregator minuteClusterAggregator=new TimelineMetricClusterAggregator(hBaseAccessor,metricsConf);
  if (!minuteClusterAggregator.isDisabled()) {
    Thread aggregatorThread=new Thread(minuteClusterAggregator);
    aggregatorThread.start();
  }
  TimelineMetricClusterAggregatorHourly hourlyClusterAggregator=new TimelineMetricClusterAggregatorHourly(hBaseAccessor,metricsConf);
  if (!hourlyClusterAggregator.isDisabled()) {
    Thread aggregatorThread=new Thread(hourlyClusterAggregator);
    aggregatorThread.start();
  }
  TimelineMetricAggregator minuteHostAggregator=TimelineMetricAggregatorFactory.createTimelineMetricAggregatorMinute(hBaseAccessor,metricsConf);
  if (!minuteHostAggregator.isDisabled()) {
    Thread minuteAggregatorThread=new Thread(minuteHostAggregator);
    minuteAggregatorThread.start();
  }
  TimelineMetricAggregator hourlyHostAggregator=TimelineMetricAggregatorFactory.createTimelineMetricAggregatorHourly(hBaseAccessor,metricsConf);
  if (!hourlyHostAggregator.isDisabled()) {
    Thread aggregatorHourlyThread=new Thread(hourlyHostAggregator);
    aggregatorHourlyThread.start();
  }
}
