def test_read_hash_sum(self):
    resource_files_keeper = ResourceFilesKeeper(self.DUMMY_UNCHANGEABLE_PACKAGE)
    hash_sum = resource_files_keeper.read_hash_sum(self.DUMMY_UNCHANGEABLE_PACKAGE)
    self.assertEquals(hash_sum, 'dummy_hash')
    with patch('os.path.isfile') as isfile_mock:
        isfile_mock.return_value = True
        with patch('__builtin__.open') as open_mock:
            open_mock.side_effect = self.exc_side_effect
            try:
                resource_files_keeper.read_hash_sum('path-to-directory')
                self.fail('KeeperException not thrown')
            except KeeperException:
                pass
            except Exception as e:
                self.fail(('Unexpected exception thrown:' + str(e)))
    with patch('os.path.isfile') as isfile_mock:
        isfile_mock.return_value = False
        with patch('__builtin__.open') as open_mock:
            open_mock.side_effect = self.exc_side_effect
            res = resource_files_keeper.read_hash_sum('path-to-directory')
            self.assertEqual(res, None)
