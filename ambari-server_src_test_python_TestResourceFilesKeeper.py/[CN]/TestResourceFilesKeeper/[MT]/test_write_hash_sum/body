def test_write_hash_sum(self):
    NEW_HASH = 'new_hash'
    resource_files_keeper = ResourceFilesKeeper(self.TEST_RESOURCES_DIR, self.DUMMY_UNCHANGEABLE_PACKAGE)
    resource_files_keeper.write_hash_sum(self.DUMMY_UNCHANGEABLE_PACKAGE, NEW_HASH)
    hash_sum = resource_files_keeper.read_hash_sum(self.DUMMY_UNCHANGEABLE_PACKAGE)
    self.assertEquals(hash_sum, NEW_HASH)
    resource_files_keeper.write_hash_sum(self.DUMMY_UNCHANGEABLE_PACKAGE, self.DUMMY_HASH)
    hash_sum = resource_files_keeper.read_hash_sum(self.DUMMY_UNCHANGEABLE_PACKAGE)
    self.assertEquals(hash_sum, self.DUMMY_HASH)
    with patch('__builtin__.open') as open_mock:
        open_mock.side_effect = self.exc_side_effect
        try:
            resource_files_keeper.write_hash_sum('path-to-directory', self.DUMMY_HASH)
            self.fail('KeeperException not thrown')
        except KeeperException:
            pass
        except Exception as e:
            self.fail(('Unexpected exception thrown:' + str(e)))
