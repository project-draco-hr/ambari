@patch('glob.glob')
@patch('os.path.exists')
@patch.object(ResourceFilesKeeper, 'is_active_stack')
def test_list_active_stacks(self, is_active_stack_mock, exists_mock, glob_mock):
    resource_files_keeper = ResourceFilesKeeper(self.SOME_PATH)
    glob_mock.return_value = ['stack1', 'stack2', 'stack3', 'stack4', 'stack5']
    exists_mock.side_effect = [True, True, False, True, True]
    is_active_stack_mock.side_effect = [True, False, False, True]
    res = resource_files_keeper.list_active_stacks(self.SOME_PATH)
    self.assertEquals(pprint.pformat(res), "['stack1', 'stack5']")
    glob_mock.side_effect = self.keeper_exc_side_effect
    try:
        resource_files_keeper.list_active_stacks(self.SOME_PATH)
        self.fail('KeeperException not thrown')
    except KeeperException:
        pass
    except Exception as e:
        self.fail(('Unexpected exception thrown:' + str(e)))
