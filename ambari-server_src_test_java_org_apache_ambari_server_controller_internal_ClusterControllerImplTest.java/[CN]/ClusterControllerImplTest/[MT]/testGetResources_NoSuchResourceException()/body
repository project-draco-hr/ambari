{
  ProviderModule providerModule=createNiceMock(ProviderModule.class);
  ResourceProvider resourceProvider=createNiceMock(ResourceProvider.class);
  expect(providerModule.getResourceProvider(Resource.Type.View)).andReturn(resourceProvider).anyTimes();
  expect(resourceProvider.checkPropertyIds(Collections.singleton("ViewInfo/view_name"))).andReturn(Collections.<String>emptySet()).anyTimes();
  expect(resourceProvider.getResources(anyObject(Request.class),anyObject(Predicate.class))).andReturn(Collections.<Resource>emptySet()).anyTimes();
  replay(providerModule,resourceProvider);
  ClusterControllerImpl controller=new ClusterControllerImpl(providerModule);
  Set<String> propertyIds=new HashSet<String>();
  propertyIds.add("ViewInfo/view_name");
  Request request=PropertyHelper.getReadRequest(propertyIds);
  Iterator<Resource> iter=controller.getResourceIterable(Resource.Type.View,request,null).iterator();
  Assert.assertFalse(iter.hasNext());
  Predicate predicate=new PredicateBuilder().property("ViewInfo/view_name").equals("BadView").toPredicate();
  try {
    controller.getResourceIterable(Resource.Type.View,request,predicate);
    Assert.fail("Expected NoSuchResourceException.");
  }
 catch (  NoSuchResourceException e) {
  }
  verify(providerModule,resourceProvider);
}
