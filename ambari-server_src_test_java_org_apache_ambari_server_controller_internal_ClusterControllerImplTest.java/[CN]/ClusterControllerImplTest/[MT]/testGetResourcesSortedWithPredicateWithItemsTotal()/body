{
  ClusterControllerImpl controller=new ClusterControllerImpl(new TestProviderModule());
  Set<String> propertyIds=new HashSet<String>();
  Request request=PropertyHelper.getReadRequest(propertyIds);
  Predicate predicate=new PredicateBuilder().property("c1/p2").equals(1).toPredicate();
  List<SortRequestProperty> sortRequestProperties=Collections.singletonList(new SortRequestProperty("Hosts/host_name",SortRequest.Order.DESC));
  SortRequest sortRequest=new SortRequestImpl(sortRequestProperties);
  PageRequest pageRequest=new PageRequestImpl(PageRequest.StartingPoint.Beginning,1,0,null,null);
  PageResponse pageResponse=controller.getResources(Resource.Type.Host,request,predicate,pageRequest,sortRequest);
  Iterable<Resource> iterable=pageResponse.getIterable();
  List<Resource> list=new LinkedList<Resource>();
  for (  Resource resource : iterable) {
    list.add(resource);
  }
  Assert.assertEquals(1,list.size());
  Assert.assertEquals(2,pageResponse.getTotalResourceCount().intValue());
  Assert.assertEquals("host:3",(String)list.get(0).getPropertyValue(PropertyHelper.getPropertyId("Hosts","host_name")));
  Assert.assertEquals(Resource.Type.Host,list.get(0).getType());
  pageRequest=new PageRequestImpl(PageRequest.StartingPoint.OffsetStart,1,1,null,null);
  pageResponse=controller.getResources(Resource.Type.Host,request,predicate,pageRequest,sortRequest);
  iterable=pageResponse.getIterable();
  list.clear();
  for (  Resource resource : iterable) {
    list.add(resource);
  }
  Assert.assertEquals(1,list.size());
  Assert.assertEquals(2,pageResponse.getTotalResourceCount().intValue());
  Assert.assertEquals("host:1",(String)list.get(0).getPropertyValue(PropertyHelper.getPropertyId("Hosts","host_name")));
  Assert.assertEquals(Resource.Type.Host,list.get(0).getType());
}
