{
  ProviderModule providerModule=createNiceMock(ProviderModule.class);
  ResourceProvider resourceProvider=createNiceMock(ResourceProvider.class);
  expect(providerModule.getResourceProvider(Resource.Type.AlertHistory)).andReturn(resourceProvider).anyTimes();
  expect(resourceProvider.checkPropertyIds(Collections.singleton(AlertHistoryResourceProvider.ALERT_HISTORY_HOSTNAME))).andReturn(Collections.<String>emptySet()).anyTimes();
  expect(resourceProvider.getResources(anyObject(Request.class),anyObject(Predicate.class))).andReturn(Collections.<Resource>emptySet()).anyTimes();
  expect(resourceProvider.checkPropertyIds(EasyMock.anyObject(Set.class))).andReturn(new HashSet<String>()).anyTimes();
  PageRequest pageRequest=EasyMock.createStrictMock(PageRequest.class);
  SortRequest sortRequest=EasyMock.createStrictMock(SortRequest.class);
  expect(sortRequest.getPropertyIds()).andReturn(new ArrayList<String>()).atLeastOnce();
  replay(providerModule,resourceProvider,pageRequest,sortRequest);
  ClusterControllerImpl controller=new ClusterControllerImpl(providerModule);
  Set<String> propertyIds=new HashSet<String>();
  propertyIds.add(AlertHistoryResourceProvider.ALERT_HISTORY_HOSTNAME);
  Set<Resource> providerResources=new LinkedHashSet<Resource>();
  providerResources.add(new ResourceImpl(Resource.Type.AlertHistory));
  Request request=PropertyHelper.getReadRequest(propertyIds,null,null,pageRequest,sortRequest);
  Predicate predicate=new PredicateBuilder().property(AlertHistoryResourceProvider.ALERT_HISTORY_HOSTNAME).equals("c6401.ambari.apache.org").toPredicate();
  PageResponse pageResponse=controller.getPage(Resource.Type.AlertHistory,new QueryResponseImpl(providerResources,true,true,0),request,predicate,pageRequest,sortRequest);
  verify(providerModule,resourceProvider,pageRequest,sortRequest);
}
