def parse_subscribed(self):
    lineno = self.stream.current.lineno
    if (self.stream.current.type == 'colon'):
        next(self.stream)
        args = [None]
    else:
        node = self.parse_expression()
        if (self.stream.current.type != 'colon'):
            return node
        next(self.stream)
        args = [node]
    if (self.stream.current.type == 'colon'):
        args.append(None)
    elif (self.stream.current.type not in ('rbracket', 'comma')):
        args.append(self.parse_expression())
    else:
        args.append(None)
    if (self.stream.current.type == 'colon'):
        next(self.stream)
        if (self.stream.current.type not in ('rbracket', 'comma')):
            args.append(self.parse_expression())
        else:
            args.append(None)
    else:
        args.append(None)
    return nodes.Slice(lineno=lineno, *args)
