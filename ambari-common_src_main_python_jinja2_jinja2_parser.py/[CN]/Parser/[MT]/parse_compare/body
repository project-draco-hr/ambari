def parse_compare(self):
    lineno = self.stream.current.lineno
    expr = self.parse_add()
    ops = []
    while 1:
        token_type = self.stream.current.type
        if (token_type in _compare_operators):
            next(self.stream)
            ops.append(nodes.Operand(token_type, self.parse_add()))
        elif self.stream.skip_if('name:in'):
            ops.append(nodes.Operand('in', self.parse_add()))
        elif (self.stream.current.test('name:not') and self.stream.look().test('name:in')):
            self.stream.skip(2)
            ops.append(nodes.Operand('notin', self.parse_add()))
        else:
            break
        lineno = self.stream.current.lineno
    if (not ops):
        return expr
    return nodes.Compare(expr, ops, lineno=lineno)
