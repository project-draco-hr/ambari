def assert_configure_secured(self):
    self.assertResourceCalled('Directory', '/hadoop/yarn/local', action=['delete'])
    self.assertResourceCalled('Directory', '/hadoop/yarn/log', action=['delete'])
    self.assertResourceCalled('Directory', '/var/lib/hadoop-yarn')
    self.assertResourceCalled('File', '/var/lib/hadoop-yarn/nm_security_enabled', content='Marker file to track first start after enabling/disabling security. During first start yarn local, log dirs are removed and recreated')
    self.assertResourceCalled('Directory', '/var/lib/ambari-agent/data/yarn', create_parents=True, mode=493)
    self.assertResourceCalled('Directory', '/hadoop/yarn/log', owner='yarn', group='hadoop', create_parents=True, ignore_failures=True, mode=509, cd_access='a')
    self.assertResourceCalled('File', '/var/lib/ambari-agent/data/yarn/yarn_log_dir_mount.hist', content='\n# This file keeps track of the last known mount-point for each dir.\n# It is safe to delete, since it will get regenerated the next time that the component of the service starts.\n# However, it is not advised to delete this file since Ambari may\n# re-create a dir that used to be mounted on a drive but is now mounted on the root.\n# Comments begin with a hash (#) symbol\n# dir,mount_point\n', owner='hdfs', group='hadoop', mode=420)
    self.assertResourceCalled('Directory', '/var/lib/ambari-agent/data/yarn', create_parents=True, mode=493)
    self.assertResourceCalled('Directory', '/hadoop/yarn/local', owner='yarn', group='hadoop', create_parents=True, ignore_failures=True, mode=493, cd_access='a', recursive_mode_flags={'d': 'a+rwx', 'f': 'a+rw', })
    self.assertResourceCalled('File', '/var/lib/ambari-agent/data/yarn/yarn_local_dir_mount.hist', content='\n# This file keeps track of the last known mount-point for each dir.\n# It is safe to delete, since it will get regenerated the next time that the component of the service starts.\n# However, it is not advised to delete this file since Ambari may\n# re-create a dir that used to be mounted on a drive but is now mounted on the root.\n# Comments begin with a hash (#) symbol\n# dir,mount_point\n', owner='hdfs', group='hadoop', mode=420)
    self.assertResourceCalled('Directory', '/var/run/hadoop-yarn', owner='yarn', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/run/hadoop-yarn/yarn', owner='yarn', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/log/hadoop-yarn/yarn', owner='yarn', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/run/hadoop-mapreduce', owner='mapred', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/run/hadoop-mapreduce/mapred', owner='mapred', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/log/hadoop-mapreduce', owner='mapred', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/log/hadoop-mapreduce/mapred', owner='mapred', group='hadoop', create_parents=True, cd_access='a')
    self.assertResourceCalled('Directory', '/var/log/hadoop-yarn', owner='yarn', group='hadoop', create_parents=True, ignore_failures=True, cd_access='a')
    self.assertResourceCalled('XmlConfig', 'core-site.xml', owner='hdfs', group='hadoop', mode=420, conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['core-site'], configuration_attributes=self.getConfig()['configuration_attributes']['core-site'])
    self.assertResourceCalled('XmlConfig', 'hdfs-site.xml', owner='hdfs', group='hadoop', mode=420, conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['hdfs-site'], configuration_attributes=self.getConfig()['configuration_attributes']['hdfs-site'])
    self.assertResourceCalled('XmlConfig', 'mapred-site.xml', owner='yarn', group='hadoop', mode=420, conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['mapred-site'], configuration_attributes=self.getConfig()['configuration_attributes']['mapred-site'])
    self.assertResourceCalled('XmlConfig', 'yarn-site.xml', owner='yarn', group='hadoop', mode=420, conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['yarn-site'], configuration_attributes=self.getConfig()['configuration_attributes']['yarn-site'])
    self.assertResourceCalled('XmlConfig', 'capacity-scheduler.xml', owner='yarn', group='hadoop', mode=420, conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['capacity-scheduler'], configuration_attributes=self.getConfig()['configuration_attributes']['capacity-scheduler'])
    self.assertResourceCalled('File', '/etc/security/limits.d/yarn.conf', content=Template('yarn.conf.j2'), mode=420)
    self.assertResourceCalled('File', '/etc/security/limits.d/mapreduce.conf', content=Template('mapreduce.conf.j2'), mode=420)
    self.assertResourceCalled('File', '/etc/hadoop/conf/yarn-env.sh', content=InlineTemplate(self.getConfig()['configurations']['yarn-env']['content']), owner='yarn', group='hadoop', mode=493)
    self.assertResourceCalled('File', '/usr/lib/hadoop-yarn/bin/container-executor', group='hadoop', mode=3112)
    self.assertResourceCalled('File', '/etc/hadoop/conf/container-executor.cfg', content=Template('container-executor.cfg.j2'), group='hadoop', mode=420)
    self.assertResourceCalled('Directory', '/cgroups_test/cpu', group='hadoop', create_parents=True, mode=493, cd_access='a')
    self.assertResourceCalled('File', '/etc/hadoop/conf/mapred-env.sh', content=InlineTemplate(self.getConfig()['configurations']['mapred-env']['content']), mode=493, owner='root')
    self.assertResourceCalled('File', '/usr/lib/hadoop/sbin/task-controller', owner='root', group='hadoop', mode=3112)
    self.assertResourceCalled('File', '/etc/hadoop/conf/taskcontroller.cfg', content=Template('taskcontroller.cfg.j2'), owner='root', group='hadoop', mode=420)
    self.assertResourceCalled('XmlConfig', 'mapred-site.xml', owner='mapred', group='hadoop', conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['mapred-site'], configuration_attributes=self.getConfig()['configuration_attributes']['mapred-site'])
    self.assertResourceCalled('XmlConfig', 'capacity-scheduler.xml', owner='hdfs', group='hadoop', conf_dir='/etc/hadoop/conf', configurations=self.getConfig()['configurations']['capacity-scheduler'], configuration_attributes=self.getConfig()['configuration_attributes']['capacity-scheduler'])
    self.assertResourceCalled('File', '/etc/hadoop/conf/fair-scheduler.xml', owner='mapred', group='hadoop')
    self.assertResourceCalled('File', '/etc/hadoop/conf/ssl-client.xml.example', owner='mapred', group='hadoop')
    self.assertResourceCalled('File', '/etc/hadoop/conf/ssl-server.xml.example', owner='mapred', group='hadoop')
