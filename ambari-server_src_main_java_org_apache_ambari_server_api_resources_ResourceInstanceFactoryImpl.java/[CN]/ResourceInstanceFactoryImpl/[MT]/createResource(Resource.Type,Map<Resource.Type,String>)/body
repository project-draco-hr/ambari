{
  ResourceDefinition resourceDefinition;
switch (type) {
case Cluster:
    resourceDefinition=new ClusterResourceDefinition();
  break;
case Service:
resourceDefinition=new ServiceResourceDefinition();
break;
case Host:
resourceDefinition=mapIds.containsKey(Resource.Type.Cluster) ? new HostResourceDefinition() : new DetachedHostResourceDefinition();
break;
case Component:
resourceDefinition=new ComponentResourceDefinition();
break;
case HostComponent:
resourceDefinition=new HostComponentResourceDefinition();
break;
case Action:
resourceDefinition=new ActionResourceDefinition();
break;
case Configuration:
resourceDefinition=new ConfigurationResourceDefinition();
break;
case Task:
resourceDefinition=new TaskResourceDefinition();
break;
case User:
resourceDefinition=new UserResourceDefinition();
break;
case Request:
resourceDefinition=new RequestResourceDefinition();
break;
case Stack:
resourceDefinition=new StackResourceDefinition();
break;
case StackVersion:
resourceDefinition=new StackVersionResourceDefinition();
break;
case StackService:
resourceDefinition=new StackServiceResourceDefinition();
break;
case StackServiceComponent:
resourceDefinition=new StackServiceComponentResourceDefinition();
break;
case StackConfiguration:
resourceDefinition=new StackConfigurationResourceDefinition();
break;
case OperatingSystem:
resourceDefinition=new OperatingSystemResourceDefinition();
break;
case Repository:
resourceDefinition=new RepositoryResourceDefinition();
break;
case DRFeed:
resourceDefinition=new FeedResourceDefinition();
break;
case DRTargetCluster:
resourceDefinition=new TargetClusterResourceDefinition();
break;
case DRInstance:
resourceDefinition=new InstanceResourceDefinition();
break;
case Workflow:
resourceDefinition=new WorkflowResourceDefinition();
break;
case Job:
resourceDefinition=new JobResourceDefinition();
break;
case TaskAttempt:
resourceDefinition=new TaskAttemptResourceDefinition();
break;
default :
throw new IllegalArgumentException("Unsupported resource type: " + type);
}
return new ResourceInstanceImpl(mapIds,resourceDefinition,this);
}
