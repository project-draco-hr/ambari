@patch.object(security.CertificateManager, 'initSecurity')
@patch('socket.create_connection')
@patch('ssl.wrap_socket')
def test_Verified_HTTPSConnection_two_way_ssl_connect(self, wrap_socket_mock, create_connection_mock, init_security_mock):
    wrap_socket_mock.side_effect = ssl.SSLError()
    connection = security.VerifiedHTTPSConnection('example.com', self.config.get('server', 'secured_url_port'), self.config)
    connection._tunnel_host = False
    connection.sock = None
    try:
        connection.connect()
    except ssl.SSLError:
        pass
    self.assertTrue(init_security_mock.called)
