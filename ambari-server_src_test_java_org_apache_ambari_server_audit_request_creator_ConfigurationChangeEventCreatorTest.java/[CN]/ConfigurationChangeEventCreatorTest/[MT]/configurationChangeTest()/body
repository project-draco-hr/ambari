{
  ConfigurationChangeEventCreator creator=new ConfigurationChangeEventCreator();
  TreeNode<Resource> resultTree=new TreeNodeImpl<>(null,null,null);
  Resource resource=new ResourceImpl(Resource.Type.Cluster);
  TreeNode<Resource> resourceNode=new TreeNodeImpl<>(resultTree,resource,"resources");
  Resource version=new ResourceImpl(Resource.Type.Cluster);
  version.setProperty(ServiceConfigVersionResourceProvider.SERVICE_CONFIG_VERSION_PROPERTY_ID,"1");
  version.setProperty(ServiceConfigVersionResourceProvider.SERVICE_CONFIG_VERSION_NOTE_PROPERTY_ID,"note");
  TreeNode<Resource> versionNode=new TreeNodeImpl<>(resourceNode,version,"");
  resourceNode.addChild(versionNode);
  resultTree.addChild(resourceNode);
  Request request=AuditEventCreatorTestHelper.createRequest(Request.Type.PUT,Resource.Type.Cluster,new HashMap<String,Object>(),null);
  Result result=AuditEventCreatorTestHelper.createResult(new ResultStatus(ResultStatus.STATUS.OK),resultTree);
  AuditEvent event=AuditEventCreatorTestHelper.getEvent(creator,request,result);
  String actual=event.getAuditMessage();
  String expected="User(" + userName + "), RemoteIp(1.2.3.4), Operation(Configuration change), RequestType(PUT), url(http://example.com:8080/api/v1/test), ResultStatus(200 OK), VersionNumber(V1), VersionNote(note)";
  Assert.assertTrue("Class mismatch",event instanceof ConfigurationChangeRequestAuditEvent);
  Assert.assertEquals(expected,actual);
  Assert.assertTrue(actual.contains(userName));
}
