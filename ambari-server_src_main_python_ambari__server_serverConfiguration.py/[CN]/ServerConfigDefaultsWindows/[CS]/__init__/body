def __init__(self):
    super(ServerConfigDefaultsWindows, self).__init__()
    self.JDK_INSTALL_DIR = 'C:\\'
    self.JDK_SEARCH_PATTERN = 'j[2se|dk|re]*'
    self.JAVA_EXE_SUBPATH = 'bin\\java.exe'
    self.DEFAULT_CONF_DIR = 'conf'
    self.DEFAULT_LIBS_DIR = 'lib'
    self.AMBARI_PROPERTIES_BACKUP_FILE = 'ambari.properties.backup'
    self.AMBARI_KRB_JAAS_LOGIN_BACKUP_FILE = ''
    self.NR_ADJUST_OWNERSHIP_LIST = [(self.OUT_DIR, 'M', '{0}', True), (self.OUT_DIR, 'F', '{0}', False), (self.PID_DIR, 'M', '{0}', True), (self.PID_DIR, 'F', '{0}', False), ('bootstrap', 'F', '{0}', False), ('ambari-env.cmd', 'F', '{0}', False), ('keystore', 'M', '{0}', True), ('keystore', 'F', '{0}', False), ('keystore\\db', '700', '{0}', False), ('keystore\\db\\newcerts', '700', '{0}', False), ('resources\\stacks', '755', '{0}', True), ('resources\\custom_actions', '755', '{0}', True), ('conf', '644', '{0}', True), ('conf', '755', '{0}', False), ('conf\\password.dat', '640', '{0}', False)]
    self.NR_USERADD_CMD = 'cmd /C net user {0} {1} /ADD'
    self.SERVER_RESOURCES_DIR = 'resources'
    self.STACK_LOCATION_DEFAULT = 'resources\\stacks'
    self.DEFAULT_VIEWS_DIR = 'resources\\views'
    self.keytool_bin_subpath = 'bin\\keytool.exe'
    self.MESSAGE_SERVER_RUNNING_AS_ROOT = "Ambari Server running with 'root' privileges."
    self.MESSAGE_WARN_SETUP_NOT_ROOT = 'Ambari-server setup is run with root-level privileges, passwordless sudo access for some commands commands may be required'
    self.MESSAGE_ERROR_RESET_NOT_ROOT = 'Ambari-server reset must be run with administrator-level privileges'
    self.MESSAGE_ERROR_UPGRADE_NOT_ROOT = 'Ambari-server upgrade must be run with administrator-level privileges'
    self.MESSAGE_CHECK_FIREWALL = 'Checking firewall status...'
