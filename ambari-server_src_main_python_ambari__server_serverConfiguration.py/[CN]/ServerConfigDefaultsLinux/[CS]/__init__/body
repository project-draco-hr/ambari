def __init__(self):
    super(ServerConfigDefaultsLinux, self).__init__()
    self.JDK_INSTALL_DIR = '/usr/jdk64'
    self.JDK_SEARCH_PATTERN = 'jdk*'
    self.JAVA_EXE_SUBPATH = 'bin/java'
    self.DEFAULT_CONF_DIR = AmbariPath.get('/etc/ambari-server/conf')
    self.DEFAULT_LIBS_DIR = AmbariPath.get('/usr/lib/ambari-server')
    self.DEFAULT_VLIBS_DIR = AmbariPath.get('/var/lib/ambari-server')
    self.AMBARI_PROPERTIES_BACKUP_FILE = 'ambari.properties.rpmsave'
    self.AMBARI_ENV_BACKUP_FILE = 'ambari-env.sh.rpmsave'
    self.AMBARI_KRB_JAAS_LOGIN_BACKUP_FILE = 'krb5JAASLogin.conf.rpmsave'
    self.NR_ADJUST_OWNERSHIP_LIST = [(AmbariPath.get('/var/log/ambari-server/'), '644', '{0}', True), (AmbariPath.get('/var/log/ambari-server/'), '755', '{0}', False), (AmbariPath.get('/var/run/ambari-server/'), '644', '{0}', True), (AmbariPath.get('/var/run/ambari-server/'), '755', '{0}', False), (AmbariPath.get('/var/run/ambari-server/bootstrap'), '755', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/ambari-env.sh'), '700', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/ambari-sudo.sh'), '700', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/keys/'), '600', '{0}', True), (AmbariPath.get('/var/lib/ambari-server/keys/'), '700', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/keys/db/'), '700', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/keys/db/newcerts/'), '700', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/keys/.ssh'), '700', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/resources/common-services/'), '755', '{0}', True), (AmbariPath.get('/var/lib/ambari-server/resources/stacks/'), '755', '{0}', True), (AmbariPath.get('/var/lib/ambari-server/resources/custom_actions/'), '755', '{0}', True), (AmbariPath.get('/var/lib/ambari-server/resources/host_scripts/'), '755', '{0}', True), (AmbariPath.get('/var/lib/ambari-server/resources/views/'), '644', '{0}', True), (AmbariPath.get('/var/lib/ambari-server/resources/views/'), '755', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/resources/views/work/'), '755', '{0}', True), (AmbariPath.get('/etc/ambari-server/conf/'), '644', '{0}', True), (AmbariPath.get('/etc/ambari-server/conf/'), '755', '{0}', False), (AmbariPath.get('/etc/ambari-server/conf/password.dat'), '640', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/keys/pass.txt'), '600', '{0}', False), (AmbariPath.get('/etc/ambari-server/conf/ldap-password.dat'), '640', '{0}', False), (AmbariPath.get('/var/run/ambari-server/stack-recommendations/'), '744', '{0}', True), (AmbariPath.get('/var/run/ambari-server/stack-recommendations/'), '755', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/resources/data/'), '644', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/resources/data/'), '755', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/data/tmp/'), '644', '{0}', True), (AmbariPath.get('/var/lib/ambari-server/data/tmp/'), '755', '{0}', False), (AmbariPath.get('/var/lib/ambari-server/data/cache/'), '600', '{0}', True), (AmbariPath.get('/var/lib/ambari-server/data/cache/'), '700', '{0}', False)]
    self.NR_CHANGE_OWNERSHIP_LIST = [(AmbariPath.get('/var/lib/ambari-server'), '{0}', True), (AmbariPath.get('/usr/lib/ambari-server'), '{0}', True), (AmbariPath.get('/var/log/ambari-server'), '{0}', True), (AmbariPath.get('/var/run/ambari-server'), '{0}', True), (AmbariPath.get('/etc/ambari-server'), '{0}', True)]
    self.NR_USERADD_CMD = (((('useradd -M --comment "{1}" --shell %s ' % locate_file('nologin', '/sbin')) + ' -d ') + AmbariPath.get('/var/lib/ambari-server/keys/')) + ' {0}')
    self.SERVER_RESOURCES_DIR = AmbariPath.get('/var/lib/ambari-server/resources')
    self.STACK_LOCATION_DEFAULT = AmbariPath.get('/var/lib/ambari-server/resources/stacks')
    self.DEFAULT_VIEWS_DIR = AmbariPath.get('/var/lib/ambari-server/resources/views')
    self.keytool_bin_subpath = 'bin/keytool'
    self.MESSAGE_SERVER_RUNNING_AS_ROOT = 'Ambari Server running with administrator privileges.'
    self.MESSAGE_ERROR_SETUP_NOT_ROOT = 'Ambari-server setup should be run with root-level privileges'
    self.MESSAGE_ERROR_RESET_NOT_ROOT = 'Ambari-server reset should be run with root-level privileges'
    self.MESSAGE_ERROR_UPGRADE_NOT_ROOT = 'Ambari-server upgrade must be run with root-level privileges'
    self.MESSAGE_CHECK_FIREWALL = 'Checking firewall status...'
