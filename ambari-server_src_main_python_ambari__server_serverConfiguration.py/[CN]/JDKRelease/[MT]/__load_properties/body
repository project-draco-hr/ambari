@staticmethod
def __load_properties(properties, section_name):
    if ((section_name is None) or (section_name is '')):
        raise FatalException((-1), ('Invalid properties section: ' + ('(empty)' if (section_name is None) else '')))
    if properties.has_key((section_name + '.desc')):
        desc = properties[(section_name + '.desc')]
    else:
        desc = section_name
    if (not properties.has_key((section_name + '.url'))):
        raise FatalException((-1), ('Invalid JDK URL in the properties section: ' + section_name))
    url = properties[(section_name + '.url')]
    if (not properties.has_key((section_name + '.re'))):
        raise FatalException((-1), ('Invalid JDK output parsing regular expression in the properties section: ' + section_name))
    reg_exp = properties[(section_name + '.re')]
    if properties.has_key((section_name + '.dest-file')):
        dest_file = properties[(section_name + '.dest-file')]
    else:
        dest_file = (section_name + '.exe')
    if properties.has_key((section_name + '.jcpol-url')):
        jcpol_url = properties[(section_name + '.jcpol-url')]
    else:
        jcpol_url = None
    if properties.has_key((section_name + '.jcpol-file')):
        jcpol_file = properties[(section_name + '.jcpol-file')]
    else:
        jcpol_file = None
    if properties.has_key((section_name + '.home')):
        inst_dir = properties[(section_name + '.home')]
    else:
        inst_dir = ('C:\\' + section_name)
    return (desc, url, dest_file, jcpol_url, jcpol_file, inst_dir, reg_exp)
