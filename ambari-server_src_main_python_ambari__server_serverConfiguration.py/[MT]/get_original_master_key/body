def get_original_master_key(properties, options=None):
    input = True
    masterKey = None
    while input:
        try:
            if ((options is not None) and (options.master_key is not None) and options.master_key):
                masterKey = options.master_key
            if (masterKey is None):
                masterKey = get_validated_string_input('Enter current Master Key: ', '', '.*', '', True, False)
        except KeyboardInterrupt:
            print 'Exiting...'
            sys.exit(1)
        alias = None
        property = properties.get_property(JDBC_PASSWORD_PROPERTY)
        if (property and is_alias_string(property)):
            alias = JDBC_RCA_PASSWORD_ALIAS
        if (not alias):
            property = properties.get_property(LDAP_MGR_PASSWORD_PROPERTY)
            if (property and is_alias_string(property)):
                alias = LDAP_MGR_PASSWORD_ALIAS
        if (not alias):
            property = properties.get_property(SSL_TRUSTSTORE_PASSWORD_PROPERTY)
            if (property and is_alias_string(property)):
                alias = SSL_TRUSTSTORE_PASSWORD_ALIAS
        if (alias and masterKey):
            password = read_passwd_for_alias(alias, masterKey, options)
            if (not password):
                print 'ERROR: Master key does not match.'
                continue
        input = False
    return masterKey
