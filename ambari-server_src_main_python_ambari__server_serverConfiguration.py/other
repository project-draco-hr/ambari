'\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n"License"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'
import datetime
import glob
import os
import re
import shutil
import stat
import string
import sys
import tempfile
from ambari_commons.exceptions import FatalException
from ambari_commons.os_check import OSCheck, OSConst
from ambari_commons.os_family_impl import OsFamilyImpl
from ambari_commons.os_utils import run_os_command, search_file, set_file_permissions
from ambari_commons.logging_utils import get_debug_mode, print_info_msg, print_warning_msg, print_error_msg, set_debug_mode
from ambari_server.properties import Properties
from ambari_server.userInput import get_validated_string_input
from ambari_server.utils import compare_versions, locate_file
OS_VERSION = OSCheck().get_os_major_version()
OS_TYPE = OSCheck.get_os_type()
OS_FAMILY = OSCheck.get_os_family()
PID_NAME = 'ambari-server.pid'
NR_USER_PROPERTY = 'ambari-server.user'
BLIND_PASSWORD = '*****'
PRESS_ENTER_MSG = 'Press <enter> to continue.'
OS_FAMILY_PROPERTY = 'server.os_family'
OS_TYPE_PROPERTY = 'server.os_type'
BOOTSTRAP_DIR_PROPERTY = 'bootstrap.dir'
AMBARI_CONF_VAR = 'AMBARI_CONF_DIR'
AMBARI_PROPERTIES_FILE = 'ambari.properties'
AMBARI_KRB_JAAS_LOGIN_FILE = 'krb5JAASLogin.conf'
GET_FQDN_SERVICE_URL = 'server.fqdn.service.url'
SERVER_OUT_FILE_KEY = 'ambari.output.file.path'
VERBOSE_OUTPUT_KEY = 'ambari.output.verbose'
DEBUG_MODE_KEY = 'ambari.server.debug'
SUSPEND_START_MODE_KEY = 'ambari.server.debug.suspend.start'
AMBARI_SERVER_LIB = 'AMBARI_SERVER_LIB'
JAVA_HOME = 'JAVA_HOME'
AMBARI_VERSION_VAR = 'AMBARI_VERSION_VAR'
JAVA_HOME_PROPERTY = 'java.home'
JDK_NAME_PROPERTY = 'jdk.name'
JCE_NAME_PROPERTY = 'jce.name'
JDBC_PATTERNS = {'oracle': '*ojdbc*.jar', 'mysql': '*mysql*.jar', 'mssql': '*sqljdbc*.jar', }
JDBC_DATABASE_PROPERTY = 'server.jdbc.database'
JDBC_DATABASE_NAME_PROPERTY = 'server.jdbc.database_name'
JDBC_HOSTNAME_PROPERTY = 'server.jdbc.hostname'
JDBC_PORT_PROPERTY = 'server.jdbc.port'
JDBC_POSTGRES_SCHEMA_PROPERTY = 'server.jdbc.postgres.schema'
JDBC_USER_NAME_PROPERTY = 'server.jdbc.user.name'
JDBC_PASSWORD_PROPERTY = 'server.jdbc.user.passwd'
JDBC_PASSWORD_FILENAME = 'password.dat'
JDBC_RCA_PASSWORD_FILENAME = 'rca_password.dat'
CLIENT_API_PORT_PROPERTY = 'client.api.port'
CLIENT_API_PORT = '8080'
SERVER_VERSION_FILE_PATH = 'server.version.file'
PERSISTENCE_TYPE_PROPERTY = 'server.persistence.type'
JDBC_DRIVER_PROPERTY = 'server.jdbc.driver'
JDBC_DRIVER_PATH_PROPERTY = 'server.jdbc.driver.path'
JDBC_URL_PROPERTY = 'server.jdbc.url'
JDBC_CONNECTION_POOL_TYPE = 'server.jdbc.connection-pool'
JDBC_CONNECTION_POOL_ACQUISITION_SIZE = 'server.jdbc.connection-pool.acquisition-size'
JDBC_CONNECTION_POOL_MAX_AGE = 'server.jdbc.connection-pool.max-age'
JDBC_CONNECTION_POOL_MAX_IDLE_TIME = 'server.jdbc.connection-pool.max-idle-time'
JDBC_CONNECTION_POOL_MAX_IDLE_TIME_EXCESS = 'server.jdbc.connection-pool.max-idle-time-excess'
JDBC_CONNECTION_POOL_IDLE_TEST_INTERVAL = 'server.jdbc.connection-pool.idle-test-interval'
JDBC_RCA_DATABASE_PROPERTY = 'server.jdbc.database'
JDBC_RCA_HOSTNAME_PROPERTY = 'server.jdbc.hostname'
JDBC_RCA_PORT_PROPERTY = 'server.jdbc.port'
JDBC_RCA_SCHEMA_PROPERTY = 'server.jdbc.schema'
JDBC_RCA_DRIVER_PROPERTY = 'server.jdbc.rca.driver'
JDBC_RCA_URL_PROPERTY = 'server.jdbc.rca.url'
JDBC_RCA_USER_NAME_PROPERTY = 'server.jdbc.rca.user.name'
JDBC_RCA_PASSWORD_FILE_PROPERTY = 'server.jdbc.rca.user.passwd'
JDBC_RCA_PASSWORD_ALIAS = 'ambari.db.password'
JDBC_USE_INTEGRATED_AUTH_PROPERTY = 'server.jdbc.use.integrated.auth'
JDBC_RCA_USE_INTEGRATED_AUTH_PROPERTY = 'server.jdbc.rca.use.integrated.auth'
RESOURCES_DIR_PROPERTY = 'resources.dir'
STACK_LOCATION_KEY = 'metadata.path'
IS_LDAP_CONFIGURED = 'ambari.ldap.isConfigured'
LDAP_MGR_PASSWORD_ALIAS = 'ambari.ldap.manager.password'
LDAP_MGR_PASSWORD_PROPERTY = 'authentication.ldap.managerPassword'
LDAP_MGR_PASSWORD_FILENAME = 'ldap-password.dat'
LDAP_MGR_USERNAME_PROPERTY = 'authentication.ldap.managerDn'
LDAP_PRIMARY_URL_PROPERTY = 'authentication.ldap.primaryUrl'
SSL_TRUSTSTORE_PASSWORD_ALIAS = 'ambari.ssl.trustStore.password'
SSL_TRUSTSTORE_PATH_PROPERTY = 'ssl.trustStore.path'
SSL_TRUSTSTORE_PASSWORD_PROPERTY = 'ssl.trustStore.password'
SSL_TRUSTSTORE_TYPE_PROPERTY = 'ssl.trustStore.type'
SSL_API = 'api.ssl'
SSL_API_PORT = 'client.api.ssl.port'
DEFAULT_SSL_API_PORT = 8443
JDK_RELEASES = 'java.releases'
VIEWS_DIR_PROPERTY = 'views.dir'
SETUP_OR_UPGRADE_MSG = '- If this is a new setup, then run the "ambari-server setup" command to create the user\n- If this is an upgrade of an existing setup, run the "ambari-server upgrade" command.\nRefer to the Ambari documentation for more information on setup and upgrade.'
DEFAULT_DB_NAME = 'ambari'
configDefaults = ServerConfigDefaults()
SECURITY_KEYS_DIR = 'security.server.keys_dir'
SECURITY_MASTER_KEY_LOCATION = 'security.master.key.location'
SECURITY_KEY_IS_PERSISTED = 'security.master.key.ispersisted'
SECURITY_KEY_ENV_VAR_NAME = 'AMBARI_SECURITY_MASTER_KEY'
SECURITY_MASTER_KEY_FILENAME = 'master'
SECURITY_IS_ENCRYPTION_ENABLED = 'security.passwords.encryption.enabled'
SECURITY_KERBEROS_JASS_FILENAME = 'krb5JAASLogin.conf'
SECURITY_PROVIDER_GET_CMD = ((((('{0} -cp {1} ' + 'org.apache.ambari.server.security.encryption') + '.CredentialProvider GET {2} {3} {4} ') + '> ') + configDefaults.SERVER_OUT_FILE) + ' 2>&1')
SECURITY_PROVIDER_PUT_CMD = ((((('{0} -cp {1} ' + 'org.apache.ambari.server.security.encryption') + '.CredentialProvider PUT {2} {3} {4} ') + '> ') + configDefaults.SERVER_OUT_FILE) + ' 2>&1')
SECURITY_PROVIDER_KEY_CMD = ((((('{0} -cp {1} ' + 'org.apache.ambari.server.security.encryption') + '.MasterKeyServiceImpl {2} {3} {4} ') + '> ') + configDefaults.SERVER_OUT_FILE) + ' 2>&1')
