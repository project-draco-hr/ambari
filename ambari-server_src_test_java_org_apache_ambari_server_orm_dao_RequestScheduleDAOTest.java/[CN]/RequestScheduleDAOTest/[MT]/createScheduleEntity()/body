{
  RequestScheduleEntity scheduleEntity=new RequestScheduleEntity();
  ClusterEntity clusterEntity=new ClusterEntity();
  clusterEntity.setClusterName("c1");
  clusterDAO.create(clusterEntity);
  scheduleEntity.setClusterEntity(clusterEntity);
  scheduleEntity.setClusterId(clusterEntity.getClusterId());
  scheduleEntity.setRequestContext("Test");
  scheduleEntity.setStatus("SCHEDULED");
  scheduleEntity.setTargetType("ACTION");
  scheduleEntity.setTargetName("REBALANCE");
  scheduleEntity.setTargetService("HDFS");
  scheduleEntity.setTargetComponent("DATANODE");
  scheduleEntity.setBatchRequestByHost(false);
  scheduleEntity.setMinutes("30");
  scheduleEntity.setHours("12");
  scheduleEntity.setDayOfWeek("*");
  scheduleEntity.setDaysOfMonth("*");
  scheduleEntity.setYear("*");
  requestScheduleDAO.create(scheduleEntity);
  HostEntity hostEntity=new HostEntity();
  hostEntity.setHostName("h1");
  hostEntity.setOsType("centOS");
  hostDAO.create(hostEntity);
  RequestScheduleBatchHostEntity batchHostEntity=new RequestScheduleBatchHostEntity();
  batchHostEntity.setBatchId(1L);
  batchHostEntity.setScheduleId(scheduleEntity.getScheduleId());
  batchHostEntity.setRequestScheduleEntity(scheduleEntity);
  batchHostEntity.setHostName(hostEntity.getHostName());
  batchHostEntity.setRequestScheduleEntity(scheduleEntity);
  batchHostDAO.create(batchHostEntity);
  scheduleEntity.getRequestScheduleBatchHostEntities().add(batchHostEntity);
  scheduleEntity=requestScheduleDAO.merge(scheduleEntity);
  return scheduleEntity;
}
