{
  if (!metricMap.isEmpty()) {
    for (    Map.Entry<String,Map<String,List<MetricDefinition>>> componentMetricDefEntry : metricMap.entrySet()) {
      String componentName=componentMetricDefEntry.getKey();
      for (      Map.Entry<String,List<MetricDefinition>> metricDefEntry : componentMetricDefEntry.getValue().entrySet()) {
        for (        MetricDefinition metricDefinition : metricDefEntry.getValue()) {
          for (          Map.Entry<String,Map<String,Metric>> metricByCategory : metricDefinition.getMetricsByCategory().entrySet()) {
            Iterator<Map.Entry<String,Metric>> iterator=metricByCategory.getValue().entrySet().iterator();
            Map<String,Metric> newMetricsToAdd=new HashMap<>();
            while (iterator.hasNext()) {
              Map.Entry<String,Metric> metricEntry=iterator.next();
              Map<String,Metric> processedMetrics=PropertyHelper.processRpcMetricDefinition(metricDefinition.getType(),componentName,metricEntry.getKey(),metricEntry.getValue());
              if (processedMetrics != null) {
                iterator.remove();
                newMetricsToAdd.putAll(processedMetrics);
              }
 else {
                processedMetrics=Collections.singletonMap(metricEntry.getKey(),metricEntry.getValue());
              }
              if (metricDefinition.getType().equals("ganglia") && (metricDefEntry.getKey().equals(Component.name()) || metricDefEntry.getKey().equals(HostComponent.name()))) {
                for (                Map.Entry<String,Metric> processedMetric : processedMetrics.entrySet()) {
                  newMetricsToAdd.putAll(getAggregateFunctionMetrics(processedMetric.getKey(),processedMetric.getValue()));
                }
              }
            }
            metricByCategory.getValue().putAll(newMetricsToAdd);
          }
        }
      }
    }
  }
  return metricMap;
}
