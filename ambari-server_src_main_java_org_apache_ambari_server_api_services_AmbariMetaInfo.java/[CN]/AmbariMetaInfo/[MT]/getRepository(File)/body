{
  List<RepositoryInfo> repositorysInfo=new ArrayList<RepositoryInfo>();
  DocumentBuilderFactory dbFactory=DocumentBuilderFactory.newInstance();
  DocumentBuilder dBuilder=dbFactory.newDocumentBuilder();
  Document doc=dBuilder.parse(repositoryFile);
  NodeList osNodes=doc.getElementsByTagName(REPOSITORY_XML_MAIN_BLOCK_NAME);
  for (int index=0; index < osNodes.getLength(); index++) {
    Node osNode=osNodes.item(index);
    if (osNode.getNodeType() == Node.ELEMENT_NODE) {
      if (!osNode.getNodeName().equals(REPOSITORY_XML_MAIN_BLOCK_NAME)) {
        continue;
      }
      NamedNodeMap attrs=osNode.getAttributes();
      Node osAttr=attrs.getNamedItem(REPOSITORY_XML_ATTRIBUTE_OS_TYPE);
      if (osAttr == null) {
        continue;
      }
      String osType=osAttr.getNodeValue();
      NodeList repoNodes=osNode.getChildNodes();
      for (int j=0; j < repoNodes.getLength(); j++) {
        Node repoNode=repoNodes.item(j);
        if (repoNode.getNodeType() != Node.ELEMENT_NODE || !repoNode.getNodeName().equals(REPOSITORY_XML_REPO_BLOCK_NAME)) {
          continue;
        }
        Element property=(Element)repoNode;
        String repoId=getTagValue(REPOSITORY_XML_PROPERTY_REPOID,property);
        String repoName=getTagValue(REPOSITORY_XML_PROPERTY_REPONAME,property);
        String baseUrl=getTagValue(REPOSITORY_XML_PROPERTY_BASEURL,property);
        String mirrorsList=getTagValue(REPOSITORY_XML_PROPERTY_MIRRORSLIST,property);
        String defaultBaseUrl=getTagValue(REPOSITORY_XML_PROPERTY_DEFAULT_BASEURL,property);
        String[] osTypes=osType.split(",");
        for (        String os : osTypes) {
          RepositoryInfo repositoryInfo=new RepositoryInfo();
          repositoryInfo.setOsType(os.trim());
          repositoryInfo.setRepoId(repoId);
          repositoryInfo.setRepoName(repoName);
          repositoryInfo.setBaseUrl(baseUrl);
          repositoryInfo.setMirrorsList(mirrorsList);
          repositoryInfo.setDefaultBaseUrl(defaultBaseUrl);
          if (LOG.isDebugEnabled()) {
            LOG.debug("Adding repo to stack" + ", repoInfo=" + repositoryInfo.toString());
          }
          repositorysInfo.add(repositoryInfo);
        }
      }
    }
  }
  return repositorysInfo;
}
