{
  List<StackInfo> stacksResult=new ArrayList<StackInfo>();
  File stackRoot=new File(CONFIG_FILE_PATH);
  if (!stackRoot.isDirectory())   throw new IOException("" + CONFIG_FILE_PATH + " should be a directory with stack.");
  File[] stacks=stackRoot.listFiles();
  for (  File stackFolder : stacks) {
    if (stackFolder.isFile())     continue;
    File[] concretStacks=stackFolder.listFiles();
    for (    File stack : concretStacks) {
      if (stack.isFile())       continue;
      StackInfo stackInfo=new StackInfo();
      stackInfo.setName(stackFolder.getName());
      stackInfo.setVersion(stack.getName());
      stacksResult.add(stackInfo);
      File repositoryFolder=new File(stack.getAbsolutePath() + File.separator + "repos"+ File.separator+ "repoinfo.xml");
      if (repositoryFolder.exists()) {
        List<RepositoryInfo> repositoryInfoList=getRepository(repositoryFolder);
        stackInfo.getRepositories().addAll(repositoryInfoList);
      }
      File servicesRootFolder=new File(stack.getAbsolutePath() + File.separator + "services");
      File[] servicesFolders=servicesRootFolder.listFiles();
      if (servicesFolders != null)       for (      File serviceFolder : servicesFolders) {
        ServiceInfo serviceInfo=new ServiceInfo();
        serviceInfo.setName(serviceFolder.getName());
        stackInfo.getServices().add(serviceInfo);
        File serviceConfigFolder=new File(serviceFolder.getAbsolutePath() + File.separator + "configs");
        File[] configFiles=serviceConfigFolder.listFiles();
        for (        File config : configFiles) {
          if (config.getName().endsWith("-site.xml")) {
            serviceInfo.getProperties().addAll(getProperties(config));
          }
        }
      }
    }
  }
  for (  StackInfo elem : stacksResult) {
    System.out.println("###elem = \n" + elem);
    System.out.println("contain services= " + elem.getServices().size());
  }
  System.out.println(" \n\n\n ");
  return null;
}
