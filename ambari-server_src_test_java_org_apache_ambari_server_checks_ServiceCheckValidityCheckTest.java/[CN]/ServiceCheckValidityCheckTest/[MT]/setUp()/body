{
  final Clusters clusters=mock(Clusters.class);
  service=mock(Service.class);
  serviceConfigDAO=mock(ServiceConfigDAO.class);
  hostRoleCommandDAO=mock(HostRoleCommandDAO.class);
  serviceCheckValidityCheck=new ServiceCheckValidityCheck();
  serviceCheckValidityCheck.hostRoleCommandDAOProvider=new Provider<HostRoleCommandDAO>(){
    @Override public HostRoleCommandDAO get(){
      return hostRoleCommandDAO;
    }
  }
;
  serviceCheckValidityCheck.serviceConfigDAOProvider=new Provider<ServiceConfigDAO>(){
    @Override public ServiceConfigDAO get(){
      return serviceConfigDAO;
    }
  }
;
  serviceCheckValidityCheck.clustersProvider=new Provider<Clusters>(){
    @Override public Clusters get(){
      return clusters;
    }
  }
;
  Cluster cluster=mock(Cluster.class);
  when(clusters.getCluster(CLUSTER_NAME)).thenReturn(cluster);
  when(cluster.getClusterId()).thenReturn(CLUSTER_ID);
  when(cluster.getServices()).thenReturn(ImmutableMap.of(SERVICE_NAME,service));
  when(service.getName()).thenReturn(SERVICE_NAME);
}
