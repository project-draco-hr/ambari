def assertResourceCalledRegexp(self, resource_type, name, **kwargs):
    with patch.object(UnknownConfiguration, '__getattr__', return_value=(lambda : 'UnknownConfiguration()')):
        self.assertNotEqual(len(RMFTestCase.env.resource_list), 0, 'There were no more resources executed!')
        resource = RMFTestCase.env.resource_list.pop(0)
        self.assertRegexpMatches(resource.__class__.__name__, resource_type)
        self.assertRegexpMatches(resource.name, name)
        for key in (set(resource.arguments.keys()) | set(kwargs.keys())):
            resource_value = resource.arguments.get(key, '')
            actual_value = kwargs.get(key, '')
            if self.isstring(resource_value):
                self.assertRegexpMatches(resource_value, actual_value, msg=("Key '%s': '%s' does not match with '%s'" % (key, resource_value, actual_value)))
            else:
                self.assertEquals(resource_value.__class__.__name__, actual_value.__class__.__name__)
