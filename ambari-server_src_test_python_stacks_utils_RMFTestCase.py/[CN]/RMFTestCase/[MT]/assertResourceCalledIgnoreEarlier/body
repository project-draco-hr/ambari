def assertResourceCalledIgnoreEarlier(self, resource_type, name, **kwargs):
    "\n    Fast fowards past earlier resources called, popping them off the list until the specified\n    resource is hit. If it's not found, then an assertion is thrown that there are no more\n    resources.\n    "
    with patch.object(UnknownConfiguration, '__getattr__', return_value=(lambda : 'UnknownConfiguration()')):
        while (len(RMFTestCase.env.resource_list) >= 0):
            self.assertNotEqual(len(RMFTestCase.env.resource_list), 0, 'The specified resource was not found in the call stack.')
            resource = RMFTestCase.env.resource_list.pop(0)
            try:
                self.assertEquals(resource_type, resource.__class__.__name__)
                self.assertEquals(name, resource.name)
                self.assertEquals(kwargs, resource.arguments)
                break
            except AssertionError:
                pass
