{
  final DBAccessor dbAccessor=createNiceMock(DBAccessor.class);
  Configuration configuration=createNiceMock(Configuration.class);
  expect(configuration.getDatabaseUrl()).andReturn(Configuration.JDBC_IN_MEMORY_URL).anyTimes();
  Capture<DBAccessor.DBColumnInfo> columnCapture=new Capture<DBAccessor.DBColumnInfo>();
  Capture<DBAccessor.DBColumnInfo> columnCapturePermissionLabel=EasyMock.newCapture();
  dbAccessor.alterColumn(eq("host_role_command"),capture(columnCapture));
  dbAccessor.addColumn(eq("adminpermission"),capture(columnCapturePermissionLabel));
  expectLastCall();
  replay(dbAccessor,configuration);
  AbstractUpgradeCatalog upgradeCatalog=getUpgradeCatalog(dbAccessor);
  Class<?> c=AbstractUpgradeCatalog.class;
  Field f=c.getDeclaredField("configuration");
  f.setAccessible(true);
  f.set(upgradeCatalog,configuration);
  upgradeCatalog.executeDDLUpdates();
  verify(dbAccessor,configuration);
  assertTrue(columnCapture.getValue().isNullable());
  assertEquals(columnCapturePermissionLabel.getValue().getName(),"permission_label");
  assertEquals(columnCapturePermissionLabel.getValue().getType(),String.class);
  assertEquals(columnCapturePermissionLabel.getValue().getLength(),Integer.valueOf(255));
  assertEquals(columnCapturePermissionLabel.getValue().isNullable(),true);
}
