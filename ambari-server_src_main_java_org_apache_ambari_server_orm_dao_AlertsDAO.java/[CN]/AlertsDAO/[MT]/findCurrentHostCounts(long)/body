{
  StringBuilder sb=new StringBuilder();
  sb.append("SELECT MAX(CASE WHEN history.alertState = :criticalState THEN 3 WHEN history.alertState = :warningState THEN 2 WHEN history.alertState = :unknownState THEN 1 ELSE 0 END) ");
  sb.append("FROM AlertCurrentEntity alert JOIN alert.alertHistory history ");
  sb.append("WHERE history.clusterId = :clusterId AND history.hostName IS NOT NULL GROUP BY history.hostName");
  TypedQuery<Number> query=entityManagerProvider.get().createQuery(sb.toString(),Number.class);
  query.setParameter("clusterId",Long.valueOf(clusterId));
  query.setParameter("criticalState",AlertState.CRITICAL);
  query.setParameter("warningState",AlertState.WARNING);
  query.setParameter("unknownState",AlertState.UNKNOWN);
  int okCount=0;
  int warningCount=0;
  int criticalCount=0;
  int unknownCount=0;
  List<Number> hostStateValues=daoUtils.selectList(query);
  for (  Number hostStateValue : hostStateValues) {
    if (null == hostStateValue) {
      continue;
    }
    int integerValue=hostStateValue.intValue();
switch (integerValue) {
case 0:
      okCount++;
    break;
case 1:
  unknownCount++;
break;
case 2:
warningCount++;
break;
case 3:
criticalCount++;
break;
}
}
AlertHostSummaryDTO hostSummary=new AlertHostSummaryDTO(okCount,unknownCount,warningCount,criticalCount);
return hostSummary;
}
