def get_mount_point_for_dir(dir, mount_points=None):
    '\n  :param dir: Directory to check, even if it doesn\'t exist.\n  :return: Returns the closest mount point as a string for the directory. if the "dir" variable is None, will return None.\n  If the directory does not exist, will return "/".\n  '
    best_mount_found = None
    if dir:
        dir = dir.strip()
        cached_mounts = ([m['mount_point'] for m in get_and_cache_mount_points()] if (mount_points is None) else mount_points)
        for m in cached_mounts:
            if os.path.join(dir, '').startswith(os.path.join(m, '')):
                if (best_mount_found is None):
                    best_mount_found = m
                elif (os.path.join(best_mount_found, '').count(os.path.sep) < os.path.join(m, '').count(os.path.sep)):
                    best_mount_found = m
    Logger.info(('Mount point for directory %s is %s' % (str(dir), str(best_mount_found))))
    return best_mount_found
