{
  Configuration configuration=createNiceMock(Configuration.class);
  Users users=createNiceMock(Users.class);
  LdapTemplate ldapTemplate=createNiceMock(LdapTemplate.class);
  LdapServerProperties ldapServerProperties=createNiceMock(LdapServerProperties.class);
  Capture<ContextMapper> contextMapperCapture=new Capture<ContextMapper>();
  List list=new LinkedList();
  expect(configuration.getLdapServerProperties()).andReturn(ldapServerProperties).anyTimes();
  expect(ldapServerProperties.getUserObjectClass()).andReturn("objectClass").anyTimes();
  expect(ldapServerProperties.getDnAttribute()).andReturn("dn").anyTimes();
  expect(ldapServerProperties.getBaseDN()).andReturn("baseDN").anyTimes();
  expect(ldapTemplate.search(eq("baseDN"),eq("(&(objectClass=objectClass)(|(dn=foo)(uid=foo)))"),capture(contextMapperCapture))).andReturn(list);
  expect(ldapTemplate.search(eq("baseDN"),eq("(&(objectClass=objectClass)(uid=foo))"),capture(contextMapperCapture))).andReturn(list);
  replay(ldapTemplate,ldapServerProperties,users,configuration);
  AmbariLdapDataPopulatorTestInstance populator=new AmbariLdapDataPopulatorTestInstance(configuration,users);
  populator.setLdapTemplate(ldapTemplate);
  populator.getLdapUserByMemberAttr("foo");
  populator.getLdapUserByMemberAttr("uid=foo,dc=example,dc=com");
  verify(ldapTemplate,ldapServerProperties,users,configuration);
}
