{
  LdapServerProperties ldapServerProperties=createNiceMock(LdapServerProperties.class);
  expect(ldapServerProperties.getUsernameAttribute()).andReturn("cn").once();
  expect(ldapServerProperties.getBaseDN()).andReturn("dc=SME,dc=support,dc=com").anyTimes();
  DirContextAdapter adapter=createNiceMock(DirContextAdapter.class);
  expect(adapter.getStringAttribute("cn")).andReturn("testUser");
  expect(adapter.getStringAttribute("uid")).andReturn(null);
  expect(adapter.getNameInNamespace()).andReturn("cn=testUser,ou=Ambari,dc=SME,dc=support,dc=com");
  PowerMock.mockStatic(AmbariLdapUtils.class);
  expect(AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn(adapter,"dc=SME,dc=support,dc=com")).andReturn(false).anyTimes();
  replay(adapter,ldapServerProperties);
  PowerMock.replayAll();
  AmbariLdapDataPopulator.LdapUserContextMapper ldapUserContextMapper=new AmbariLdapDataPopulator.LdapUserContextMapper(ldapServerProperties);
  LdapUserDto userDto=(LdapUserDto)ldapUserContextMapper.mapFromContext(adapter);
  assertNotNull(userDto);
  assertNull(userDto.getUid());
  assertEquals("testuser",userDto.getUserName());
  assertEquals("cn=testuser,ou=ambari,dc=sme,dc=support,dc=com",userDto.getDn());
}
