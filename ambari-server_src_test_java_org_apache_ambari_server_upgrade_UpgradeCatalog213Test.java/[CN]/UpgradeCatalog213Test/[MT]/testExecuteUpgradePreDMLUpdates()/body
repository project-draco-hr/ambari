{
  Method executeStackPreDMLUpdates=UpgradeCatalog213.class.getDeclaredMethod("executeUpgradePreDMLUpdates");
  Method executeStackUpgradeDDLUpdates=UpgradeCatalog213.class.getDeclaredMethod("executeStackUpgradeDDLUpdates");
  Method bootstrapRepoVersionForHDP21=UpgradeCatalog213.class.getDeclaredMethod("bootstrapRepoVersionForHDP21");
  final UpgradeCatalog213 upgradeCatalog213=createMockBuilder(UpgradeCatalog213.class).addMockedMethod(executeStackUpgradeDDLUpdates).addMockedMethod(bootstrapRepoVersionForHDP21).addMockedMethod(executeStackPreDMLUpdates).createMock();
  final Injector mockInjector=Guice.createInjector(new AbstractModule(){
    @Override protected void configure(){
      bind(UpgradeCatalog213.class).toInstance(upgradeCatalog213);
      bind(DBAccessor.class).toInstance(createNiceMock(DBAccessor.class));
      bind(OsFamily.class).toInstance(createNiceMock(OsFamily.class));
      bind(EntityManager.class).toInstance(entityManager);
    }
  }
);
  upgradeCatalog213.executeUpgradePreDMLUpdates();
  expectLastCall().once();
  upgradeCatalog213.executeStackUpgradeDDLUpdates();
  expectLastCall().once();
  upgradeCatalog213.bootstrapRepoVersionForHDP21();
  expectLastCall().once();
  replay(upgradeCatalog213);
  mockInjector.getInstance(UpgradeCatalog213.class).executePreDMLUpdates();
  verify(upgradeCatalog213);
}
