{
  UpgradeCatalog213 upgradeCatalog213=new UpgradeCatalog213(injector);
  String testContent="# The heap size of the jvm stared by hive shell script can be controlled via:\n" + "\n" + "if [ \"$SERVICE\" = \"metastore\" ]; then\n"+ "  export HADOOP_HEAPSIZE=\"{{hive_metastore_heapsize}}\"\n"+ "else\n"+ "  export HADOOP_HEAPSIZE=\"{{hive_heapsize}}\"\n"+ "fi\n"+ "\n"+ "export HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\"\n"+ "\n"+ "# Larger heap size may be required when running queries over large number of files or partitions.\n";
  String expectedResult="# The heap size of the jvm stared by hive shell script can be controlled via:\n" + "\n" + "if [ \"$SERVICE\" = \"metastore\" ]; then\n"+ "  export HADOOP_HEAPSIZE=\"{{hive_metastore_heapsize}}\"\n"+ "else\n"+ "  export HADOOP_HEAPSIZE=\"{{hive_heapsize}}\"\n"+ "fi\n"+ "\n"+ "export HADOOP_CLIENT_OPTS=\"$HADOOP_CLIENT_OPTS  -Xmx${HADOOP_HEAPSIZE}m\"\n"+ "\n"+ "# Larger heap size may be required when running queries over large number of files or partitions.\n";
  Assert.assertEquals(expectedResult,upgradeCatalog213.updateHiveEnvContent(testContent));
  testContent="# The heap size of the jvm stared by hive shell script can be controlled via:\n" + "export SERVICE=$SERVICE\n" + "if [ \"$SERVICE\" = \"metastore\" ]; then\n"+ "  export HADOOP_HEAPSIZE=\"{{hive_metastore_heapsize}}\"\n"+ "else\n"+ "  export HADOOP_HEAPSIZE=\"{{hive_heapsize}}\"\n"+ "fi\n"+ "\n"+ "# Larger heap size may be required when running queries over large number of files or partitions.\n";
  expectedResult="# The heap size of the jvm stared by hive shell script can be controlled via:\n" + "export SERVICE=$SERVICE\n" + "if [ \"$SERVICE\" = \"metastore\" ]; then\n"+ "  export HADOOP_HEAPSIZE=\"{{hive_metastore_heapsize}}\"\n"+ "else\n"+ "  export HADOOP_HEAPSIZE={{hive_heapsize}} # Setting for HiveServer2 and Client\n"+ "fi\n"+ "\n"+ "export HADOOP_CLIENT_OPTS=\"$HADOOP_CLIENT_OPTS  -Xmx${HADOOP_HEAPSIZE}m\"\n"+ "# Larger heap size may be required when running queries over large number of files or partitions.\n";
  Assert.assertEquals(expectedResult,upgradeCatalog213.updateHiveEnvContent(testContent));
}
