'\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n"License"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n'
from resource_management import *
from resource_management.libraries.functions.version import compare_versions, format_hdp_stack_version
config = Script.get_config()
hdp_stack_version = str(config['hostLevelParams']['stack_version'])
hdp_stack_version = format_hdp_stack_version(hdp_stack_version)
stack_is_hdp22_or_further = (not (hdp_stack_version.startswith('2.0') or hdp_stack_version.startswith('2.1')))
if (compare_versions(hdp_stack_version, '2.2.0.0') >= 0):
    hadoop_bin_dir = '/usr/hdp/current/hadoop-client/bin'
else:
    hadoop_bin_dir = '/usr/bin'
hadoop_conf_dir = '/etc/hadoop/conf'
kinit_path_local = functions.get_kinit_path(['/usr/bin', '/usr/kerberos/bin', '/usr/sbin'])
security_enabled = config['configurations']['cluster-env']['security_enabled']
hdfs_user = config['configurations']['hadoop-env']['hdfs_user']
hdfs_principal_name = config['configurations']['hadoop-env']['hdfs_principal_name']
hdfs_user_keytab = config['configurations']['hadoop-env']['hdfs_user_keytab']
config_dir = '/etc/tez/conf'
hadoop_home = '/usr'
java64_home = config['hostLevelParams']['java_home']
tez_user = config['configurations']['tez-env']['tez_user']
user_group = config['configurations']['cluster-env']['user_group']
tez_env_sh_template = config['configurations']['tez-env']['content']
import functools
HdfsDirectory = functools.partial(HdfsDirectory, conf_dir=hadoop_conf_dir, hdfs_user=(hdfs_principal_name if security_enabled else hdfs_user), security_enabled=security_enabled, keytab=hdfs_user_keytab, kinit_path_local=kinit_path_local, bin_dir=hadoop_bin_dir)
