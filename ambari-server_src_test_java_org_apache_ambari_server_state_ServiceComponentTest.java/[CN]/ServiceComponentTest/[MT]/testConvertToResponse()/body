{
  String componentName="NAMENODE";
  ServiceComponent component=serviceComponentFactory.createNew(service,componentName);
  service.addServiceComponent(component);
  addHostToCluster("h1",service.getCluster().getClusterName());
  ServiceComponentHost sch=serviceComponentHostFactory.createNew(component,"h1");
  sch.setState(State.INSTALLED);
  Map<String,ServiceComponentHost> compHosts=new HashMap<String,ServiceComponentHost>();
  compHosts.put("h1",sch);
  component.addServiceComponentHosts(compHosts);
  Assert.assertEquals(1,component.getServiceComponentHosts().size());
  ServiceComponent sc=service.getServiceComponent(componentName);
  Assert.assertNotNull(sc);
  sc.setDesiredState(State.INSTALLED);
  sc.setDesiredStackVersion(new StackId("HDP-1.2.0"));
  ServiceComponentResponse r=sc.convertToResponse();
  Assert.assertEquals(sc.getClusterName(),r.getClusterName());
  Assert.assertEquals(sc.getClusterId(),r.getClusterId().longValue());
  Assert.assertEquals(sc.getName(),r.getComponentName());
  Assert.assertEquals(sc.getServiceName(),r.getServiceName());
  Assert.assertEquals(sc.getDesiredStackVersion().getStackId(),r.getDesiredStackVersion());
  Assert.assertEquals(sc.getDesiredState().toString(),r.getDesiredState());
  int totalCount=r.getServiceComponentStateCount().get("totalCount");
  int startedCount=r.getServiceComponentStateCount().get("startedCount");
  int installedCount=r.getServiceComponentStateCount().get("installedCount");
  Assert.assertEquals(1,totalCount);
  Assert.assertEquals(0,startedCount);
  Assert.assertEquals(1,installedCount);
  StringBuilder sb=new StringBuilder();
  sc.debugDump(sb);
  Assert.assertFalse(sb.toString().isEmpty());
}
