def assert_configure_secured(self, stackVersion=STACK_VERSION):
    conf_dir = '/etc/hadoop/conf'
    if (stackVersion != self.STACK_VERSION):
        conf_dir = '/usr/hdp/current/hadoop-client/conf'
    self.assertResourceCalled('Directory', '/etc/security/limits.d', owner='root', group='root', recursive=True)
    self.assertResourceCalled('File', '/etc/security/limits.d/hdfs.conf', content=Template('hdfs.conf.j2'), owner='root', group='root', mode=420)
    self.assertResourceCalled('XmlConfig', 'hdfs-site.xml', owner='hdfs', group='hadoop', conf_dir=conf_dir, configurations=self.getConfig()['configurations']['hdfs-site'], configuration_attributes=self.getConfig()['configuration_attributes']['hdfs-site'])
    self.assertResourceCalled('XmlConfig', 'core-site.xml', owner='hdfs', group='hadoop', conf_dir=conf_dir, configurations=self.getConfig()['configurations']['core-site'], configuration_attributes=self.getConfig()['configuration_attributes']['core-site'], mode=420)
    self.assertResourceCalled('File', (conf_dir + '/slaves'), content=Template('slaves.j2'), owner='root')
    self.assertResourceCalled('File', '/var/lib/ambari-agent/lib/fast-hdfs-resource.jar', content=StaticFile('fast-hdfs-resource.jar'), mode=420)
    self.assertResourceCalled('Directory', '/var/lib/hadoop-hdfs', owner='hdfs', group='hadoop', mode=489, recursive=True)
    self.assertResourceCalled('Directory', '/hadoop/hdfs/data', owner='hdfs', ignore_failures=True, group='hadoop', mode=493, recursive=True, cd_access='a')
