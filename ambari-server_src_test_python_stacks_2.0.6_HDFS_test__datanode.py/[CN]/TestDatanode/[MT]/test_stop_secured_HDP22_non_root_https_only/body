@patch('os.path.exists', new=MagicMock(return_value=False))
def test_stop_secured_HDP22_non_root_https_only(self):
    config_file = (self._getSrcFolder() + '/test/python/stacks/2.0.6/configs/secured.json')
    with open(config_file, 'r') as f:
        secured_json = json.load(f)
    secured_json['hostLevelParams']['stack_version'] = '2.2'
    secured_json['configurations']['hdfs-site']['dfs.http.policy'] = 'HTTPS_ONLY'
    secured_json['configurations']['hdfs-site']['dfs.datanode.address'] = '0.0.0.0:10000'
    secured_json['configurations']['hdfs-site']['dfs.datanode.https.address'] = '0.0.0.0:50000'
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/datanode.py'), classname='DataNode', command='stop', config_dict=secured_json, hdp_stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    self.assertResourceCalled('Directory', '/var/run/hadoop', owner='hdfs', group='hadoop', mode=493)
    self.assertResourceCalled('Directory', '/var/run/hadoop/hdfs', owner='hdfs', recursive=True)
    self.assertResourceCalled('Directory', '/var/log/hadoop/hdfs', owner='hdfs', recursive=True)
    self.assertResourceCalled('File', '/var/run/hadoop/hdfs/hadoop-hdfs-datanode.pid', action=['delete'], not_if='ls /var/run/hadoop/hdfs/hadoop-hdfs-datanode.pid >/dev/null 2>&1 && ps -p `cat /var/run/hadoop/hdfs/hadoop-hdfs-datanode.pid` >/dev/null 2>&1')
    self.assertResourceCalled('Execute', "/usr/bin/sudo su hdfs -l -s /bin/bash -c 'export {ENV_PLACEHOLDER} > /dev/null ; ulimit -c unlimited &&  /usr/hdp/current/hadoop-client/sbin/hadoop-daemon.sh --config /etc/hadoop/conf stop datanode'", environment={'HADOOP_LIBEXEC_DIR': '/usr/hdp/current/hadoop-client/libexec', }, not_if=None)
    self.assertResourceCalled('File', '/var/run/hadoop/hdfs/hadoop-hdfs-datanode.pid', action=['delete'])
    self.assertNoMoreResources()
