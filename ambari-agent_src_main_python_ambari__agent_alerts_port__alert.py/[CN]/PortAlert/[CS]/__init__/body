def __init__(self, alert_meta, alert_source_meta):
    super(PortAlert, self).__init__(alert_meta, alert_source_meta)
    self.uri = None
    self.default_port = None
    self.warning_timeout = DEFAULT_WARNING_TIMEOUT
    self.critical_timeout = DEFAULT_CRITICAL_TIMEOUT
    if ('uri' in alert_source_meta):
        self.uri = alert_source_meta['uri']
    if ('default_port' in alert_source_meta):
        self.default_port = alert_source_meta['default_port']
    if ('reporting' in alert_source_meta):
        reporting = alert_source_meta['reporting']
        reporting_state_warning = self.RESULT_WARNING.lower()
        reporting_state_critical = self.RESULT_CRITICAL.lower()
        if ((reporting_state_warning in reporting) and ('value' in reporting[reporting_state_warning])):
            self.warning_timeout = reporting[reporting_state_warning]['value']
        if ((reporting_state_critical in reporting) and ('value' in reporting[reporting_state_critical])):
            self.critical_timeout = reporting[reporting_state_critical]['value']
    if (self.warning_timeout >= 30):
        logger.warn('[Alert][{0}] The warning threshold of {1}s is too large, resetting to {2}s'.format(self.get_name(), str(self.warning_timeout), str(DEFAULT_WARNING_TIMEOUT)))
        self.warning_timeout = DEFAULT_WARNING_TIMEOUT
    if (self.critical_timeout >= 30):
        logger.warn('[Alert][{0}] The critical threshold of {1}s is too large, resetting to {2}s'.format(self.get_name(), str(self.critical_timeout), str(DEFAULT_CRITICAL_TIMEOUT)))
        self.critical_timeout = DEFAULT_CRITICAL_TIMEOUT
