{
  Capture<AmbariManagementController> controllerCapture=new Capture<AmbariManagementController>();
  Injector injector=createStrictMock(Injector.class);
  Cluster cluster=createNiceMock(Cluster.class);
  ActionManager actionManager=createNiceMock(ActionManager.class);
  Clusters clusters=createNiceMock(Clusters.class);
  ClusterRequest clusterRequest=createNiceMock(ClusterRequest.class);
  Set<ClusterRequest> setRequests=Collections.singleton(clusterRequest);
  injector.injectMembers(capture(controllerCapture));
  expect(injector.getInstance(Gson.class)).andReturn(null);
  expect(injector.getInstance(MaintenanceStateHelper.class)).andReturn(null);
  expect(clusterRequest.getClusterName()).andReturn("clusterNew").times(4);
  expect(clusterRequest.getClusterId()).andReturn(1L).times(4);
  expect(clusters.getClusterById(1L)).andReturn(cluster);
  expect(cluster.getClusterName()).andReturn("clusterOld").times(2);
  cluster.setClusterName("clusterNew");
  expectLastCall().andThrow(new RollbackException());
  replay(actionManager,cluster,clusters,injector,clusterRequest);
  AmbariManagementController controller=new AmbariManagementControllerImpl(actionManager,clusters,injector);
  try {
    controller.updateClusters(setRequests,null);
    fail("Expected RollbackException");
  }
 catch (  RollbackException e) {
  }
  assertSame(controller,controllerCapture.getValue());
  verify(actionManager,cluster,clusters,injector,clusterRequest);
}
