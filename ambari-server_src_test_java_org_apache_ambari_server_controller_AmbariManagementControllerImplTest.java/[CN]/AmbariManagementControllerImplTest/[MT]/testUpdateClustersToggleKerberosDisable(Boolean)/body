{
  Capture<AmbariManagementController> controllerCapture=new Capture<AmbariManagementController>();
  Injector injector=createStrictMock(Injector.class);
  Cluster cluster=createNiceMock(Cluster.class);
  ActionManager actionManager=createNiceMock(ActionManager.class);
  ClusterRequest clusterRequest=createNiceMock(ClusterRequest.class);
  Set<ClusterRequest> setRequests=Collections.singleton(clusterRequest);
  Capture<Boolean> manageIdentitiesCapture=new Capture<Boolean>();
  KerberosHelper kerberosHelper=createStrictMock(KerberosHelper.class);
  injector.injectMembers(capture(controllerCapture));
  expect(injector.getInstance(Gson.class)).andReturn(null);
  expect(injector.getInstance(MaintenanceStateHelper.class)).andReturn(null);
  expect(injector.getInstance(KerberosHelper.class)).andReturn(kerberosHelper);
  expect(clusterRequest.getClusterId()).andReturn(1L).times(6);
  expect(clusterRequest.getSecurityType()).andReturn(SecurityType.NONE).anyTimes();
  expect(clusters.getClusterById(1L)).andReturn(cluster).times(2);
  expect(cluster.getClusterName()).andReturn("cluster").times(1);
  expect(cluster.getSecurityType()).andReturn(SecurityType.KERBEROS).anyTimes();
  cluster.addSessionAttributes(anyObject(Map.class));
  expectLastCall().once();
  expect(kerberosHelper.shouldExecuteCustomOperations(SecurityType.NONE,null)).andReturn(false).once();
  expect(kerberosHelper.getForceToggleKerberosDirective(anyObject(Map.class))).andReturn(false).once();
  expect(kerberosHelper.getManageIdentitiesDirective(anyObject(Map.class))).andReturn(manageIdentities).once();
  expect(kerberosHelper.toggleKerberos(anyObject(Cluster.class),anyObject(SecurityType.class),anyObject(RequestStageContainer.class),captureBoolean(manageIdentitiesCapture))).andReturn(null).once();
  replay(actionManager,cluster,clusters,injector,clusterRequest,sessionManager,kerberosHelper);
  AmbariManagementController controller=new AmbariManagementControllerImpl(actionManager,clusters,injector);
  controller.updateClusters(setRequests,null);
  assertSame(controller,controllerCapture.getValue());
  assertEquals(manageIdentities,manageIdentitiesCapture.getValue());
  verify(actionManager,cluster,clusters,injector,clusterRequest,sessionManager,kerberosHelper);
}
