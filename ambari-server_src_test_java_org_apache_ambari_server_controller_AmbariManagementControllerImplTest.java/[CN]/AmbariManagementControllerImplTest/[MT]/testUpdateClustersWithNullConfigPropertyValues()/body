{
  Capture<AmbariManagementController> controllerCapture=new Capture<AmbariManagementController>();
  Injector injector=createStrictMock(Injector.class);
  Cluster cluster=createNiceMock(Cluster.class);
  ActionManager actionManager=createNiceMock(ActionManager.class);
  ClusterRequest clusterRequest=createNiceMock(ClusterRequest.class);
  Set<ClusterRequest> setRequests=Collections.singleton(clusterRequest);
  KerberosHelper kerberosHelper=createStrictMock(KerberosHelper.class);
  injector.injectMembers(capture(controllerCapture));
  expect(injector.getInstance(Gson.class)).andReturn(null);
  expect(injector.getInstance(MaintenanceStateHelper.class)).andReturn(null);
  expect(injector.getInstance(KerberosHelper.class)).andReturn(kerberosHelper);
  expect(clusterRequest.getClusterName()).andReturn("clusterNew").anyTimes();
  expect(clusterRequest.getClusterId()).andReturn(1L).anyTimes();
  ConfigurationRequest configReq=new ConfigurationRequest();
  final Map<String,String> configReqProps=Maps.newHashMap();
  configReqProps.put("p1",null);
  configReq.setProperties(configReqProps);
  expect(clusterRequest.getDesiredConfig()).andReturn(ImmutableList.of(configReq)).anyTimes();
  expect(clusters.getClusterById(1L)).andReturn(cluster).anyTimes();
  expect(cluster.getClusterName()).andReturn("clusterOld").anyTimes();
  expect(cluster.getConfigPropertiesTypes(anyObject(String.class))).andReturn(Maps.<PropertyInfo.PropertyType,Set<String>>newHashMap()).anyTimes();
  expect(cluster.getDesiredConfigByType(anyObject(String.class))).andReturn(new ConfigImpl("config-type"){
    @Override public Map<String,Map<String,String>> getPropertiesAttributes(){
      return Maps.newHashMap();
    }
    @Override public Map<String,String> getProperties(){
      return configReqProps;
    }
  }
).anyTimes();
  cluster.addSessionAttributes(anyObject(Map.class));
  expectLastCall().once();
  cluster.setClusterName("clusterNew");
  expectLastCall();
  replay(actionManager,cluster,clusters,injector,clusterRequest,sessionManager);
  AmbariManagementController controller=new AmbariManagementControllerImpl(actionManager,clusters,injector);
  controller.updateClusters(setRequests,null);
  assertSame(controller,controllerCapture.getValue());
  verify(actionManager,cluster,clusters,injector,clusterRequest,sessionManager);
}
