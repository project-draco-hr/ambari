{
  Injector injector=createNiceMock(Injector.class);
  ActionManager actionManager=createNiceMock(ActionManager.class);
  Cluster cluster=createNiceMock(Cluster.class);
  Service service=createNiceMock(Service.class);
  ServiceComponent component=createNiceMock(ServiceComponent.class);
  Map<String,ServiceComponentHost> hostMap=createNiceMock(Map.class);
  Set<String> hostsSet=createNiceMock(Set.class);
  expect(hostMap.isEmpty()).andReturn(false);
  expect(hostMap.keySet()).andReturn(hostsSet);
  expect(component.getServiceComponentHosts()).andReturn(hostMap).times(2);
  replay(cluster,service,component,injector,actionManager,hostMap,hostsSet);
  AmbariManagementControllerImpl controller=createMockBuilder(AmbariManagementControllerImpl.class).addMockedMethod("filterHostsForAction").addMockedMethod("getHealthyHost").withConstructor(actionManager,clusters,injector).createMock();
  expect(controller.getHealthyHost(hostsSet)).andReturn("healthy_host");
  controller.filterHostsForAction(hostsSet,service,cluster,Resource.Type.Cluster);
  expectLastCall().once();
  replay(controller);
  String host=controller.getClientHostForRunningAction(cluster,service,component);
  assertEquals("healthy_host",host);
  verify(controller,cluster,service,component,injector,hostMap);
}
