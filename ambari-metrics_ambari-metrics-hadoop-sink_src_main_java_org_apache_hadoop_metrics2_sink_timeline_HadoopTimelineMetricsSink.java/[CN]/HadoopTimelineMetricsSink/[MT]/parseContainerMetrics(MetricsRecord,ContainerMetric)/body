{
  for (  AbstractMetric metric : record.metrics()) {
switch (metric.name()) {
case "PMemUsageMBsAvgMBs":
      containerMetric.setPmemUsedAvg(metric.value().intValue());
    break;
case "PMemUsageMBsMinMBs":
  containerMetric.setPmemUsedMin(metric.value().intValue());
break;
case "PMemUsageMBsMaxMBs":
containerMetric.setPmemUsedMax(metric.value().intValue());
break;
case "PMemUsageMBHistogram50thPercentileMBs":
containerMetric.setPmem50Pct(metric.value().intValue());
break;
case "PMemUsageMBHistogram75thPercentileMBs":
containerMetric.setPmem75Pct(metric.value().intValue());
break;
case "PMemUsageMBHistogram90thPercentileMBs":
containerMetric.setPmem90Pct(metric.value().intValue());
break;
case "PMemUsageMBHistogram95thPercentileMBs":
containerMetric.setPmem95Pct(metric.value().intValue());
break;
case "PMemUsageMBHistogram99thPercentileMBs":
containerMetric.setPmem99Pct(metric.value().intValue());
break;
case "pMemLimitMBs":
containerMetric.setPmemLimit(metric.value().intValue());
break;
case "vMemLimitMBs":
containerMetric.setVmemLimit(metric.value().intValue());
break;
case "launchDurationMs":
containerMetric.setLaunchDuration(metric.value().longValue());
break;
case "localizationDurationMs":
containerMetric.setLocalizationDuration(metric.value().longValue());
break;
case "StartTime":
containerMetric.setStartTime(metric.value().longValue());
break;
case "FinishTime":
containerMetric.setFinishTime(metric.value().longValue());
break;
case "ExitCode":
containerMetric.setExitCode((metric.value().intValue()));
break;
default :
break;
}
}
if (LOG.isDebugEnabled()) {
LOG.debug(containerMetric);
}
}
