def testApplicationMetricMap(self):
    application_metric_map = ApplicationMetricMap('host1', '10.10.10.10')
    application_id = application_metric_map.format_app_id('A', '1')
    timestamp = int(round((1415390657.380649 * 1000)))
    metrics = {}
    metrics.update({'b': 'bv', })
    application_metric_map.put_metric(application_id, metrics, timestamp)
    application_metric_map.put_metric(application_id, metrics, (timestamp + 1))
    application_metric_map.put_metric(application_id, metrics, (timestamp + 2))
    application_metric_map.put_metric(application_id, metrics, (timestamp + 3))
    p = json.loads(application_metric_map.flatten(application_id))
    self.assertEqual(len(p['metrics']), 1)
    self.assertEqual(p['metrics'][0]['metricname'], 'b')
    self.assertEqual(p['metrics'][0]['hostname'], 'host1')
    self.assertEqual(len(p['metrics'][0]['metrics']), 4)
    self.assertEqual(p['metrics'][0]['metrics'][str(timestamp)], 'bv')
    self.assertEqual(application_metric_map.get_start_time(application_id, 'b'), timestamp)
    metrics = {}
    metrics.update({'b': 'bv', })
    metrics.update({'a': 'av', })
    application_metric_map.put_metric(application_id, metrics, timestamp)
    p = json.loads(application_metric_map.flatten(application_id))
    self.assertEqual(len(p['metrics']), 2)
    self.assertTrue((((p['metrics'][0]['metricname'] == 'a') and (p['metrics'][1]['metricname'] == 'b')) or ((p['metrics'][1]['metricname'] == 'a') and (p['metrics'][0]['metricname'] == 'b'))))
