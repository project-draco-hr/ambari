@patch.object(Logger, 'info')
@patch.object(Logger, 'error')
@patch.object(dfs_datanode_helper, '_write_data_dir_to_mount_in_file')
def test_normalized(self, mock_write_data_dir_to_file, log_error, log_info):
    '\n    Test that the data dirs are normalized by removing leading and trailing whitespace, and case sensitive.\n    '
    params = StubParams()
    params.data_dir_mount_file = '/etc/hadoop/conf/dfs_data_dir_mount.hist'
    params.dfs_data_dir = '/grid/0/data  ,  /grid/1/data  ,/GRID/2/Data/'
    dfs_datanode_helper.handle_dfs_data_dir(fake_create_dir, params, update_cache=False)
    for (name, args, kwargs) in log_info.mock_calls:
        print args[0]
    for (name, args, kwargs) in log_error.mock_calls:
        print args[0]
    log_info.assert_any_call('Forcefully creating directory: /grid/0/data')
    log_info.assert_any_call('Forcefully creating directory: /grid/1/data')
    log_info.assert_any_call('Forcefully creating directory: /GRID/2/Data/')
    self.assertEquals(0, log_error.call_count)
