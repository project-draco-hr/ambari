@patch('resource_management.libraries.functions.dfs_datanode_helper.Directory')
@patch.object(Logger, 'warning')
@patch.object(Logger, 'info')
@patch.object(Logger, 'error')
def test_normalized(self, log_error, log_info, warning_info, dir_mock):
    '\n    Test that the data dirs are normalized by removing leading and trailing whitespace, and case sensitive.\n    '
    params = StubParams()
    params.data_dir_mount_file = '/var/lib/ambari-agent/data/datanode/dfs_data_dir_mount.hist'
    params.dfs_data_dir = '/grid/0/data  ,  /grid/1/data  ,/GRID/2/Data/'
    dfs_datanode_helper.handle_mounted_dirs(fake_create_dir, params.dfs_data_dir, params.data_dir_mount_file, update_cache=False)
    for (name, args, kwargs) in log_info.mock_calls:
        print args[0]
    for (name, args, kwargs) in log_error.mock_calls:
        print args[0]
    log_info.assert_any_call('Forcefully creating directory: /grid/0/data')
    log_info.assert_any_call('Forcefully creating directory: /grid/1/data')
    log_info.assert_any_call('Forcefully creating directory: /GRID/2/Data/')
    self.assertEquals(0, log_error.call_count)
