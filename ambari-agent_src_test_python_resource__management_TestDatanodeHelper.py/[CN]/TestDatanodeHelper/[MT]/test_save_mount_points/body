@patch.object(Logger, 'info')
@patch.object(Logger, 'error')
@patch.object(dfs_datanode_helper, '_write_data_dir_to_mount_in_file')
@patch.object(dfs_datanode_helper, 'get_mount_point_for_dir')
@patch.object(os.path, 'isdir')
def test_save_mount_points(self, mock_os_isdir, mock_get_mount_point, mock_write_data_dir_to_mount_in_file, log_error, log_info):
    '\n    Test when all mounts are on root.\n    '
    mock_get_mount_point.side_effect = (['/', '/', '/'] * 2)
    mock_os_isdir.side_effect = ([False, False, False] + [True, True, True])
    mock_write_data_dir_to_mount_in_file.return_value = True
    dfs_datanode_helper.handle_dfs_data_dir(fake_create_dir, self.params, update_cache=False)
    for (name, args, kwargs) in log_info.mock_calls:
        print args[0]
    for (name, args, kwargs) in log_error.mock_calls:
        print args[0]
    self.assertEquals(0, log_error.call_count)
    mock_write_data_dir_to_mount_in_file.assert_called_once_with(self.params, {self.grid0: '/', self.grid1: '/', self.grid2: '/', })
