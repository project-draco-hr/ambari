{
  TempletonApi.JobInfo info=null;
  try {
    info=getTempletonApi().checkJob(job.getJobId());
  }
 catch (  IOException e) {
    LOG.warn(String.format("IO Exception: %s",e));
    return;
  }
  if (info.status != null && (info.status.containsKey("runState"))) {
    int runState=((Double)info.status.get("runState")).intValue();
switch (runState) {
case PigJob.RUN_STATE_KILLED:
      LOG.debug(String.format("Job KILLED: %s",job.getJobId()));
    job.setStatus(PigJob.Status.KILLED);
  break;
case PigJob.RUN_STATE_FAILED:
LOG.debug(String.format("Job FAILED: %s",job.getJobId()));
job.setStatus(PigJob.Status.FAILED);
break;
case PigJob.RUN_STATE_PREP:
case PigJob.RUN_STATE_RUNNING:
job.setStatus(PigJob.Status.RUNNING);
break;
case PigJob.RUN_STATE_SUCCEEDED:
LOG.debug(String.format("Job COMPLETED: %s",job.getJobId()));
job.setStatus(PigJob.Status.COMPLETED);
break;
default :
LOG.debug(String.format("Job in unknown state: %s",job.getJobId()));
job.setStatus(PigJob.Status.UNKNOWN);
break;
}
}
Pattern pattern=Pattern.compile("\\d+");
Matcher matcher=null;
if (info.percentComplete != null) {
matcher=pattern.matcher(info.percentComplete);
}
if (matcher != null && matcher.find()) {
job.setPercentComplete(Integer.valueOf(matcher.group()));
}
 else {
job.setPercentComplete(null);
}
save(job);
}
