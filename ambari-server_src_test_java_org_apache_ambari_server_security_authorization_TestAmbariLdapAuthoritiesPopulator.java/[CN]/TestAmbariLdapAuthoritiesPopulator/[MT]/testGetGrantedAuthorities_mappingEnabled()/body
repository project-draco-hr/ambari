{
  AmbariLdapAuthoritiesPopulator populator=createMockBuilder(AmbariLdapAuthoritiesPopulator.class).addMockedMethod("createLdapUser").addMockedMethod("addRole").addMockedMethod("removeRole").withConstructor(configuration,helper,userDAO,roleDAO).createMock();
  expect(userData.getObjectAttribute("ambari_admin")).andReturn(Boolean.TRUE).andReturn(Boolean.FALSE);
  expect(ldapServerProperties.isGroupMappingEnabled()).andReturn(true).atLeastOnce();
  expect(configuration.getLdapServerProperties()).andReturn(ldapServerProperties).atLeastOnce();
  expect(userEntity.getRoleEntities()).andReturn(roleSetStub).times(2);
  expect(userDAO.findLdapUserByName(username)).andReturn(null).andReturn(userEntity).times(2);
  populator.createLdapUser(username);
  expectLastCall();
  populator.addRole(userEntity,adminRole);
  expectLastCall();
  populator.removeRole(userEntity,adminRole);
  expectLastCall();
  replayAll();
  populator.getGrantedAuthorities(userData,username);
  populator.getGrantedAuthorities(userData,username);
  verifyAll();
}
