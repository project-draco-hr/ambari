{
  AmbariLdapAuthoritiesPopulator populator=createMockBuilder(AmbariLdapAuthoritiesPopulator.class).withConstructor(helper,userDAO,memberDAO,privilegeDAO).createMock();
  expect(userEntity.getPrincipal()).andReturn(principalEntity).anyTimes();
  expect(userEntity.getActive()).andReturn(true);
  expect(memberDAO.findAllMembersByUser(userEntity)).andReturn(Collections.singletonList(memberEntity)).anyTimes();
  expect(memberEntity.getGroup()).andReturn(groupEntity).anyTimes();
  expect(groupEntity.getPrincipal()).andReturn(groupPrincipalEntity).anyTimes();
  List<PrincipalEntity> principalEntityList=new LinkedList<PrincipalEntity>();
  principalEntityList.add(principalEntity);
  principalEntityList.add(groupPrincipalEntity);
  expect(privilegeDAO.findAllByPrincipal(principalEntityList)).andReturn(Collections.singletonList(privilegeEntity)).anyTimes();
  expect(userDAO.findLdapUserByName(EasyMock.<String>anyObject())).andReturn(null).andReturn(userEntity).once();
  replayAll();
  populator.getGrantedAuthorities(userData,"admin");
  populator.getGrantedAuthorities(userData,"user");
  verifyAll();
}
