{
  AmbariLdapAuthoritiesPopulator populator=createMockBuilder(AmbariLdapAuthoritiesPopulator.class).addMockedMethod("addRole").addMockedMethod("removeRole").withConstructor(configuration,helper,userDAO,roleDAO,principalDAO,principalTypeDAO,memberDAO,privilegeDAO).createMock();
  Capture<UserEntity> createEntity=new Capture<UserEntity>();
  Capture<UserEntity> addRoleEntity=new Capture<UserEntity>();
  Capture<PrincipalEntity> principalEntity=new Capture<PrincipalEntity>();
  userDAO.create(capture(createEntity));
  expectLastCall();
  populator.addRole(capture(addRoleEntity),eq(userRole));
  expectLastCall();
  PrincipalTypeEntity principalTypeEntity=new PrincipalTypeEntity();
  principalTypeEntity.setId(PrincipalTypeEntity.USER_PRINCIPAL_TYPE);
  principalTypeEntity.setName(PrincipalTypeEntity.USER_PRINCIPAL_TYPE_NAME);
  expect(principalTypeDAO.findById(1)).andReturn(principalTypeEntity);
  principalDAO.create(capture(principalEntity));
  replayAll();
  populator.createLdapUser(username);
  verifyAll();
  UserEntity capturedCreateEntity=createEntity.getValue();
  UserEntity capturedAddRoleEntity=addRoleEntity.getValue();
  assertTrue(capturedCreateEntity.getLdapUser());
  assertEquals(username,capturedCreateEntity.getUserName());
  assertEquals(capturedCreateEntity,capturedAddRoleEntity);
}
