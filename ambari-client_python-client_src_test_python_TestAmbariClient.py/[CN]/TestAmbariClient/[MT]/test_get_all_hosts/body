def test_get_all_hosts(self):
    '\n    Get all hosts.\n    This testcase checks if get_all_hosts returns a list of ModelList.\n    '
    expected_hosts_dict = {'items': [{'ip': None, 'host_name': u'apspal44-83', 'rack_info': '/default-rack', }, {'ip': None, 'host_name': u'apspal44-84', 'rack_info': '/default-rack', }, {'ip': None, 'host_name': u'apspal44-85', 'rack_info': '/default-rack', }, {'ip': None, 'host_name': u'apspal44-86', 'rack_info': '/default-rack', }, {'ip': None, 'host_name': u'apspal44-87', 'rack_info': '/default-rack', }, {'ip': None, 'host_name': u'apspal44-88', 'rack_info': '/default-rack', }, {'ip': None, 'host_name': u'apspal44-89', 'rack_info': '/default-rack', }, {'ip': None, 'host_name': u'r01hn01', 'rack_info': '/default-rack', }, {'ip': None, 'host_name': u'r01mgt', 'rack_info': '/default-rack', }, {'ip': None, 'host_name': u'r01wn01', 'rack_info': '/default-rack', }, {'ip': None, 'host_name': u'r01wn02', 'rack_info': '/default-rack', }, {'ip': None, 'host_name': u'r01wn03', 'rack_info': '/default-rack', }], }
    client = self.create_client()
    all_hosts = client.get_all_hosts()
    self.assertEqual(len(all_hosts), 12, 'There should be 12 hosts from the response')
    self.assertEqual(all_hosts.to_json_dict(), expected_hosts_dict)
