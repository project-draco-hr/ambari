{
  ClusterDAO clusterDAO=injector.getInstance(ClusterDAO.class);
  HostDAO hostDAO=injector.getInstance(HostDAO.class);
  for (  Map.Entry<String,Map<String,String>> clusterHosts : hostChangesFileMap.entrySet()) {
    String clusterName=clusterHosts.getKey();
    Map<String,String> hostMapping=clusterHosts.getValue();
    ClusterEntity clusterEntity=clusterDAO.findByName(clusterName);
    List<String> currentHostNames=new ArrayList<>();
    for (    Map.Entry<String,String> hostPair : hostMapping.entrySet()) {
      currentHostNames.add(hostPair.getKey());
    }
    if (clusterEntity != null) {
      Collection<HostEntity> hostEntities=clusterEntity.getHostEntities();
      for (      HostEntity hostEntity : hostEntities) {
        if (currentHostNames.contains(hostEntity.getHostName())) {
          hostEntity.setHostName(hostMapping.get(hostEntity.getHostName()));
          hostDAO.merge(hostEntity);
        }
      }
    }
  }
}
