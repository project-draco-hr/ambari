{
  AmbariManagementController ambariManagementController=injector.getInstance(AmbariManagementController.class);
  Clusters clusters=ambariManagementController.getClusters();
  if (clusters != null) {
    Map<String,Cluster> clusterMap=clusters.getClusters();
    if (clusterMap != null && !clusterMap.isEmpty()) {
      for (      final Cluster cluster : clusterMap.values()) {
        Config amsSite=cluster.getDesiredConfigByType(AMS_SITE);
        if (amsSite != null) {
          Map<String,String> newProperties=new HashMap<>();
          newProperties.put("timeline.metrics.service.default.result.limit",String.valueOf(15840));
          newProperties.put("timeline.metrics.cluster.aggregator.second.interval",String.valueOf(120));
          newProperties.put("timeline.metrics.cluster.aggregator.minute.interval",String.valueOf(300));
          newProperties.put("timeline.metrics.host.aggregator.minute.interval",String.valueOf(300));
          newProperties.put("timeline.metrics.cluster.aggregator.second.ttl",String.valueOf(2592000));
          newProperties.put("timeline.metrics.cluster.aggregator.minute.ttl",String.valueOf(7776000));
          newProperties.put("timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier",String.valueOf(2));
          newProperties.put("timeline.metrics.cluster.aggregator.second.disabled",String.valueOf(false));
          updateConfigurationPropertiesForCluster(cluster,AMS_SITE,newProperties,true,true);
        }
      }
    }
  }
}
