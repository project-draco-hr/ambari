{
  JsonObject rootJson=new JsonParser().parse(source).getAsJsonObject();
  rootJson.remove("type");
  rootJson.addProperty("type","WEB");
  rootJson.remove("default_port");
  rootJson.remove("uri");
  JsonObject uriJson=new JsonObject();
  uriJson.addProperty("http","{{hdfs-site/dfs.journalnode.http-address}}");
  uriJson.addProperty("https","{{hdfs-site/dfs.journalnode.https-address}}");
  uriJson.addProperty("kerberos_keytab","{{hdfs-site/dfs.web.authentication.kerberos.keytab}}");
  uriJson.addProperty("kerberos_principal","{{hdfs-site/dfs.web.authentication.kerberos.principal}}");
  uriJson.addProperty("https_property","{{hdfs-site/dfs.http.policy}}");
  uriJson.addProperty("https_property_value","HTTPS_ONLY");
  uriJson.addProperty("connection_timeout",5.0);
  rootJson.add("uri",uriJson);
  rootJson.getAsJsonObject("reporting").getAsJsonObject("ok").remove("text");
  rootJson.getAsJsonObject("reporting").getAsJsonObject("ok").addProperty("text","HTTP {0} response in {2:.3f}s");
  rootJson.getAsJsonObject("reporting").getAsJsonObject("warning").remove("text");
  rootJson.getAsJsonObject("reporting").getAsJsonObject("warning").addProperty("text","HTTP {0} response from {1} in {2:.3f}s ({3})");
  rootJson.getAsJsonObject("reporting").getAsJsonObject("warning").remove("value");
  rootJson.getAsJsonObject("reporting").getAsJsonObject("critical").remove("text");
  rootJson.getAsJsonObject("reporting").getAsJsonObject("critical").addProperty("text","Connection failed to {1} ({3})");
  rootJson.getAsJsonObject("reporting").getAsJsonObject("critical").remove("value");
  return rootJson.toString();
}
