{
  parseCommandLine();
  ClientConfig config=new DefaultClientConfig();
  Client client=Client.create(config);
  WebResource service=client.resource(getBaseURI());
  ClientResponse response=service.path("clusters/" + line.getOptionValue("name")).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).delete(ClientResponse.class);
  if (response.getStatus() != 204) {
    System.err.println("Cluster delete command failed. Reason [Code: <" + response.getStatus() + ">, Message: <"+ response.getHeaders().getFirst("ErrorMessage")+ ">]");
    System.exit(-1);
  }
  if (!line.hasOption("wait")) {
    System.out.println("Cluster: [" + line.getOptionValue("name") + "] deleted.\n");
    return;
  }
  for (; ; ) {
    System.out.println("Waiting for cluster [" + line.getOptionValue("name") + "] to be deleted.\n");
    response=service.path("clusters/" + line.getOptionValue("name") + "/state").accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).get(ClientResponse.class);
    if (response.getStatus() != 200 && response.getStatus() != 404) {
      System.err.println("Failed to get the cluster state. Reason [Code: <" + response.getStatus() + ">, Message: <"+ response.getHeaders().getFirst("ErrorMessage")+ ">]");
      System.exit(-1);
    }
    if (response.getStatus() == 404) {
      break;
    }
    Thread.sleep(60 * 60000);
  }
  System.out.println("Cluster: [" + line.getOptionValue("name") + "] deleted.\n");
}
