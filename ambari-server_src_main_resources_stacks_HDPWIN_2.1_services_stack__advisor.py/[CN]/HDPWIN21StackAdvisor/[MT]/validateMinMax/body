def validateMinMax(self, items, recommendedDefaults, configurations):

    def convertToNumber(number):
        try:
            return int(number)
        except ValueError:
            return float(number)
    for configName in configurations:
        validationItems = []
        if ((configName in recommendedDefaults) and ('property_attributes' in recommendedDefaults[configName])):
            for propertyName in recommendedDefaults[configName]['property_attributes']:
                if (propertyName in configurations[configName]['properties']):
                    if (('maximum' in recommendedDefaults[configName]['property_attributes'][propertyName]) and (propertyName in recommendedDefaults[configName]['properties'])):
                        userValue = convertToNumber(configurations[configName]['properties'][propertyName])
                        maxValue = convertToNumber(recommendedDefaults[configName]['property_attributes'][propertyName]['maximum'])
                        if (userValue > maxValue):
                            validationItems.extend([{'config-name': propertyName, 'item': self.getWarnItem('Value is greater than the recommended maximum of {0} '.format(maxValue)), }])
                    if (('minimum' in recommendedDefaults[configName]['property_attributes'][propertyName]) and (propertyName in recommendedDefaults[configName]['properties'])):
                        userValue = convertToNumber(configurations[configName]['properties'][propertyName])
                        minValue = convertToNumber(recommendedDefaults[configName]['property_attributes'][propertyName]['minimum'])
                        if (userValue < minValue):
                            validationItems.extend([{'config-name': propertyName, 'item': self.getWarnItem('Value is less than the recommended minimum of {0} '.format(minValue)), }])
        items.extend(self.toConfigurationValidationProblems(validationItems, configName))
    pass
