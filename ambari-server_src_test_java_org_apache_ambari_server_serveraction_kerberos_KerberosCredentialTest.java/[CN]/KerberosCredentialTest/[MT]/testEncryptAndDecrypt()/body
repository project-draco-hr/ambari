{
  byte[] key="This is my key".getBytes();
  KerberosCredential credential;
  String cipherText;
  KerberosCredential decryptedCredential;
  credential=new KerberosCredential("admin/admin@FOOBAR.COM","t0p_s3cr3t".toCharArray(),null);
  cipherText=credential.encrypt(key);
  Assert.assertNotNull(cipherText);
  decryptedCredential=KerberosCredential.decrypt(cipherText,key);
  Assert.assertNotNull(decryptedCredential);
  Assert.assertEquals(credential.getPrincipal(),decryptedCredential.getPrincipal());
  Assert.assertEquals(String.valueOf(credential.getPassword()),String.valueOf(decryptedCredential.getPassword()));
  Assert.assertEquals(credential.getKeytab(),decryptedCredential.getKeytab());
  try {
    decryptedCredential=KerberosCredential.decrypt(cipherText,"not the key".getBytes());
    Assert.fail("Should have thrown AmbariException");
  }
 catch (  AmbariException e) {
  }
  try {
    decryptedCredential=KerberosCredential.decrypt("I am not encrypted data",key);
    Assert.fail("Should have thrown AmbariException");
  }
 catch (  AmbariException e) {
  }
}
