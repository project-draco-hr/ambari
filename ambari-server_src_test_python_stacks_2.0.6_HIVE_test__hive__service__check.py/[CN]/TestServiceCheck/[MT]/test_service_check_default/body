@patch('sys.exit')
def test_service_check_default(self, sys_exit_mock, socket_mock):
    self.executeScript((self.COMMON_SERVICES_PACKAGE_DIR + '/scripts/service_check.py'), classname='HiveServiceCheck', command='service_check', config_file='default.json', hdp_stack_version=self.STACK_VERSION, target=RMFTestCase.TARGET_COMMON_SERVICES)
    self.assertResourceCalled('Execute', "! beeline -u 'jdbc:hive2://c6402.ambari.apache.org:10000/;transportMode=binary;auth=noSasl' -e '' 2>&1| awk '{print}'|grep -i -e 'Connection refused' -e 'Invalid URL'", path=['/bin/', '/usr/bin/', '/usr/lib/hive/bin/', '/usr/sbin/'], user='ambari-qa', timeout=30)
    self.assertResourceCalled('File', '/tmp/hcatSmoke.sh', content=StaticFile('hcatSmoke.sh'), mode=493)
    self.assertResourceCalled('Execute', 'env JAVA_HOME=/usr/jdk64/jdk1.7.0_45 /tmp/hcatSmoke.sh hcatsmoke prepare', logoutput=True, path=['/usr/sbin', '/usr/local/bin', '/bin', '/usr/bin', '/bin:/usr/lib/hive/bin:/usr/bin'], tries=3, user='ambari-qa', try_sleep=5)
    self.assertResourceCalled('ExecuteHadoop', 'fs -test -e /apps/hive/warehouse/hcatsmoke', security_enabled=False, keytab=UnknownConfigurationMock(), conf_dir='/etc/hadoop/conf', logoutput=True, kinit_path_local='/usr/bin/kinit', user='hdfs', bin_dir='/bin:/usr/lib/hive/bin:/usr/bin')
    self.assertResourceCalled('Execute', ' /tmp/hcatSmoke.sh hcatsmoke cleanup', logoutput=True, path=['/usr/sbin', '/usr/local/bin', '/bin', '/usr/bin', '/bin:/usr/lib/hive/bin:/usr/bin'], tries=3, user='ambari-qa', try_sleep=5)
    self.assertResourceCalled('File', '/tmp/templetonSmoke.sh', content=StaticFile('templetonSmoke.sh'), mode=493)
    self.assertResourceCalled('Execute', '/tmp/templetonSmoke.sh c6402.ambari.apache.org ambari-qa 50111 no_keytab false /usr/bin/kinit no_principal', logoutput=True, path=['/usr/sbin:/sbin:/usr/local/bin:/bin:/usr/bin'], tries=3, try_sleep=5)
    self.assertNoMoreResources()
