def backup_data():
    '\n  Backs up the knox data as part of the upgrade process.\n  :return:\n  '
    Logger.info('Backing up Knox data directory before upgrade...')
    directoryMappings = _get_directory_mappings()
    absolute_backup_dir = os.path.join(tempfile.gettempdir(), BACKUP_TEMP_DIR)
    if (not os.path.isdir(absolute_backup_dir)):
        os.makedirs(absolute_backup_dir)
    for directory in directoryMappings:
        if (not os.path.isdir(directory)):
            raise Fail('Unable to backup missing directory {0}'.format(directory))
        archive = os.path.join(absolute_backup_dir, directoryMappings[directory])
        Logger.info('Compressing {0} to {1}'.format(directory, archive))
        if os.path.exists(archive):
            os.remove(archive)
        tarball = None
        try:
            tarball = tarfile.open(archive, 'w')
            tarball.add(directory, arcname=os.path.basename(directory))
        finally:
            if tarball:
                tarball.close()
