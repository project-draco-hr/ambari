{
  List<AlertTargetEntity> entities=new ArrayList<AlertTargetEntity>();
  for (  Map<String,Object> requestMap : requestMaps) {
    AlertTargetEntity entity=new AlertTargetEntity();
    String name=(String)requestMap.get(ALERT_TARGET_NAME);
    String description=(String)requestMap.get(ALERT_TARGET_DESCRIPTION);
    String notificationType=(String)requestMap.get(ALERT_TARGET_NOTIFICATION_TYPE);
    Collection<String> alertStates=(Collection<String>)requestMap.get(ALERT_TARGET_STATES);
    String globalProperty=(String)requestMap.get(ALERT_TARGET_GLOBAL);
    if (StringUtils.isEmpty(name)) {
      throw new IllegalArgumentException("The name of the alert target is required.");
    }
    if (StringUtils.isEmpty(notificationType)) {
      throw new IllegalArgumentException("The type of the alert target is required.");
    }
    String properties=extractProperties(requestMap);
    if (StringUtils.isEmpty(properties)) {
      throw new IllegalArgumentException("Alert targets must be created with their connection properties");
    }
    boolean isGlobal=false;
    if (null != globalProperty) {
      isGlobal=Boolean.parseBoolean(globalProperty);
    }
    final Set<AlertState> alertStateSet;
    if (null != alertStates) {
      alertStateSet=new HashSet<AlertState>(alertStates.size());
      for (      String state : alertStates) {
        alertStateSet.add(AlertState.valueOf(state));
      }
    }
 else {
      alertStateSet=EnumSet.allOf(AlertState.class);
    }
    entity.setDescription(description);
    entity.setNotificationType(notificationType);
    entity.setProperties(properties);
    entity.setTargetName(name);
    entity.setAlertStates(alertStateSet);
    entity.setGlobal(isGlobal);
    entities.add(entity);
  }
  s_dao.createTargets(entities);
}
