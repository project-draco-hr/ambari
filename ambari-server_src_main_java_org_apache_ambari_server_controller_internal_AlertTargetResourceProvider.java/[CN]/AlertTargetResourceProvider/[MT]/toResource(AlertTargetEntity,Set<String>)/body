{
  Resource resource=new ResourceImpl(Resource.Type.AlertTarget);
  resource.setProperty(ALERT_TARGET_ID,entity.getTargetId());
  resource.setProperty(ALERT_TARGET_NAME,entity.getTargetName());
  resource.setProperty(ALERT_TARGET_DESCRIPTION,entity.getDescription());
  resource.setProperty(ALERT_TARGET_NOTIFICATION_TYPE,entity.getNotificationType());
  resource.setProperty(ALERT_TARGET_ENABLED,entity.isEnabled());
  if (requestedIds.contains(ALERT_TARGET_PROPERTIES)) {
    String properties=entity.getProperties();
    Map<String,String> map=s_gson.<Map<String,String>>fromJson(properties,Map.class);
    resource.setProperty(ALERT_TARGET_PROPERTIES,map);
  }
  setResourceProperty(resource,ALERT_TARGET_STATES,entity.getAlertStates(),requestedIds);
  setResourceProperty(resource,ALERT_TARGET_GLOBAL,entity.isGlobal(),requestedIds);
  if (BaseProvider.isPropertyRequested(ALERT_TARGET_GROUPS,requestedIds)) {
    Set<AlertGroupEntity> groupEntities=entity.getAlertGroups();
    List<AlertGroup> groups=new ArrayList<AlertGroup>(groupEntities.size());
    for (    AlertGroupEntity groupEntity : groupEntities) {
      AlertGroup group=new AlertGroup();
      group.setId(groupEntity.getGroupId());
      group.setName(groupEntity.getGroupName());
      group.setClusterName(groupEntity.getClusterId());
      group.setDefault(groupEntity.isDefault());
      groups.add(group);
    }
    resource.setProperty(ALERT_TARGET_GROUPS,groups);
  }
  return resource;
}
