{
  String clusterName=alert.getCluster();
  String serviceName=alert.getService();
  String componentName=alert.getComponent();
  String hostName=alert.getHostName();
  if (null == clusterName) {
    return true;
  }
  String ambariServiceName=Services.AMBARI.name();
  if (ambariServiceName.equals(serviceName)) {
    return true;
  }
  final Cluster cluster;
  try {
    cluster=m_clusters.get().getCluster(clusterName);
    if (null == cluster) {
      LOG.error("Unable to process alert {} for an invalid cluster named {}",alert.getName(),clusterName);
      return false;
    }
  }
 catch (  AmbariException ambariException) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Unable to process alert {} for an invalid cluster named {}",alert.getName(),clusterName,ambariException);
    }
 else {
      LOG.error("Unable to process alert {} for an invalid cluster named {}",alert.getName(),clusterName);
    }
    return false;
  }
  if (StringUtils.isNotBlank(hostName)) {
    if (!m_clusters.get().hostExists(hostName)) {
      LOG.error("Unable to process alert {} for an invalid host named {}",alert.getName(),hostName);
      return false;
    }
    if (!cluster.getServices().containsKey(serviceName)) {
      LOG.error("Unable to process alert {} for an invalid service named {}",alert.getName(),serviceName);
      return false;
    }
    if (null != componentName && !cluster.getHosts(serviceName,componentName).contains(hostName)) {
      LOG.error("Unable to process alert {} for an invalid service {} and component {} on host {}",alert.getName(),serviceName,componentName,hostName);
      return false;
    }
  }
  return true;
}
