def setup_logsearch():
    import params
    Directory([params.logsearch_log_dir, params.logsearch_pid_dir, params.logsearch_dir, params.logsearch_server_conf], mode=493, cd_access='a', owner=params.logsearch_user, group=params.logsearch_group, create_parents=True)
    File(params.logsearch_log, mode=420, owner=params.logsearch_user, group=params.logsearch_group, content='')
    File(format('{logsearch_server_conf}/logsearch.properties'), content=Template('logsearch.properties.j2'), owner=params.logsearch_user)
    File(format('{logsearch_server_conf}/log4j.xml'), content=InlineTemplate(params.logsearch_app_log4j_content), owner=params.logsearch_user)
    File(format('{logsearch_server_conf}/logsearch-env.sh'), content=InlineTemplate(params.logsearch_env_content), mode=493, owner=params.logsearch_user)
    File(format('{logsearch_server_conf}/solr_configsets/hadoop_logs/conf/solrconfig.xml'), content=InlineTemplate(params.logsearch_service_logs_solrconfig_content), owner=params.logsearch_user)
    File(format('{logsearch_server_conf}/solr_configsets/audit_logs/conf/solrconfig.xml'), content=InlineTemplate(params.logsearch_audit_logs_solrconfig_content), owner=params.logsearch_user)
    random_num = random.random()
    upload_configuration_dir_to_zk('hadoop_logs', random_num)
    upload_configuration_dir_to_zk('history', random_num)
    upload_configuration_dir_to_zk('audit_logs', random_num)
    Execute(('chmod', '-R', 'ugo+r', format('{logsearch_server_conf}/solr_configsets')), sudo=True)
