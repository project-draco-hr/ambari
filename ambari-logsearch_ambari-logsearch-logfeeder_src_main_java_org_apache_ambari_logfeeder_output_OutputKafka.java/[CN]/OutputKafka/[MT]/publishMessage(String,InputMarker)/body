{
  if (isAsync && isKafkaBrokerUp) {
    producer.send(new ProducerRecord<String,String>(topic,block),new KafkaCallBack(this,block,inputMarker,++messageCount));
    return true;
  }
 else {
    try {
      RecordMetadata metadata=producer.send(new ProducerRecord<String,String>(topic,block)).get();
      if (metadata != null) {
        statMetric.value++;
        writeBytesMetric.value+=block.length();
      }
      if (!isKafkaBrokerUp) {
        LOG.info("Started writing to kafka. " + getShortDescription());
        isKafkaBrokerUp=true;
      }
      return true;
    }
 catch (    InterruptedException e) {
      isKafkaBrokerUp=false;
      String logKeyMessage=this.getClass().getSimpleName() + "_KAFKA_INTERRUPT";
      LogFeederUtil.logErrorMessageByInterval(logKeyMessage,"InterruptedException-Error sending message to Kafka",e,LOG,Level.ERROR);
    }
catch (    ExecutionException e) {
      isKafkaBrokerUp=false;
      String logKeyMessage=this.getClass().getSimpleName() + "_KAFKA_EXECUTION";
      LogFeederUtil.logErrorMessageByInterval(logKeyMessage,"ExecutionException-Error sending message to Kafka",e,LOG,Level.ERROR);
    }
catch (    Throwable t) {
      isKafkaBrokerUp=false;
      String logKeyMessage=this.getClass().getSimpleName() + "_KAFKA_WRITE_ERROR";
      LogFeederUtil.logErrorMessageByInterval(logKeyMessage,"GenericException-Error sending message to Kafka",t,LOG,Level.ERROR);
    }
  }
  return false;
}
