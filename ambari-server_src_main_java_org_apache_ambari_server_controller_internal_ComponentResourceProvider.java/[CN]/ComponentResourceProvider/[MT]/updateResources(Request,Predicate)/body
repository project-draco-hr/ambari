{
  final Set<ServiceComponentRequest> requests=new HashSet<ServiceComponentRequest>();
  for (  Map<String,Object> propertyMap : getPropertyMaps(request.getProperties().iterator().next(),predicate)) {
    ServiceComponentRequest compRequest=getRequest(propertyMap);
    Map<String,String> configMap=new HashMap<String,String>();
    for (    Map.Entry<String,Object> entry : propertyMap.entrySet()) {
      String propertyCategory=PropertyHelper.getPropertyCategory(entry.getKey());
      if (propertyCategory != null && propertyCategory.equals("config")) {
        configMap.put(PropertyHelper.getPropertyName(entry.getKey()),(String)entry.getValue());
      }
    }
    if (0 != configMap.size())     compRequest.setConfigVersions(configMap);
    requests.add(compRequest);
  }
  final boolean runSmokeTest="true".equals(getQueryParameterValue(QUERY_PARAMETERS_RUN_SMOKE_TEST_ID,predicate)) ? true : false;
  RequestStatusResponse response=modifyResources(new Command<RequestStatusResponse>(){
    @Override public RequestStatusResponse invoke() throws AmbariException {
      return getManagementController().updateComponents(requests,request.getRequestInfoProperties(),runSmokeTest);
    }
  }
);
  notifyUpdate(Resource.Type.Component,request,predicate);
  return getRequestStatus(response);
}
