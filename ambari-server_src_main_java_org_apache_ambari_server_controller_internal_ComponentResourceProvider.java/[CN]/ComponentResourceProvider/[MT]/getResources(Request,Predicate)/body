{
  final Set<ServiceComponentRequest> requests=new HashSet<ServiceComponentRequest>();
  for (  Map<String,Object> propertyMap : getPropertyMaps(predicate)) {
    requests.add(getRequest(propertyMap));
  }
  Set<ServiceComponentResponse> responses=getResources(new Command<Set<ServiceComponentResponse>>(){
    @Override public Set<ServiceComponentResponse> invoke() throws AmbariException {
      return getComponents(requests);
    }
  }
);
  Set<String> requestedIds=getRequestPropertyIds(request,predicate);
  Set<Resource> resources=new HashSet<Resource>();
  for (  ServiceComponentResponse response : responses) {
    Resource resource=new ResourceImpl(Resource.Type.Component);
    setResourceProperty(resource,COMPONENT_CLUSTER_NAME_PROPERTY_ID,response.getClusterName(),requestedIds);
    setResourceProperty(resource,COMPONENT_SERVICE_NAME_PROPERTY_ID,response.getServiceName(),requestedIds);
    setResourceProperty(resource,COMPONENT_COMPONENT_NAME_PROPERTY_ID,response.getComponentName(),requestedIds);
    setResourceProperty(resource,COMPONENT_STATE_PROPERTY_ID,response.getDesiredState(),requestedIds);
    setResourceProperty(resource,COMPONENT_CATEGORY_PROPERTY_ID,response.getCategory(),requestedIds);
    setResourceProperty(resource,COMPONENT_TOTAL_COUNT_PROPERTY_ID,response.getTotalCount(),requestedIds);
    setResourceProperty(resource,COMPONENT_STARTED_COUNT_PROPERTY_ID,response.getStartedCount(),requestedIds);
    setResourceProperty(resource,COMPONENT_INSTALLED_COUNT_PROPERTY_ID,response.getInstalledCount(),requestedIds);
    resources.add(resource);
  }
  return resources;
}
