def update_stack_metainfo(stack_name, stack_versions):
    properties = get_ambari_properties()
    if (properties == (-1)):
        print_error_msg('Error getting ambari properties')
        return (-1)
    stack_location = get_stack_location(properties)
    print_info_msg(('stack location: ' + stack_location))
    stack_root = os.path.join(stack_location, stack_name)
    print_info_msg(('stack root: ' + stack_root))
    if (not os.path.exists(stack_root)):
        print_error_msg(('stack directory does not exists: ' + stack_root))
        return (-1)
    for stack in stack_versions:
        if (stack not in os.listdir(stack_root)):
            print_error_msg((('The requested stack version: ' + stack) + ' is not available in the HDP stack'))
            return (-1)
    for directory in os.listdir(stack_root):
        print_info_msg(('directory found: ' + directory))
        metainfo_file = os.path.join(stack_root, directory, 'metainfo.xml')
        print_info_msg(('looking for metainfo file: ' + metainfo_file))
        if (not os.path.exists(metainfo_file)):
            print_error_msg(('Could not find metainfo file in the path ' + metainfo_file))
            continue
        if (directory in stack_versions):
            print_info_msg(('updating stack to active for: ' + directory))
            replace(metainfo_file, '<active>false</active>', '<active>true</active>')
        else:
            print_info_msg(('updating stack to inactive for: ' + directory))
            replace(metainfo_file, '<active>true</active>', '<active>false</active>')
    return 0
