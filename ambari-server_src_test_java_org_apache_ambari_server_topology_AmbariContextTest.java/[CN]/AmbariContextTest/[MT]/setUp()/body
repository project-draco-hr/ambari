{
  Class clazz=AmbariContext.class;
  Field f=clazz.getDeclaredField("controller");
  f.setAccessible(true);
  f.set(null,controller);
  f=clazz.getDeclaredField("hostResourceProvider");
  f.setAccessible(true);
  f.set(null,hostResourceProvider);
  f=clazz.getDeclaredField("serviceResourceProvider");
  f.setAccessible(true);
  f.set(null,serviceResourceProvider);
  f=clazz.getDeclaredField("componentResourceProvider");
  f.setAccessible(true);
  f.set(null,componentResourceProvider);
  f=clazz.getDeclaredField("hostComponentResourceProvider");
  f.setAccessible(true);
  f.set(null,hostComponentResourceProvider);
  blueprintServices.add("service1");
  blueprintServices.add("service2");
  expect(topology.getClusterName()).andReturn(CLUSTER_NAME).anyTimes();
  expect(topology.getBlueprint()).andReturn(blueprint).anyTimes();
  expect(blueprint.getStack()).andReturn(stack).anyTimes();
  expect(blueprint.getServices()).andReturn(blueprintServices).anyTimes();
  expect(blueprint.getComponents("service1")).andReturn(Arrays.asList("s1Component1","s1Component2"));
  expect(blueprint.getComponents("service2")).andReturn(Collections.singleton("s2Component1"));
  expect(stack.getName()).andReturn(STACK_NAME).anyTimes();
  expect(stack.getVersion()).andReturn(STACK_VERSION).anyTimes();
}
