{
  for (  Map<String,Object> requestMap : requestMaps) {
    String stringId=(String)requestMap.get(ALERT_GROUP_ID);
    if (StringUtils.isEmpty(stringId)) {
      throw new IllegalArgumentException("The ID of the alert group is required when updating an existing group");
    }
    long id=Long.parseLong(stringId);
    AlertGroupEntity entity=s_dao.findGroupById(id);
    if (null == entity) {
      String message=MessageFormat.format("The alert group with ID {0} could not be found",id);
      throw new AmbariException(message);
    }
    String name=(String)requestMap.get(ALERT_GROUP_NAME);
    Collection<Long> targetIds=(Collection<Long>)requestMap.get(ALERT_GROUP_TARGETS);
    Collection<Long> definitionIds=(Collection<Long>)requestMap.get(ALERT_GROUP_DEFINITIONS);
    Set<AlertTargetEntity> targets=new HashSet<AlertTargetEntity>();
    if (null != targetIds && targetIds.size() > 0) {
      List<Long> ids=new ArrayList<Long>(targetIds.size());
      ids.addAll(targetIds);
      targets.addAll(s_dao.findTargetsById(ids));
      entity.setAlertTargets(targets);
    }
 else     if (targetIds.size() == 0) {
      entity.setAlertTargets(targets);
    }
    if (!entity.isDefault()) {
      if (!StringUtils.isBlank(name)) {
        entity.setGroupName(name);
      }
      Set<AlertDefinitionEntity> definitions=new HashSet<AlertDefinitionEntity>();
      if (null != definitionIds && definitionIds.size() > 0) {
        List<Long> ids=new ArrayList<Long>(definitionIds.size());
        ids.addAll(definitionIds);
        definitions.addAll(s_definitionDao.findByIds(ids));
        entity.setAlertDefinitions(definitions);
      }
 else {
        entity.setAlertDefinitions(definitions);
      }
    }
    s_dao.merge(entity);
  }
}
