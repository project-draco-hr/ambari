{
  Set<Resource> resources=getResources(new RequestImpl(null,null,null,null),predicate);
  Map<Long,AlertGroupEntity> entities=new HashMap<Long,AlertGroupEntity>();
  for (  final Resource resource : resources) {
    Long id=(Long)resource.getPropertyValue(ALERT_GROUP_ID);
    if (!entities.containsKey(id)) {
      AlertGroupEntity entity=s_dao.findGroupById(id);
      try {
        AlertResourceProviderUtils.verifyManageAuthorization(entity,getClusterResourceId(entity.getClusterId()));
        entities.put(id,entity);
      }
 catch (      AmbariException e) {
        LOG.warn("The default alert group for {} cannot be removed",entity.getServiceName(),e);
      }
    }
  }
  for (  final AlertGroupEntity entity : entities.values()) {
    LOG.info("Deleting alert group {}",entity.getGroupId());
    if (entity.isDefault()) {
      LOG.warn("The default alert group for {} cannot be removed",entity.getServiceName());
      continue;
    }
    modifyResources(new Command<Void>(){
      @Override public Void invoke() throws AmbariException {
        s_dao.remove(entity);
        return null;
      }
    }
);
  }
  notifyDelete(Resource.Type.AlertGroup,predicate);
  return getRequestStatus(null);
}
