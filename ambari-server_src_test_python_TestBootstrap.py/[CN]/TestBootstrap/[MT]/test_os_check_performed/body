@patch.object(BootStrap, 'runSetupAgent')
@patch.object(BootStrap, 'copyNeededFiles')
@patch.object(BootStrap, 'checkSudoPackage')
@patch.object(BootStrap, 'runOsCheckScript')
@patch.object(BootStrap, 'copyOsCheckScript')
def test_os_check_performed(self, copyOsCheckScript_method, runOsCheckScript_method, checkSudoPackage_method, copyNeededFiles_method, runSetupAgent_method):
    BootStrap.createDoneFiles = (lambda self: None)
    getRunSetupWithoutPasswordCommand = MagicMock()
    getRunSetupWithoutPasswordCommand.return_value = ''
    BootStrap.getRunSetupWithoutPasswordCommand = getRunSetupWithoutPasswordCommand
    getMoveRepoFileWithoutPasswordCommand = MagicMock()
    getMoveRepoFileWithoutPasswordCommand.return_value = ''
    BootStrap.getMoveRepoFileWithoutPasswordCommand = getMoveRepoFileWithoutPasswordCommand
    copyOsCheckScript_method.return_value = 0
    runOsCheckScript_method.return_value = 0
    checkSudoPackage_method.return_value = 0
    copyNeededFiles_method.return_value = 0
    runSetupAgent_method.return_value = 0
    BootStrap.copyOsCheckScript = copyOsCheckScript_method
    BootStrap.runOsCheckScript = runOsCheckScript_method
    BootStrap.checkSudoPackage = checkSudoPackage_method
    BootStrap.copyNeededFiles = copyNeededFiles_method
    BootStrap.runSetupAgent = runSetupAgent_method
    os.environ[AMBARI_PASSPHRASE_VAR_NAME] = ''
    bootstrap = BootStrap(['hostname'], 'user', 'sshKeyFile', 'scriptDir', 'bootdir', 'setupAgentFile', 'ambariServer', 'centos6')
    ret = bootstrap.run()
    self.assertTrue(copyOsCheckScript_method.called)
    self.assertTrue(runOsCheckScript_method.called)
    self.assertTrue((ret == 0))
