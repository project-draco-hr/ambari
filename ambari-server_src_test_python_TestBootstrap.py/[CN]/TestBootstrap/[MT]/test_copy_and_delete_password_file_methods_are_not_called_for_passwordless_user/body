def test_copy_and_delete_password_file_methods_are_not_called_for_passwordless_user(self):
    Popen.communicate = (lambda self: ('', ''))
    SCP.writeLogToFile = (lambda self, logFilePath: None)
    SSH.writeLogToFile = (lambda self, logFilePath: None)
    SSH.writeDoneToFile = (lambda self, doneFilePath, returncode: None)
    BootStrap.createDoneFiles = (lambda self: None)

    def side_effect(self):
        self.copyPasswordFile_called = True
        self.hostlist_to_remove_password_file = ['hostname']
        return 0
    BootStrap.copyPasswordFile = side_effect
    deletePasswordFile = MagicMock()
    deletePasswordFile.return_value = 0
    BootStrap.deletePasswordFile = deletePasswordFile
    changePasswordFileModeOnHost = MagicMock()
    changePasswordFileModeOnHost.return_value = 0
    BootStrap.changePasswordFileModeOnHost = changePasswordFileModeOnHost
    os.environ[AMBARI_PASSPHRASE_VAR_NAME] = ''
    bootstrap = BootStrap(['hostname'], 'user', 'sshKeyFile', 'scriptDir', 'bootdir', 'setupAgentFile', 'ambariServer')
    bootstrap.copyPasswordFile_called = False
    ret = bootstrap.run()
    self.assertFalse(bootstrap.copyPasswordFile_called)
    self.assertFalse(deletePasswordFile.called)
    self.assertFalse(changePasswordFileModeOnHost.called)
