@patch.object(SCP, 'writeLogToFile')
@patch.object(SSH, 'writeLogToFile')
@patch.object(Popen, 'communicate')
@patch.object(BootStrap, 'createDoneFiles')
@patch.object(BootStrap, 'deletePasswordFile')
@patch.object(BootStrap, 'changePasswordFileModeOnHost')
def test_copy_and_delete_password_file_methods_are_called_for_user_with_password(self, changePasswordFileModeOnHost_method, deletePasswordFile_method, createDoneFiles_method, communicate_method, SSH_writeLogToFile_method, SCP_writeLogToFile_method):
    SCP_writeLogToFile_method.return_value = None
    SSH_writeLogToFile_method.return_value = None
    communicate_method.return_value = ('', '')
    createDoneFiles_method.return_value = None
    deletePasswordFile_method.return_value = 0
    changePasswordFileModeOnHost_method.return_value = 0
    os.environ[AMBARI_PASSPHRASE_VAR_NAME] = ''
    bootstrap = BootStrap(['hostname'], 'user', 'sshKeyFile', 'scriptDir', 'bootdir', 'setupAgentFile', 'ambariServer', 'centos6', None, '8440', 'passwordFile')

    def side_effect():
        bootstrap.copyPasswordFile_called = True
        bootstrap.hostlist_to_remove_password_file = ['hostname']
        return 0
    bootstrap.copyPasswordFile = side_effect
    ret = bootstrap.run()
    self.assertTrue(bootstrap.copyPasswordFile_called)
    self.assertTrue(deletePasswordFile_method.called)
    self.assertTrue(changePasswordFileModeOnHost_method.called)
