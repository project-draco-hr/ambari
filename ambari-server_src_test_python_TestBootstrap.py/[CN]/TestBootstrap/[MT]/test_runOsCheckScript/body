@patch.object(Bootstrap, 'getOsCheckScriptRemoteLocation')
@patch.object(SSH, '__init__')
@patch.object(SSH, 'run')
@patch.object(HostLog, 'write')
def test_runOsCheckScript(self, write_mock, run_mock, init_mock, getOsCheckScriptRemoteLocation_mock):
    shared_state = SharedState('root', 'sshkey_file', 'scriptDir', 'bootdir', 'setupAgentFile', 'ambariServer', 'centos6', None, '8440')
    bootstrap_obj = Bootstrap('hostname', shared_state)
    getOsCheckScriptRemoteLocation_mock.return_value = 'OsCheckScriptRemoteLocation'
    expected = 42
    init_mock.return_value = None
    run_mock.return_value = expected
    res = bootstrap_obj.runOsCheckScript()
    self.assertEquals(res, expected)
    command = str(init_mock.call_args[0][3])
    self.assertEqual(command, 'chmod a+x OsCheckScriptRemoteLocation && env PYTHONPATH=$PYTHONPATH:/tmp OsCheckScriptRemoteLocation centos6')
