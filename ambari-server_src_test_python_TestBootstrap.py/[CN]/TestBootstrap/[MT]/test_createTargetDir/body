@patch.object(SSH, '__init__')
@patch.object(SSH, 'run')
@patch.object(HostLog, 'write')
def test_createTargetDir(self, write_mock, run_mock, init_mock):
    shared_state = SharedState('root', '123', 'sshkey_file', 'scriptDir', 'bootdir', 'setupAgentFile', 'ambariServer', 'centos6', None, '8440', 'root')
    bootstrap_obj = Bootstrap('hostname', shared_state)
    expected = 42
    init_mock.return_value = None
    run_mock.return_value = expected
    res = bootstrap_obj.createTargetDir()
    self.assertEquals(res, expected)
    command = str(init_mock.call_args[0][4])
    self.assertEqual(command, 'sudo mkdir -p /var/lib/ambari-agent/tmp ; sudo chown -R root /var/lib/ambari-agent/tmp ; sudo chmod 755 /var/lib/ambari-agent ; sudo chmod 755 /var/lib/ambari-agent/data ; sudo chmod 1777 /var/lib/ambari-agent/tmp')
