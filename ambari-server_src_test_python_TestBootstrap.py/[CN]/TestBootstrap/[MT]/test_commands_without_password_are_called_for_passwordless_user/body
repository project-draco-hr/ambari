@patch.object(SCP, 'writeLogToFile')
@patch.object(SSH, 'writeLogToFile')
@patch.object(SSH, 'writeDoneToFile')
@patch.object(Popen, 'communicate')
@patch.object(BootStrap, 'createDoneFiles')
@patch.object(BootStrap, 'getRunSetupWithoutPasswordCommand')
@patch.object(BootStrap, 'getMoveRepoFileWithoutPasswordCommand')
def test_commands_without_password_are_called_for_passwordless_user(self, getMoveRepoFileWithoutPasswordCommand_method, getRunSetupWithoutPasswordCommand_method, createDoneFiles_method, communicate_method, SSH_writeDoneToFile_method, SSH_writeLogToFile_method, SCP_writeLogToFile_method):
    SCP_writeLogToFile_method.return_value = None
    SSH_writeLogToFile_method.return_value = None
    SSH_writeDoneToFile_method.return_value = None
    communicate_method.return_value = ('', '')
    createDoneFiles_method.return_value = None
    getRunSetupWithoutPasswordCommand_method.return_value = ''
    getMoveRepoFileWithoutPasswordCommand_method.return_value = ''
    os.environ[AMBARI_PASSPHRASE_VAR_NAME] = ''
    bootstrap = BootStrap(['hostname'], 'user', 'sshKeyFile', 'scriptDir', 'bootdir', 'setupAgentFile', 'ambariServer', 'centos6', None)
    ret = bootstrap.run()
    self.assertTrue(getRunSetupWithoutPasswordCommand_method.called)
    self.assertTrue(getMoveRepoFileWithoutPasswordCommand_method.called)
