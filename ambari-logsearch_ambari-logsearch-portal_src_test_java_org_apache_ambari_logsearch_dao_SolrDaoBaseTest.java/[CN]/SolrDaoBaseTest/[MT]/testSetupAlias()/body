{
  SolrClient mockSolrClient=EasyMock.strictMock(SolrClient.class);
  CloudSolrClient mockSolrClouldClient=EasyMock.strictMock(CloudSolrClient.class);
  NamedList<Object> response=new NamedList<Object>();
  NamedList<Object> header=new NamedList<Object>();
  header.add("status",0);
  response.add("responseHeader",header);
  response.add("collections",Arrays.asList("collection1","collection2"));
  EasyMock.expect(mockSolrClient.request(EasyMock.anyObject(CollectionAdminRequest.List.class),EasyMock.anyString())).andReturn(response);
  EasyMock.expect(mockSolrClouldClient.request(EasyMock.anyObject(CollectionAdminRequest.CreateAlias.class),EasyMock.anyString())).andReturn(response);
  mockSolrClouldClient.setDefaultCollection("alias_name");
  EasyMock.expectLastCall();
  EasyMock.replay(mockSolrClient,mockSolrClouldClient);
  dao.isZkConnectString=true;
  dao.solrClient=mockSolrClient;
  dao.solrClouldClient=mockSolrClouldClient;
  dao.collectionName="test_collection";
  dao.setupAlias("alias_name",Arrays.asList("collection1","collection2"));
  Thread.sleep(1000);
  EasyMock.verify(mockSolrClient,mockSolrClouldClient);
}
