{
  try {
    db.createActionDefinition("a1",ActionType.SYSTEM,"a,b,,c","desc",TargetHostType.ANY,"HDFS","DATANODE",Short.parseShort("70"));
    Assert.fail("createActionDefinition must throw exception.");
  }
 catch (  AmbariException ex) {
    Assert.assertTrue(ex.getMessage().contains("Empty parameter cannot be specified as an input parameter"));
  }
  db.createActionDefinition("a1",ActionType.SYSTEM,"fileName","desc",TargetHostType.ANY,"HDFS","DATANODE",Short.parseShort("70"));
  ActionDefinition ad=db.getActionDefinition("a1");
  assertContent(ad,"a1",ActionType.SYSTEM,"fileName","desc",TargetHostType.ANY,"HDFS","DATANODE",Short.parseShort("70"));
  ad=db.getActionDefinition("a2");
  Assert.assertNull(ad);
  try {
    db.createActionDefinition("a1",ActionType.SYSTEM,"fileName","desc",TargetHostType.ANY,"HDFS","DATANODE",Short.parseShort("70"));
    Assert.fail("updateActionDefinition must throw exception.");
  }
 catch (  AmbariException ex) {
    Assert.assertTrue(ex.getMessage().contains("Action definition a1 already exists"));
  }
  db.createActionDefinition("a2",ActionType.SYSTEM,"dirName","desc2",TargetHostType.ANY,"HDFS","DATANODE",Short.parseShort("70"));
  ad=db.getActionDefinition("a2");
  assertContent(ad,"a2",ActionType.SYSTEM,"dirName","desc2",TargetHostType.ANY,"HDFS","DATANODE",Short.parseShort("70"));
  db.updateActionDefinition("a2",ActionType.USER,"desc3",TargetHostType.ALL,Short.parseShort("100"));
  ad=db.getActionDefinition("a2");
  assertContent(ad,"a2",ActionType.USER,"dirName","desc3",TargetHostType.ALL,"HDFS","DATANODE",Short.parseShort("100"));
  List<ActionDefinition> ads=db.getActionDefinitions();
  Assert.assertEquals(2,ads.size());
  db.deleteActionDefinition("a1");
  ads=db.getActionDefinitions();
  Assert.assertEquals(1,ads.size());
  db.deleteActionDefinition("a1");
  try {
    db.updateActionDefinition("a1",ActionType.USER,"desc3",TargetHostType.ALL,Short.parseShort("100"));
    Assert.fail("updateActionDefinition must throw exception.");
  }
 catch (  AmbariException ex) {
    Assert.assertTrue(ex.getMessage().contains("Action definition a1 does not exist"));
  }
}
