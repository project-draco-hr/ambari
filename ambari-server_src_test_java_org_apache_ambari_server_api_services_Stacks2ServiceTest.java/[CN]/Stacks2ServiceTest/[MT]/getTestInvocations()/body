{
  List<ServiceTestInvocation> listInvocations=new ArrayList<ServiceTestInvocation>();
  Stacks2Service service=new TestStacksService("stackName",null);
  Method m=service.getClass().getMethod("getStack",HttpHeaders.class,UriInfo.class,String.class);
  Object[] args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService(null,null);
  m=service.getClass().getMethod("getStacks",HttpHeaders.class,UriInfo.class);
  args=new Object[]{getHttpHeaders(),getUriInfo()};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getStackVersion",HttpHeaders.class,UriInfo.class,String.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName","stackVersion"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName",null);
  m=service.getClass().getMethod("getStackVersions",HttpHeaders.class,UriInfo.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getRepository",HttpHeaders.class,UriInfo.class,String.class,String.class,String.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName","stackVersion","os","repo-id"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getRepositories",HttpHeaders.class,UriInfo.class,String.class,String.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName","stackVersion","os"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("updateRepository",String.class,HttpHeaders.class,UriInfo.class,String.class,String.class,String.class,String.class);
  args=new Object[]{"body",getHttpHeaders(),getUriInfo(),"stackName","stackVersion","os","repo-id"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.PUT,service,m,args,"body"));
  service=new TestStacksService("stackName",null);
  m=service.getClass().getMethod("getStackService",HttpHeaders.class,UriInfo.class,String.class,String.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName","stackVersion","service-name"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName",null);
  m=service.getClass().getMethod("getStackServices",HttpHeaders.class,UriInfo.class,String.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName","stackVersion"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getStackConfiguration",HttpHeaders.class,UriInfo.class,String.class,String.class,String.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName","stackVersion","service-name","property-name"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName",null);
  m=service.getClass().getMethod("getStackConfigurations",HttpHeaders.class,UriInfo.class,String.class,String.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName","stackVersion","service-name"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getServiceComponent",HttpHeaders.class,UriInfo.class,String.class,String.class,String.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName","stackVersion","service-name","component-name"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getServiceComponents",HttpHeaders.class,UriInfo.class,String.class,String.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName","stackVersion","service-name"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getOperatingSystem",HttpHeaders.class,UriInfo.class,String.class,String.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName","stackVersion","os-type"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  service=new TestStacksService("stackName","stackVersion");
  m=service.getClass().getMethod("getOperatingSystems",HttpHeaders.class,UriInfo.class,String.class,String.class);
  args=new Object[]{getHttpHeaders(),getUriInfo(),"stackName","stackVersion"};
  listInvocations.add(new ServiceTestInvocation(Request.Type.GET,service,m,args,null));
  return listInvocations;
}
