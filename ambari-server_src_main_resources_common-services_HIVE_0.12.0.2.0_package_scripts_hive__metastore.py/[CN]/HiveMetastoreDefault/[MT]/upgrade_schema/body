def upgrade_schema(self, env):
    '\n    Executes the schema upgrade binary.  This is its own function because it could\n    be called as a standalone task from the upgrade pack, but is safe to run it for each\n    metastore instance.\n    '
    Logger.info('Upgrading Hive Metastore')
    import params
    env.set_params(params)
    if params.security_enabled:
        kinit_command = format('{kinit_path_local} -kt {smoke_user_keytab} {smokeuser_principal}; ')
        Execute(kinit_command, user=params.smokeuser)
    binary = format('/usr/hdp/{version}/hive/bin/schematool')
    schematool_hive_server_conf_dir = params.hive_server_conf_dir
    if (params.current_version is not None):
        current_version = format_hdp_stack_version(params.current_version)
        if (compare_versions(current_version, '2.3') < 0):
            schematool_hive_server_conf_dir = LEGACY_HIVE_SERVER_CONF
    env_dict = {'HIVE_CONF_DIR': schematool_hive_server_conf_dir, }
    command = format('{binary} -dbType {hive_metastore_db_type} -upgradeSchema')
    Execute(command, user=params.hive_user, tries=1, environment=env_dict, logoutput=True)
