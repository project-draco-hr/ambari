def setup_ranger_hdfs(upgrade_type=None):
    import params
    if params.has_ranger_admin:
        if params.xml_configurations_supported:
            from resource_management.libraries.functions.setup_ranger_plugin_xml import setup_ranger_plugin
        else:
            from resource_management.libraries.functions.setup_ranger_plugin import setup_ranger_plugin
        stack_version = None
        if (upgrade_type is not None):
            stack_version = params.version
        if params.retryAble:
            Logger.info('HDFS: Setup ranger: command retry enables thus retrying if ranger admin is down !')
        else:
            Logger.info('HDFS: Setup ranger: command retry not enabled thus skipping if ranger admin is down !')
        setup_ranger_plugin('hadoop-client', 'hdfs', params.downloaded_custom_connector, params.driver_curl_source, params.driver_curl_target, params.java_home, params.repo_name, params.hdfs_ranger_plugin_repo, params.ranger_env, params.ranger_plugin_properties, params.policy_user, params.policymgr_mgr_url, params.enable_ranger_hdfs, conf_dict=params.hadoop_conf_dir, component_user=params.hdfs_user, component_group=params.user_group, cache_service_list=['hdfs'], plugin_audit_properties=params.config['configurations']['ranger-hdfs-audit'], plugin_audit_attributes=params.config['configuration_attributes']['ranger-hdfs-audit'], plugin_security_properties=params.config['configurations']['ranger-hdfs-security'], plugin_security_attributes=params.config['configuration_attributes']['ranger-hdfs-security'], plugin_policymgr_ssl_properties=params.config['configurations']['ranger-hdfs-policymgr-ssl'], plugin_policymgr_ssl_attributes=params.config['configuration_attributes']['ranger-hdfs-policymgr-ssl'], component_list=['hadoop-client'], audit_db_is_enabled=params.xa_audit_db_is_enabled, credential_file=params.credential_file, xa_audit_db_password=params.xa_audit_db_password, ssl_truststore_password=params.ssl_truststore_password, ssl_keystore_password=params.ssl_keystore_password, stack_version_override=stack_version, skip_if_rangeradmin_down=(not params.retryAble))
        if (stack_version and (params.upgrade_direction == Direction.UPGRADE)):
            if check_stack_feature(StackFeature.REMOVE_RANGER_HDFS_PLUGIN_ENV, stack_version):
                source_file = os.path.join(params.hadoop_conf_dir, 'set-hdfs-plugin-env.sh')
                target_file = (source_file + '.bak')
                Execute(('mv', source_file, target_file), sudo=True, only_if=format('test -f {source_file}'))
    else:
        Logger.info('Ranger admin not installed')
