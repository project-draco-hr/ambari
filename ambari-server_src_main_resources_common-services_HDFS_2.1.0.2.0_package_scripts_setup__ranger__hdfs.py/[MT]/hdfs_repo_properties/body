def hdfs_repo_properties():
    import params
    config_dict = dict()
    config_dict['username'] = params.repo_config_username
    config_dict['password'] = params.repo_config_password
    config_dict['hadoop.security.authentication'] = params.hadoop_security_authentication
    config_dict['hadoop.security.authorization'] = params.hadoop_security_authorization
    config_dict['fs.default.name'] = params.fs_default_name
    config_dict['hadoop.security.auth_to_local'] = params.hadoop_security_auth_to_local
    config_dict['hadoop.rpc.protection'] = params.hadoop_rpc_protection
    config_dict['commonNameForCertificate'] = params.common_name_for_certificate
    if params.security_enabled:
        config_dict['dfs.datanode.kerberos.principal'] = params.dn_principal_name
        config_dict['dfs.namenode.kerberos.principal'] = params.nn_principal_name
        config_dict['dfs.secondary.namenode.kerberos.principal'] = params.sn_principal_name
    else:
        config_dict['dfs.datanode.kerberos.principal'] = ''
        config_dict['dfs.namenode.kerberos.principal'] = ''
        config_dict['dfs.secondary.namenode.kerberos.principal'] = ''
    repo = dict()
    repo['isActive'] = 'true'
    repo['config'] = json.dumps(config_dict)
    repo['description'] = 'hdfs repo'
    repo['name'] = params.repo_name
    repo['repositoryType'] = 'hdfs'
    repo['assetType'] = '1'
    data = json.dumps(repo)
    return data
