{
  parseCommandLine();
  ClientConfig config=new DefaultClientConfig();
  Client client=Client.create(config);
  WebResource service=client.resource(getBaseURI());
  String clusterName=line.getOptionValue("name");
  String role="";
  String alive="";
  if (line.getOptionValue("alive") != null) {
    alive=line.getOptionValue("alive");
  }
  if (line.getOptionValue("role") != null) {
    role=line.getOptionValue("role");
  }
  ClientResponse response=service.path("clusters/" + clusterName + "/nodes").queryParam("alive",alive).queryParam("role",role).accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON).get(ClientResponse.class);
  if (response.getStatus() == 204) {
    System.out.println("No nodes are associated.");
    System.exit(0);
  }
  if (response.getStatus() != 200) {
    System.err.println("Cluster nodes command failed. Reason [Code: <" + response.getStatus() + ">, Message: <"+ response.getHeaders().getFirst("ErrorMessage")+ ">]");
    System.exit(-1);
  }
  List<Node> nodes=response.getEntity(new GenericType<List<Node>>(){
  }
);
  System.out.println("List of associated nodes: \n");
  for (  Node node : nodes) {
    printNodeInformation(node);
    System.out.println("\n");
  }
}
