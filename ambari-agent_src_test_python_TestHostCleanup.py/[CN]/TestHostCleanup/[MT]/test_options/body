@patch.object(logging.FileHandler, 'setFormatter')
@patch.object(HostCleanup.HostCleanup, 'read_host_check_file')
@patch.object(logging, 'basicConfig')
@patch.object(logging, 'FileHandler')
@patch.object(optparse.OptionParser, 'parse_args')
def test_options(self, parser_mock, file_handler_mock, logging_mock, read_host_check_file_mock, set_formatter_mock):
    parser_mock.return_value = (TestHostCleanup.HostCleanupOptions('/someoutputfile', '/someinputfile', '', False), [])
    file_handler_mock.return_value = logging.FileHandler('')
    HostCleanup.main()
    file_handler_mock.assert_called_with('/someoutputfile')
    self.assertEquals([''], HostCleanup.SKIP_LIST)
    logging_mock.assert_called_with(level=logging.INFO)
    read_host_check_file_mock.assert_called_with('/someinputfile')
