def setup_ats():
    import params
    Directory(params.ats_leveldb_dir, owner=params.yarn_user, group=params.user_group, create_parents=True, cd_access='a')
    if params.stack_supports_timeline_state_store:
        Directory(params.ats_leveldb_state_store_dir, owner=params.yarn_user, group=params.user_group, create_parents=True, cd_access='a')
    if (not is_empty(params.entity_groupfs_store_dir)):
        parent_path = os.path.dirname(params.entity_groupfs_store_dir)
        params.HdfsResource(parent_path, type='directory', action='create_on_execute', change_permissions_for_parents=True, owner=params.yarn_user, group=params.user_group, mode=493)
        params.HdfsResource(params.entity_groupfs_store_dir, type='directory', action='create_on_execute', owner=params.yarn_user, group=params.user_group, mode=params.entity_groupfs_store_dir_mode)
    if (not is_empty(params.entity_groupfs_active_dir)):
        parent_path = os.path.dirname(params.entity_groupfs_active_dir)
        params.HdfsResource(parent_path, type='directory', action='create_on_execute', change_permissions_for_parents=True, owner=params.yarn_user, group=params.user_group, mode=493)
        params.HdfsResource(params.entity_groupfs_active_dir, type='directory', action='create_on_execute', owner=params.yarn_user, group=params.user_group, mode=params.entity_groupfs_active_dir_mode)
    params.HdfsResource(None, action='execute')
