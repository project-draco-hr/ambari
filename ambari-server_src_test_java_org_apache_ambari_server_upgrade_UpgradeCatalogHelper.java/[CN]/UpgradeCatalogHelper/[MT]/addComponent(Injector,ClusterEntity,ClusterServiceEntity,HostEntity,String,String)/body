{
  ServiceComponentDesiredStateEntity componentDesiredStateEntity=new ServiceComponentDesiredStateEntity();
  componentDesiredStateEntity.setClusterServiceEntity(clusterServiceEntity);
  componentDesiredStateEntity.setComponentName(componentName);
  componentDesiredStateEntity.setServiceName(clusterServiceEntity.getServiceName());
  componentDesiredStateEntity.setDesiredStackVersion(desiredStackVersion);
  componentDesiredStateEntity.setClusterServiceEntity(clusterServiceEntity);
  componentDesiredStateEntity.setClusterId(clusterServiceEntity.getClusterId());
  HostComponentDesiredStateDAO hostComponentDesiredStateDAO=injector.getInstance(HostComponentDesiredStateDAO.class);
  HostComponentDesiredStateEntity hostComponentDesiredStateEntity=new HostComponentDesiredStateEntity();
  hostComponentDesiredStateEntity.setClusterId(clusterEntity.getClusterId());
  hostComponentDesiredStateEntity.setHostName(hostEntity.getHostName());
  hostComponentDesiredStateEntity.setComponentName(componentName);
  hostComponentDesiredStateEntity.setServiceName(clusterServiceEntity.getServiceName());
  hostComponentDesiredStateEntity.setAdminState(HostComponentAdminState.INSERVICE);
  hostComponentDesiredStateEntity.setServiceComponentDesiredStateEntity(componentDesiredStateEntity);
  hostComponentDesiredStateEntity.setHostEntity(hostEntity);
  hostComponentDesiredStateDAO.create(hostComponentDesiredStateEntity);
  HostComponentStateEntity hostComponentStateEntity=new HostComponentStateEntity();
  hostComponentStateEntity.setHostEntity(hostEntity);
  hostComponentStateEntity.setHostName(hostEntity.getHostName());
  hostComponentStateEntity.setComponentName(componentName);
  hostComponentStateEntity.setServiceName(clusterServiceEntity.getServiceName());
  hostComponentStateEntity.setClusterId(clusterEntity.getClusterId());
  hostComponentStateEntity.setCurrentStackVersion(clusterEntity.getDesiredStackVersion());
  hostComponentStateEntity.setServiceComponentDesiredStateEntity(componentDesiredStateEntity);
  componentDesiredStateEntity.setHostComponentStateEntities(Collections.singletonList(hostComponentStateEntity));
  componentDesiredStateEntity.setHostComponentDesiredStateEntities(Collections.singletonList(hostComponentDesiredStateEntity));
  hostEntity.addHostComponentStateEntity(hostComponentStateEntity);
  hostEntity.addHostComponentDesiredStateEntity(hostComponentDesiredStateEntity);
  clusterServiceEntity.getServiceComponentDesiredStateEntities().add(componentDesiredStateEntity);
  ClusterServiceDAO clusterServiceDAO=injector.getInstance(ClusterServiceDAO.class);
  ServiceComponentDesiredStateDAO serviceComponentDesiredStateDAO=injector.getInstance(ServiceComponentDesiredStateDAO.class);
  HostDAO hostDAO=injector.getInstance(HostDAO.class);
  serviceComponentDesiredStateDAO.merge(componentDesiredStateEntity);
  hostDAO.merge(hostEntity);
  clusterServiceDAO.merge(clusterServiceEntity);
}
