{
  if (currStep >= 1 && lastStep <= 0) {
    clusterId=helper.createCluster();
    cluster=clusterDAO.findById(clusterId);
    cvA=new ClusterVersionEntity(cluster,helper.getOrCreateRepositoryVersion(HDP_22_STACK,"2.2.0.0-995"),RepositoryVersionState.CURRENT,System.currentTimeMillis(),System.currentTimeMillis(),"admin");
    clusterVersionDAO.create(cvA);
    cvAId=cvA.getId();
  }
 else {
    cluster=clusterDAO.findById(clusterId);
    cvA=clusterVersionDAO.findByPK(cvAId);
  }
  if (currStep >= 2) {
    if (lastStep <= 1) {
      cvB=new ClusterVersionEntity(cluster,helper.getOrCreateRepositoryVersion(HDP_22_STACK,"2.2.0.1-998"),RepositoryVersionState.INSTALLED,System.currentTimeMillis(),System.currentTimeMillis(),"admin");
      clusterVersionDAO.create(cvB);
      cvBId=cvB.getId();
    }
 else {
      cvB=clusterVersionDAO.findByPK(cvBId);
    }
  }
  if (currStep >= 3 && lastStep <= 2) {
    cvA.setState(RepositoryVersionState.INSTALLED);
    cvB.setState(RepositoryVersionState.CURRENT);
    clusterVersionDAO.merge(cvA);
    clusterVersionDAO.merge(cvB);
  }
  if (currStep >= 4) {
    if (lastStep <= 3) {
      cvC=new ClusterVersionEntity(cluster,helper.getOrCreateRepositoryVersion(HDP_22_STACK,"2.2.1.0-100"),RepositoryVersionState.UPGRADING,System.currentTimeMillis(),"admin");
      clusterVersionDAO.create(cvC);
      cvCId=cvC.getId();
    }
 else {
      cvC=clusterVersionDAO.findByPK(cvCId);
    }
  }
  if (currStep >= 5 && lastStep <= 4) {
    cvC.setState(RepositoryVersionState.UPGRADE_FAILED);
    cvC.setEndTime(System.currentTimeMillis());
    clusterVersionDAO.merge(cvC);
  }
  if (currStep >= 6 && lastStep <= 5) {
    cvC.setState(RepositoryVersionState.UPGRADING);
    cvC.setEndTime(0L);
    clusterVersionDAO.merge(cvC);
  }
  if (currStep >= 7 && lastStep <= 6) {
    cvC.setState(RepositoryVersionState.CURRENT);
    cvC.setEndTime(System.currentTimeMillis());
    clusterVersionDAO.merge(cvC);
    cvA.setState(RepositoryVersionState.INSTALLED);
    cvB.setState(RepositoryVersionState.INSTALLED);
    clusterVersionDAO.merge(cvA);
    clusterVersionDAO.merge(cvB);
  }
  lastStep=currStep;
}
