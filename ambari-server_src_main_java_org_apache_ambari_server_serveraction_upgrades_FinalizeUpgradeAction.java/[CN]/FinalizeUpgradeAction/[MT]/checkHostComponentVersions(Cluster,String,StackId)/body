{
class InfoTuple {
    public final String serviceName;
    public final String componentName;
    public final String hostName;
    public InfoTuple(    String serviceName,    String componentName,    String hostName){
      this.serviceName=serviceName;
      this.componentName=componentName;
      this.hostName=hostName;
    }
  }
  ArrayList<InfoTuple> errors=new ArrayList<InfoTuple>();
  for (  Service service : cluster.getServices().values()) {
    for (    ServiceComponent serviceComponent : service.getServiceComponents().values()) {
      for (      ServiceComponentHost serviceComponentHost : serviceComponent.getServiceComponentHosts().values()) {
        ComponentInfo componentInfo=ambariMetaInfo.getComponent(targetStackId.getStackName(),targetStackId.getStackVersion(),service.getName(),serviceComponent.getName());
        if (componentInfo.isVersionAdvertised() && !serviceComponentHost.getVersion().equals(desiredVersion)) {
          errors.add(new InfoTuple(service.getName(),serviceComponent.getName(),serviceComponentHost.getHostName()));
        }
      }
    }
  }
  if (!errors.isEmpty()) {
    StrBuilder messageBuff=new StrBuilder(String.format("The following %d host component(s) " + "have not been upgraded to version %s. Please install and upgrade " + "the Stack Version on those hosts and try again.\nHost components:\n",errors.size(),desiredVersion));
    for (    InfoTuple error : errors) {
      messageBuff.append(String.format("%s on host %s\n",error.componentName,error.hostName));
    }
    throw new AmbariException(messageBuff.toString());
  }
}
