{
  ConfigurationRequest cr5=new ConfigurationRequest();
  cr5.setClusterName(clusterName);
  cr5.setType("ams-env");
  cr5.setVersionTag("version1");
  cr5.setProperties(new HashMap<String,String>(){
{
      put("metrics_collector_log_dir","/var/log/ambari-metrics-collector");
      put("metrics_collector_pid_dir","/var/run/ambari-metrics-collector");
    }
  }
);
  cr5.setPropertiesAttributes(null);
  final ClusterRequest clusterRequest6=new ClusterRequest(cluster.getClusterId(),clusterName,cluster.getDesiredStackVersion().getStackVersion(),null);
  clusterRequest6.setDesiredConfig(Collections.singletonList(cr5));
  managementController.updateClusters(new HashSet<ClusterRequest>(){
{
      add(clusterRequest6);
    }
  }
,null);
  final Config config=new ConfigImpl("ams-env");
  config.setTag("version122");
  Map<String,String> properties=new HashMap<String,String>();
  properties.put("a","b");
  properties.put("c","d");
  config.setProperties(properties);
  Long groupId=addConfigGroup("g1","t1",new ArrayList<String>(){
{
      add("h1");
    }
  }
,new ArrayList<Config>(){
{
      add(config);
    }
  }
);
  Assert.assertNotNull(groupId);
  Map<String,Map<String,String>> configTags=configHelper.getEffectiveDesiredTags(cluster,"h1");
  Assert.assertNotNull(configTags);
  Map<String,String> tagsWithOverrides=configTags.get("ams-env");
  Assert.assertNotNull(tagsWithOverrides);
  Assert.assertTrue(tagsWithOverrides.containsKey(ConfigHelper.CLUSTER_DEFAULT_TAG));
  Assert.assertEquals("version1",tagsWithOverrides.get(ConfigHelper.CLUSTER_DEFAULT_TAG));
  Assert.assertTrue(tagsWithOverrides.containsKey(groupId.toString()));
  Assert.assertEquals("version122",tagsWithOverrides.get(groupId.toString()));
}
