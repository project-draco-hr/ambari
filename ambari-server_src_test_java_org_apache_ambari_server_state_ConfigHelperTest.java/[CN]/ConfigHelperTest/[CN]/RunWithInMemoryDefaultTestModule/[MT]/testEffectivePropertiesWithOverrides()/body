{
  ConfigurationRequest cr=new ConfigurationRequest();
  cr.setClusterName(clusterName);
  cr.setType("core-site2");
  cr.setVersionTag("version1");
  cr.setProperties(new HashMap<String,String>(){
{
      put("ipc.client.connect.max.retries","30");
      put("fs.trash.interval","30");
    }
  }
);
  cr.setPropertiesAttributes(new HashMap<String,Map<String,String>>(){
{
      Map<String,String> attrs=new HashMap<String,String>();
      attrs.put("ipc.client.connect.max.retries","1");
      attrs.put("fs.trash.interval","2");
      put("attribute1",attrs);
    }
  }
);
  final ClusterRequest clusterRequest1=new ClusterRequest(cluster.getClusterId(),clusterName,cluster.getDesiredStackVersion().getStackVersion(),null);
  clusterRequest1.setDesiredConfig(Collections.singletonList(cr));
  managementController.updateClusters(new HashSet<ClusterRequest>(){
{
      add(clusterRequest1);
    }
  }
,null);
  cr.setType("global2");
  cr.setVersionTag("version1");
  cr.setProperties(new HashMap<String,String>(){
{
      put("dfs_namenode_name_dir","/hadoop/hdfs/namenode");
      put("namenode_heapsize","1024");
    }
  }
);
  cr.setPropertiesAttributes(new HashMap<String,Map<String,String>>(){
{
      Map<String,String> attrs=new HashMap<String,String>();
      attrs.put("dfs_namenode_name_dir","3");
      attrs.put("namenode_heapsize","4");
      put("attribute2",attrs);
    }
  }
);
  final ClusterRequest clusterRequest3=new ClusterRequest(cluster.getClusterId(),clusterName,cluster.getDesiredStackVersion().getStackVersion(),null);
  clusterRequest3.setDesiredConfig(Collections.singletonList(cr));
  managementController.updateClusters(new HashSet<ClusterRequest>(){
{
      add(clusterRequest3);
    }
  }
,null);
  final Config config1=new ConfigImpl("core-site2");
  config1.setTag("version122");
  Map<String,String> properties=new HashMap<String,String>();
  properties.put("a","b");
  properties.put("c","d");
  config1.setProperties(properties);
  final Config config2=new ConfigImpl("global2");
  config2.setTag("version122");
  Map<String,String> properties2=new HashMap<String,String>();
  properties2.put("namenode_heapsize","1111");
  config2.setProperties(properties2);
  Long groupId=addConfigGroup("g2","t1",new ArrayList<String>(){
{
      add("h1");
    }
  }
,new ArrayList<Config>(){
{
      add(config1);
      add(config2);
    }
  }
);
  Assert.assertNotNull(groupId);
  Map<String,Map<String,String>> propertyMap=configHelper.getEffectiveConfigProperties(cluster,configHelper.getEffectiveDesiredTags(cluster,"h1"));
  Assert.assertNotNull(propertyMap);
  Assert.assertTrue(propertyMap.containsKey("global2"));
  Map<String,String> globalProps=propertyMap.get("global2");
  Assert.assertEquals("1111",globalProps.get("namenode_heapsize"));
  Assert.assertEquals("/hadoop/hdfs/namenode",globalProps.get("dfs_namenode_name_dir"));
  Assert.assertTrue(propertyMap.containsKey("core-site"));
  Map<String,String> coreProps=propertyMap.get("core-site2");
  Assert.assertTrue(coreProps.containsKey("a"));
  Assert.assertTrue(coreProps.containsKey("c"));
  Assert.assertEquals("30",coreProps.get("ipc.client.connect.max.retries"));
}
