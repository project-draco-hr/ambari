{
  long size=16;
  Map<String,TimelineMetric> metrics=value.getTimelineMetrics();
  size+=8;
  if (metrics != null) {
    for (    Map.Entry<String,TimelineMetric> metricEntry : metrics.entrySet()) {
      size+=reflectionSizeOf.sizeOf(metricEntry.getKey());
      TimelineMetric metric=metricEntry.getValue();
      if (timelineMetricPrimitivesApproximation == 0) {
        timelineMetricPrimitivesApproximation+=reflectionSizeOf.sizeOf(metric.getMetricName());
        timelineMetricPrimitivesApproximation+=reflectionSizeOf.sizeOf(metric.getAppId());
        timelineMetricPrimitivesApproximation+=reflectionSizeOf.sizeOf(metric.getHostName());
        timelineMetricPrimitivesApproximation+=reflectionSizeOf.sizeOf(metric.getInstanceId());
        timelineMetricPrimitivesApproximation+=reflectionSizeOf.sizeOf(metric.getTimestamp());
        timelineMetricPrimitivesApproximation+=reflectionSizeOf.sizeOf(metric.getStartTime());
        timelineMetricPrimitivesApproximation+=reflectionSizeOf.sizeOf(metric.getType());
        timelineMetricPrimitivesApproximation+=8;
        LOG.debug("timelineMetricPrimitivesApproximation bytes = " + timelineMetricPrimitivesApproximation);
      }
      size+=timelineMetricPrimitivesApproximation;
      Map<Long,Double> metricValues=metric.getMetricValues();
      if (metricValues != null && !metricValues.isEmpty()) {
        LOG.debug("Size of metric value: " + (48 + 40) * metricValues.size());
        size+=(48 + 40) * metricValues.size();
      }
    }
    LOG.debug("Total Size of metric values in cache: " + size);
  }
  return size;
}
