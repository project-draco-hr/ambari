{
  BoundedExponentialBackoffRetry retryPolicyMock=PowerMock.createMock(BoundedExponentialBackoffRetry.class);
  expectNew(BoundedExponentialBackoffRetry.class,1000,10000,1).andReturn(retryPolicyMock);
  CuratorZookeeperClient clientMock=PowerMock.createMock(CuratorZookeeperClient.class);
  expectNew(CuratorZookeeperClient.class,"zkQ",10000,2000,null,retryPolicyMock).andReturn(clientMock);
  clientMock.start();
  expectLastCall().once();
  ZooKeeper zkMock=PowerMock.createMock(ZooKeeper.class);
  expect(clientMock.getZooKeeper()).andReturn(zkMock).once();
  expect(zkMock.exists("/ambari-metrics-cluster",false)).andReturn(null).once();
  replayAll();
  MetricCollectorHAHelper metricCollectorHAHelper=new MetricCollectorHAHelper("zkQ",1,1000);
  Collection<String> liveInstances=metricCollectorHAHelper.findLiveCollectorHostsFromZNode();
  verifyAll();
  Assert.assertTrue(liveInstances.isEmpty());
}
