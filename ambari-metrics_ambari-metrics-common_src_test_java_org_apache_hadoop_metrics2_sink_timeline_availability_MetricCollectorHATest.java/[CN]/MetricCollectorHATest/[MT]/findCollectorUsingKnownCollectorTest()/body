{
  HttpURLConnection connection=createNiceMock(HttpURLConnection.class);
  URL url=createNiceMock(URL.class);
  MetricCollectorHAHelper haHelper=createNiceMock(MetricCollectorHAHelper.class);
  Gson gson=new Gson();
  ArrayList<String> output=new ArrayList<>();
  output.add("h1");
  output.add("h2");
  output.add("h3");
  InputStream is=IOUtils.toInputStream(gson.toJson(output));
  expectNew(URL.class,"http://localhost1:2181/ws/v1/timeline/metrics/livenodes").andReturn(url).anyTimes();
  expectNew(URL.class,"http://localhost2:2181/ws/v1/timeline/metrics/livenodes").andReturn(url).anyTimes();
  expect(url.openConnection()).andReturn(connection).anyTimes();
  expect(connection.getInputStream()).andReturn(is).anyTimes();
  expect(connection.getResponseCode()).andReturn(200).anyTimes();
  replayAll();
  TestTimelineMetricsSink sink=new TestTimelineMetricsSink(haHelper);
  sink.init();
  String host=sink.findPreferredCollectHost();
  Assert.assertNotNull(host);
  Assert.assertEquals("h3",host);
  verifyAll();
}
