{
  Matcher m=HOSTGROUP_REGEX.matcher(origValue);
  if (m.find()) {
    String hostGroupName=m.group(1);
    HostGroupInfo groupInfo=topology.getHostGroupInfo().get(hostGroupName);
    if (groupInfo == null) {
      throw new RuntimeException("Encountered a host group token in configuration which couldn't be matched to a host group: " + hostGroupName);
    }
    return origValue.replace(m.group(0),groupInfo.getHostNames().iterator().next());
  }
 else {
    int matchingGroupCount=topology.getHostGroupsForComponent(component).size();
    if (matchingGroupCount == 1) {
      Collection<String> componentHosts=topology.getHostAssignmentsForComponent(component);
      return origValue.replace("localhost",componentHosts.iterator().next());
    }
 else {
      Cardinality cardinality=topology.getBlueprint().getStack().getCardinality(component);
      if (matchingGroupCount == 0 && cardinality.isValidCount(0)) {
        return origValue;
      }
 else {
        if (topology.isNameNodeHAEnabled() && isComponentNameNode() && (matchingGroupCount == 2)) {
          if (properties.containsKey("core-site") && properties.get("core-site").get("fs.defaultFS").equals(origValue)) {
            return origValue;
          }
          if (properties.containsKey("hbase-site") && properties.get("hbase-site").get("hbase.rootdir").equals(origValue)) {
            return origValue;
          }
          if (properties.containsKey("accumulo-site") && properties.get("accumulo-site").get("instance.volumes").equals(origValue)) {
            return origValue;
          }
          if (!origValue.contains("localhost")) {
            return origValue;
          }
        }
        if (topology.isNameNodeHAEnabled() && isComponentSecondaryNameNode() && (matchingGroupCount == 0)) {
          return origValue;
        }
        if (topology.isYarnResourceManagerHAEnabled() && isComponentResourceManager() && (matchingGroupCount == 2)) {
          if (!origValue.contains("localhost")) {
            return origValue;
          }
        }
        if ((isOozieServerHAEnabled(properties)) && isComponentOozieServer() && (matchingGroupCount > 1)) {
          if (!origValue.contains("localhost")) {
            return origValue;
          }
        }
        if ((isHiveServerHAEnabled(properties)) && isComponentHiveServer() && (matchingGroupCount > 1)) {
          if (!origValue.contains("localhost")) {
            return origValue;
          }
        }
        if ((isComponentHiveMetaStoreServer()) && matchingGroupCount > 1) {
          if (!origValue.contains("localhost")) {
            return origValue;
          }
        }
        throw new IllegalArgumentException("Unable to update configuration property " + "'" + propertyName + "'"+ " with topology information. "+ "Component '"+ component+ "' is not mapped to any host group or is mapped to multiple groups.");
      }
    }
  }
}
