{
  Collection<String> hostStrings=getHostStrings(hostGroups,origValue);
  if (hostStrings.isEmpty()) {
    String port=null;
    if (origValue.contains(":")) {
      port=origValue.substring(origValue.indexOf(":") + 1);
    }
    Collection<HostGroup> matchingGroups=getHostGroupsForComponent(component,hostGroups.values());
    for (    HostGroup group : matchingGroups) {
      for (      String host : group.getHostInfo()) {
        if (port != null) {
          host+=":" + port;
        }
        hostStrings.add(host);
      }
    }
  }
  StringBuilder sb=new StringBuilder();
  String suffix=null;
  Matcher matcher=HOSTGROUP_PORT_REGEX.matcher(origValue);
  if (matcher.find()) {
    int indexOfStart=matcher.start();
    if ((indexOfStart > 0) && (!origValue.substring(0,indexOfStart).equals("['"))) {
      sb.append(origValue.substring(0,indexOfStart));
    }
    int indexOfEnd=-1;
    while (matcher.find()) {
      indexOfEnd=matcher.end();
    }
    if ((indexOfEnd > -1) && (indexOfEnd < (origValue.length() - 1))) {
      suffix=origValue.substring(indexOfEnd);
    }
  }
  boolean firstHost=true;
  for (  String host : hostStrings) {
    if (!firstHost) {
      sb.append(separator);
    }
 else {
      firstHost=false;
    }
    sb.append(host);
  }
  if ((suffix != null) && (!suffix.equals("']"))) {
    sb.append(suffix);
  }
  return sb.toString();
}
