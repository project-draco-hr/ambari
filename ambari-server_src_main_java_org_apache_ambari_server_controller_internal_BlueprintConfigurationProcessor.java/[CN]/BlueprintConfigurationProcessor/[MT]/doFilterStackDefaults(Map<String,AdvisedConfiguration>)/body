{
  Blueprint blueprint=clusterTopology.getBlueprint();
  Configuration stackDefaults=blueprint.getStack().getConfiguration(blueprint.getServices());
  Map<String,Map<String,String>> stackDefaultProps=stackDefaults.getProperties();
  for (  Map.Entry<String,AdvisedConfiguration> adConfEntry : advisedConfigurations.entrySet()) {
    AdvisedConfiguration advisedConfiguration=adConfEntry.getValue();
    if (stackDefaultProps.containsKey(adConfEntry.getKey())) {
      Map<String,String> defaultProps=stackDefaultProps.get(adConfEntry.getKey());
      if (advisedConfiguration.getProperties() != null) {
        Map<String,String> outFilteredProps=Maps.filterKeys(advisedConfiguration.getProperties(),Predicates.not(Predicates.in(defaultProps.keySet())));
        advisedConfiguration.getProperties().keySet().removeAll(Sets.newCopyOnWriteArraySet(outFilteredProps.keySet()));
      }
      if (advisedConfiguration.getPropertyValueAttributes() != null) {
        Map<String,ValueAttributesInfo> outFilteredValueAttrs=Maps.filterKeys(advisedConfiguration.getPropertyValueAttributes(),Predicates.not(Predicates.in(defaultProps.keySet())));
        advisedConfiguration.getPropertyValueAttributes().keySet().removeAll(Sets.newCopyOnWriteArraySet(outFilteredValueAttrs.keySet()));
      }
    }
 else {
      advisedConfiguration.getProperties().clear();
    }
  }
}
