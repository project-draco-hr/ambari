def setup_jce_policy(args):
    if (not os.path.exists(args[1])):
        err = "Can not run 'setup-jce'. Invalid path {0}.".format(args[1])
        raise FatalException(1, err)
    properties = get_ambari_properties()
    resources_dir = get_resources_location(properties)
    zip_path = os.path.split(args[1])
    zip_dir = zip_path[0]
    if (not (zip_dir == resources_dir)):
        try:
            shutil.copy(args[1], resources_dir)
        except Exception as e:
            err = 'Fail while trying to copy {0} to {1}. {2}'.format(args[1], resources_dir, e)
            raise FatalException(1, err)
    jdk_path = properties.get_property(JAVA_HOME_PROPERTY)
    if ((not jdk_path) or (not os.path.exists(jdk_path))):
        err = "JDK not installed, you need to run 'ambari-server setup' before attempting to install the JCE policy."
        raise FatalException(1, err)
    zip_name = zip_path[1]
    properties.process_pair(JCE_NAME_PROPERTY, zip_name)
    print 'Installing JCE policy...'
    try:
        JDKSetup.unpack_jce_policy(jdk_path, resources_dir, zip_name)
    except FatalException as e:
        err = 'Installing JCE failed: {0}. Exiting.'.format(e)
        raise FatalException(e.code, err)
    update_properties(properties)
    print ('NOTE: Restart Ambari Server to apply changes' + ' ("ambari-server restart|stop|start")')
