def setup_jce_policy(args):
    if os.path.exists(args[1]):
        if (not (os.path.split(args[1])[0] == configDefaults.SERVER_RESOURCES_DIR)):
            try:
                shutil.copy(args[1], configDefaults.SERVER_RESOURCES_DIR)
            except Exception as e:
                err = 'Fail while trying to copy {0} to {1}. {2}'.format(args[1], configDefaults.SERVER_RESOURCES_DIR, e)
                raise FatalException(1, err)
    else:
        err = "Can not run 'setup-jce'. Invalid path {0}.".format(args[1])
        raise FatalException(1, err)
    from ambari_commons.os_utils import search_file
    from ambari_server.serverConfiguration import AMBARI_PROPERTIES_FILE, get_conf_dir
    conf_file = search_file(AMBARI_PROPERTIES_FILE, get_conf_dir())
    properties = get_ambari_properties()
    zip_name = os.path.split(args[1])[1]
    properties.process_pair(JCE_NAME_PROPERTY, zip_name)
    try:
        properties.store(open(conf_file, 'w'))
    except Exception as e:
        print_error_msg(('Could not write ambari config file "%s": %s' % (conf_file, e)))
    print 'Installing JCE policy...'
    try:
        unpack_jce_policy()
    except FatalException as e:
        err = 'Installing JCE failed: {0}. Exiting.'.format(e)
        raise FatalException(e.code, err)
    print ('NOTE: Restart Ambari Server to apply changes' + ' ("ambari-server restart|stop|start")')
