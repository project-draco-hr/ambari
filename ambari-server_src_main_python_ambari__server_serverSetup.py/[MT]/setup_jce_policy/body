def setup_jce_policy(args):
    if os.path.exists(args[1]):
        if (not (os.path.split(args[1])[0] == configDefaults.SERVER_RESOURCES_DIR)):
            try:
                shutil.copy(args[1], configDefaults.SERVER_RESOURCES_DIR)
            except Exception as e:
                err = 'Fail while trying to copy {0} to {1}. {2}'.format(args[1], configDefaults.SERVER_RESOURCES_DIR, e)
                raise FatalException(1, err)
    else:
        err = "Can not run 'setup-jce'. Invalid path {0}.".format(args[1])
        raise FatalException(1, err)
    properties = get_ambari_properties()
    jdk_path = properties.get_property(JAVA_HOME_PROPERTY)
    resources_dir = properties.get_property(RESOURCES_DIR_PROPERTY)
    zip_name = os.path.split(args[1])[1]
    properties.process_pair(JCE_NAME_PROPERTY, zip_name)
    print 'Installing JCE policy...'
    try:
        JDKSetup.unpack_jce_policy(jdk_path, resources_dir, zip_name)
    except FatalException as e:
        err = 'Installing JCE failed: {0}. Exiting.'.format(e)
        raise FatalException(e.code, err)
    update_properties(properties)
    print ('NOTE: Restart Ambari Server to apply changes' + ' ("ambari-server restart|stop|start")')
