def do_checks(self):
    try:
        user = read_ambari_user()
        if (not user):
            user = self.NR_DEFAULT_USER
        if (self.user is not None):
            update_user_setting = True
            prompt_msg = self.NR_USER_CUSTOMIZE_PROMPT.format('y')
        else:
            update_user_setting = False
            if (user != self.NR_DEFAULT_USER):
                prompt_msg = self.NR_USER_CHANGE_PROMPT.format(user, 'n')
            else:
                prompt_msg = self.NR_USER_CUSTOMIZE_PROMPT.format('n')
            self.user = (user if user else self.NR_DEFAULT_USER)
        self.register_service = get_YN_input(prompt_msg, update_user_setting)
        if self.register_service:
            retcode = self._create_custom_user()
            if (retcode != 0):
                return retcode
        adjust_directory_permissions(self.user)
    except OSError as e:
        print_error_msg(('Failed: %s' % str(e)))
        return 4
    except Exception as e:
        print_error_msg(('Unexpected error %s' % str(e)))
        return 1
    return 0
